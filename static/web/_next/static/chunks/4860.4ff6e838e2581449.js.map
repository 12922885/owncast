{"version":3,"file":"static/chunks/4860.4ff6e838e2581449.js","mappings":"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","sources":["webpack://_N_E/./services/moderation-service.ts","webpack://_N_E/./components/chat/ChatModerationDetailsModal/ChatModerationDetailsModal.tsx","webpack://_N_E/./components/chat/ChatModerationActionMenu/ChatModerationActionMenu.tsx","webpack://_N_E/./components/ui/Modal/Modal.tsx","webpack://_N_E/./utils/format.ts","webpack://_N_E/./components/chat/ChatModerationActionMenu/ChatModerationActionMenu.module.scss","webpack://_N_E/./components/chat/ChatModerationDetailsModal/ChatModerationDetailsModal.module.scss","webpack://_N_E/./components/ui/Modal/Modal.module.scss"],"sourcesContent":["const HIDE_MESSAGE_ENDPOINT = `/api/chat/messagevisibility`;\nconst BAN_USER_ENDPOINT = `/api/chat/users/setenabled`;\n\nclass ChatModerationService {\n  public static async removeMessage(id: string, accessToken: string): Promise<any> {\n    const url = new URL(HIDE_MESSAGE_ENDPOINT, window.location.toString());\n    url.searchParams.append('accessToken', accessToken);\n    const hideMessageUrl = url.toString();\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ idArray: [id] }),\n    };\n\n    await fetch(hideMessageUrl, options);\n  }\n\n  public static async banUser(id: string, accessToken: string): Promise<any> {\n    const url = new URL(BAN_USER_ENDPOINT, window.location.toString());\n    url.searchParams.append('accessToken', accessToken);\n    const hideMessageUrl = url.toString();\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ id }),\n    };\n\n    await fetch(hideMessageUrl, options);\n  }\n}\n\nexport default ChatModerationService;\n","import { Button, Col, Collapse, Row, Spin, Table, Tag } from 'antd';\nimport { FC, useEffect, useState } from 'react';\nimport format from 'date-fns/format';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { ColumnsType } from 'antd/lib/table';\nimport ChatModeration from '../../../services/moderation-service';\nimport styles from './ChatModerationDetailsModal.module.scss';\nimport { formatUAstring } from '../../../utils/format';\n\nconst { Panel } = Collapse;\n\nexport type ChatModerationDetailsModalProps = {\n  userId: string;\n  accessToken: string;\n};\n\nexport interface UserDetails {\n  user: User;\n  connectedClients: Client[];\n  messages: Message[];\n}\n\nexport interface Client {\n  messageCount: number;\n  userAgent: string;\n  connectedAt: Date;\n  geo: string;\n  id: number;\n}\n\nexport interface Message {\n  id: string;\n  timestamp: Date;\n  user: null;\n  body: string;\n}\n\nexport interface User {\n  id: string;\n  displayName: string;\n  displayColor: number;\n  createdAt: Date;\n  previousNames: string[];\n  scopes: string[];\n  isBot: boolean;\n  authenticated: boolean;\n}\n\nconst removeMessage = async (messageId: string, accessToken: string) => {\n  try {\n    ChatModeration.removeMessage(messageId, accessToken);\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nconst ValueRow = ({ label, value }: { label: string; value: string }) => (\n  <Row justify=\"space-around\" align=\"middle\">\n    <Col span={12}>{label}</Col>\n    <Col span={12}>{value}</Col>\n  </Row>\n);\n\nconst ConnectedClient = ({ client }: { client: Client }) => {\n  const { messageCount, connectedAt, geo } = client;\n  const connectedAtDate = format(new Date(connectedAt), 'PP pp');\n\n  return (\n    <div>\n      <ValueRow label=\"Messages Sent\" value={`${messageCount}`} />\n      {geo !== 'N/A' && <ValueRow label=\"Geo\" value={geo} />}\n      <ValueRow label=\"Connected At\" value={connectedAtDate} />\n    </div>\n  );\n};\n\nconst UserColorBlock = ({ color }) => {\n  const bg = `var(--theme-color-users-${color})`;\n  return (\n    <div className={styles.colorBlock} style={{ backgroundColor: bg }}>\n      Color {color}\n    </div>\n  );\n};\n\nexport const ChatModerationDetailsModal: FC<ChatModerationDetailsModalProps> = ({\n  userId,\n  accessToken,\n}) => {\n  const [userDetails, setUserDetails] = useState<UserDetails | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const getDetails = async () => {\n    try {\n      const response = await (\n        await fetch(`/api/moderation/chat/user/${userId}?accessToken=${accessToken}`)\n      ).json();\n      setUserDetails(response);\n      setLoading(false);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  useEffect(() => {\n    getDetails();\n  }, []);\n\n  if (!userDetails) {\n    return null;\n  }\n\n  const { user, connectedClients, messages } = userDetails;\n  const { displayColor, createdAt, previousNames, scopes, isBot, authenticated } = user;\n\n  const totalMessagesSent = connectedClients.reduce((acc, client) => acc + client.messageCount, 0);\n  const createdAtDate = format(new Date(createdAt), 'PP pp');\n\n  const chatMessageColumns: ColumnsType<Message> = [\n    {\n      title: 'Message',\n      dataIndex: 'body',\n      key: 'body',\n    },\n    {\n      title: 'Sent At',\n      dataIndex: 'timestamp',\n      key: 'timestamp',\n      render: timestamp => format(new Date(timestamp), 'PP pp'),\n    },\n    {\n      title: 'Delete',\n      key: 'delete',\n      render: (text, record) => (\n        <Button\n          type=\"primary\"\n          ghost\n          icon={<DeleteOutlined />}\n          onClick={() => removeMessage(record.id, accessToken)}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <Spin spinning={loading}>\n      <UserColorBlock color={displayColor} />\n      {scopes.map(scope => (\n        <Tag key={scope}>{scope}</Tag>\n      ))}\n      {authenticated && <Tag>Authenticated</Tag>}\n      {isBot && <Tag>Bot</Tag>}\n      <ValueRow label=\"Messages Sent Across Clients\" value={totalMessagesSent.toString()} />\n      <ValueRow label=\"User Created\" value={createdAtDate} />\n      <ValueRow label=\"Known As\" value={previousNames.join(',')} />\n      <Collapse accordion>\n        <Panel header=\"Currently Connected Clients\" key=\"connected-clients\">\n          <Collapse accordion>\n            {connectedClients.map(client => (\n              <Panel header={formatUAstring(client.userAgent)} key={client.id}>\n                <ConnectedClient client={client} />\n              </Panel>\n            ))}\n          </Collapse>\n        </Panel>\n        <Collapse accordion>\n          <Panel header=\"Recent Chat Messages\" key=\"chat-messages\">\n            <Table\n              size=\"small\"\n              pagination={null}\n              columns={chatMessageColumns}\n              dataSource={messages}\n              rowKey=\"id\"\n            />\n          </Panel>\n        </Collapse>\n      </Collapse>\n    </Spin>\n  );\n};\n","import {\n  CloseCircleOutlined,\n  ExclamationCircleOutlined,\n  EyeInvisibleOutlined,\n  SmallDashOutlined,\n} from '@ant-design/icons';\nimport { Dropdown, Menu, MenuProps, Space, message, Modal as AntModal } from 'antd';\nimport { FC, useState } from 'react';\nimport { Modal } from '../../ui/Modal/Modal';\nimport { ChatModerationDetailsModal } from '../ChatModerationDetailsModal/ChatModerationDetailsModal';\nimport styles from './ChatModerationActionMenu.module.scss';\nimport ChatModeration from '../../../services/moderation-service';\n\nconst { confirm } = AntModal;\n\nexport type ChatModerationActionMenuProps = {\n  accessToken: string;\n  messageID: string;\n  userID: string;\n  userDisplayName: string;\n};\n\nexport const ChatModerationActionMenu: FC<ChatModerationActionMenuProps> = ({\n  messageID,\n  userID,\n  userDisplayName,\n  accessToken,\n}) => {\n  const [showUserDetailsModal, setShowUserDetailsModal] = useState(false);\n\n  const handleBanUser = async () => {\n    try {\n      await ChatModeration.banUser(userID, accessToken);\n    } catch (e) {\n      console.error(e);\n      message.error(e);\n    }\n  };\n\n  const handleHideMessage = async () => {\n    try {\n      await ChatModeration.removeMessage(messageID, accessToken);\n    } catch (e) {\n      console.error(e);\n      message.error(e);\n    }\n  };\n\n  const confirmHideMessage = async () => {\n    confirm({\n      icon: <ExclamationCircleOutlined />,\n      content: `Are you sure you want to remove this message from ${userDisplayName}?`,\n      onOk() {\n        handleHideMessage();\n      },\n    });\n  };\n\n  const confirmBanUser = async () => {\n    confirm({\n      icon: <ExclamationCircleOutlined />,\n      content: `Are you sure you want to ban ${userDisplayName} from chat?`,\n      onOk() {\n        handleBanUser();\n      },\n    });\n  };\n\n  const onMenuClick: MenuProps['onClick'] = ({ key }) => {\n    if (key === 'hide-message') {\n      confirmHideMessage();\n    } else if (key === 'ban-user') {\n      confirmBanUser();\n    } else if (key === 'more-info') {\n      setShowUserDetailsModal(true);\n    }\n  };\n\n  const menu = (\n    <Menu\n      onClick={onMenuClick}\n      items={[\n        {\n          label: (\n            <div>\n              <span className={styles.icon}>\n                <EyeInvisibleOutlined />\n              </span>\n              Hide Message\n            </div>\n          ),\n          key: 'hide-message',\n        },\n        {\n          label: (\n            <div>\n              <span className={styles.icon}>\n                <CloseCircleOutlined />\n              </span>\n              Ban User\n            </div>\n          ),\n          key: 'ban-user',\n        },\n        {\n          label: <div>More Info...</div>,\n          key: 'more-info',\n        },\n      ]}\n    />\n  );\n\n  return (\n    <>\n      <Dropdown overlay={menu} trigger={['click']}>\n        <button type=\"button\" onClick={e => e.preventDefault()}>\n          <Space>\n            <SmallDashOutlined />\n          </Space>\n        </button>\n      </Dropdown>\n      <Modal\n        title={userDisplayName}\n        open={showUserDetailsModal}\n        handleCancel={() => {\n          setShowUserDetailsModal(false);\n        }}\n      >\n        <ChatModerationDetailsModal userId={userID} accessToken={accessToken} />\n      </Modal>\n    </>\n  );\n};\n","import { Spin, Skeleton, Modal as AntModal } from 'antd';\nimport React, { FC, ReactNode, useState } from 'react';\nimport styles from './Modal.module.scss';\n\nexport type ModalProps = {\n  title: string;\n  url?: string;\n  open: boolean;\n  handleOk?: () => void;\n  handleCancel?: () => void;\n  afterClose?: () => void;\n  children?: ReactNode;\n  height?: string;\n  width?: string;\n};\n\nexport const Modal: FC<ModalProps> = ({\n  title,\n  url,\n  open,\n  handleOk,\n  handleCancel,\n  afterClose,\n  height,\n  width,\n  children,\n}) => {\n  const [loading, setLoading] = useState(!!url);\n\n  let defaultHeight = '100%';\n  let defaultWidth = '520px';\n  if (url) {\n    defaultHeight = '70vh';\n    defaultWidth = '900px';\n  }\n\n  const modalContentBodyStyle = {\n    padding: '0px',\n    minHeight: height,\n    height: height ?? defaultHeight,\n  };\n\n  const iframe = url && (\n    <iframe\n      title={title}\n      src={url}\n      width=\"100%\"\n      height=\"100%\"\n      sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n      frameBorder=\"0\"\n      allowFullScreen\n      style={{ display: 'block' }}\n      // eslint-disable-next-line react/no-unknown-property\n      onLoad={() => setLoading(false)}\n    />\n  );\n\n  const iframeDisplayStyle = loading ? 'none' : 'inline';\n\n  return (\n    <AntModal\n      title={title}\n      open={open}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      afterClose={afterClose}\n      bodyStyle={modalContentBodyStyle}\n      width={width ?? defaultWidth}\n      zIndex={999}\n      footer={null}\n      centered\n      destroyOnClose\n    >\n      <div id=\"modal-container\" style={{ height: '100%' }}>\n        {loading && (\n          <Skeleton active={loading} style={{ padding: '10px' }} paragraph={{ rows: 10 }} />\n        )}\n\n        {iframe && <div style={{ display: iframeDisplayStyle }}>{iframe}</div>}\n        {children && <div className={styles.content}>{children}</div>}\n        {loading && <Spin className={styles.spinner} spinning={loading} size=\"large\" />}\n      </div>\n    </AntModal>\n  );\n};\nexport default Modal;\n\nModal.defaultProps = {\n  url: undefined,\n  children: undefined,\n  handleOk: undefined,\n  handleCancel: undefined,\n  afterClose: undefined,\n};\n","import UAParser from 'ua-parser-js';\n\nexport function formatIPAddress(ipAddress: string): string {\n  const ipAddressComponents = ipAddress.split(':');\n\n  // Wipe out the port component\n  ipAddressComponents[ipAddressComponents.length - 1] = '';\n\n  let ip = ipAddressComponents.join(':');\n  ip = ip.slice(0, ip.length - 1);\n  if (ip === '[::1]' || ip === '127.0.0.1') {\n    return 'Localhost';\n  }\n\n  return ip;\n}\n\n// check if obj is {}\nexport function isEmptyObject(obj) {\n  return !obj || (Object.keys(obj).length === 0 && obj.constructor === Object);\n}\n\nexport function padLeft(text, pad, size) {\n  return String(pad.repeat(size) + text).slice(-size);\n}\n\nexport function parseSecondsToDurationString(seconds = 0) {\n  const finiteSeconds = Number.isFinite(+seconds) ? Math.abs(seconds) : 0;\n\n  const days = Math.floor(finiteSeconds / 86400);\n  const daysString = days > 0 ? `${days} day${days > 1 ? 's' : ''} ` : '';\n\n  const hours = Math.floor((finiteSeconds / 3600) % 24);\n  const hoursString = hours || days ? padLeft(`${hours}:`, '0', 3) : '';\n\n  const mins = Math.floor((finiteSeconds / 60) % 60);\n  const minString = padLeft(`${mins}:`, '0', 3);\n\n  const secs = Math.floor(finiteSeconds % 60);\n  const secsString = padLeft(`${secs}`, '0', 2);\n\n  return daysString + hoursString + minString + secsString;\n}\n\nexport function makeAndStringFromArray(arr: string[]): string {\n  if (arr.length === 1) return arr[0];\n  const firsts = arr.slice(0, arr.length - 1);\n  const last = arr[arr.length - 1];\n  return `${firsts.join(', ')} and ${last}`;\n}\n\nexport function formatUAstring(uaString: string) {\n  const parser = UAParser(uaString);\n  const { device, os, browser } = parser;\n  const { major: browserVersion, name } = browser;\n  const { version: osVersion, name: osName } = os;\n  const { model, type } = device;\n\n  if (uaString === 'libmpv') {\n    return 'mpv media player';\n  }\n  // Fallback to just displaying the raw agent string.\n  if (!name || !browserVersion || !osName) {\n    return uaString;\n  }\n\n  const deviceString = model || type ? ` (${model || type})` : '';\n  return `${name} ${browserVersion} on ${osName} ${osVersion}\n  ${deviceString}`;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"ChatModerationActionMenu_icon__9j6DF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"ChatModerationDetailsModal_modalContainer__czndV\",\"chatHistory\":\"ChatModerationDetailsModal_chatHistory__PunRk\",\"colorBlock\":\"ChatModerationDetailsModal_colorBlock___rAlw\",\"displayName\":\"ChatModerationDetailsModal_displayName__p7pLI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Modal_spinner__GiSS0\",\"content\":\"Modal_content__h9my9\"};"],"names":["id","accessToken","url","URL","window","location","toString","searchParams","append","hideMessageUrl","options","method","headers","body","JSON","stringify","idArray","fetch","Panel","Collapse","ValueRow","label","value","Row","justify","align","Col","span","ConnectedClient","client","messageCount","connectedAt","geo","connectedAtDate","format","Date","div","UserColorBlock","color","bg","className","styles","style","backgroundColor","ChatModerationDetailsModal","userId","userDetails","setUserDetails","useState","loading","setLoading","useEffect","async","response","json","e","console","error","getDetails","user","connectedClients","messages","displayColor","createdAt","previousNames","scopes","isBot","authenticated","totalMessagesSent","reduce","acc","createdAtDate","chatMessageColumns","title","dataIndex","key","render","timestamp","text","record","Button","type","ghost","icon","DeleteOutlined","onClick","messageId","ChatModeration","removeMessage","Spin","spinning","map","scope","Tag","join","accordion","header","formatUAstring","userAgent","Table","size","pagination","columns","dataSource","rowKey","confirm","AntModal","ChatModerationActionMenu","messageID","userID","userDisplayName","showUserDetailsModal","setShowUserDetailsModal","confirmHideMessage","ExclamationCircleOutlined","content","onOk","message","handleHideMessage","confirmBanUser","handleBanUser","menu","Menu","items","EyeInvisibleOutlined","CloseCircleOutlined","Dropdown","overlay","trigger","button","preventDefault","Space","SmallDashOutlined","Modal","open","handleCancel","handleOk","afterClose","height","width","children","defaultHeight","defaultWidth","modalContentBodyStyle","padding","minHeight","iframe","src","sandbox","frameBorder","allowFullScreen","display","onLoad","iframeDisplayStyle","onCancel","bodyStyle","zIndex","footer","centered","destroyOnClose","Skeleton","active","paragraph","rows","defaultProps","undefined","formatIPAddress","ipAddress","ipAddressComponents","split","length","ip","slice","isEmptyObject","obj","Object","keys","constructor","padLeft","pad","String","repeat","parseSecondsToDurationString","seconds","finiteSeconds","Number","isFinite","Math","abs","days","floor","daysString","hours","hoursString","mins","minString","secs","secsString","uaString","parser","UAParser","device","os","browser","major","browserVersion","name","version","osVersion","osName","model","deviceString","module","exports"],"sourceRoot":""}