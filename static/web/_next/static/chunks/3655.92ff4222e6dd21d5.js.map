{"version":3,"file":"static/chunks/3655.92ff4222e6dd21d5.js","mappings":"0LAeO,MAAMA,EAAyC,I,IAAA,KAAEC,GAAM,EAC5D,MAAMC,GAAeC,EAAAA,EAAAA,IAAeC,EAAAA,IAC9BC,GAAeF,EAAAA,EAAAA,IAAeG,EAAAA,KAE7BC,EAAcC,IAAmBC,EAAAA,EAAAA,WAAS,IAE3C,OAAEC,GAAWL,EAEbM,EAAYC,IAChBC,SAASD,MAAQA,GAGbE,EAAS,KACbN,GAAgB,IAGZO,EAAU,KACdP,GAAgB,GAChBG,EAASV,IAgDX,OAlCAe,EAAAA,EAAAA,YAAU,KATRC,OAAOC,iBAAiB,OAAQJ,GAChCG,OAAOC,iBAAiB,QAASH,GAW1B,KAPPE,OAAOE,oBAAoB,OAAQL,GACnCG,OAAOE,oBAAoB,QAASJ,MASnC,CAACd,KAEJe,EAAAA,EAAAA,YAAU,KACR,IAAKT,IAAiBG,EACpB,OAKuB,SADLR,EAAaA,EAAakB,OAAS,GACvCC,MAIhBV,EAAS,mBAAc,OAALV,MACjB,CAACC,EAAcD,KAElBe,EAAAA,EAAAA,YAAU,KACHT,IAIDG,EACFC,EAAS,oBAAe,OAALV,IACTS,GACVC,EAAS,oBAAe,OAALV,OAEpB,CAACS,EAAQT,IAEL","sources":["webpack://_N_E/./components/TitleNotifier/TitleNotifier.tsx"],"sourcesContent":["/**\n * This component is responsible for updating the title of the page when\n * different state changes occur.\n * If the stream live state changes, or chat messages come in while the\n * page is backgrounded, this component will update the title to reflect it. *\n * @component\n */\nimport { FC, useEffect, useState } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { serverStatusState, chatMessagesAtom } from '../stores/ClientConfigStore';\n\nexport type TitleNotifierProps = {\n  name: string;\n};\n\nexport const TitleNotifier: FC<TitleNotifierProps> = ({ name }) => {\n  const chatMessages = useRecoilValue(chatMessagesAtom);\n  const serverStatus = useRecoilValue(serverStatusState);\n\n  const [backgrounded, setBackgrounded] = useState(false);\n\n  const { online } = serverStatus;\n\n  const setTitle = (title: string) => {\n    document.title = title;\n  };\n\n  const onBlur = () => {\n    setBackgrounded(true);\n  };\n\n  const onFocus = () => {\n    setBackgrounded(false);\n    setTitle(name);\n  };\n\n  const listenForEvents = () => {\n    // Listen for events that should update the title\n    window.addEventListener('blur', onBlur);\n    window.addEventListener('focus', onFocus);\n  };\n\n  const removeEvents = () => {\n    window.removeEventListener('blur', onBlur);\n    window.removeEventListener('focus', onFocus);\n  };\n\n  useEffect(() => {\n    listenForEvents();\n\n    return () => {\n      removeEvents();\n    };\n  }, [name]);\n\n  useEffect(() => {\n    if (!backgrounded || !online) {\n      return;\n    }\n\n    // Only alert on real chat messages from people.\n    const lastMessage = chatMessages[chatMessages.length - 1];\n    if (lastMessage.type !== 'CHAT') {\n      return;\n    }\n\n    setTitle(`ðŸ’¬ :: ${name}`);\n  }, [chatMessages, name]);\n\n  useEffect(() => {\n    if (!backgrounded) {\n      return;\n    }\n\n    if (online) {\n      setTitle(` ðŸŸ¢ :: ${name}`);\n    } else if (!online) {\n      setTitle(` ðŸ”´ :: ${name}`);\n    }\n  }, [online, name]);\n\n  return null;\n};\n"],"names":["TitleNotifier","name","chatMessages","useRecoilValue","chatMessagesAtom","serverStatus","serverStatusState","backgrounded","setBackgrounded","useState","online","setTitle","title","document","onBlur","onFocus","useEffect","window","addEventListener","removeEventListener","length","type"],"sourceRoot":""}