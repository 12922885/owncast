{"version":3,"file":"static/chunks/d6e1aeb5-485c2bda23dc1265.js","mappings":"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","sources":["webpack://_N_E/./node_modules/video.js/dist/video.es.js"],"sourcesContent":["/**\n * @license\n * Video.js 7.20.3 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\nimport window$1 from 'global/window';\nimport document from 'global/document';\nimport _extends from '@babel/runtime/helpers/extends';\nimport keycode from 'keycode';\nimport _assertThisInitialized from '@babel/runtime/helpers/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/inheritsLoose';\nimport safeParseTuple from 'safe-json-parse/tuple';\nimport XHR from '@videojs/xhr';\nimport vtt from 'videojs-vtt.js';\nimport _construct from '@babel/runtime/helpers/construct';\nimport _inherits from '@babel/runtime/helpers/inherits';\nimport _resolveUrl from '@videojs/vhs-utils/es/resolve-url.js';\nimport { Parser } from 'm3u8-parser';\nimport { browserSupportsCodec, DEFAULT_VIDEO_CODEC, DEFAULT_AUDIO_CODEC, muxerSupportsCodec, parseCodecs, translateLegacyCodec, codecsFromDefault, getMimeForCodec, isAudioCodec } from '@videojs/vhs-utils/es/codecs.js';\nimport { simpleTypeFromSourceType } from '@videojs/vhs-utils/es/media-types.js';\nimport { isArrayBufferView, concatTypedArrays, stringToBytes, toUint8 } from '@videojs/vhs-utils/es/byte-helpers';\nimport { generateSidxKey, parseUTCTiming, parse, addSidxSegmentsToPlaylist } from 'mpd-parser';\nimport parseSidx from 'mux.js/lib/tools/parse-sidx';\nimport { getId3Offset } from '@videojs/vhs-utils/es/id3-helpers';\nimport { detectContainerForBytes, isLikelyFmp4MediaSegment } from '@videojs/vhs-utils/es/containers';\nimport { ONE_SECOND_IN_TS } from 'mux.js/lib/utils/clock';\n\nvar version$5 = \"7.20.3\";\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n *\n * @private\n */\nvar hooks_ = {};\n/**\n * Get a list of hooks for a specific lifecycle\n *\n * @param  {string} type\n *         the lifecyle to get hooks from\n *\n * @param  {Function|Function[]} [fn]\n *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\n\nvar hooks = function hooks(type, fn) {\n  hooks_[type] = hooks_[type] || [];\n\n  if (fn) {\n    hooks_[type] = hooks_[type].concat(fn);\n  }\n\n  return hooks_[type];\n};\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvar hook = function hook(type, fn) {\n  hooks(type, fn);\n};\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param  {string} type\n *         the lifecycle that the function hooked to\n *\n * @param  {Function} fn\n *         The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\n\n\nvar removeHook = function removeHook(type, fn) {\n  var index = hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  hooks_[type] = hooks_[type].slice();\n  hooks_[type].splice(index, 1);\n  return true;\n};\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\n\n\nvar hookOnce = function hookOnce(type, fn) {\n  hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      removeHook(type, wrapper);\n      return original.apply(void 0, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\n\nvar FullscreenApi = {\n  prefixed: true\n}; // browser API methods\n\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'], // WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'], // Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'], // Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\nvar specApi = apiMap[0];\nvar browserApi; // determine the supported set of functions\n\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n} // map the browser API names to the spec API names\n\n\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n\n  FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n}\n\n/**\n * @file create-logger.js\n * @module create-logger\n */\n\nvar history = [];\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n */\n\nvar LogByTypeFactory = function LogByTypeFactory(name, log) {\n  return function (type, level, args) {\n    var lvl = log.levels[level];\n    var lvlRegExp = new RegExp(\"^(\" + lvl + \")$\");\n\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    } // Add console prefix after adding to history.\n\n\n    args.unshift(name + ':'); // Add a clone of the args at this point to history.\n\n    if (history) {\n      history.push([].concat(args)); // only store 1000 history entries\n\n      var splice = history.length - 1000;\n      history.splice(0, splice > 0 ? splice : 0);\n    } // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n\n\n    if (!window$1.console) {\n      return;\n    } // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n\n\n    var fn = window$1.console[type];\n\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window$1.console.info || window$1.console.log;\n    } // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n\n\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n\n    fn[Array.isArray(args) ? 'apply' : 'call'](window$1.console, args);\n  };\n};\n\nfunction createLogger$1(name) {\n  // This is the private tracking variable for logging level.\n  var level = 'info'; // the curried logByType bound to the specific log and history\n\n  var logByType;\n  /**\n   * Logs plain debug messages. Similar to `console.log`.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### *args\n   * Mixed[]\n   *\n   * Any combination of values that could be passed to `console.log()`.\n   *\n   * #### Return Value\n   *\n   * `undefined`\n   *\n   * @namespace\n   * @param    {Mixed[]} args\n   *           One or more messages or objects that should be logged.\n   */\n\n  var log = function log() {\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    logByType('log', level, args);\n  }; // This is the logByType helper that the logging methods below use\n\n\n  logByType = LogByTypeFactory(name, log);\n  /**\n   * Create a new sublogger which chains the old name to the new name.\n   *\n   * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n   * ```js\n   *  mylogger('foo');\n   *  // > VIDEOJS: player: foo\n   * ```\n   *\n   * @param {string} name\n   *        The name to add call the new logger\n   * @return {Object}\n   */\n\n  log.createLogger = function (subname) {\n    return createLogger$1(name + ': ' + subname);\n  };\n  /**\n   * Enumeration of available logging levels, where the keys are the level names\n   * and the values are `|`-separated strings containing logging methods allowed\n   * in that logging level. These strings are used to create a regular expression\n   * matching the function name being called.\n   *\n   * Levels provided by Video.js are:\n   *\n   * - `off`: Matches no calls. Any value that can be cast to `false` will have\n   *   this effect. The most restrictive.\n   * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n   *   `log.warn`, and `log.error`).\n   * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n   * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n   * - `warn`: Matches `log.warn` and `log.error` calls.\n   * - `error`: Matches only `log.error` calls.\n   *\n   * @type {Object}\n   */\n\n\n  log.levels = {\n    all: 'debug|log|warn|error',\n    off: '',\n    debug: 'debug|log|warn|error',\n    info: 'log|warn|error',\n    warn: 'warn|error',\n    error: 'error',\n    DEFAULT: level\n  };\n  /**\n   * Get or set the current logging level.\n   *\n   * If a string matching a key from {@link module:log.levels} is provided, acts\n   * as a setter.\n   *\n   * @param  {string} [lvl]\n   *         Pass a valid level to set a new logging level.\n   *\n   * @return {string}\n   *         The current logging level.\n   */\n\n  log.level = function (lvl) {\n    if (typeof lvl === 'string') {\n      if (!log.levels.hasOwnProperty(lvl)) {\n        throw new Error(\"\\\"\" + lvl + \"\\\" in not a valid log level\");\n      }\n\n      level = lvl;\n    }\n\n    return level;\n  };\n  /**\n   * Returns an array containing everything that has been logged to the history.\n   *\n   * This array is a shallow clone of the internal history record. However, its\n   * contents are _not_ cloned; so, mutating objects inside this array will\n   * mutate them in history.\n   *\n   * @return {Array}\n   */\n\n\n  log.history = function () {\n    return history ? [].concat(history) : [];\n  };\n  /**\n   * Allows you to filter the history by the given logger name\n   *\n   * @param {string} fname\n   *        The name to filter by\n   *\n   * @return {Array}\n   *         The filtered list to return\n   */\n\n\n  log.history.filter = function (fname) {\n    return (history || []).filter(function (historyItem) {\n      // if the first item in each historyItem includes `fname`, then it's a match\n      return new RegExp(\".*\" + fname + \".*\").test(historyItem[0]);\n    });\n  };\n  /**\n   * Clears the internal history tracking, but does not prevent further history\n   * tracking.\n   */\n\n\n  log.history.clear = function () {\n    if (history) {\n      history.length = 0;\n    }\n  };\n  /**\n   * Disable history tracking if it is currently enabled.\n   */\n\n\n  log.history.disable = function () {\n    if (history !== null) {\n      history.length = 0;\n      history = null;\n    }\n  };\n  /**\n   * Enable history tracking if it is currently disabled.\n   */\n\n\n  log.history.enable = function () {\n    if (history === null) {\n      history = [];\n    }\n  };\n  /**\n   * Logs error messages. Similar to `console.error`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as an error\n   */\n\n\n  log.error = function () {\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    return logByType('error', level, args);\n  };\n  /**\n   * Logs warning messages. Similar to `console.warn`.\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as a warning.\n   */\n\n\n  log.warn = function () {\n    for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args[_key3] = arguments[_key3];\n    }\n\n    return logByType('warn', level, args);\n  };\n  /**\n   * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n   * log if `console.debug` is not available\n   *\n   * @param {Mixed[]} args\n   *        One or more messages or objects that should be logged as debug.\n   */\n\n\n  log.debug = function () {\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    return logByType('debug', level, args);\n  };\n\n  return log;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log$1 = createLogger$1('VIDEOJS');\nvar createLogger = log$1.createLogger;\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\n\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\n\n\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\n\nfunction reduce(object, fn, initial) {\n  if (initial === void 0) {\n    initial = 0;\n  }\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\n\nfunction assign(target) {\n  for (var _len = arguments.length, sources = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return _extends.apply(void 0, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n  return target;\n}\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isObject(value) {\n  return !!value && typeof value === 'object';\n}\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {boolean}\n */\n\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n * null-check to make sure that the player doesn't break in these cases.\n *\n * @function\n * @param    {Element} el\n *           The element you want the computed style of\n *\n * @param    {string} prop\n *           The property name you want\n *\n * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n */\n\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window$1.getComputedStyle === 'function') {\n    var computedStyleValue;\n\n    try {\n      computedStyleValue = window$1.getComputedStyle(el);\n    } catch (e) {\n      return '';\n    }\n\n    return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n  }\n\n  return '';\n}\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window$1.navigator && window$1.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n/**\n * Whether or not this device is an iPod.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\n/**\n * The detected iOS version - or `null`.\n *\n * @static\n * @const\n * @type {string|null}\n */\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is an Android device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\n/**\n * The detected Android version - or `null`.\n *\n * @static\n * @const\n * @type {number|string|null}\n */\n\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n\n  return null;\n}();\n/**\n * Whether or not this is a native Android browser.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n/**\n * Whether or not this is Mozilla Firefox.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n/**\n * Whether or not this is Microsoft Edge.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_EDGE = /Edg/i.test(USER_AGENT);\n/**\n * Whether or not this is Google Chrome.\n *\n * This will also be `true` for Chrome on iOS, which will have different support\n * as it is actually Safari under the hood.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\n/**\n * The detected Google Chrome version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n\n  return null;\n}();\n/**\n * The detected Internet Explorer version - or `null`.\n *\n * @static\n * @const\n * @type {number|null}\n */\n\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n/**\n * Whether or not this is desktop Safari.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n/**\n * Whether or not this is a Windows machine.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_WINDOWS = /Windows/i.test(USER_AGENT);\n/**\n * Whether or not this device is touch-enabled.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window$1 || window$1.navigator.maxTouchPoints || window$1.DocumentTouch && window$1.document instanceof window$1.DocumentTouch));\n/**\n * Whether or not this device is an iPad.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n/**\n * Whether or not this device is an iPhone.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n/**\n * Whether or not this is an iOS device.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n/**\n * Whether or not this is any flavor of Safari - including iOS.\n *\n * @static\n * @const\n * @type {Boolean}\n */\n\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar browser = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  IS_IPOD: IS_IPOD,\n  IOS_VERSION: IOS_VERSION,\n  IS_ANDROID: IS_ANDROID,\n  ANDROID_VERSION: ANDROID_VERSION,\n  IS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n  IS_FIREFOX: IS_FIREFOX,\n  IS_EDGE: IS_EDGE,\n  IS_CHROME: IS_CHROME,\n  CHROME_VERSION: CHROME_VERSION,\n  IE_VERSION: IE_VERSION,\n  IS_SAFARI: IS_SAFARI,\n  IS_WINDOWS: IS_WINDOWS,\n  TOUCH_ENABLED: TOUCH_ENABLED,\n  IS_IPAD: IS_IPAD,\n  IS_IPHONE: IS_IPHONE,\n  IS_IOS: IS_IOS,\n  IS_ANY_SAFARI: IS_ANY_SAFARI\n});\n\n/**\n * @file dom.js\n * @module dom\n */\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @private\n * @param  {string} str\n *         The string to check\n *\n * @return {boolean}\n *         Will be `true` if the string is non-blank, `false` otherwise.\n *\n */\n\nfunction isNonBlankString(str) {\n  // we use str.trim as it will trim any whitespace characters\n  // from the front or back of non-whitespace characters. aka\n  // Any string that contains non-whitespace characters will\n  // still contain them after `trim` but whitespace only strings\n  // will have a length of 0, failing this check.\n  return typeof str === 'string' && Boolean(str.trim());\n}\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @private\n * @param  {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n */\n\n\nfunction throwIfWhitespace(str) {\n  // str.indexOf instead of regex because str.indexOf is faster performance wise.\n  if (str.indexOf(' ') >= 0) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @private\n * @param  {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\n\n\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n/**\n * Whether the current DOM interface appears to be real (i.e. not simulated).\n *\n * @return {boolean}\n *         Will be `true` if the DOM appears to be real, `false` otherwise.\n */\n\n\nfunction isReal() {\n  // Both document and window will never be undefined thanks to `global`.\n  return document === window$1.document;\n}\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param  {Mixed} value\n *         The value to check.\n *\n * @return {boolean}\n *         Will be `true` if the value is a DOM element, `false` otherwise.\n */\n\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *         Will be `true` if the DOM is embedded in an iframe, `false`\n *         otherwise.\n */\n\nfunction isInFrame() {\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window$1.parent !== window$1.self;\n  } catch (x) {\n    return true;\n  }\n}\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @private\n * @param   {string} method\n *          The method to create the query with.\n *\n * @return  {Function}\n *          The query method\n */\n\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n    return ctx[method] && ctx[method](selector);\n  };\n}\n/**\n * Creates an element and applies properties, attributes, and inserts content.\n *\n * @param  {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param  {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param  {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor object.\n *\n * @return {Element}\n *         The element that was created.\n */\n\n\nfunction createEl(tagName, properties, attributes, content) {\n  if (tagName === void 0) {\n    tagName = 'div';\n  }\n\n  if (properties === void 0) {\n    properties = {};\n  }\n\n  if (attributes === void 0) {\n    attributes = {};\n  }\n\n  var el = document.createElement(tagName);\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName]; // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn('Setting attributes in the second argument of createEl()\\n' + 'has been deprecated. Use the third argument instead.\\n' + (\"createEl(type, properties, attributes). Attempting to set \" + propName + \" to \" + val + \".\"));\n      el.setAttribute(propName, val); // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else if (el[propName] !== val || propName === 'tabIndex') {\n      el[propName] = val;\n    }\n  });\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param  {Element} el\n *         The element to add text content into\n *\n * @param  {string} text\n *         The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\n\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n\n  return el;\n}\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\n\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n/**\n * Check if an element has a class name.\n *\n * @param  {Element} element\n *         Element to check\n *\n * @param  {string} classToCheck\n *         Class name to check for\n *\n * @return {boolean}\n *         Will be `true` if the element has a class, `false` otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\n\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n\n  return classRegExp(classToCheck).test(element.className);\n}\n/**\n * Add a class name to an element.\n *\n * @param  {Element} element\n *         Element to add class name to.\n *\n * @param  {string} classToAdd\n *         Class name to add.\n *\n * @return {Element}\n *         The DOM element with the added class name.\n */\n\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd); // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n/**\n * Remove a class name from an element.\n *\n * @param  {Element} element\n *         Element to remove a class name from.\n *\n * @param  {string} classToRemove\n *         Class name to remove\n *\n * @return {Element}\n *         The DOM element with class name removed.\n */\n\nfunction removeClass(element, classToRemove) {\n  // Protect in case the player gets disposed\n  if (!element) {\n    log$1.warn(\"removeClass was called with an element that doesn't exist\");\n    return null;\n  }\n\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n/**\n * The callback definition for toggleClass.\n *\n * @callback module:dom~PredicateCallback\n * @param    {Element} element\n *           The DOM element of the Component.\n *\n * @param    {string} classToToggle\n *           The `className` that wants to be toggled\n *\n * @return   {boolean|undefined}\n *           If `true` is returned, the `classToToggle` will be added to the\n *           `element`. If `false`, the `classToToggle` will be removed from\n *           the `element`. If `undefined`, the callback will be ignored.\n */\n\n/**\n * Adds or removes a class name to/from an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param  {Element} element\n *         The element to toggle a class name on.\n *\n * @param  {string} classToToggle\n *         The class that should be toggled.\n *\n * @param  {boolean|module:dom~PredicateCallback} [predicate]\n *         See the return value for {@link module:dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\n\nfunction toggleClass(element, classToToggle, predicate) {\n  // This CANNOT use `classList` internally because IE11 does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  } // If the necessary class operation matches the current state of the\n  // element, no action is required.\n\n\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\n\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n/**\n * Get an element's attribute values, as defined on the HTML tag.\n *\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute.\n *\n * @param  {Element} tag\n *         Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element. Boolean attributes will be `true` or\n *         `false`, others will be strings.\n */\n\nfunction getAttributes(tag) {\n  var obj = {}; // known boolean attributes\n  // we can check for matching boolean properties, but not all browsers\n  // and not all tags know about these attributes, so, we still want to check them manually\n\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value; // check for known booleans\n      // the matching element property will return a value for typeof\n\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n/**\n * Get the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to get the value of.\n *\n * @return {string}\n *         The value of the attribute.\n */\n\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n/**\n * Set the value of an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to set.\n *\n * @param {string} value\n *        Value to set the attribute to.\n */\n\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n/**\n * Remove an element's attribute.\n *\n * @param {Element} el\n *        A DOM element.\n *\n * @param {string} attribute\n *        Attribute to remove.\n */\n\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n/**\n * Attempt to block the ability to select text.\n */\n\nfunction blockTextSelection() {\n  document.body.focus();\n\n  document.onselectstart = function () {\n    return false;\n  };\n}\n/**\n * Turn off text selection blocking.\n */\n\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain object - or `undefined` if it cannot.\n */\n\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n/**\n * Represents the position of a DOM element on the page.\n *\n * @typedef  {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left.\n *\n * @property {number} top\n *           Pixels from the top.\n */\n\n/**\n * Get the position of an element in the DOM.\n *\n * Uses `getBoundingClientRect` technique from John Resig.\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param  {Element} el\n *         Element from which to get offset.\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\n\nfunction findPosition(el) {\n  if (!el || el && !el.offsetParent) {\n    return {\n      left: 0,\n      top: 0,\n      width: 0,\n      height: 0\n    };\n  }\n\n  var width = el.offsetWidth;\n  var height = el.offsetHeight;\n  var left = 0;\n  var top = 0;\n\n  while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n    left += el.offsetLeft;\n    top += el.offsetTop;\n    el = el.offsetParent;\n  }\n\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n}\n/**\n * Represents x and y coordinates for a DOM element or mouse pointer.\n *\n * @typedef  {Object} module:dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get the pointer position within an element.\n *\n * The base on the coordinates are the bottom left of the element.\n *\n * @param  {Element} el\n *         Element on which to get the pointer position on.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {module:dom~Coordinates}\n *         A coordinates object corresponding to the mouse position.\n *\n */\n\nfunction getPointerPosition(el, event) {\n  var translated = {\n    x: 0,\n    y: 0\n  };\n\n  if (IS_IOS) {\n    var item = el;\n\n    while (item && item.nodeName.toLowerCase() !== 'html') {\n      var transform = computedStyle(item, 'transform');\n\n      if (/^matrix/.test(transform)) {\n        var values = transform.slice(7, -1).split(/,\\s/).map(Number);\n        translated.x += values[4];\n        translated.y += values[5];\n      } else if (/^matrix3d/.test(transform)) {\n        var _values = transform.slice(9, -1).split(/,\\s/).map(Number);\n\n        translated.x += _values[12];\n        translated.y += _values[13];\n      }\n\n      item = item.parentNode;\n    }\n  }\n\n  var position = {};\n  var boxTarget = findPosition(event.target);\n  var box = findPosition(el);\n  var boxW = box.width;\n  var boxH = box.height;\n  var offsetY = event.offsetY - (box.top - boxTarget.top);\n  var offsetX = event.offsetX - (box.left - boxTarget.left);\n\n  if (event.changedTouches) {\n    offsetX = event.changedTouches[0].pageX - box.left;\n    offsetY = event.changedTouches[0].pageY + box.top;\n\n    if (IS_IOS) {\n      offsetX -= translated.x;\n      offsetY -= translated.y;\n    }\n  }\n\n  position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n  position.x = Math.max(0, Math.min(1, offsetX / boxW));\n  return position;\n}\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param  {Mixed} value\n *         Check if this value is a text node.\n *\n * @return {boolean}\n *         Will be `true` if the value is a text node, `false` otherwise.\n */\n\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n/**\n * Empties the contents of an element.\n *\n * @param  {Element} el\n *         The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\n\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n\n  return el;\n}\n/**\n * This is a mixed value that describes content to be injected into the DOM\n * via some method. It can be of the following types:\n *\n * Type       | Description\n * -----------|-------------\n * `string`   | The value will be normalized into a text node.\n * `Element`  | The value will be accepted as-is.\n * `TextNode` | The value will be accepted as-is.\n * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n *\n * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n */\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but helps protect\n * from falling into the trap of simply writing to `innerHTML`, which could\n * be an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Array}\n *         All of the content that was passed in, normalized to an array of\n *         elements or text nodes.\n */\n\nfunction normalizeContent(content) {\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  } // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n\n\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n/**\n * Normalizes and appends content to an element.\n *\n * @param  {Element} el\n *         Element to append normalized content to.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\n\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {module:dom~ContentDescriptor} content\n *        A content descriptor value.\n *\n * @return {Element}\n *         The element with inserted normalized content.\n */\n\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n/**\n * Check if an event was a single left click.\n *\n * @param  {EventTarget~Event} event\n *         Event object.\n *\n * @return {boolean}\n *         Will be `true` if a single left click, `false` otherwise.\n */\n\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n    return true;\n  } // `mouseup` event on a single left click has\n  // `button` and `buttons` equal to 0\n\n\n  if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n    return false;\n  }\n\n  return true;\n}\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\n\nvar $ = createQuerier('querySelector');\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param  {string} selector\n *         A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param  {Element|String} [context=document]\n *         A DOM element within which to query. Can also be a selector\n *         string in which case the first matching element will be used\n *         as context. If missing (or no element matches selector), falls\n *         back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none\n *         were found.\n *\n */\n\nvar $$ = createQuerier('querySelectorAll');\n\nvar Dom = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  isReal: isReal,\n  isEl: isEl,\n  isInFrame: isInFrame,\n  createEl: createEl,\n  textContent: textContent,\n  prependTo: prependTo,\n  hasClass: hasClass,\n  addClass: addClass,\n  removeClass: removeClass,\n  toggleClass: toggleClass,\n  setAttributes: setAttributes,\n  getAttributes: getAttributes,\n  getAttribute: getAttribute,\n  setAttribute: setAttribute,\n  removeAttribute: removeAttribute,\n  blockTextSelection: blockTextSelection,\n  unblockTextSelection: unblockTextSelection,\n  getBoundingClientRect: getBoundingClientRect,\n  findPosition: findPosition,\n  getPointerPosition: getPointerPosition,\n  isTextNode: isTextNode,\n  emptyEl: emptyEl,\n  normalizeContent: normalizeContent,\n  appendContent: appendContent,\n  insertContent: insertContent,\n  isSingleLeftClick: isSingleLeftClick,\n  $: $,\n  $$: $$\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs$1;\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\n\nvar autoSetup = function autoSetup() {\n  if (videojs$1.options.autoSetup === false) {\n    return;\n  }\n\n  var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  var divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n  var mediaEls = vids.concat(audios, divs); // Check if any media elements exist\n\n  if (mediaEls && mediaEls.length > 0) {\n    for (var i = 0, e = mediaEls.length; i < e; i++) {\n      var mediaEl = mediaEls[i]; // Check if element exists, has getAttribute func.\n\n      if (mediaEl && mediaEl.getAttribute) {\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup'); // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$1(mediaEl);\n          }\n        } // If getAttribute isn't defined, we need to wait for the DOM.\n\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    } // No videos were found, so keep looping unless page is finished loading.\n\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\n\n\nfunction autoSetupTimeout(wait, vjs) {\n  // Protect against breakage in non-browser environments\n  if (!isReal()) {\n    return;\n  }\n\n  if (vjs) {\n    videojs$1 = vjs;\n  }\n\n  window$1.setTimeout(autoSetup, wait);\n}\n/**\n * Used to set the internal tracking of window loaded state to true.\n *\n * @private\n */\n\n\nfunction setWindowLoaded() {\n  _windowLoaded = true;\n  window$1.removeEventListener('load', setWindowLoaded);\n}\n\nif (isReal()) {\n  if (document.readyState === 'complete') {\n    setWindowLoaded();\n  } else {\n    /**\n     * Listen for the load event on window, and set _windowLoaded to true.\n     *\n     * We use a standard event listener here to avoid incrementing the GUID\n     * before any players are created.\n     *\n     * @listens load\n     */\n    window$1.addEventListener('load', setWindowLoaded);\n  }\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\n\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n  style.className = className;\n  return style;\n};\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\n\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file guid.js\n * @module guid\n */\n// Default value for GUIDs. This allows us to reset the GUID counter in tests.\n//\n// The initial GUID is 3 because some users have come to rely on the first\n// default player ID ending up as `vjs_video_3`.\n//\n// See: https://github.com/videojs/video.js/pull/6216\nvar _initialGuid = 3;\n/**\n * Unique ID for an element or function\n *\n * @type {Number}\n */\n\nvar _guid = _initialGuid;\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\n\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\nvar FakeWeakMap;\n\nif (!window$1.WeakMap) {\n  FakeWeakMap = /*#__PURE__*/function () {\n    function FakeWeakMap() {\n      this.vdata = 'vdata' + Math.floor(window$1.performance && window$1.performance.now() || Date.now());\n      this.data = {};\n    }\n\n    var _proto = FakeWeakMap.prototype;\n\n    _proto.set = function set(key, value) {\n      var access = key[this.vdata] || newGUID();\n\n      if (!key[this.vdata]) {\n        key[this.vdata] = access;\n      }\n\n      this.data[access] = value;\n      return this;\n    };\n\n    _proto.get = function get(key) {\n      var access = key[this.vdata]; // we have data, return it\n\n      if (access) {\n        return this.data[access];\n      } // we don't have data, return nothing.\n      // return undefined explicitly as that's the contract for this method\n\n\n      log$1('We have no data for this element', key);\n      return undefined;\n    };\n\n    _proto.has = function has(key) {\n      var access = key[this.vdata];\n      return access in this.data;\n    };\n\n    _proto[\"delete\"] = function _delete(key) {\n      var access = key[this.vdata];\n\n      if (access) {\n        delete this.data[access];\n        delete key[this.vdata];\n      }\n    };\n\n    return FakeWeakMap;\n  }();\n}\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\n\n\nvar DomData = window$1.WeakMap ? new WeakMap() : new FakeWeakMap();\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @file events.js\n * @module events\n */\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\n\nfunction _cleanUpEvents(elem, type) {\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // Remove the events of a particular type if there are none left\n\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type]; // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n    // Remove the meta-handler from the element\n\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  } // Remove the events object if there are no types left\n\n\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  } // Finally remove the element data if there is no data left\n\n\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    DomData[\"delete\"](elem);\n  }\n}\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\n\n\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\n\n\nfunction fixEvent(event) {\n  if (event.fixed_) {\n    return event;\n  }\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  } // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n\n\n  if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n    var old = event || window$1.event;\n    event = {}; // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      // Lighthouse complains if Event.path is copied\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY' && key !== 'path') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    } // The event occurred on this element\n\n\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    } // Handle which other element the event is related to\n\n\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    } // Stop the default browser action\n\n\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false; // Stop the event from bubbling\n\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse; // Stop the event from bubbling and executing other handlers\n\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse; // Handle mouse position\n\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    } // Handle key presses\n\n\n    event.which = event.charCode || event.keyCode; // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n\n    if (event.button !== null && event.button !== undefined) {\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  event.fixed_ = true; // Returns fixed-up instance\n\n  return event;\n}\n/**\n * Whether passive event listeners are supported\n */\n\nvar _supportsPassive;\n\nvar supportsPassive = function supportsPassive() {\n  if (typeof _supportsPassive !== 'boolean') {\n    _supportsPassive = false;\n\n    try {\n      var opts = Object.defineProperty({}, 'passive', {\n        get: function get() {\n          _supportsPassive = true;\n        }\n      });\n      window$1.addEventListener('test', null, opts);\n      window$1.removeEventListener('test', null, opts);\n    } catch (e) {// disregard\n    }\n  }\n\n  return _supportsPassive;\n};\n/**\n * Touch events Chrome expects to be passive\n */\n\n\nvar passiveEvents = ['touchstart', 'touchmove'];\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\n\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  if (!DomData.has(elem)) {\n    DomData.set(elem, {});\n  }\n\n  var data = DomData.get(elem); // We need a place to store all our handler data\n\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n        options = {\n          passive: true\n        };\n      }\n\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\n\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!DomData.has(elem)) {\n    return;\n  }\n\n  var data = DomData.get(elem); // If no events exist, nothing to unbind\n\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  } // Utility function\n\n\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n\n    _cleanUpEvents(el, t);\n  }; // Are we removing all bound events?\n\n\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n\n    return;\n  }\n\n  var handlers = data.handlers[type]; // If no handlers exist, nothing to unbind\n\n  if (!handlers) {\n    return;\n  } // If no listener was provided, remove all listeners for type\n\n\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  } // We're only removing a single handler\n\n\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         Returns the opposite of `defaultPrevented` if default was\n *         prevented. Otherwise, returns `undefined`\n */\n\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = DomData.has(elem) ? DomData.get(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument; // type = event.type || event,\n  // handler;\n  // If an event name was passed as a string, creates an event out of it\n\n  if (typeof event === 'string') {\n    event = {\n      type: event,\n      target: elem\n    };\n  } else if (!event.target) {\n    event.target = elem;\n  } // Normalizes the event properties.\n\n\n  event = fixEvent(event); // If the passed element has a dispatcher, executes the established handlers.\n\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  } // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n\n\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash); // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n    if (!DomData.has(event.target)) {\n      DomData.set(event.target, {});\n    }\n\n    var targetData = DomData.get(event.target); // Checks if the target has a default action for this event.\n\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true; // Executes the default action.\n\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      } // Re-enables event dispatching.\n\n\n      targetData.disabled = false;\n    }\n  } // Inform the triggerer if the default was prevented by returning false\n\n\n  return !event.defaultPrevented;\n}\n/**\n * Trigger a listener only once for an event.\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n/**\n * Trigger a listener only once and then turn if off for all\n * configured events\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event listener function\n */\n\nfunction any(elem, type, fn) {\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  }; // copy the guid to the new function so it can removed using the original function's ID\n\n\n  func.guid = fn.guid = fn.guid || newGUID(); // multiple ons, but one off for everything\n\n  on(elem, type, func);\n}\n\nvar Events = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  fixEvent: fixEvent,\n  on: on,\n  off: off,\n  trigger: trigger,\n  one: one,\n  any: any\n});\n\n/**\n * @file fn.js\n * @module fn\n */\nvar UPDATE_REFRESH_INTERVAL = 30;\n/**\n * Bind (a.k.a proxy or context). A simple method for changing the context of\n * a function.\n *\n * It also stores a unique id on the function so it can be easily removed from\n * events.\n *\n * @function\n * @param    {Mixed} context\n *           The object to bind as scope.\n *\n * @param    {Function} fn\n *           The function to be bound to a scope.\n *\n * @param    {number} [uid]\n *           An optional unique ID for the function to be set\n *\n * @return   {Function}\n *           The new function that will be bound into the context given\n */\n\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  } // Create the new function that changes the context\n\n\n  var bound = fn.bind(context); // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n  return bound;\n};\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @function\n * @param    {Function} fn\n *           The function to be throttled.\n *\n * @param    {number}   wait\n *           The number of milliseconds by which to throttle.\n *\n * @return   {Function}\n */\n\nvar throttle = function throttle(fn, wait) {\n  var last = window$1.performance.now();\n\n  var throttled = function throttled() {\n    var now = window$1.performance.now();\n\n    if (now - last >= wait) {\n      fn.apply(void 0, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @function\n * @param    {Function} func\n *           The function to wrap with debounce behavior.\n *\n * @param    {number} wait\n *           The number of milliseconds to wait after the last invocation.\n *\n * @param    {boolean} [immediate]\n *           Whether or not to invoke the function immediately upon creation.\n *\n * @param    {Object} [context=window]\n *           The \"context\" in which the debounced function should debounce. For\n *           example, if this function should be tied to a Video.js player,\n *           the player can be passed here. Alternatively, defaults to the\n *           global `window` object.\n *\n * @return   {Function}\n *           A debounced function.\n */\n\nvar debounce = function debounce(func, wait, immediate, context) {\n  if (context === void 0) {\n    context = window$1;\n  }\n\n  var timeout;\n\n  var cancel = function cancel() {\n    context.clearTimeout(timeout);\n    timeout = null;\n  };\n  /* eslint-disable consistent-this */\n\n\n  var debounced = function debounced() {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n\n\n  debounced.cancel = cancel;\n  return debounced;\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\n\nvar EventTarget$2 = function EventTarget() {};\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\n\n\nEventTarget$2.prototype.allowedEvents_ = {};\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\n\nEventTarget$2.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\n\n\nEventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\n\nEventTarget$2.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\n\n\nEventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\n\nEventTarget$2.prototype.one = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\nEventTarget$2.prototype.any = function (type, fn) {\n  // Remove the addEventListener aliasing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n\n  any(this, type, fn);\n  this.addEventListener = ael;\n};\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\n\n\nEventTarget$2.prototype.trigger = function (event) {\n  var type = event.type || event; // deprecation\n  // In a future version we should default target to `this`\n  // similar to how we default the target to `elem` in\n  // `Events.trigger`. Right now the default `target` will be\n  // `document` due to the `Event.fixEvent` call.\n\n  if (typeof event === 'string') {\n    event = {\n      type: type\n    };\n  }\n\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\n\n\nEventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\nvar EVENT_MAP;\n\nEventTarget$2.prototype.queueTrigger = function (event) {\n  var _this = this;\n\n  // only set up EVENT_MAP if it'll be used\n  if (!EVENT_MAP) {\n    EVENT_MAP = new Map();\n  }\n\n  var type = event.type || event;\n  var map = EVENT_MAP.get(this);\n\n  if (!map) {\n    map = new Map();\n    EVENT_MAP.set(this, map);\n  }\n\n  var oldTimeout = map.get(type);\n  map[\"delete\"](type);\n  window$1.clearTimeout(oldTimeout);\n  var timeout = window$1.setTimeout(function () {\n    // if we cleared out all timeouts for the current target, delete its map\n    if (map.size === 0) {\n      map = null;\n      EVENT_MAP[\"delete\"](_this);\n    }\n\n    _this.trigger(event);\n  }, 0);\n  map.set(type, timeout);\n};\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n\nvar objName = function objName(obj) {\n  if (typeof obj.name === 'function') {\n    return obj.name();\n  }\n\n  if (typeof obj.name === 'string') {\n    return obj.name;\n  }\n\n  if (obj.name_) {\n    return obj.name_;\n  }\n\n  if (obj.constructor && obj.constructor.name) {\n    return obj.constructor.name;\n  }\n\n  return typeof obj;\n};\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\n\n\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n/**\n * Adds a callback to run after the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to Add\n * @param  {Function} callback\n *         The callback to run.\n */\n\n\nvar addEventedCallback = function addEventedCallback(target, callback) {\n  if (isEvented(target)) {\n    callback();\n  } else {\n    if (!target.eventedCallbacks) {\n      target.eventedCallbacks = [];\n    }\n\n    target.eventedCallbacks.push(callback);\n  }\n};\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\n\n\nvar isValidEventType = function isValidEventType(type) {\n  return (// The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\n\n\nvar validateTarget = function validateTarget(target, obj, fnName) {\n  if (!target || !target.nodeName && !isEvented(target)) {\n    throw new Error(\"Invalid target for \" + objName(obj) + \"#\" + fnName + \"; must be a DOM node or evented object.\");\n  }\n};\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n *\n * @param  {Object} obj\n*         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\n\n\nvar validateEventType = function validateEventType(type, obj, fnName) {\n  if (!isValidEventType(type)) {\n    throw new Error(\"Invalid event type for \" + objName(obj) + \"#\" + fnName + \"; must be a non-empty string or array.\");\n  }\n};\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n *\n * @param  {Object} obj\n *         The evented object we are validating for\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n */\n\n\nvar validateListener = function validateListener(listener, obj, fnName) {\n  if (typeof listener !== 'function') {\n    throw new Error(\"Invalid listener for \" + objName(obj) + \"#\" + fnName + \"; must be a function.\");\n  }\n};\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @param  {string} fnName\n *         The name of the evented mixin function that called this.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\n\n\nvar normalizeListenArgs = function normalizeListenArgs(self, args, fnName) {\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target;\n  var type;\n  var listener;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_; // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target, self, fnName);\n  validateEventType(type, self, fnName);\n  validateListener(listener, self, fnName);\n  listener = bind(self, listener);\n  return {\n    isTargetingSelf: isTargetingSelf,\n    target: target,\n    type: type,\n    listener: listener\n  };\n};\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\n\n\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target, target, method);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n/**\n * Contains methods that provide event capabilities to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\n\n\nvar EventedMixin = {\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args, 'on'),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener); // If this object is listening to another evented object.\n\n    if (!isTargetingSelf) {\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      }; // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n\n\n      removeListenerOnDispose.guid = listener.guid; // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      removeRemoverOnTargetDispose.guid = listener.guid;\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will be called once per event and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args, 'one'),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener); // Targeting another evented object.\n    } else {\n      // TODO: This wrapper is incorrect! It should only\n      //       remove the wrapper for the event type that called it.\n      //       Instead all listners are removed on the first trigger!\n      //       see https://github.com/videojs/video.js/issues/5962\n      var wrapper = function wrapper() {\n        _this2.off(target, type, wrapper);\n\n        for (var _len3 = arguments.length, largs = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once for the first event that is triggered\n   * then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  any: function any() {\n    var _this3 = this;\n\n    for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n      args[_key4] = arguments[_key4];\n    }\n\n    var _normalizeListenArgs3 = normalizeListenArgs(this, args, 'any'),\n        isTargetingSelf = _normalizeListenArgs3.isTargetingSelf,\n        target = _normalizeListenArgs3.target,\n        type = _normalizeListenArgs3.type,\n        listener = _normalizeListenArgs3.listener; // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'any', type, listener); // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        _this3.off(target, type, wrapper);\n\n        for (var _len5 = arguments.length, largs = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n          largs[_key5] = arguments[_key5];\n        }\n\n        listener.apply(null, largs);\n      }; // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n\n\n      wrapper.guid = listener.guid;\n      listen(target, 'any', type, wrapper);\n    }\n  },\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$1(targetOrType, typeOrListener, listener) {\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener); // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener; // Fail fast and in a meaningful way!\n\n      validateTarget(target, this, 'off');\n      validateEventType(type, this, 'off');\n      validateListener(listener, this, 'off'); // Ensure there's at least a guid, even if the function hasn't been used\n\n      listener = bind(this, listener); // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @return {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$1(event, hash) {\n    validateTarget(this.eventBusEl_, this, 'trigger');\n    var type = event && typeof event !== 'string' ? event.type : event;\n\n    if (!isValidEventType(type)) {\n      var error = \"Invalid event type for \" + objName(this) + \"#trigger; \" + 'must be a non-empty string or object with a type key that has a non-empty value.';\n\n      if (event) {\n        (this.log || log$1).error(error);\n      } else {\n        throw new Error(error);\n      }\n    }\n\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {string} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\n\nfunction evented(target, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var _options = options,\n      eventBusKey = _options.eventBusKey; // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error(\"The eventBusKey \\\"\" + eventBusKey + \"\\\" does not refer to an element.\");\n    }\n\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', {\n      className: 'vjs-event-bus'\n    });\n  }\n\n  assign(target, EventedMixin);\n\n  if (target.eventedCallbacks) {\n    target.eventedCallbacks.forEach(function (callback) {\n      callback();\n    });\n  } // When any evented object is disposed, it removes all its listeners.\n\n\n  target.on('dispose', function () {\n    target.off();\n    [target, target.el_, target.eventBusEl_].forEach(function (val) {\n      if (val && DomData.has(val)) {\n        DomData[\"delete\"](val);\n      }\n    });\n    window$1.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\n\nvar StatefulMixin = {\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @return {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes;\n    each(stateUpdates, function (value, key) {\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    }); // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n\n    if (changes && isEvented(this)) {\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @return {Object}\n *          Returns the `target`.\n */\n\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin); // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n\n  target.state = assign({}, target.state, defaultState); // Auto-bind the `handleStateChanged` method of the target object if it exists.\n\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file string-cases.js\n * @module to-lower-case\n */\n\n/**\n * Lowercase the first letter of a string.\n *\n * @param {string} string\n *        String to be lowercased\n *\n * @return {string}\n *         The string with a lowercased first letter\n */\nvar toLowerCase = function toLowerCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toLowerCase();\n  });\n};\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\n\nvar toTitleCase$1 = function toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toUpperCase();\n  });\n};\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\n\nvar titleCaseEquals = function titleCaseEquals(str1, str2) {\n  return toTitleCase$1(str1) === toTitleCase$1(str2);\n};\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Merge two objects recursively.\n *\n * Performs a deep merge like\n * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n * plain objects (not arrays, elements, or anything else).\n *\n * Non-plain object values will be copied directly from the right-most\n * argument.\n *\n * @static\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @return {Object}\n *          A new object that is the merged result of all sources.\n */\n\nfunction mergeOptions$3() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions$3(result[key], value);\n    });\n  });\n  return result;\n}\n\nvar MapSham = /*#__PURE__*/function () {\n  function MapSham() {\n    this.map_ = {};\n  }\n\n  var _proto = MapSham.prototype;\n\n  _proto.has = function has(key) {\n    return key in this.map_;\n  };\n\n  _proto[\"delete\"] = function _delete(key) {\n    var has = this.has(key);\n    delete this.map_[key];\n    return has;\n  };\n\n  _proto.set = function set(key, value) {\n    this.map_[key] = value;\n    return this;\n  };\n\n  _proto.forEach = function forEach(callback, thisArg) {\n    for (var key in this.map_) {\n      callback.call(thisArg, this.map_[key], key, this);\n    }\n  };\n\n  return MapSham;\n}();\n\nvar Map$1 = window$1.Map ? window$1.Map : MapSham;\n\nvar SetSham = /*#__PURE__*/function () {\n  function SetSham() {\n    this.set_ = {};\n  }\n\n  var _proto = SetSham.prototype;\n\n  _proto.has = function has(key) {\n    return key in this.set_;\n  };\n\n  _proto[\"delete\"] = function _delete(key) {\n    var has = this.has(key);\n    delete this.set_[key];\n    return has;\n  };\n\n  _proto.add = function add(key) {\n    this.set_[key] = 1;\n    return this;\n  };\n\n  _proto.forEach = function forEach(callback, thisArg) {\n    for (var key in this.set_) {\n      callback.call(thisArg, key, key, this);\n    }\n  };\n\n  return SetSham;\n}();\n\nvar Set$1 = window$1.Set ? window$1.Set : SetSham;\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component$1 = /*#__PURE__*/function () {\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of component options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    var _this = this;\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    this.isDisposed_ = false; // Hold the reference to the parent component via `addChild` method\n\n    this.parentComponent_ = null; // Make a copy of prototype.options_ to protect against overriding defaults\n\n    this.options_ = mergeOptions$3({}, this.options_); // Updated options with supplied options\n\n    options = this.options_ = mergeOptions$3(this.options_, options); // Get ID from options or options element if one is supplied\n\n    this.id_ = options.id || options.el && options.el.id; // If there was no ID from the options, generate one\n\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n      this.id_ = id + \"_component_\" + newGUID();\n    }\n\n    this.name_ = options.name || null; // Create element if one wasn't provided in options\n\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    if (options.className && this.el_) {\n      options.className.split(' ').forEach(function (c) {\n        return _this.addClass(c);\n      });\n    } // if evented is anything except false, we want to mixin in evented\n\n\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, {\n        eventBusKey: this.el_ ? 'el_' : null\n      });\n      this.handleLanguagechange = this.handleLanguagechange.bind(this);\n      this.on(this.player_, 'languagechange', this.handleLanguagechange);\n    }\n\n    stateful(this, this.constructor.defaultState);\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n    this.setTimeoutIds_ = new Set$1();\n    this.setIntervalIds_ = new Set$1();\n    this.rafIds_ = new Set$1();\n    this.namedRafs_ = new Map$1();\n    this.clearingTimersOnDispose_ = false; // Add any child components in options\n\n    if (options.initChildren !== false) {\n      this.initChildren();\n    } // Don't want to trigger ready here or it will go before init is actually\n    // finished for all children that run this constructor\n\n\n    this.ready(ready);\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   *\n   * @param {Object} options\n   * @param {Element} options.originalEl element with which to replace player element\n   */\n\n\n  var _proto = Component.prototype;\n\n  _proto.dispose = function dispose(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    // Bail out if the component has already been disposed.\n    if (this.isDisposed_) {\n      return;\n    }\n\n    if (this.readyQueue_) {\n      this.readyQueue_.length = 0;\n    }\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the dispose event does not\n     *           bubble up\n     */\n\n\n    this.trigger({\n      type: 'dispose',\n      bubbles: false\n    });\n    this.isDisposed_ = true; // Dispose all children.\n\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    } // Delete child references\n\n\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n    this.parentComponent_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        if (options.restoreEl) {\n          this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n        } else {\n          this.el_.parentNode.removeChild(this.el_);\n        }\n      }\n\n      this.el_ = null;\n    } // remove reference to the player after disposing of the element\n\n\n    this.player_ = null;\n  }\n  /**\n   * Determine whether or not this component has been disposed.\n   *\n   * @return {boolean}\n   *         If the component has been disposed, will be `true`. Otherwise, `false`.\n   */\n  ;\n\n  _proto.isDisposed = function isDisposed() {\n    return Boolean(this.isDisposed_);\n  }\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n  ;\n\n  _proto.player = function player() {\n    return this.player_;\n  }\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   */\n  ;\n\n  _proto.options = function options(obj) {\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions$3(this.options_, obj);\n    return this.options_;\n  }\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n  ;\n\n  _proto.el = function el() {\n    return this.el_;\n  }\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  }\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n  ;\n\n  _proto.localize = function localize(string, tokens, defaultValue) {\n    if (defaultValue === void 0) {\n      defaultValue = string;\n    }\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  }\n  /**\n   * Handles language change for the player in components. Should be overriden by sub-components.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.handleLanguagechange = function handleLanguagechange() {}\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n  ;\n\n  _proto.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  }\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n  ;\n\n  _proto.id = function id() {\n    return this.id_;\n  }\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n  ;\n\n  _proto.name = function name() {\n    return this.name_;\n  }\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n  ;\n\n  _proto.children = function children() {\n    return this.children_;\n  }\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n  ;\n\n  _proto.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  }\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n  ;\n\n  _proto.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    return this.childNameIndex_[name];\n  }\n  /**\n   * Returns the descendant `Component` following the givent\n   * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n   * try to get 'foo' on the current component, 'bar' on the 'foo'\n   * component and 'baz' on the 'bar' component and return undefined\n   * if any of those don't exist.\n   *\n   * @param {...string[]|...string} names\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The descendant `Component` following the given descendant\n   *         `names` or undefined.\n   */\n  ;\n\n  _proto.getDescendant = function getDescendant() {\n    for (var _len = arguments.length, names = new Array(_len), _key = 0; _key < _len; _key++) {\n      names[_key] = arguments[_key];\n    }\n\n    // flatten array argument into the main array\n    names = names.reduce(function (acc, n) {\n      return acc.concat(n);\n    }, []);\n    var currentChild = this;\n\n    for (var i = 0; i < names.length; i++) {\n      currentChild = currentChild.getChild(names[i]);\n\n      if (!currentChild || !currentChild.getChild) {\n        return;\n      }\n    }\n\n    return currentChild;\n  }\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options, index) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (index === void 0) {\n      index = this.children_.length;\n    }\n\n    var component;\n    var componentName; // If child is a string, create component with options\n\n    if (typeof child === 'string') {\n      componentName = toTitleCase$1(child);\n      var componentClassName = options.componentClass || componentName; // Set name through options\n\n      options.name = componentName; // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error(\"Component \" + componentClassName + \" does not exist\");\n      } // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n\n\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options); // child is a component instance\n    } else {\n      component = child;\n    }\n\n    if (component.parentComponent_) {\n      component.parentComponent_.removeChild(component);\n    }\n\n    this.children_.splice(index, 0, component);\n    component.parentComponent_ = this;\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    } // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n\n\n    componentName = componentName || component.name && toTitleCase$1(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n      this.childNameIndex_[toLowerCase(componentName)] = component;\n    } // Add the UI object's element to the container div (box)\n    // Having an element is not required\n\n\n    if (typeof component.el === 'function' && component.el()) {\n      // If inserting before a component, insert before that component's element\n      var refNode = null;\n\n      if (this.children_[index + 1]) {\n        // Most children are components, but the video tech is an HTML element\n        if (this.children_[index + 1].el_) {\n          refNode = this.children_[index + 1].el_;\n        } else if (isEl(this.children_[index + 1])) {\n          refNode = this.children_[index + 1];\n        }\n      }\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    } // Return so it can stored on parent object if desired.\n\n\n    return component;\n  }\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    component.parentComponent_ = null;\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[toTitleCase$1(component.name())] = null;\n    this.childNameIndex_[toLowerCase(component.name())] = null;\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  }\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n  ;\n\n  _proto.initChildren = function initChildren() {\n    var _this2 = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts; // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        } // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n\n\n        if (opts === false) {\n          return;\n        } // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n\n\n        if (opts === true) {\n          opts = {};\n        } // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n\n\n        opts.playerOptions = _this2.options_.playerOptions; // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n\n        var newChild = _this2.addChild(name, opts);\n\n        if (newChild) {\n          _this2[name] = newChild;\n        }\n      }; // Allow for an array of children details to passed in the options\n\n\n      var workingChildren;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name;\n        var opts;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this2.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return {\n          name: name,\n          opts: opts\n        };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  }\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  }\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n  ;\n\n  _proto.ready = function ready(fn, sync) {\n    if (sync === void 0) {\n      sync = false;\n    }\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  }\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n  ;\n\n  _proto.triggerReady = function triggerReady() {\n    this.isReady_ = true; // Ensure ready is triggered asynchronously\n\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_; // Reset Ready Queue\n\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      } // Allow for using event listeners also\n\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n\n\n      this.trigger('ready');\n    }, 1);\n  }\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$ = function $$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  }\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n  ;\n\n  _proto.$$ = function $$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  }\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n  ;\n\n  _proto.hasClass = function hasClass$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  }\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n  ;\n\n  _proto.addClass = function addClass$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  }\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n  ;\n\n  _proto.removeClass = function removeClass$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  }\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n  ;\n\n  _proto.toggleClass = function toggleClass$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  }\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n  ;\n\n  _proto.show = function show() {\n    this.removeClass('vjs-hidden');\n  }\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n  ;\n\n  _proto.hide = function hide() {\n    this.addClass('vjs-hidden');\n  }\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  }\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  }\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n  ;\n\n  _proto.getAttribute = function getAttribute$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  }\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n  ;\n\n  _proto.setAttribute = function setAttribute$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  }\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n  ;\n\n  _proto.removeAttribute = function removeAttribute$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  }\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  }\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n  ;\n\n  _proto.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  }\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n  ;\n\n  _proto.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  }\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n  ;\n\n  _proto.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      } // Check if using css width/height (% or px) and adjust\n\n\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      } // skipListeners allows us to avoid triggering the resize event when setting both width and height\n\n\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    } // Not setting a value, so getting it\n    // Make sure element exists\n\n\n    if (!this.el_) {\n      return 0;\n    } // Get dimension value from style\n\n\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    } // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n\n\n    return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n  }\n  /**\n   * Get the computed width or the height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n  ;\n\n  _proto.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    computedWidthOrHeight = computedStyle(this.el_, widthOrHeight); // remove 'px' from variable and parse as integer\n\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight); // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs wherever getComputedStyle doesn't exist.\n\n    if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n      var rule = \"offset\" + toTitleCase$1(widthOrHeight);\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  }\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains computed width and height values of the\n   * component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {Component~DimensionObject}\n   *         The computed dimensions of the component's element.\n   */\n  ;\n\n  _proto.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  }\n  /**\n   * Get the computed width of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed width of the component's element.\n   */\n  ;\n\n  _proto.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  }\n  /**\n   * Get the computed height of the component's element.\n   *\n   * Uses `window.getComputedStyle`.\n   *\n   * @return {number}\n   *         The computed height of the component's element.\n   */\n  ;\n\n  _proto.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  }\n  /**\n   * Set the focus to this component\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.el_.focus();\n  }\n  /**\n   * Remove the focus from this component\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.el_.blur();\n  }\n  /**\n   * When this Component receives a `keydown` event which it does not process,\n   *  it passes the event to the Player for handling.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (this.player_) {\n      // We only stop propagation here because we want unhandled events to fall\n      // back to the browser. Exclude Tab for focus trapping.\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.stopPropagation();\n      }\n\n      this.player_.handleKeyDown(event);\n    }\n  }\n  /**\n   * Many components used to have a `handleKeyPress` method, which was poorly\n   * named because it listened to a `keydown` event. This method name now\n   * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n   * will not see their method calls stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    this.handleKeyDown(event);\n  }\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n  ;\n\n  _proto.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null; // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n\n    var tapMovementThreshold = 10; // The maximum length a touch can be while still being considered a tap\n\n    var touchTimeThreshold = 200;\n    var couldBeTap;\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        }; // Record start time so we can detect a tap vs. \"touch and hold\"\n\n        touchStart = window$1.performance.now(); // Reset couldBeTap tracking\n\n        couldBeTap = true;\n      }\n    });\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    }; // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n\n\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap); // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n\n    this.on('touchend', function (event) {\n      firstTouch = null; // Proceed only if the touchmove/leave/cancel event didn't happen\n\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = window$1.performance.now() - touchStart; // Make sure the touch was less than the threshold to be considered a tap\n\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('tap'); // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  }\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n  ;\n\n  _proto.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    } // listener for reporting that the user is active\n\n\n    var report = bind(this.player(), this.player().reportUserActivity);\n    var touchHolding;\n    this.on('touchstart', function () {\n      report(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(touchHolding); // report at the same interval as activityCheck\n\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report(); // stop the interval that maintains activity if the touch is holding\n\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  }\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n  ;\n\n  _proto.setTimeout = function setTimeout(fn, timeout) {\n    var _this3 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId;\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    timeoutId = window$1.setTimeout(function () {\n      if (_this3.setTimeoutIds_.has(timeoutId)) {\n        _this3.setTimeoutIds_[\"delete\"](timeoutId);\n      }\n\n      fn();\n    }, timeout);\n    this.setTimeoutIds_.add(timeoutId);\n    return timeoutId;\n  }\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n  ;\n\n  _proto.clearTimeout = function clearTimeout(timeoutId) {\n    if (this.setTimeoutIds_.has(timeoutId)) {\n      this.setTimeoutIds_[\"delete\"](timeoutId);\n      window$1.clearTimeout(timeoutId);\n    }\n\n    return timeoutId;\n  }\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n  ;\n\n  _proto.setInterval = function setInterval(fn, interval) {\n    fn = bind(this, fn);\n    this.clearTimersOnDispose_();\n    var intervalId = window$1.setInterval(fn, interval);\n    this.setIntervalIds_.add(intervalId);\n    return intervalId;\n  }\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n  ;\n\n  _proto.clearInterval = function clearInterval(intervalId) {\n    if (this.setIntervalIds_.has(intervalId)) {\n      this.setIntervalIds_[\"delete\"](intervalId);\n      window$1.clearInterval(intervalId);\n    }\n\n    return intervalId;\n  }\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n  ;\n\n  _proto.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.setTimeout(fn, 1000 / 60);\n    }\n\n    this.clearTimersOnDispose_(); // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n\n    var id;\n    fn = bind(this, fn);\n    id = window$1.requestAnimationFrame(function () {\n      if (_this4.rafIds_.has(id)) {\n        _this4.rafIds_[\"delete\"](id);\n      }\n\n      fn();\n    });\n    this.rafIds_.add(id);\n    return id;\n  }\n  /**\n   * Request an animation frame, but only one named animation\n   * frame will be queued. Another will never be added until\n   * the previous one finishes.\n   *\n   * @param {string} name\n   *        The name to give this requestAnimationFrame\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   */\n  ;\n\n  _proto.requestNamedAnimationFrame = function requestNamedAnimationFrame(name, fn) {\n    var _this5 = this;\n\n    if (this.namedRafs_.has(name)) {\n      return;\n    }\n\n    this.clearTimersOnDispose_();\n    fn = bind(this, fn);\n    var id = this.requestAnimationFrame(function () {\n      fn();\n\n      if (_this5.namedRafs_.has(name)) {\n        _this5.namedRafs_[\"delete\"](name);\n      }\n    });\n    this.namedRafs_.set(name, id);\n    return name;\n  }\n  /**\n   * Cancels a current named animation frame if it exists.\n   *\n   * @param {string} name\n   *        The name of the requestAnimationFrame to cancel.\n   */\n  ;\n\n  _proto.cancelNamedAnimationFrame = function cancelNamedAnimationFrame(name) {\n    if (!this.namedRafs_.has(name)) {\n      return;\n    }\n\n    this.cancelAnimationFrame(this.namedRafs_.get(name));\n    this.namedRafs_[\"delete\"](name);\n  }\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n  ;\n\n  _proto.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    // Fall back to using a timer.\n    if (!this.supportsRaf_) {\n      return this.clearTimeout(id);\n    }\n\n    if (this.rafIds_.has(id)) {\n      this.rafIds_[\"delete\"](id);\n      window$1.cancelAnimationFrame(id);\n    }\n\n    return id;\n  }\n  /**\n   * A function to setup `requestAnimationFrame`, `setTimeout`,\n   * and `setInterval`, clearing on dispose.\n   *\n   * > Previously each timer added and removed dispose listeners on it's own.\n   * For better performance it was decided to batch them all, and use `Set`s\n   * to track outstanding timer ids.\n   *\n   * @private\n   */\n  ;\n\n  _proto.clearTimersOnDispose_ = function clearTimersOnDispose_() {\n    var _this6 = this;\n\n    if (this.clearingTimersOnDispose_) {\n      return;\n    }\n\n    this.clearingTimersOnDispose_ = true;\n    this.one('dispose', function () {\n      [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(function (_ref) {\n        var idName = _ref[0],\n            cancelName = _ref[1];\n\n        // for a `Set` key will actually be the value again\n        // so forEach((val, val) =>` but for maps we want to use\n        // the key.\n        _this6[idName].forEach(function (val, key) {\n          return _this6[cancelName](key);\n        });\n      });\n      _this6.clearingTimersOnDispose_ = false;\n    });\n  }\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n  ;\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error(\"Illegal component name, \\\"\" + name + \"\\\"; must be a non-empty string.\");\n    }\n\n    var Tech = Component.getComponent('Tech'); // We need to make sure this check is only done if Tech has been registered.\n\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error(\"Illegal component, \\\"\" + name + \"\\\"; \" + reason + \".\");\n    }\n\n    name = toTitleCase$1(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players); // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n    Component.components_[toLowerCase(name)] = ComponentToRegister;\n    return ComponentToRegister;\n  }\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   */\n  ;\n\n  Component.getComponent = function getComponent(name) {\n    if (!name || !Component.components_) {\n      return;\n    }\n\n    return Component.components_[name];\n  };\n\n  return Component;\n}();\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent$1.prototype.supportsRaf_ = typeof window$1.requestAnimationFrame === 'function' && typeof window$1.cancelAnimationFrame === 'function';\nComponent$1.registerComponent('Component', Component$1);\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @typedef    {Function} TimeRangeIndex\n *\n * @param      {number} [index=0]\n *             The range number to return the time for.\n *\n * @return     {number}\n *             The time offset at the specified index.\n *\n * @deprecated The index argument must be provided.\n *             In the future, leaving it out will throw an error.\n */\n\n/**\n * An object that contains ranges of time.\n *\n * @typedef  {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this object.\n *\n * @property {module:time-ranges~TimeRangeIndex} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {module:time-ranges~TimeRangeIndex} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @private\n * @param   {string} fnName\n *          The function name to use for logging\n *\n * @param   {number} index\n *          The index to check\n *\n * @param   {number} maxIndex\n *          The maximum possible index\n *\n * @throws  {Error} if the timeRanges provided are over the maxIndex\n */\n\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error(\"Failed to execute '\" + fnName + \"' on 'TimeRanges': The index provided (\" + index + \") is non-numeric or out of bounds (0-\" + maxIndex + \").\");\n  }\n}\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @private\n * @param      {string} fnName\n *             The function name to use for logging\n *\n * @param      {string} valueIndex\n *             The property that should be used to get the time. should be\n *             'start' or 'end'\n *\n * @param      {Array} ranges\n *             An array of time ranges\n *\n * @param      {Array} [rangeIndex=0]\n *             The index to start the search at\n *\n * @return     {number}\n *             The time that offset at the specified index.\n *\n * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws     {Error} if rangeIndex is more than the length of ranges\n */\n\n\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n/**\n * Create a time range object given ranges of time.\n *\n * @private\n * @param   {Array} [ranges]\n *          An array of time ranges.\n */\n\n\nfunction createTimeRangesObj(ranges) {\n  var timeRangesObj;\n\n  if (ranges === undefined || ranges.length === 0) {\n    timeRangesObj = {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  } else {\n    timeRangesObj = {\n      length: ranges.length,\n      start: getRange.bind(null, 'start', 0, ranges),\n      end: getRange.bind(null, 'end', 1, ranges)\n    };\n  }\n\n  if (window$1.Symbol && window$1.Symbol.iterator) {\n    timeRangesObj[window$1.Symbol.iterator] = function () {\n      return (ranges || []).values();\n    };\n  }\n\n  return timeRangesObj;\n}\n/**\n * Create a `TimeRange` object which mimics an\n * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n *\n * @param {number|Array[]} start\n *        The start of a single range (a number) or an array of ranges (an\n *        array of arrays of two numbers each).\n *\n * @param {number} end\n *        The end of a single range. Cannot be used with the array form of\n *        the `start` argument.\n */\n\n\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\n\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start;\n  var end;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i); // buffered end can be bigger than duration by a very small fraction\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\n\nfunction MediaError(value) {\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\n\n\nMediaError.prototype.code = 0;\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\n\nMediaError.prototype.message = '';\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\n\nMediaError.prototype.status = null;\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_ABORTED\n * @property {string} 2 - MEDIA_ERR_NETWORK\n * @property {string} 3 - MEDIA_ERR_DECODE\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\n\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\n\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n}; // Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum; // values should be accessible on both the class and instance\n\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n} // jsdocs for instance/static members added above\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\n\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n  return ret;\n};\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\n\n\nvar textTracksToJson = function textTracksToJson(tech) {\n  var trackEls = tech.$$('track');\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n\n    return json;\n  });\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\n\n\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n  return tech.textTracks();\n};\n\nvar textTrackConverter = {\n  textTracksToJson: textTracksToJson,\n  jsonToTextTracks: jsonToTextTracks,\n  trackToJson_: trackToJson_\n};\n\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.pauseOnOpen=true]\n   *        If `true`, playback will will be paused if playing when\n   *        the modal opens, and resumed when it closes.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.handleKeyDown_ = function (e) {\n      return _this.handleKeyDown(e);\n    };\n\n    _this.close_ = function (e) {\n      return _this.close(e);\n    };\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n\n    _this.content(_this.options_.content); // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n\n\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + \"-content\"\n    }, {\n      role: 'document'\n    });\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + \"-description vjs-control-text\",\n      id: _this.el().getAttribute('aria-describedby')\n    });\n    textContent(_this.descEl_, _this.description());\n\n    _this.el_.appendChild(_this.descEl_);\n\n    _this.el_.appendChild(_this.contentEl_);\n\n    return _this;\n  }\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  var _proto = ModalDialog.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + \"_description\",\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + \" vjs-hidden \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n  ;\n\n  _proto.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  }\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n  ;\n\n  _proto.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.'); // Append a universal closeability message if the modal is closeable.\n\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  }\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n  ;\n\n  _proto.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('beforemodalopen');\n      this.opened_ = true; // Fill content if the modal has never opened before and\n      // never been filled.\n\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      } // If the player was playing, pause it and take note of its previously\n      // playing state.\n\n\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      this.on('keydown', this.handleKeyDown_); // Hide controls and note if they were enabled.\n\n      this.hadControls_ = player.controls();\n      player.controls(false);\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  }\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n  ;\n\n  _proto.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n\n    return this.opened_;\n  }\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n  ;\n\n  _proto.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n\n    var player = this.player();\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    this.off('keydown', this.handleKeyDown_);\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  }\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n  ;\n\n  _proto.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton'); // If this is being made closeable and has no close button, add one.\n\n      if (closeable && !close) {\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', {\n          controlText: 'Close Modal Dialog'\n        });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close_);\n      } // If this is being made uncloseable and has a close button, remove it.\n\n\n      if (!closeable && close) {\n        this.off(close, 'close', this.close_);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n\n    return this.closeable_;\n  }\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n  ;\n\n  _proto.fill = function fill() {\n    this.fillWith(this.content());\n  }\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n  ;\n\n  _proto.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n    /**\n      * Fired just before a `ModalDialog` is filled with content.\n      *\n      * @event ModalDialog#beforemodalfill\n      * @type {EventTarget~Event}\n      */\n\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true; // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('modalfill'); // Re-inject the re-filled content element.\n\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    } // make sure that the close button is last in the dialog DOM\n\n\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  }\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n  ;\n\n  _proto.empty = function empty() {\n    /**\n    * Fired just before a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#beforemodalempty\n    * @type {EventTarget~Event}\n    */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n    /**\n    * Fired just after a `ModalDialog` is emptied.\n    *\n    * @event ModalDialog#modalempty\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('modalempty');\n  }\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n  ;\n\n  _proto.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n\n    return this.content_;\n  }\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n      this.focus();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n  }\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Do not allow keydowns to reach out of the modal dialog.\n    event.stopPropagation();\n\n    if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n      event.preventDefault();\n      this.close();\n      return;\n    } // exit early if it isn't a tab key\n\n\n    if (!keycode.isEventKey(event, 'Tab')) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  }\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n  ;\n\n  _proto.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window$1.HTMLAnchorElement || child instanceof window$1.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window$1.HTMLInputElement || child instanceof window$1.HTMLSelectElement || child instanceof window$1.HTMLTextAreaElement || child instanceof window$1.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window$1.HTMLIFrameElement || child instanceof window$1.HTMLObjectElement || child instanceof window$1.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component$1);\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\nComponent$1.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @abstract\n   */\n  function TrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.tracks_ = [];\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'length', {\n      get: function get() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      _this.addTrack(tracks[i]);\n    }\n\n    return _this;\n  }\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = TrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.tracks_[index];\n        }\n      });\n    } // Do not add duplicate tracks\n\n\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n\n      this.trigger({\n        track: track,\n        type: 'addtrack',\n        target: this\n      });\n    }\n    /**\n     * Triggered when a track label is changed.\n     *\n     * @event TrackList#addtrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was added.\n     */\n\n\n    track.labelchange_ = function () {\n      _this2.trigger({\n        track: track,\n        type: 'labelchange',\n        target: _this2\n      });\n    };\n\n    if (isEvented(track)) {\n      track.addEventListener('labelchange', track.labelchange_);\n    }\n  }\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n  ;\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    var track;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n\n\n    this.trigger({\n      track: track,\n      type: 'removetrack',\n      target: this\n    });\n  }\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {string} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n  ;\n\n  _proto.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget$2);\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack',\n  labelchange: 'labelchange'\n}; // emulate attribute EventHandler support to allow for feature detection\n\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another audio track is enabled, disable it\n\n\n    list[i].enabled = false;\n  }\n};\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\n\nvar AudioTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    return _this;\n  }\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = AudioTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.enabledChange_ = function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('enabledchange', track.enabledChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.enabledChange_) {\n      rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n      rtrack.enabledChange_ = null;\n    }\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\n\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    } // another video track is enabled, disable it\n\n\n    list[i].selected = false;\n  }\n};\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\n\nvar VideoTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList(tracks) {\n    var _this;\n\n    if (tracks === void 0) {\n      tracks = [];\n    }\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    _this = _TrackList.call(this, tracks) || this;\n    _this.changing_ = false;\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selectedIndex', {\n      get: function get() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n\n        return -1;\n      },\n      set: function set() {}\n    });\n    return _this;\n  }\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  var _proto = VideoTrackList.prototype;\n\n  _proto.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track); // native tracks don't have this\n\n\n    if (!track.addEventListener) {\n      return;\n    }\n\n    track.selectedChange_ = function () {\n      if (_this2.changing_) {\n        return;\n      }\n\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n\n      _this2.trigger('change');\n    };\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('selectedchange', track.selectedChange_);\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack);\n\n    if (rtrack.removeEventListener && rtrack.selectedChange_) {\n      rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n      rtrack.selectedChange_ = null;\n    }\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = /*#__PURE__*/function (_TrackList) {\n  _inheritsLoose(TextTrackList, _TrackList);\n\n  function TextTrackList() {\n    return _TrackList.apply(this, arguments) || this;\n  }\n\n  var _proto = TextTrackList.prototype;\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n  _proto.addTrack = function addTrack(track) {\n    var _this = this;\n\n    _TrackList.prototype.addTrack.call(this, track);\n\n    if (!this.queueChange_) {\n      this.queueChange_ = function () {\n        return _this.queueTrigger('change');\n      };\n    }\n\n    if (!this.triggerSelectedlanguagechange) {\n      this.triggerSelectedlanguagechange_ = function () {\n        return _this.trigger('selectedlanguagechange');\n      };\n    }\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n\n\n    track.addEventListener('modechange', this.queueChange_);\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n    }\n  };\n\n  _proto.removeTrack = function removeTrack(rtrack) {\n    _TrackList.prototype.removeTrack.call(this, rtrack); // manually remove the event handlers we added\n\n\n    if (rtrack.removeEventListener) {\n      if (this.queueChange_) {\n        rtrack.removeEventListener('modechange', this.queueChange_);\n      }\n\n      if (this.selectedlanguagechange_) {\n        rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\nvar HtmlTrackElementList = /*#__PURE__*/function () {\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList(trackElements) {\n    if (trackElements === void 0) {\n      trackElements = [];\n    }\n\n    this.trackElements_ = [];\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      this.addTrackElement_(trackElements[i]);\n    }\n  }\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  var _proto = HtmlTrackElementList.prototype;\n\n  _proto.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get() {\n          return this.trackElements_[index];\n        }\n      });\n    } // Do not add duplicate elements\n\n\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  }\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n  ;\n\n  _proto.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n        break;\n      }\n    }\n\n    return trackElement_;\n  }\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n          this.trackElements_[i].track.off();\n        }\n\n        if (typeof this.trackElements_[i].off === 'function') {\n          this.trackElements_[i].off();\n        }\n\n        this.trackElements_.splice(i, 1);\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\nvar TextTrackCueList = /*#__PURE__*/function () {\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    TextTrackCueList.prototype.setCues_.call(this, cues);\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return this.length_;\n      }\n    });\n  }\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  var _proto = TextTrackCueList.prototype;\n\n  _proto.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  }\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n  ;\n\n  _proto.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\n\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\n\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\n\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      language: options.language || ''\n    };\n    var label = options.label || '';\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(_assertThisInitialized(_this), key, {\n        get: function get() {\n          return trackProps[key];\n        },\n        set: function set() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @fires Track#labelchange\n     */\n\n\n    Object.defineProperty(_assertThisInitialized(_this), 'label', {\n      get: function get() {\n        return label;\n      },\n      set: function set(newLabel) {\n        if (newLabel !== label) {\n          label = newLabel;\n          /**\n           * An event that fires when label changes on this track.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event Track#labelchange\n           * @type {EventTarget~Event}\n           */\n\n          this.trigger('labelchange');\n        }\n      }\n    });\n    return _this;\n  }\n\n  return Track;\n}(EventTarget$2);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @function\n * @param    {String} url\n *           The url to parse\n *\n * @return   {url:URLObject}\n *           An object of url details\n */\n\nvar parseUrl = function parseUrl(url) {\n  // This entire method can be replace with URL once we are able to drop IE11\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host']; // add the url to an anchor and let the browser parse the URL\n\n  var a = document.createElement('a');\n  a.href = url; // Copy the specific URL properties to a new object\n  // This is also needed for IE because the anchor loses its\n  // properties when it's removed from the dom\n\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  } // IE adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n\n\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window$1.location.protocol;\n  }\n  /* istanbul ignore if */\n\n\n  if (!details.host) {\n    details.host = window$1.location.host;\n  }\n\n  return details;\n};\n/**\n * Get absolute version of relative URL. Used to tell Flash the correct URL.\n *\n * @function\n * @param    {string} url\n *           URL to make absolute\n *\n * @return   {string}\n *           Absolute URL\n *\n * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\n\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    // add the url to an anchor and let the browser parse the URL\n    var a = document.createElement('a');\n    a.href = url;\n    url = a.href;\n  }\n\n  return url;\n};\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @function\n * @param    {string} path\n *           The fileName path like '/path/to/file.mp4'\n *\n * @return  {string}\n *           The extension in lower case or an empty string if no\n *           extension could be found.\n */\n\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @function\n * @param    {string} url\n *           The url to check.\n *\n * @param    {Object} [winLoc]\n *           the domain to check the url against, defaults to window.location\n *\n * @param    {string} [winLoc.protocol]\n *           The window location protocol defaults to window.location.protocol\n *\n * @param    {string} [winLoc.host]\n *           The window location host defaults to window.location.host\n *\n * @return   {boolean}\n *           Whether it is a cross domain request or not.\n */\n\nvar isCrossOrigin = function isCrossOrigin(url, winLoc) {\n  if (winLoc === void 0) {\n    winLoc = window$1.location;\n  }\n\n  var urlInfo = parseUrl(url); // IE8 protocol relative urls will return ':' for protocol\n\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol; // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n  return crossOrigin;\n};\n\nvar Url = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  parseUrl: parseUrl,\n  getAbsoluteURL: getAbsoluteURL,\n  getFileExtension: getFileExtension,\n  isCrossOrigin: isCrossOrigin\n});\n\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\n\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, window$1.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n\n  if (errors.length > 0) {\n    if (window$1.console && window$1.console.groupCollapsed) {\n      window$1.console.groupCollapsed(\"Text Track parsing errors for \" + track.src);\n    }\n\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n\n    if (window$1.console && window$1.console.groupEnd) {\n      window$1.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n/**\n * Load a `TextTrack` from a specified url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\n\n\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  var withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n\n  if (withCredentials) {\n    opts.withCredentials = withCredentials;\n  }\n\n  XHR(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n\n    if (typeof window$1.WebVTT !== 'function') {\n      if (track.tech_) {\n        // to prevent use before define eslint error, we define loadHandler\n        // as a let here\n        track.tech_.any(['vttjsloaded', 'vttjserror'], function (event) {\n          if (event.type === 'vttjserror') {\n            log$1.error(\"vttjs failed to load, stopping trying to process \" + track.src);\n            return;\n          }\n\n          return parseCues(responseBody, track);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\n\nvar TextTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions$3(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings[\"default\"];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n\n    _this = _Track.call(this, settings) || this;\n    _this.tech_ = settings.tech;\n    _this.cues_ = [];\n    _this.activeCues_ = [];\n    _this.preload_ = _this.tech_.preloadTextTracks !== false;\n    var cues = new TextTrackCueList(_this.cues_);\n    var activeCues = new TextTrackCueList(_this.activeCues_);\n    var changed = false;\n    _this.timeupdateHandler = bind(_assertThisInitialized(_this), function (event) {\n      if (event === void 0) {\n        event = {};\n      }\n\n      if (this.tech_.isDisposed()) {\n        return;\n      }\n\n      if (!this.tech_.isReady_) {\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n\n        return;\n      } // Accessing this.activeCues for the side-effects of updating itself\n      // due to its nature as a getter function. Do not remove or cues will\n      // stop updating!\n      // Use the setter to prevent deletion from uglify (pure_getters rule)\n\n\n      this.activeCues = this.activeCues;\n\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n\n      if (event.type !== 'timeupdate') {\n        this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n      }\n    });\n\n    var disposeHandler = function disposeHandler() {\n      _this.stopTracking();\n    };\n\n    _this.tech_.one('dispose', disposeHandler);\n\n    if (mode !== 'disabled') {\n      _this.startTracking();\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof TextTrack\n       * @member {boolean} default\n       *         If this track was set to be on or off by default. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n      \"default\": {\n        get: function get() {\n          return default_;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {string} mode\n       *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n       *         not be set if setting to an invalid mode.\n       * @instance\n       *\n       * @fires TextTrack#modechange\n       */\n      mode: {\n        get: function get() {\n          return mode;\n        },\n        set: function set(newMode) {\n          if (!TextTrackMode[newMode]) {\n            return;\n          }\n\n          if (mode === newMode) {\n            return;\n          }\n\n          mode = newMode;\n\n          if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n            // On-demand load.\n            loadTrack(this.src, this);\n          }\n\n          this.stopTracking();\n\n          if (mode !== 'disabled') {\n            this.startTracking();\n          }\n          /**\n           * An event that fires when mode changes on this track. This allows\n           * the TextTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec!\n           *\n           * @event TextTrack#modechange\n           * @type {EventTarget~Event}\n           */\n\n\n          this.trigger('modechange');\n        }\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} cues\n       *         The text track cue list for this TextTrack.\n       * @instance\n       */\n      cues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          }\n\n          return cues;\n        },\n        set: function set() {}\n      },\n\n      /**\n       * @memberof TextTrack\n       * @member {TextTrackCueList} activeCues\n       *         The list text track cues that are currently active for this TextTrack.\n       * @instance\n       */\n      activeCues: {\n        get: function get() {\n          if (!this.loaded_) {\n            return null;\n          } // nothing to do\n\n\n          if (this.cues.length === 0) {\n            return activeCues;\n          }\n\n          var ct = this.tech_.currentTime();\n          var active = [];\n\n          for (var i = 0, l = this.cues.length; i < l; i++) {\n            var cue = this.cues[i];\n\n            if (cue.startTime <= ct && cue.endTime >= ct) {\n              active.push(cue);\n            } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n              active.push(cue);\n            }\n          }\n\n          changed = false;\n\n          if (active.length !== this.activeCues_.length) {\n            changed = true;\n          } else {\n            for (var _i = 0; _i < active.length; _i++) {\n              if (this.activeCues_.indexOf(active[_i]) === -1) {\n                changed = true;\n              }\n            }\n          }\n\n          this.activeCues_ = active;\n          activeCues.setCues_(this.activeCues_);\n          return activeCues;\n        },\n        // /!\\ Keep this setter empty (see the timeupdate handler above)\n        set: function set() {}\n      }\n    });\n\n    if (settings.src) {\n      _this.src = settings.src;\n\n      if (!_this.preload_) {\n        // Tracks will load on-demand.\n        // Act like we're loaded for other purposes.\n        _this.loaded_ = true;\n      }\n\n      if (_this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n        loadTrack(_this.src, _assertThisInitialized(_this));\n      }\n    } else {\n      _this.loaded_ = true;\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrack.prototype;\n\n  _proto.startTracking = function startTracking() {\n    // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n    this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler); // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n\n    this.tech_.on('timeupdate', this.timeupdateHandler);\n  };\n\n  _proto.stopTracking = function stopTracking() {\n    if (this.rvf_) {\n      this.tech_.cancelVideoFrameCallback(this.rvf_);\n      this.rvf_ = undefined;\n    }\n\n    this.tech_.off('timeupdate', this.timeupdateHandler);\n  }\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n  ;\n\n  _proto.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window$1.vttjs && !(originalCue instanceof window$1.vttjs.VTTCue)) {\n      cue = new window$1.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      } // make sure that `id` is copied over\n\n\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  }\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n  ;\n\n  _proto.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions$3(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var enabled = false;\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'enabled', {\n      get: function get() {\n        return enabled;\n      },\n      set: function set(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n\n        enabled = newEnabled;\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('enabledchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.enabled) {\n      _this.enabled = settings.enabled;\n    }\n\n    _this.loaded_ = true;\n    return _this;\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = /*#__PURE__*/function (_Track) {\n  _inheritsLoose(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var settings = mergeOptions$3(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n    _this = _Track.call(this, settings) || this;\n    var selected = false;\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n\n    Object.defineProperty(_assertThisInitialized(_this), 'selected', {\n      get: function get() {\n        return selected;\n      },\n      set: function set(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n\n        selected = newSelected;\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n\n        this.trigger('selectedchange');\n      }\n    }); // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n\n    if (settings.selected) {\n      _this.selected = settings.selected;\n    }\n\n    return _this;\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\n\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        version of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    var readyState;\n    var track = new TextTrack(options);\n    _this.kind = track.kind;\n    _this.src = track.src;\n    _this.srclang = track.language;\n    _this.label = track.label;\n    _this[\"default\"] = track[\"default\"];\n    Object.defineProperties(_assertThisInitialized(_this), {\n      /**\n       * @memberof HTMLTrackElement\n       * @member {HTMLTrackElement~ReadyState} readyState\n       *         The current ready state of the track element.\n       * @instance\n       */\n      readyState: {\n        get: function get() {\n          return readyState;\n        }\n      },\n\n      /**\n       * @memberof HTMLTrackElement\n       * @member {TextTrack} track\n       *         The underlying TextTrack object.\n       * @instance\n       *\n       */\n      track: {\n        get: function get() {\n          return track;\n        }\n      }\n    });\n    readyState = NONE;\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      _this.trigger({\n        type: 'load',\n        target: _assertThisInitialized(_this)\n      });\n    });\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget$2);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + \"Tracks\";\n  NORMAL[type].privateName = type + \"Tracks_\";\n});\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = _extends({}, NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\n\nfunction createTrackHelper(self, kind, label, language, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tracks = self.textTracks();\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n\n  if (language) {\n    options.language = language;\n  }\n\n  options.tech = self;\n  var track = new ALL.text.TrackClass(options);\n  tracks.addTrack(track);\n  return track;\n}\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link HTML5}\n *\n * @extends Component\n */\n\n\nvar Tech = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Tech, _Component);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Tech(options, ready) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (ready === void 0) {\n      ready = function ready() {};\n    }\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n    _this = _Component.call(this, null, options, ready) || this;\n\n    _this.onDurationChange_ = function (e) {\n      return _this.onDurationChange(e);\n    };\n\n    _this.trackProgress_ = function (e) {\n      return _this.trackProgress(e);\n    };\n\n    _this.trackCurrentTime_ = function (e) {\n      return _this.trackCurrentTime(e);\n    };\n\n    _this.stopTrackingCurrentTime_ = function (e) {\n      return _this.stopTrackingCurrentTime(e);\n    };\n\n    _this.disposeSourceHandler_ = function (e) {\n      return _this.disposeSourceHandler(e);\n    };\n\n    _this.queuedHanders_ = new Set(); // keep track of whether the current source has played at all to\n    // implement a very limited played()\n\n    _this.hasStarted_ = false;\n\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    }); // Manually track progress in cases where the browser/tech doesn't report it.\n\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    } // Manually track timeupdates in cases where the browser/tech doesn't report it.\n\n\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options[\"native\" + track + \"Tracks\"] === false) {\n        _this[\"featuresNative\" + track + \"Tracks\"] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.preloadTextTracks = options.preloadTextTracks !== false;\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners(); // Turn on component tap events only if not using native controls\n\n\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n\n    return _this;\n  }\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  var _proto = Tech.prototype;\n\n  _proto.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  }\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n  ;\n\n  _proto.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange_);\n    this.manualProgress = true; // Trigger progress watching when a source begins loading\n\n    this.one('ready', this.trackProgress_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n  ;\n\n  _proto.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n    this.off('durationchange', this.onDurationChange_);\n  }\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n  ;\n\n  _proto.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  }\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n  ;\n\n  _proto.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  }\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  }\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  }\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n  ;\n\n  _proto.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  }\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n    this.on('play', this.trackCurrentTime_);\n    this.on('pause', this.stopTrackingCurrentTime_);\n  }\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n  ;\n\n  _proto.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime_);\n    this.off('pause', this.stopTrackingCurrentTime_);\n  }\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n  ;\n\n  _proto.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      }); // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  }\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n  ;\n\n  _proto.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval); // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n\n    this.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n  }\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names); // Turn off any manual progress or timeupdate tracking\n\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n  ;\n\n  _proto.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types); // clear out all tracks because we can't reuse them between techs\n\n    types.forEach(function (type) {\n      var list = _this3[type + \"Tracks\"]() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n\n        list.removeTrack(track);\n      }\n    });\n  }\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n  ;\n\n  _proto.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n      this.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.reset = function reset() {}\n  /**\n   * Get the value of `crossOrigin` from the tech.\n   *\n   * @abstract\n   *\n   * @see {Html5#crossOrigin}\n   */\n  ;\n\n  _proto.crossOrigin = function crossOrigin() {}\n  /**\n   * Set the value of `crossOrigin` on the tech.\n   *\n   * @abstract\n   *\n   * @param {string} crossOrigin the crossOrigin value\n   * @see {Html5#setCrossOrigin}\n   */\n  ;\n\n  _proto.setCrossOrigin = function setCrossOrigin() {}\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n  ;\n\n  _proto.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n\n    return this.error_;\n  }\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks whether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n  ;\n\n  _proto.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n\n    return createTimeRanges();\n  }\n  /**\n   * Start playback\n   *\n   * @abstract\n   *\n   * @see {Html5#play}\n   */\n  ;\n\n  _proto.play = function play() {}\n  /**\n   * Set whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#setScrubbing}\n   */\n  ;\n\n  _proto.setScrubbing = function setScrubbing() {}\n  /**\n   * Get whether we are scrubbing or not\n   *\n   * @abstract\n   *\n   * @see {Html5#scrubbing}\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing() {}\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n  }\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n  ;\n\n  _proto.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n      *\n      * @event Tech#audiotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n      *\n      * @event Tech#videotrackchange\n      * @type {EventTarget~Event}\n      */\n\n    /**\n      * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n      *\n      * @event Tech#texttrackchange\n      * @type {EventTarget~Event}\n      */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + \"trackchange\");\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  }\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n  ;\n\n  _proto.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window$1.WebVTT) {\n      return;\n    } // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n\n\n    if (document.body.contains(this.el())) {\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      } // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n\n\n      var script = document.createElement('script');\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      }); // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n\n      window$1.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  }\n  /**\n   * Emulate texttracks\n   *\n   */\n  ;\n\n  _proto.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  }\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions$3(options, {\n      tech: this\n    });\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var _this7 = this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    } // store HTMLTrackElement and TextTrack to remote list\n\n\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track); // remove HTMLTrackElement and TextTrack from remote list\n\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  }\n  /**\n   * Attempt to create a floating video window always on top of other windows\n   * so that users may continue consuming media while they interact with other\n   * content sites, or applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise|undefined}\n   *         A promise with a Picture-in-Picture window if the browser supports\n   *         Promises (or one was passed in as an option). It returns undefined\n   *         otherwise.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return PromiseClass.reject();\n    }\n  }\n  /**\n   * A method to check for the value of the 'disablePictureInPicture' <video> property.\n   * Defaults to true, as it should be considered disabled if the tech does not support pip\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.disablePictureInPicture = function disablePictureInPicture() {\n    return true;\n  }\n  /**\n   * A method to set or unset the 'disablePictureInPicture' <video> property.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setDisablePictureInPicture = function setDisablePictureInPicture() {}\n  /**\n   * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n   *\n   * @param {function} cb\n   * @return {number} request id\n   */\n  ;\n\n  _proto.requestVideoFrameCallback = function requestVideoFrameCallback(cb) {\n    var _this8 = this;\n\n    var id = newGUID();\n\n    if (!this.isReady_ || this.paused()) {\n      this.queuedHanders_.add(id);\n      this.one('playing', function () {\n        if (_this8.queuedHanders_.has(id)) {\n          _this8.queuedHanders_[\"delete\"](id);\n\n          cb();\n        }\n      });\n    } else {\n      this.requestNamedAnimationFrame(id, cb);\n    }\n\n    return id;\n  }\n  /**\n   * A fallback implementation of cancelVideoFrameCallback\n   *\n   * @param {number} id id of callback to be cancelled\n   */\n  ;\n\n  _proto.cancelVideoFrameCallback = function cancelVideoFrameCallback(id) {\n    if (this.queuedHanders_.has(id)) {\n      this.queuedHanders_[\"delete\"](id);\n    } else {\n      this.cancelNamedAnimationFrame(id);\n    }\n  }\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPoster = function setPoster() {}\n  /**\n   * A method to check for the presence of the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.playsinline = function playsinline() {}\n  /**\n   * A method to set or unset the 'playsinline' <video> attribute.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.setPlaysinline = function setPlaysinline() {}\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks() {}\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks() {}\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n  ;\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  }\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  }\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n  ;\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  }\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n  ;\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error(\"Tech \" + name + \" must be a Tech\");\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase$1(name);\n    Tech.techs_[name] = tech;\n    Tech.techs_[toLowerCase(name)] = tech;\n\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n\n    return tech;\n  }\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requested.\n   */\n  ;\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    name = toTitleCase$1(name);\n\n    if (window$1 && window$1.videojs && window$1.videojs[name]) {\n      log$1.warn(\"The \" + name + \" tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)\");\n      return window$1.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component$1);\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVolumeControl = true;\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\n\nTech.prototype.featuresMuteControl = true;\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresFullscreenResize = false;\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresPlaybackRate = false;\n/**\n * Boolean indicating whether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresProgressEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresSourceset = false;\n/**\n * Boolean indicating whether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresTimeupdateEvents = false;\n/**\n * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresNativeTextTracks = false;\n/**\n * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n *\n * @type {boolean}\n * @default\n */\n\nTech.prototype.featuresVideoFrameCallback = false;\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\n\nTech.withSourceHandlers = function (_Tech) {\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n\n\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n\n\n  var deferrable = ['seekable', 'seeking', 'duration'];\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source handler found for the current source.');\n      }\n    } // Dispose any existing source handler\n\n\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler_);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.one('dispose', this.disposeSourceHandler_);\n  };\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n\n\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    } // always clean up auto-text tracks\n\n\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n}; // The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\n\n\nComponent$1.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\n\nTech.defaultTechOrder_ = [];\n\n/**\n * @file middleware.js\n * @module middleware\n */\nvar middlewares = {};\nvar middlewareInstances = {};\nvar TERMINATOR = {};\n/**\n * A middleware object is a plain JavaScript object that has methods that\n * match the {@link Tech} methods found in the lists of allowed\n * {@link module:middleware.allowedGetters|getters},\n * {@link module:middleware.allowedSetters|setters}, and\n * {@link module:middleware.allowedMediators|mediators}.\n *\n * @typedef {Object} MiddlewareObject\n */\n\n/**\n * A middleware factory function that should return a\n * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n *\n * This factory will be called for each player when needed, with the player\n * passed in as an argument.\n *\n * @callback MiddlewareFactory\n * @param {Player} player\n *        A Video.js player.\n */\n\n/**\n * Define a middleware that the player should use by way of a factory function\n * that returns a middleware object.\n *\n * @param  {string} type\n *         The MIME type to match or `\"*\"` for all MIME types.\n *\n * @param  {MiddlewareFactory} middleware\n *         A middleware factory function that will be executed for\n *         matching types.\n */\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n/**\n * Asynchronously sets a source using middleware by recursing through any\n * matching middlewares and calling `setSource` on each, passing along the\n * previous returned value each time.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n *\n * @param  {Tech~SourceObject} src\n *         A source object.\n *\n * @param  {Function}\n *         The next middleware to run.\n */\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n/**\n * When the tech is set, passes the tech to each middleware's `setTech` method.\n *\n * @param {Object[]} middleware\n *        An array of middleware instances.\n *\n * @param {Tech} tech\n *        A Video.js tech.\n */\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @return {Mixed}\n *         The final value from the tech after middleware has intercepted it.\n */\n\nfunction get(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middleware from left to right to the tech.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`.\n */\n\nfunction set(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n/**\n * Takes the argument given to the player and calls the `call` version of the\n * method on each middleware from left to right.\n *\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n *\n * @param  {Object[]} middleware\n *         An array of middleware instances.\n *\n * @param  {Tech} tech\n *         The current tech.\n *\n * @param  {string} method\n *         A method name.\n *\n * @param  {Mixed} arg\n *         The value to set on the tech.\n *\n * @return {Mixed}\n *         The return value of the `method` of the `tech`, regardless of the\n *         return values of middlewares.\n */\n\nfunction mediate(middleware, tech, method, arg) {\n  if (arg === void 0) {\n    arg = null;\n  }\n\n  var callMethod = 'call' + toTitleCase$1(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR; // deprecated. The `null` return value should instead return TERMINATOR to\n  // prevent confusion if a techs method actually returns null.\n\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n  executeRight(middleware, method, returnValue, terminated);\n  return returnValue;\n}\n/**\n * Enumeration of allowed getters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  muted: 1,\n  played: 1,\n  paused: 1,\n  seekable: 1,\n  volume: 1,\n  ended: 1\n};\n/**\n * Enumeration of allowed setters where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedSetters = {\n  setCurrentTime: 1,\n  setMuted: 1,\n  setVolume: 1\n};\n/**\n * Enumeration of allowed mediators where the keys are method names.\n *\n * @type {Object}\n */\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n/**\n * Clear the middleware cache for a player.\n *\n * @param  {Player} player\n *         A {@link Player} instance.\n */\n\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n *\n * @private\n */\n\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper(src, middleware, next, player, acc, lastRun) {\n  if (src === void 0) {\n    src = {};\n  }\n\n  if (middleware === void 0) {\n    middleware = [];\n  }\n\n  if (acc === void 0) {\n    acc = [];\n  }\n\n  if (lastRun === void 0) {\n    lastRun = false;\n  }\n\n  var _middleware = middleware,\n      mwFactory = _middleware[0],\n      mwrest = _middleware.slice(1); // if mwFactory is a string, then we're at a fork in the road\n\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun); // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory); // if setSource isn't present, implicitly select this middleware\n\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      } // we've succeeded, now we need to go deeper\n\n\n      acc.push(mw); // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n * @typedef Mimetypes~Kind\n * @enum\n */\n\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  m4a: 'audio/mp4',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  caf: 'audio/x-caf',\n  flac: 'audio/flac',\n  oga: 'audio/ogg',\n  wav: 'audio/wav',\n  m3u8: 'application/x-mpegURL',\n  mpd: 'application/dash+xml',\n  jpg: 'image/jpeg',\n  jpeg: 'image/jpeg',\n  gif: 'image/gif',\n  png: 'image/png',\n  svg: 'image/svg+xml',\n  webp: 'image/webp'\n};\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\n\nvar getMimetype = function getMimetype(src) {\n  if (src === void 0) {\n    src = '';\n  }\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n  return mimetype || '';\n};\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\n\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  } // 1. check for the type in the `source` cache\n\n\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  } // 2. see if we have this source in our `currentSources` cache\n\n\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  } // 3. look for the src url in source elements and use the type there\n\n\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  } // 4. finally fallback to our list of mime types based on src url extension\n\n\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\n\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({\n      src: src\n    })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\n\n\nfunction fixSource(src) {\n  if (!src.type) {\n    var mimetype = getMimetype(src.src);\n\n    if (mimetype) {\n      src.type = mimetype;\n    }\n  }\n\n  return src;\n}\n\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    var _this;\n\n    // MediaLoader has no element\n    var options_ = mergeOptions$3({\n      createEl: false\n    }, options);\n    _this = _Component.call(this, player, options_, ready) || this; // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase$1(j[i]);\n        var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n\n        if (!techName) {\n          tech = Component$1.getComponent(techName);\n        } // Check if the browser supports this technology\n\n\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (e.g. HTML5) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component$1);\n\nComponent$1.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * Component which is clickable or keyboard actionable, but is not a\n * native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of component options.\n   *\n   * @param  {function} [options.clickHandler]\n   *         The function to call when the button is clicked / activated\n   *\n   * @param  {string} [options.controlText]\n   *         The text to set on the button\n   *\n   * @param  {string} [options.className]\n   *         A class or space separated list of classes to add the component\n   *\n   */\n  function ClickableComponent(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (_this.options_.controlText) {\n      _this.controlText(_this.options_.controlText);\n    }\n\n    _this.handleMouseOver_ = function (e) {\n      return _this.handleMouseOver(e);\n    };\n\n    _this.handleMouseOut_ = function (e) {\n      return _this.handleMouseOut(e);\n    };\n\n    _this.handleClick_ = function (e) {\n      return _this.handleClick(e);\n    };\n\n    _this.handleKeyDown_ = function (e) {\n      return _this.handleKeyDown(e);\n    };\n\n    _this.emitTapEvents();\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `ClickableComponent`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = ClickableComponent.prototype;\n\n  _proto.createEl = function createEl$1(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    props = assign({\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error(\"Creating a ClickableComponent with an HTML element of \" + tag + \" is not supported; use a Button instead.\");\n    } // Add ARIA attributes for clickable element which is not a native HTML button\n\n\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n    this.tabIndex_ = props.tabIndex;\n    var el = createEl(tag, props, attributes);\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    // remove controlTextEl_ on dispose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Create a control text element on this `ClickableComponent`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n  ;\n\n  _proto.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n    return this.controlTextEl_;\n  }\n  /**\n   * Get or set the localize text to use for the controls on the `ClickableComponent`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.el();\n    }\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n\n    if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-control vjs-button \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enable this `ClickableComponent`\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n\n      this.on(['tap', 'click'], this.handleClick_);\n      this.on('keydown', this.handleKeyDown_);\n    }\n  }\n  /**\n   * Disable this `ClickableComponent`\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n\n    this.off('mouseover', this.handleMouseOver_);\n    this.off('mouseout', this.handleMouseOut_);\n    this.off(['tap', 'click'], this.handleClick_);\n    this.off('keydown', this.handleKeyDown_);\n  }\n  /**\n   * Handles language change in ClickableComponent for the player in components\n   *\n   *\n   */\n  ;\n\n  _proto.handleLanguagechange = function handleLanguagechange() {\n    this.controlText(this.controlText_);\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `click` or `tap` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `tap` or `click` event that caused this function to be called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.options_.clickHandler) {\n      this.options_.clickHandler.call(this, arguments);\n    }\n  }\n  /**\n   * Event handler that is called when a `ClickableComponent` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Space or Enter, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Support Space or Enter key operation to fire a click event. Also,\n    // prevent the event from propagating through the DOM and triggering\n    // Player hotkeys.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return ClickableComponent;\n}(Component$1);\n\nComponent$1.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n\n    _this.update();\n\n    _this.update_ = function (e) {\n      return _this.update(e);\n    };\n\n    player.on('posterchange', _this.update_);\n    return _this;\n  }\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  var _proto = PosterImage.prototype;\n\n  _proto.dispose = function dispose() {\n    this.player().off('posterchange', this.update_);\n\n    _ClickableComponent.prototype.dispose.call(this);\n  }\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n    return el;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var url = this.player().poster();\n    this.setSrc(url); // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  }\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n  ;\n\n  _proto.setSrc = function setSrc(url) {\n    var backgroundImage = ''; // Any falsy value should stay as an empty string, otherwise\n    // this will throw an extra error\n\n    if (url) {\n      backgroundImage = \"url(\\\"\" + url + \"\\\")\";\n    }\n\n    this.el_.style.backgroundImage = backgroundImage;\n  }\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n\n    if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n    // calling .focus() on the video element causes the video to go black,\n    // so we avoid it in that specific case\n    !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n      this.player_.tech(true).focus();\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent$1.registerComponent('PosterImage', PosterImage);\n\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\n\nfunction constructColor(color, opacity) {\n  var hex;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\n\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n    // Satisfies linter.\n    return;\n  }\n}\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\n\nvar TextTrackDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    var _this;\n\n    _this = _Component.call(this, player, options, ready) || this;\n\n    var updateDisplayHandler = function updateDisplayHandler(e) {\n      return _this.updateDisplay(e);\n    };\n\n    player.on('loadstart', function (e) {\n      return _this.toggleDisplay(e);\n    });\n    player.on('texttrackchange', updateDisplayHandler);\n    player.on('loadedmetadata', function (e) {\n      return _this.preselectTrack(e);\n    }); // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n\n    player.ready(bind(_assertThisInitialized(_this), function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', updateDisplayHandler);\n      player.on('playerresize', updateDisplayHandler);\n      window$1.addEventListener('orientationchange', updateDisplayHandler);\n      player.on('dispose', function () {\n        return window$1.removeEventListener('orientationchange', updateDisplayHandler);\n      });\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  var _proto = TextTrackDisplay.prototype;\n\n  _proto.preselectTrack = function preselectTrack() {\n    var modes = {\n      captions: 1,\n      subtitles: 1\n    };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc;\n    var firstCaptions;\n    var preferredTrack;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track; // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        } // clear everything if offTextTrackMenuItem was clicked\n\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track[\"default\"]) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    } // The preferredTrack matches the user preference and takes\n    // precedence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n\n\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  }\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  }\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'translate': 'yes',\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  }\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n  ;\n\n  _proto.clearDisplay = function clearDisplay() {\n    if (typeof window$1.WebVTT === 'function') {\n      window$1.WebVTT.processCues(window$1, [], this.el_);\n    }\n  }\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n    var allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n    this.clearDisplay();\n\n    if (allowMultipleShowingTracks) {\n      var showingTracks = [];\n\n      for (var _i = 0; _i < tracks.length; ++_i) {\n        var track = tracks[_i];\n\n        if (track.mode !== 'showing') {\n          continue;\n        }\n\n        showingTracks.push(track);\n      }\n\n      this.updateForTrack(showingTracks);\n      return;\n    } //  Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var _track = tracks[i];\n\n      if (_track.mode === 'showing') {\n        if (_track.kind === 'descriptions') {\n          descriptionsTrack = _track;\n        } else {\n          captionsSubtitlesTrack = _track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n\n      this.updateForTrack(descriptionsTrack);\n    }\n  }\n  /**\n   * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n   *\n   * @param {TextTrack} track\n   *        Text track object containing active cues to style.\n   */\n  ;\n\n  _proto.updateDisplayState = function updateDisplayState(track) {\n    var overrides = this.player_.textTrackSettings.getValues();\n    var cues = track.activeCues;\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = \"2px 2px 3px \" + darkGray + \", 2px 2px 4px \" + darkGray + \", 2px 2px 5px \" + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + darkGray + \", 2px 2px \" + darkGray + \", 3px 3px \" + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = \"1px 1px \" + lightGray + \", 0 1px \" + lightGray + \", -1px -1px \" + darkGray + \", 0 -1px \" + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = \"0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray + \", 0 0 4px \" + darkGray;\n        }\n      }\n\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window$1.parseFloat(cueDiv.style.fontSize);\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n      }\n\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  }\n  /**\n   * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack|TextTrack[]} tracks\n   *        Text track object or text track array to be added to the list.\n   */\n  ;\n\n  _proto.updateForTrack = function updateForTrack(tracks) {\n    if (!Array.isArray(tracks)) {\n      tracks = [tracks];\n    }\n\n    if (typeof window$1.WebVTT !== 'function' || tracks.every(function (track) {\n      return !track.activeCues;\n    })) {\n      return;\n    }\n\n    var cues = []; // push all active track cues\n\n    for (var i = 0; i < tracks.length; ++i) {\n      var track = tracks[i];\n\n      for (var j = 0; j < track.activeCues.length; ++j) {\n        cues.push(track.activeCues[j]);\n      }\n    } // removes all cues before it processes new ones\n\n\n    window$1.WebVTT.processCues(window$1, cues, this.el_); // add unique class to each language text track & add settings styling if necessary\n\n    for (var _i2 = 0; _i2 < tracks.length; ++_i2) {\n      var _track2 = tracks[_i2];\n\n      for (var _j = 0; _j < _track2.activeCues.length; ++_j) {\n        var cueEl = _track2.activeCues[_j].displayState;\n        addClass(cueEl, 'vjs-text-track-cue');\n        addClass(cueEl, 'vjs-text-track-cue-' + (_track2.language ? _track2.language : _i2));\n\n        if (_track2.language) {\n          setAttribute(cueEl, 'lang', _track2.language);\n        }\n      }\n\n      if (this.player_.textTrackSettings) {\n        this.updateDisplayState(_track2);\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component$1);\n\nComponent$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = LoadingSpinner.prototype;\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  _proto.createEl = function createEl$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component$1);\n\nComponent$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(Button, _ClickableComponent);\n\n  function Button() {\n    return _ClickableComponent.apply(this, arguments) || this;\n  }\n\n  var _proto = Button.prototype;\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  _proto.createEl = function createEl$1(tag, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    tag = 'button';\n    props = assign({\n      className: this.buildCSSClass()\n    }, props); // Add attributes for button element\n\n    attributes = assign({\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = createEl(tag, props, attributes);\n\n    el.appendChild(createEl('span', {\n      className: 'vjs-icon-placeholder'\n    }, {\n      'aria-hidden': true\n    }));\n    this.createControlTextEl(el);\n    return el;\n  }\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n  ;\n\n  _proto.addChild = function addChild(child, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var className = this.constructor.name;\n    log$1.warn(\"Adding an actionable (user controllable) child to a Button (\" + className + \") is not supported; use a ClickableComponent instead.\"); // Avoid the error message generated by ClickableComponent's addChild method\n\n    return Component$1.prototype.addChild.call(this, child, options);\n  }\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n\n    this.el_.removeAttribute('disabled');\n  }\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n\n    this.el_.setAttribute('disabled', 'disabled');\n  }\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Ignore Space or Enter key operation, which is handled by the browser for\n    // a button - though not for its super class, ClickableComponent. Also,\n    // prevent the event from propagating through the DOM and triggering Player\n    // hotkeys. We do not preventDefault here because we _want_ the browser to\n    // handle it.\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.stopPropagation();\n      return;\n    } // Pass keypress handling up for unsupported keys\n\n\n    _ClickableComponent.prototype.handleKeyDown.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent$1.registerComponent('Button', Button);\n\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', function (e) {\n      return _this.handleMouseDown(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  var _proto = BigPlayButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  }\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play(); // exit early if clicked via the mouse\n\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      var sourceIsEncrypted = this.player_.usingPlugin('eme') && this.player_.eme.sessions && this.player_.eme.sessions.length > 0;\n      silencePromise(playPromise);\n\n      if (this.player_.tech(true) && // We've observed a bug in IE and Edge when playing back DRM content where\n      // calling .focus() on the video element causes the video to go black,\n      // so we avoid it in that specific case\n      !((IE_VERSION || IS_EDGE) && sourceIsEncrypted)) {\n        this.player_.tech(true).focus();\n      }\n\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.tech(true).focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyDown.call(this, event);\n  };\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\nComponent$1.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(CloseButton, _Button);\n\n  /**\n  * Creates an instance of the this class.\n  *\n  * @param  {Player} player\n  *         The `Player` that this class should be attached to.\n  *\n  * @param  {Object} [options]\n  *         The key/value store of player options.\n  */\n  function CloseButton(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n\n    return _this;\n  }\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n\n\n  var _proto = CloseButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-close-button \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when\n   * this will be triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({\n      type: 'close',\n      bubbles: false\n    });\n  }\n  /**\n   * Event handler that is called when a `CloseButton` receives a\n   * `keydown` event.\n   *\n   * By default, if the key is Esc, it will trigger a `click` event.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Esc button will trigger `click` event\n    if (keycode.isEventKey(event, 'Esc')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.trigger('click');\n    } else {\n      // Pass keypress handling up for unsupported keys\n      _Button.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent$1.registerComponent('CloseButton', CloseButton);\n\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Button.call(this, player, options) || this; // show or hide replay icon\n\n    options.replay = options.replay === undefined || options.replay;\n\n    _this.on(player, 'play', function (e) {\n      return _this.handlePlay(e);\n    });\n\n    _this.on(player, 'pause', function (e) {\n      return _this.handlePause(e);\n    });\n\n    if (options.replay) {\n      _this.on(player, 'ended', function (e) {\n        return _this.handleEnded(e);\n      });\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PlayToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-play-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  }\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // change the button text to \"Pause\"\n\n    this.controlText('Pause');\n  }\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n  ;\n\n  _proto.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused'); // change the button text to \"Play\"\n\n    this.controlText('Play');\n  }\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n  ;\n\n  _proto.handleEnded = function handleEnded(event) {\n    var _this2 = this;\n\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended'); // change the button text to \"Replay\"\n\n    this.controlText('Replay'); // on the next seek remove the replay button\n\n    this.one(this.player_, 'seeked', function (e) {\n      return _this2.handleSeeked(e);\n    });\n  };\n\n  return PlayToggle;\n}(Button);\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\nComponent$1.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n * seconds) will force a number of leading zeros to cover the length of the\n * guide.\n *\n * @private\n * @param  {number} seconds\n *         Number of seconds to be turned into a string\n *\n * @param  {number} guide\n *         Number (in seconds) to model the string after\n *\n * @return {string}\n *         Time formatted as H:MM:SS or M:SS\n */\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600); // handle invalid times\n\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  } // Check if we need to show hours\n\n\n  h = h > 0 || gh > 0 ? h + ':' : ''; // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':'; // Check if leading zero is need for seconds\n\n  s = s < 10 ? '0' + s : s;\n  return h + m + s;\n}; // Internal pointer to the current implementation.\n\n\nvar implementation = defaultImplementation;\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime\n *        implementation. Will receive the current time in seconds and the\n *        guide (in seconds) as arguments.\n */\n\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n/**\n * Resets formatTime to the default implementation.\n */\n\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n/**\n * Delegates to either the default time formatting function or a custom\n * function supplied via `setFormatTime`.\n *\n * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n * guide (in seconds) will force a number of leading zeros to cover the\n * length of the guide.\n *\n * @static\n * @example  formatTime(125, 600) === \"02:05\"\n * @param    {number} seconds\n *           Number of seconds to be turned into a string\n *\n * @param    {number} guide\n *           Number (in seconds) to model the string after\n *\n * @return   {string}\n *           Time formatted as H:MM:SS or M:SS\n */\n\nfunction formatTime(seconds, guide) {\n  if (guide === void 0) {\n    guide = seconds;\n  }\n\n  return implementation(seconds, guide);\n}\n\n/**\n * Displays time information about the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.on(player, ['timeupdate', 'ended'], function (e) {\n      return _this.updateContent(e);\n    });\n\n    _this.updateTextNode_();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var className = this.buildCSSClass();\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + \" vjs-time-control vjs-control\"\n    });\n\n    var span = createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize(this.labelText_) + \"\\xA0\"\n    }, {\n      role: 'presentation'\n    });\n    el.appendChild(span);\n    this.contentEl_ = createEl('span', {\n      className: className + \"-display\"\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off',\n      // span elements have no implicit role, but some screen readers (notably VoiceOver)\n      // treat them as a break between items in the DOM when using arrow keys\n      // (or left-to-right swipes on iOS) to read contents of a page. Using\n      // role='presentation' causes VoiceOver to NOT treat this span as a break.\n      'role': 'presentation'\n    });\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Updates the time display text node with a new time\n   *\n   * @param {number} [time=0] the time to update to\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateTextNode_ = function updateTextNode_(time) {\n    var _this2 = this;\n\n    if (time === void 0) {\n      time = 0;\n    }\n\n    time = formatTime(time);\n\n    if (this.formattedTime_ === time) {\n      return;\n    }\n\n    this.formattedTime_ = time;\n    this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', function () {\n      if (!_this2.contentEl_) {\n        return;\n      }\n\n      var oldNode = _this2.textNode_;\n\n      if (oldNode && _this2.contentEl_.firstChild !== oldNode) {\n        oldNode = null;\n        log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n      }\n\n      _this2.textNode_ = document.createTextNode(_this2.formattedTime_);\n\n      if (!_this2.textNode_) {\n        return;\n      }\n\n      if (oldNode) {\n        _this2.contentEl_.replaceChild(_this2.textNode_, oldNode);\n      } else {\n        _this2.contentEl_.appendChild(_this2.textNode_);\n      }\n    });\n  }\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component$1);\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nTimeDisplay.prototype.controlText_ = 'Time';\nComponent$1.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(CurrentTimeDisplay, _TimeDisplay);\n\n  function CurrentTimeDisplay() {\n    return _TimeDisplay.apply(this, arguments) || this;\n  }\n\n  var _proto = CurrentTimeDisplay.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  }\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time;\n\n    if (this.player_.ended()) {\n      time = this.player_.duration();\n    } else {\n      time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\nComponent$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    var updateContent = function updateContent(e) {\n      return _this.updateContent(e);\n    }; // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n\n\n    _this.on(player, 'durationchange', updateContent); // Listen to loadstart because the player duration is reset when a new media element is loaded,\n    // but the durationchange on the user agent will not fire.\n    // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n\n    _this.on(player, 'loadstart', updateContent); // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n\n\n    _this.on(player, 'loadedmetadata', updateContent);\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = DurationDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  }\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n    this.updateTextNode_(duration);\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nDurationDisplay.prototype.controlText_ = 'Duration';\nComponent$1.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeDivider, _Component);\n\n  function TimeDivider() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = TimeDivider.prototype;\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider'\n    }, {\n      // this element and its contents can be hidden from assistive techs since\n      // it is made extraneous by the announcement of the control text\n      // for the current time and duration displays\n      'aria-hidden': true\n    });\n\n    var div = _Component.prototype.createEl.call(this, 'div');\n\n    var span = _Component.prototype.createEl.call(this, 'span', {\n      textContent: '/'\n    });\n\n    div.appendChild(span);\n    el.appendChild(div);\n    return el;\n  };\n\n  return TimeDivider;\n}(Component$1);\n\nComponent$1.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = /*#__PURE__*/function (_TimeDisplay) {\n  _inheritsLoose(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    var _this;\n\n    _this = _TimeDisplay.call(this, player, options) || this;\n\n    _this.on(player, 'durationchange', function (e) {\n      return _this.updateContent(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = RemainingTimeDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  }\n  /**\n   * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var el = _TimeDisplay.prototype.createEl.call(this);\n\n    if (this.options_.displayNegative !== false) {\n      el.insertBefore(createEl('span', {}, {\n        'aria-hidden': true\n      }, '-'), this.contentEl_);\n    }\n\n    return el;\n  }\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateContent = function updateContent(event) {\n    if (typeof this.player_.duration() !== 'number') {\n      return;\n    }\n\n    var time; // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n\n    if (this.player_.ended()) {\n      time = 0;\n    } else if (this.player_.remainingTimeDisplay) {\n      time = this.player_.remainingTimeDisplay();\n    } else {\n      time = this.player_.remainingTime();\n    }\n\n    this.updateTextNode_(time);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\n\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\nComponent$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.updateShowing();\n\n    _this.on(_this.player(), 'durationchange', function (e) {\n      return _this.updateShowing(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LiveDisplay.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display'\n    }, {\n      'aria-live': 'off'\n    });\n    this.contentEl_.appendChild(createEl('span', {\n      className: 'vjs-control-text',\n      textContent: this.localize('Stream Type') + \"\\xA0\"\n    }));\n    this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n  ;\n\n  _proto.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component$1);\n\nComponent$1.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar SeekToLive = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(SeekToLive, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekToLive(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.updateLiveEdgeStatus();\n\n    if (_this.player_.liveTracker) {\n      _this.updateLiveEdgeStatusHandler_ = function (e) {\n        return _this.updateLiveEdgeStatus(e);\n      };\n\n      _this.on(_this.player_.liveTracker, 'liveedgechange', _this.updateLiveEdgeStatusHandler_);\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = SeekToLive.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Button.prototype.createEl.call(this, 'button', {\n      className: 'vjs-seek-to-live-control vjs-control'\n    });\n\n    this.textEl_ = createEl('span', {\n      className: 'vjs-seek-to-live-text',\n      textContent: this.localize('LIVE')\n    }, {\n      'aria-hidden': 'true'\n    });\n    el.appendChild(this.textEl_);\n    return el;\n  }\n  /**\n   * Update the state of this button if we are at the live edge\n   * or not\n   */\n  ;\n\n  _proto.updateLiveEdgeStatus = function updateLiveEdgeStatus() {\n    // default to live edge\n    if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n      this.setAttribute('aria-disabled', true);\n      this.addClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently playing live');\n    } else {\n      this.setAttribute('aria-disabled', false);\n      this.removeClass('vjs-at-live-edge');\n      this.controlText('Seek to live, currently behind live');\n    }\n  }\n  /**\n   * On click bring us as near to the live point as possible.\n   * This requires that we wait for the next `live-seekable-change`\n   * event which will happen every segment length seconds.\n   */\n  ;\n\n  _proto.handleClick = function handleClick() {\n    this.player_.liveTracker.seekToLiveEdge();\n  }\n  /**\n   * Dispose of the element and stop tracking\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n    }\n\n    this.textEl_ = null;\n\n    _Button.prototype.dispose.call(this);\n  };\n\n  return SeekToLive;\n}(Button);\n\nSeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\nComponent$1.registerComponent('SeekToLive', SeekToLive);\n\n/**\n * Keep a number between a min and a max value\n *\n * @param {number} number\n *        The number to clamp\n *\n * @param {number} min\n *        The minimum value\n * @param {number} max\n *        The maximum value\n *\n * @return {number}\n *         the clamped number\n */\nvar clamp = function clamp(number, min, max) {\n  number = Number(number);\n  return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n};\n\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Slider, _Component);\n\n  /**\n  * Create an instance of this class\n  *\n  * @param {Player} player\n  *        The `Player` that this class should be attached to.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  */\n  function Slider(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    _this.handleMouseDown_ = function (e) {\n      return _this.handleMouseDown(e);\n    };\n\n    _this.handleMouseUp_ = function (e) {\n      return _this.handleMouseUp(e);\n    };\n\n    _this.handleKeyDown_ = function (e) {\n      return _this.handleKeyDown(e);\n    };\n\n    _this.handleClick_ = function (e) {\n      return _this.handleClick(e);\n    };\n\n    _this.handleMouseMove_ = function (e) {\n      return _this.handleMouseMove(e);\n    };\n\n    _this.update_ = function (e) {\n      return _this.update(e);\n    }; // Set property names to bar to match with the child Slider class is looking for\n\n\n    _this.bar = _this.getChild(_this.options_.barName); // Set a horizontal or vertical class on the slider depending on the slider type\n\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  var _proto = Slider.prototype;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n  ;\n\n  _proto.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown_);\n    this.on('touchstart', this.handleMouseDown_);\n    this.on('keydown', this.handleKeyDown_);\n    this.on('click', this.handleClick_); // TODO: deprecated, controlsvisible does not seem to be fired\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n    this.enabled_ = true;\n  }\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n  ;\n\n  _proto.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n\n    var doc = this.bar.el_.ownerDocument;\n    this.off('mousedown', this.handleMouseDown_);\n    this.off('touchstart', this.handleMouseDown_);\n    this.off('keydown', this.handleKeyDown_);\n    this.off('click', this.handleClick_);\n    this.off(this.player_, 'controlsvisible', this.update_);\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.removeAttribute('tabindex');\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n\n    this.enabled_ = false;\n  }\n  /**\n   * Create the `Slider`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl(type, props, attributes) {\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    } // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n\n\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n\n    blockTextSelection();\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('slideractive');\n    this.on(doc, 'mousemove', this.handleMouseMove_);\n    this.on(doc, 'mouseup', this.handleMouseUp_);\n    this.on(doc, 'touchmove', this.handleMouseMove_);\n    this.on(doc, 'touchend', this.handleMouseUp_);\n    this.handleMouseMove(event, true);\n  }\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {}\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n    unblockTextSelection();\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('sliderinactive');\n    this.off(doc, 'mousemove', this.handleMouseMove_);\n    this.off(doc, 'mouseup', this.handleMouseUp_);\n    this.off(doc, 'touchmove', this.handleMouseMove_);\n    this.off(doc, 'touchend', this.handleMouseUp_);\n    this.update();\n  }\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @return {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n  ;\n\n  _proto.update = function update() {\n    var _this2 = this;\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    // If there's no bar...\n    if (!this.el_ || !this.bar) {\n      return;\n    } // clamp progress between 0 and 1\n    // and only round to four decimal places, as we round to two below\n\n\n    var progress = this.getProgress();\n\n    if (progress === this.progress_) {\n      return progress;\n    }\n\n    this.progress_ = progress;\n    this.requestNamedAnimationFrame('Slider#update', function () {\n      // Set the new bar width or height\n      var sizeKey = _this2.vertical() ? 'height' : 'width'; // Convert to a percentage for css value\n\n      _this2.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n    });\n    return progress;\n  }\n  /**\n   * Get the percentage of the bar that should be filled\n   * but clamped and rounded.\n   *\n   * @return {number}\n   *         percentage filled that the slider is\n   */\n  ;\n\n  _proto.getProgress = function getProgress() {\n    return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n  }\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - position.x for vertical `Slider`s\n   *         - position.y for horizontal `Slider`s\n   */\n  ;\n\n  _proto.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n\n    return position.x;\n  }\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward();\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Component.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    event.stopPropagation();\n    event.preventDefault();\n  }\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n  ;\n\n  _proto.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component$1);\n\nComponent$1.registerComponent('Slider', Slider);\n\nvar percentify = function percentify(time, end) {\n  return clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n};\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\n\nvar LoadProgressBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.partEls_ = [];\n\n    _this.on(player, 'progress', function (e) {\n      return _this.update(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = LoadProgressBar.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress'\n    });\n\n    var wrapper = createEl('span', {\n      className: 'vjs-control-text'\n    });\n    var loadedText = createEl('span', {\n      textContent: this.localize('Loaded')\n    });\n    var separator = document.createTextNode(': ');\n    this.percentageEl_ = createEl('span', {\n      className: 'vjs-control-text-loaded-percentage',\n      textContent: '0%'\n    });\n    el.appendChild(wrapper);\n    wrapper.appendChild(loadedText);\n    wrapper.appendChild(separator);\n    wrapper.appendChild(this.percentageEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.partEls_ = null;\n    this.percentageEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this2 = this;\n\n    this.requestNamedAnimationFrame('LoadProgressBar#update', function () {\n      var liveTracker = _this2.player_.liveTracker;\n\n      var buffered = _this2.player_.buffered();\n\n      var duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : _this2.player_.duration();\n\n      var bufferedEnd = _this2.player_.bufferedEnd();\n\n      var children = _this2.partEls_;\n      var percent = percentify(bufferedEnd, duration);\n\n      if (_this2.percent_ !== percent) {\n        // update the width of the progress bar\n        _this2.el_.style.width = percent; // update the control-text\n\n        textContent(_this2.percentageEl_, percent);\n        _this2.percent_ = percent;\n      } // add child elements to represent the individual buffered time ranges\n\n\n      for (var i = 0; i < buffered.length; i++) {\n        var start = buffered.start(i);\n        var end = buffered.end(i);\n        var part = children[i];\n\n        if (!part) {\n          part = _this2.el_.appendChild(createEl());\n          children[i] = part;\n        } //  only update if changed\n\n\n        if (part.dataset.start === start && part.dataset.end === end) {\n          continue;\n        }\n\n        part.dataset.start = start;\n        part.dataset.end = end; // set the percent based on the width of the progress bar (bufferedEnd)\n\n        part.style.left = percentify(start, bufferedEnd);\n        part.style.width = percentify(end - start, bufferedEnd);\n      } // remove unused buffered range elements\n\n\n      for (var _i = children.length; _i > buffered.length; _i--) {\n        _this2.el_.removeChild(children[_i - 1]);\n      }\n\n      children.length = buffered.length;\n    });\n  };\n\n  return LoadProgressBar;\n}(Component$1);\n\nComponent$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(TimeTooltip, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeTooltip(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = TimeTooltip.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = findPosition(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint; // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n\n    if (!playerRect || !tooltipRect) {\n      return;\n    } // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n\n\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx; // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right); // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n\n    var pullTooltipBy = tooltipRect.width / 2; // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    } // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n\n\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    } // prevent small width fluctuations within 0.4px from\n    // changing the value below.\n    // This really helps for live to prevent the play\n    // progress time tooltip from jittering\n\n\n    pullTooltipBy = Math.round(pullTooltipBy);\n    this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    this.write(content);\n  }\n  /**\n   * Write the time to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted time for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   *\n   * @param {number} time\n   *        The time to update the tooltip to, not used during live playback\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateTime = function updateTime(seekBarRect, seekBarPoint, time, cb) {\n    var _this2 = this;\n\n    this.requestNamedAnimationFrame('TimeTooltip#updateTime', function () {\n      var content;\n\n      var duration = _this2.player_.duration();\n\n      if (_this2.player_.liveTracker && _this2.player_.liveTracker.isLive()) {\n        var liveWindow = _this2.player_.liveTracker.liveWindow();\n\n        var secondsBehind = liveWindow - seekBarPoint * liveWindow;\n        content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n      } else {\n        content = formatTime(time, duration);\n      }\n\n      _this2.update(seekBarRect, seekBarPoint, content);\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return TimeTooltip;\n}(Component$1);\n\nComponent$1.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(PlayProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayProgressBar(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlayProgressBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var timeTooltip = this.getChild('timeTooltip');\n\n    if (!timeTooltip) {\n      return;\n    }\n\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n  };\n\n  return PlayProgressBar;\n}(Component$1);\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n}; // Time tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseTimeDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n  ;\n\n  _proto.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    var time = seekBarPoint * this.player_.duration();\n    this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, function () {\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + \"px\";\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component$1);\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\nComponent$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\nvar STEP_SECONDS = 5; // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n\nvar PAGE_KEY_MULTIPLIER = 12;\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = /*#__PURE__*/function (_Slider) {\n  _inheritsLoose(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.setEventHandlers_();\n\n    return _this;\n  }\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  var _proto = SeekBar.prototype;\n\n  _proto.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update_ = bind(this, this.update);\n    this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n    this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n    if (this.player_.liveTracker) {\n      this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n    } // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n\n\n    this.updateInterval = null;\n\n    this.enableIntervalHandler_ = function (e) {\n      return _this2.enableInterval_(e);\n    };\n\n    this.disableIntervalHandler_ = function (e) {\n      return _this2.disableInterval_(e);\n    };\n\n    this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.on(document, 'visibilitychange', this.toggleVisibility_);\n    }\n  };\n\n  _proto.toggleVisibility_ = function toggleVisibility_(e) {\n    if (document.visibilityState === 'hidden') {\n      this.cancelNamedAnimationFrame('SeekBar#update');\n      this.cancelNamedAnimationFrame('Slider#update');\n      this.disableInterval_(e);\n    } else {\n      if (!this.player_.ended() && !this.player_.paused()) {\n        this.enableInterval_();\n      } // we just switched back to the page and someone may be looking, so, update ASAP\n\n\n      this.update();\n    }\n  };\n\n  _proto.enableInterval_ = function enableInterval_() {\n    if (this.updateInterval) {\n      return;\n    }\n\n    this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n  };\n\n  _proto.disableInterval_ = function disableInterval_(e) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n      return;\n    }\n\n    if (!this.updateInterval) {\n      return;\n    }\n\n    this.clearInterval(this.updateInterval);\n    this.updateInterval = null;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  }\n  /**\n   * This function updates the play progress bar and accessibility\n   * attributes to whatever is passed in.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @return {number}\n   *          The current percent at a number from 0-1\n   */\n  ;\n\n  _proto.update = function update(event) {\n    var _this3 = this;\n\n    // ignore updates while the tab is hidden\n    if (document.visibilityState === 'hidden') {\n      return;\n    }\n\n    var percent = _Slider.prototype.update.call(this);\n\n    this.requestNamedAnimationFrame('SeekBar#update', function () {\n      var currentTime = _this3.player_.ended() ? _this3.player_.duration() : _this3.getCurrentTime_();\n      var liveTracker = _this3.player_.liveTracker;\n\n      var duration = _this3.player_.duration();\n\n      if (liveTracker && liveTracker.isLive()) {\n        duration = _this3.player_.liveTracker.liveCurrentTime();\n      }\n\n      if (_this3.percent_ !== percent) {\n        // machine readable value of progress bar (percentage complete)\n        _this3.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n        _this3.percent_ = percent;\n      }\n\n      if (_this3.currentTime_ !== currentTime || _this3.duration_ !== duration) {\n        // human readable value of progress bar (time complete)\n        _this3.el_.setAttribute('aria-valuetext', _this3.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n        _this3.currentTime_ = currentTime;\n        _this3.duration_ = duration;\n      } // update the progress bar time tooltip with the current time\n\n\n      if (_this3.bar) {\n        _this3.bar.update(getBoundingClientRect(_this3.el()), _this3.getProgress());\n      }\n    });\n    return percent;\n  }\n  /**\n   * Prevent liveThreshold from causing seeks to seem like they\n   * are not happening from a user perspective.\n   *\n   * @param {number} ct\n   *        current time to seek to\n   */\n  ;\n\n  _proto.userSeek_ = function userSeek_(ct) {\n    if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n      this.player_.liveTracker.nextSeekedFromUser();\n    }\n\n    this.player_.currentTime(ct);\n  }\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n  ;\n\n  _proto.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  }\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    var currentTime = this.getCurrentTime_();\n    var percent;\n    var liveTracker = this.player_.liveTracker;\n\n    if (liveTracker && liveTracker.isLive()) {\n      percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow(); // prevent the percent from changing at the live edge\n\n      if (liveTracker.atLiveEdge()) {\n        percent = 1;\n      }\n    } else {\n      percent = currentTime / this.player_.duration();\n    }\n\n    return percent;\n  }\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    } // Stop event propagation to prevent double fire in progress-control.js\n\n\n    event.stopPropagation();\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event, mouseDown) {\n    if (mouseDown === void 0) {\n      mouseDown = false;\n    }\n\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    if (!mouseDown && !this.player_.scrubbing()) {\n      this.player_.scrubbing(true);\n    }\n\n    var newTime;\n    var distance = this.calculateDistance(event);\n    var liveTracker = this.player_.liveTracker;\n\n    if (!liveTracker || !liveTracker.isLive()) {\n      newTime = distance * this.player_.duration(); // Don't let video end while scrubbing.\n\n      if (newTime === this.player_.duration()) {\n        newTime = newTime - 0.1;\n      }\n    } else {\n      if (distance >= 0.99) {\n        liveTracker.seekToLiveEdge();\n        return;\n      }\n\n      var seekableStart = liveTracker.seekableStart();\n      var seekableEnd = liveTracker.liveCurrentTime();\n      newTime = seekableStart + distance * liveTracker.liveWindow(); // Don't let video end while scrubbing.\n\n      if (newTime >= seekableEnd) {\n        newTime = seekableEnd;\n      } // Compensate for precision differences so that currentTime is not less\n      // than seekable start\n\n\n      if (newTime <= seekableStart) {\n        newTime = seekableStart + 0.1;\n      } // On android seekableEnd can be Infinity sometimes,\n      // this will cause newTime to be Infinity, which is\n      // not a valid currentTime.\n\n\n      if (newTime === Infinity) {\n        return;\n      }\n    } // Set new time (tell player to seek to new time)\n\n\n    this.userSeek_(newTime);\n  };\n\n  _proto.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  _proto.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  }\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event); // Stop event propagation to prevent double fire in progress-control.js\n\n\n    if (event) {\n      event.stopPropagation();\n    }\n\n    this.player_.scrubbing(false);\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n\n    this.player_.trigger({\n      type: 'timeupdate',\n      target: this,\n      manuallyTriggered: true\n    });\n\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    } else {\n      // We're done seeking and the time has changed.\n      // If the player is paused, make sure we display the correct time on the seek bar.\n      this.update_();\n    }\n  }\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n  }\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n  }\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n  ;\n\n  _proto.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  }\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down.\n   * Supports the following keys:\n   *\n   *   Space or Enter key fire a click event\n   *   Home key moves to start of the timeline\n   *   End key moves to end of the timeline\n   *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n   *   PageDown key moves back a larger step than ArrowDown\n   *   PageUp key moves forward a large step\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var liveTracker = this.player_.liveTracker;\n\n    if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.handleAction(event);\n    } else if (keycode.isEventKey(event, 'Home')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(0);\n    } else if (keycode.isEventKey(event, 'End')) {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.liveCurrentTime());\n      } else {\n        this.userSeek_(this.player_.duration());\n      }\n    } else if (/^[0-9]$/.test(keycode(event))) {\n      event.preventDefault();\n      event.stopPropagation();\n      var gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n\n      if (liveTracker && liveTracker.isLive()) {\n        this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n      } else {\n        this.userSeek_(this.player_.duration() * gotoFraction);\n      }\n    } else if (keycode.isEventKey(event, 'PgDn')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else if (keycode.isEventKey(event, 'PgUp')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n    } else {\n      // Pass keydown handling up for unsupported keys\n      _Slider.prototype.handleKeyDown.call(this, event);\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.disableInterval_();\n    this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n\n    if (this.player_.liveTracker) {\n      this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n    }\n\n    this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n    this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_); // we don't need to update the play progress if the document is hidden,\n    // also, this causes the CPU to spike and eventually crash the page on IE11.\n\n    if ('hidden' in document && 'visibilityState' in document) {\n      this.off(document, 'visibilitychange', this.toggleVisibility_);\n    }\n\n    _Slider.prototype.dispose.call(this);\n  };\n\n  return SeekBar;\n}(Slider);\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n}; // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\nComponent$1.registerComponent('SeekBar', SeekBar);\n\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.handleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n    _this.throttledHandleMouseSeek = throttle(bind(_assertThisInitialized(_this), _this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n\n    _this.handleMouseUpHandler_ = function (e) {\n      return _this.handleMouseUp(e);\n    };\n\n    _this.handleMouseDownHandler_ = function (e) {\n      return _this.handleMouseDown(e);\n    };\n\n    _this.enable();\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = ProgressControl.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  }\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (!seekBar) {\n      return;\n    }\n\n    var playProgressBar = seekBar.getChild('playProgressBar');\n    var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n\n    if (!playProgressBar && !mouseTimeDisplay) {\n      return;\n    }\n\n    var seekBarEl = seekBar.el();\n    var seekBarRect = findPosition(seekBarEl);\n    var seekBarPoint = getPointerPosition(seekBarEl, event).x; // The default skin has a gap on either side of the `SeekBar`. This means\n    // that it's possible to trigger this behavior outside the boundaries of\n    // the `SeekBar`. This ensures we stay within it at all times.\n\n    seekBarPoint = clamp(seekBarPoint, 0, 1);\n\n    if (mouseTimeDisplay) {\n      mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n    }\n\n    if (playProgressBar) {\n      playProgressBar.update(seekBarRect, seekBar.getProgress());\n    }\n  }\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n  ;\n\n  _proto.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  }\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n  ;\n\n  _proto.enabled = function enabled() {\n    return this.enabled_;\n  }\n  /**\n   * Disable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeListenersAddedOnMousedownAndTouchstart();\n    this.addClass('disabled');\n    this.enabled_ = false; // Restore normal playback state if controls are disabled while scrubbing\n\n    if (this.player_.scrubbing()) {\n      var seekBar = this.getChild('seekBar');\n      this.player_.scrubbing(false);\n\n      if (seekBar.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      }\n    }\n  }\n  /**\n   * Enable all controls on the progress control and its children\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n    this.enabled_ = true;\n  }\n  /**\n   * Cleanup listeners after the user finishes interacting with the progress controls\n   */\n  ;\n\n  _proto.removeListenersAddedOnMousedownAndTouchstart = function removeListenersAddedOnMousedownAndTouchstart() {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.removeListenersAddedOnMousedownAndTouchstart();\n  };\n\n  return ProgressControl;\n}(Component$1);\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\nComponent$1.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * Toggle Picture-in-Picture mode\n *\n * @extends Button\n */\n\nvar PictureInPictureToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(PictureInPictureToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  function PictureInPictureToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], function (e) {\n      return _this.handlePictureInPictureChange(e);\n    });\n\n    _this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], function (e) {\n      return _this.handlePictureInPictureEnabledChange(e);\n    });\n\n    _this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], function () {\n      // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n      var isSourceAudio = player.currentType().substring(0, 5) === 'audio';\n\n      if (isSourceAudio || player.audioPosterMode() || player.audioOnlyMode()) {\n        if (player.isInPictureInPicture()) {\n          player.exitPictureInPicture();\n        }\n\n        _this.hide();\n      } else {\n        _this.show();\n      }\n    }); // TODO: Deactivate button on player emptied event.\n\n\n    _this.disable();\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = PictureInPictureToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-picture-in-picture-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Enables or disables button based on document.pictureInPictureEnabled property value\n   * or on value returned by player.disablePictureInPicture() method.\n   */\n  ;\n\n  _proto.handlePictureInPictureEnabledChange = function handlePictureInPictureEnabledChange() {\n    if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n      this.enable();\n    } else {\n      this.disable();\n    }\n  }\n  /**\n   * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#enterpictureinpicture\n   * @listens Player#leavepictureinpicture\n   */\n  ;\n\n  _proto.handlePictureInPictureChange = function handlePictureInPictureChange(event) {\n    if (this.player_.isInPictureInPicture()) {\n      this.controlText('Exit Picture-in-Picture');\n    } else {\n      this.controlText('Picture-in-Picture');\n    }\n\n    this.handlePictureInPictureEnabledChange();\n  }\n  /**\n   * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isInPictureInPicture()) {\n      this.player_.requestPictureInPicture();\n    } else {\n      this.player_.exitPictureInPicture();\n    }\n  };\n\n  return PictureInPictureToggle;\n}(Button);\n/**\n * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\nComponent$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this;\n\n    _this.on(player, 'fullscreenchange', function (e) {\n      return _this.handleFullscreenChange(e);\n    });\n\n    if (document[player.fsApi_.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = FullscreenToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-fullscreen-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  }\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\nComponent$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = VolumeLevel.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level'\n    });\n\n    el.appendChild(_Component.prototype.createEl.call(this, 'span', {\n      className: 'vjs-control-text'\n    }));\n    return el;\n  };\n\n  return VolumeLevel;\n}(Component$1);\n\nComponent$1.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * Volume level tooltips display a volume above or side by side the volume bar.\n *\n * @extends Component\n */\n\nvar VolumeLevelTooltip = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeLevelTooltip, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeLevelTooltip(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the volume tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeLevelTooltip.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-tooltip'\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Updates the position of the tooltip relative to the `VolumeBar` and\n   * its content text.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  ;\n\n  _proto.update = function update(rangeBarRect, rangeBarPoint, vertical, content) {\n    if (!vertical) {\n      var tooltipRect = getBoundingClientRect(this.el_);\n      var playerRect = getBoundingClientRect(this.player_.el());\n      var volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n\n      var spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n      var spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n      var pullTooltipBy = tooltipRect.width / 2;\n\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n\n      this.el_.style.right = \"-\" + pullTooltipBy + \"px\";\n    }\n\n    this.write(content + \"%\");\n  }\n  /**\n   * Write the volume to the tooltip DOM element.\n   *\n   * @param {string} content\n   *        The formatted volume for the tooltip.\n   */\n  ;\n\n  _proto.write = function write(content) {\n    textContent(this.el_, content);\n  }\n  /**\n   * Updates the position of the volume tooltip relative to the `VolumeBar`.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   * @param {number} volume\n   *        The volume level to update the tooltip to\n   *\n   * @param {Function} cb\n   *        A function that will be called during the request animation frame\n   *        for tooltips that need to do additional animations from the default\n   */\n  ;\n\n  _proto.updateVolume = function updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n    var _this2 = this;\n\n    this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', function () {\n      _this2.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n\n      if (cb) {\n        cb();\n      }\n    });\n  };\n\n  return VolumeLevelTooltip;\n}(Component$1);\n\nComponent$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n/**\n * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n * indicating the volume level which is represented by a given point in the\n * {@link VolumeBar}.\n *\n * @extends Component\n */\n\nvar MouseVolumeLevelDisplay = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MouseVolumeLevelDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseVolumeLevelDisplay(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n    _this.update = throttle(bind(_assertThisInitialized(_this), _this.update), UPDATE_REFRESH_INTERVAL);\n    return _this;\n  }\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = MouseVolumeLevelDisplay.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  }\n  /**\n   * Enquires updates to its own DOM as well as the DOM of its\n   * {@link VolumeLevelTooltip} child.\n   *\n   * @param {Object} rangeBarRect\n   *        The `ClientRect` for the {@link VolumeBar} element.\n   *\n   * @param {number} rangeBarPoint\n   *        A number from 0 to 1, representing a horizontal/vertical reference point\n   *        from the left edge of the {@link VolumeBar}\n   *\n   * @param {boolean} vertical\n   *        Referees to the Volume control position\n   *        in the control bar{@link VolumeControl}\n   *\n   */\n  ;\n\n  _proto.update = function update(rangeBarRect, rangeBarPoint, vertical) {\n    var _this2 = this;\n\n    var volume = 100 * rangeBarPoint;\n    this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, function () {\n      if (vertical) {\n        _this2.el_.style.bottom = rangeBarRect.height * rangeBarPoint + \"px\";\n      } else {\n        _this2.el_.style.left = rangeBarRect.width * rangeBarPoint + \"px\";\n      }\n    });\n  };\n\n  return MouseVolumeLevelDisplay;\n}(Component$1);\n/**\n * Default options for `MouseVolumeLevelDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseVolumeLevelDisplay.prototype.options_ = {\n  children: ['volumeLevelTooltip']\n};\nComponent$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = /*#__PURE__*/function (_Slider) {\n  _inheritsLoose(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    var _this;\n\n    _this = _Slider.call(this, player, options) || this;\n\n    _this.on('slideractive', function (e) {\n      return _this.updateLastVolume_(e);\n    });\n\n    _this.on(player, 'volumechange', function (e) {\n      return _this.updateARIAAttributes(e);\n    });\n\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeBar.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  }\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  }\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    var mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n\n    if (mouseVolumeLevelDisplay) {\n      var volumeBarEl = this.el();\n      var volumeBarRect = getBoundingClientRect(volumeBarEl);\n      var vertical = this.vertical();\n      var volumeBarPoint = getPointerPosition(volumeBarEl, event);\n      volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x; // The default skin has a gap on either side of the `VolumeBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `VolumeBar`. This ensures we stay within it at all times.\n\n      volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n      mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n    }\n\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  }\n  /**\n   * If the player is muted unmute it.\n   */\n  ;\n\n  _proto.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  }\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n  ;\n\n  _proto.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n\n    return this.player_.volume();\n  }\n  /**\n   * Increase volume level for keyboard users\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  }\n  /**\n   * Decrease volume level for keyboard users\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  }\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  }\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n  ;\n\n  _proto.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  }\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n  ;\n\n  _proto.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n}; // MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\n\nif (!IS_IOS && !IS_ANDROID) {\n  VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n}\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\n\n\nVolumeBar.prototype.playerEvent = 'volumechange';\nComponent$1.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.vertical = options.vertical || false; // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    _this = _Component.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkVolumeSupport(_assertThisInitialized(_this), player);\n    _this.throttledHandleMouseMove = throttle(bind(_assertThisInitialized(_this), _this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n\n    _this.handleMouseUpHandler_ = function (e) {\n      return _this.handleMouseUp(e);\n    };\n\n    _this.on('mousedown', function (e) {\n      return _this.handleMouseDown(e);\n    });\n\n    _this.on('touchstart', function (e) {\n      return _this.handleMouseDown(e);\n    });\n\n    _this.on('mousemove', function (e) {\n      return _this.handleMouseMove(e);\n    }); // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n\n      _this.addClass('vjs-slider-active');\n\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n\n      _this.removeClass('vjs-slider-active');\n\n      _this.trigger('sliderinactive');\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = VolumeControl.prototype;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-control vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.on(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n  ;\n\n  _proto.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n    this.off(doc, 'touchend', this.handleMouseUpHandler_);\n  }\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n  ;\n\n  _proto.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component$1);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\nComponent$1.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = /*#__PURE__*/function (_Button) {\n  _inheritsLoose(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    var _this;\n\n    _this = _Button.call(this, player, options) || this; // hide this control if volume support is missing\n\n    checkMuteSupport(_assertThisInitialized(_this), player);\n\n    _this.on(player, ['loadstart', 'volumechange'], function (e) {\n      return _this.update(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = MuteToggle.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-mute-control \" + _Button.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  }\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  }\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3; // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n\n    if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    } // TODO improve muted icon classes\n\n\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, \"vjs-vol-\" + i);\n    }\n\n    addClass(this.el_, \"vjs-vol-\" + level);\n  }\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\nComponent$1.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    } // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n\n\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    _this = _Component.call(this, player, options) || this; // this handler is used by mouse handler methods below\n\n    _this.handleKeyPressHandler_ = function (e) {\n      return _this.handleKeyPress(e);\n    };\n\n    _this.on(player, ['loadstart'], function (e) {\n      return _this.volumePanelState_(e);\n    });\n\n    _this.on(_this.muteToggle, 'keyup', function (e) {\n      return _this.handleKeyPress(e);\n    });\n\n    _this.on(_this.volumeControl, 'keyup', function (e) {\n      return _this.handleVolumeControlKeyUp(e);\n    });\n\n    _this.on('keydown', function (e) {\n      return _this.handleKeyPress(e);\n    });\n\n    _this.on('mouseover', function (e) {\n      return _this.handleMouseOver(e);\n    });\n\n    _this.on('mouseout', function (e) {\n      return _this.handleMouseOut(e);\n    }); // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n\n\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n\n    return _this;\n  }\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  var _proto = VolumePanel.prototype;\n\n  _proto.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  }\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n  ;\n\n  _proto.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  }\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n  ;\n\n  _proto.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    } // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n\n\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: \"vjs-volume-panel vjs-control \" + orientationClass\n    });\n  }\n  /**\n   * Dispose of the `volume-panel` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseOut();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n   * the volume panel and sets focus on `MuteToggle`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keyup` event that caused this function to be called.\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleVolumeControlKeyUp = function handleVolumeControlKeyUp(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.muteToggle.focus();\n    }\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n   * Turns on listening for `mouseover` event. When they happen it\n   * calls `this.handleMouseOver`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseover` event that caused this function to be called.\n   *\n   * @listens mouseover\n   */\n  ;\n\n  _proto.handleMouseOver = function handleMouseOver(event) {\n    this.addClass('vjs-hover');\n    on(document, 'keyup', this.handleKeyPressHandler_);\n  }\n  /**\n   * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n   * Turns on listening for `mouseout` event. When they happen it\n   * calls `this.handleMouseOut`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseout` event that caused this function to be called.\n   *\n   * @listens mouseout\n   */\n  ;\n\n  _proto.handleMouseOut = function handleMouseOut(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleKeyPressHandler_);\n  }\n  /**\n   * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n   * looking for ESC, which hides the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown | keyup\n   */\n  ;\n\n  _proto.handleKeyPress = function handleKeyPress(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      this.handleMouseOut();\n    }\n  };\n\n  return VolumePanel;\n}(Component$1);\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\nComponent$1.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    var _this;\n\n    _this = _Component.call(this, player, options) || this;\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', function (e) {\n      return _this.handleKeyDown(e);\n    }); // All the menu item instances share the same blur handler provided by the menu container.\n\n\n    _this.boundHandleBlur_ = function (e) {\n      return _this.handleBlur(e);\n    };\n\n    _this.boundHandleTapClick_ = function (e) {\n      return _this.handleTapClick(e);\n    };\n\n    return _this;\n  }\n  /**\n   * Add event listeners to the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to add listeners to.\n   *\n   */\n\n\n  var _proto = Menu.prototype;\n\n  _proto.addEventListenerForItem = function addEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n\n    this.on(component, 'blur', this.boundHandleBlur_);\n    this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * Remove event listeners from the {@link MenuItem}.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem` to remove listeners.\n   *\n   */\n  ;\n\n  _proto.removeEventListenerForItem = function removeEventListenerForItem(component) {\n    if (!(component instanceof Component$1)) {\n      return;\n    }\n\n    this.off(component, 'blur', this.boundHandleBlur_);\n    this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n  }\n  /**\n   * This method will be called indirectly when the component has been added\n   * before the component adds to the new menu instance by `addItem`.\n   * In this case, the original menu instance will remove the component\n   * by calling `removeChild`.\n   *\n   * @param {Object} component\n   *        The instance of the `MenuItem`\n   */\n  ;\n\n  _proto.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    this.removeEventListenerForItem(component);\n\n    _Component.prototype.removeChild.call(this, component);\n  }\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n  ;\n\n  _proto.addItem = function addItem(component) {\n    var childComponent = this.addChild(component);\n\n    if (childComponent) {\n      this.addEventListenerForItem(childComponent);\n    }\n  }\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n  ;\n\n  _proto.createEl = function createEl$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_); // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.boundHandleBlur_ = null;\n    this.boundHandleTapClick_ = null;\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Called when a `MenuItem` loses focus.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n  ;\n\n  _proto.handleBlur = function handleBlur(event) {\n    var relatedTarget = event.relatedTarget || document.activeElement; // Close menu popup when a user clicks outside the menu\n\n    if (!this.children().some(function (element) {\n      return element.el() === relatedTarget;\n    })) {\n      var btn = this.menuButton_;\n\n      if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n        btn.unpressButton();\n      }\n    }\n  }\n  /**\n   * Called when a `MenuItem` gets clicked or tapped.\n   *\n   * @param {EventTarget~Event} event\n   *        The `click` or `tap` event that caused this function to be called.\n   *\n   * @listens click,tap\n   */\n  ;\n\n  _proto.handleTapClick = function handleTapClick(event) {\n    // Unpress the associated MenuButton, and move focus back to it\n    if (this.menuButton_) {\n      this.menuButton_.unpressButton();\n      var childComponents = this.children();\n\n      if (!Array.isArray(childComponents)) {\n        return;\n      }\n\n      var foundComponent = childComponents.filter(function (component) {\n        return component.el() === event.target;\n      })[0];\n\n      if (!foundComponent) {\n        return;\n      } // don't focus menu button if item is a caption settings item\n      // because focus will move elsewhere\n\n\n      if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Left and Down Arrows\n    if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepForward(); // Up and Right Arrows\n    } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n      event.preventDefault();\n      event.stopPropagation();\n      this.stepBack();\n    }\n  }\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n  ;\n\n  _proto.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n\n    this.focus(stepChild);\n  }\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n  ;\n\n  _proto.focus = function focus(item) {\n    if (item === void 0) {\n      item = 0;\n    }\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component$1);\n\nComponent$1.registerComponent('Menu', Menu);\n\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Component.call(this, player, options) || this;\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true'); // Add buildCSSClass values to the button, not the wrapper\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    var handleClick = function handleClick(e) {\n      return _this.handleClick(e);\n    };\n\n    _this.handleMenuKeyUp_ = function (e) {\n      return _this.handleMenuKeyUp(e);\n    };\n\n    _this.on(_this.menuButton_, 'tap', handleClick);\n\n    _this.on(_this.menuButton_, 'click', handleClick);\n\n    _this.on(_this.menuButton_, 'keydown', function (e) {\n      return _this.handleKeyDown(e);\n    });\n\n    _this.on(_this.menuButton_, 'mouseenter', function () {\n      _this.addClass('vjs-hover');\n\n      _this.menu.show();\n\n      on(document, 'keyup', _this.handleMenuKeyUp_);\n    });\n\n    _this.on('mouseleave', function (e) {\n      return _this.handleMouseLeave(e);\n    });\n\n    _this.on('keydown', function (e) {\n      return _this.handleSubmenuKeyDown(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  var _proto = MenuButton.prototype;\n\n  _proto.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n      this.menu.contentEl_.removeAttribute('role');\n    } else {\n      this.show();\n      this.menu.contentEl_.setAttribute('role', 'menu');\n    }\n  }\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, {\n      menuButton: this\n    });\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n\n    this.hideThreshold_ = 0; // Add a title list item to the top\n\n    if (this.options_.title) {\n      var titleEl = createEl('li', {\n        className: 'vjs-menu-title',\n        textContent: toTitleCase$1(this.options_.title),\n        tabIndex: -1\n      });\n      var titleComponent = new Component$1(this.player_, {\n        el: titleEl\n      });\n      menu.addItem(titleComponent);\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n  ;\n\n  _proto.createItems = function createItems() {}\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  }\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n  ;\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    } // TODO: Fix the CSS so that this isn't necessary\n\n\n    var buttonClass = Button.prototype.buildCSSClass();\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + buttonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button'; // If the inline option is passed, we want to use different styles altogether.\n\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return \"vjs-menu-button \" + menuButtonClass + \" \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n  ;\n\n  _proto.controlText = function controlText(text, el) {\n    if (el === void 0) {\n      el = this.menuButton_.el();\n    }\n\n    return this.menuButton_.controlText(text, el);\n  }\n  /**\n   * Dispose of the `menu-button` and all child components.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.handleMouseLeave();\n\n    _Component.prototype.dispose.call(this);\n  }\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  }\n  /**\n   * Handle `mouseleave` for `MenuButton`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseleave` event that caused this function to be called.\n   *\n   * @listens mouseleave\n   */\n  ;\n\n  _proto.handleMouseLeave = function handleMouseLeave(event) {\n    this.removeClass('vjs-hover');\n    off(document, 'keyup', this.handleMenuKeyUp_);\n  }\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n  ;\n\n  _proto.focus = function focus() {\n    this.menuButton_.focus();\n  }\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n  ;\n\n  _proto.blur = function blur() {\n    this.menuButton_.blur();\n  }\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      } // Up Arrow or Down Arrow also 'press' the button to open the menu\n\n    } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n      if (!this.buttonPressed_) {\n        event.preventDefault();\n        this.pressButton();\n      }\n    }\n  }\n  /**\n   * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keyup\n   */\n  ;\n\n  _proto.handleMenuKeyUp = function handleMenuKeyUp(event) {\n    // Escape hides popup menu\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      this.removeClass('vjs-hover');\n    }\n  }\n  /**\n   * This method name now delegates to `handleSubmenuKeyDown`. This means\n   * anyone calling `handleSubmenuKeyPress` will not see their method calls\n   * stop working.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n    this.handleSubmenuKeyDown(event);\n  }\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleSubmenuKeyDown = function handleSubmenuKeyDown(event) {\n    // Escape or Tab unpress the 'button'\n    if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } // Don't preventDefault for Tab key - we still want to lose focus\n\n\n      if (!keycode.isEventKey(event, 'Tab')) {\n        event.preventDefault(); // Set focus back to the menu button's button\n\n        this.menuButton_.focus();\n      }\n    }\n  }\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n  ;\n\n  _proto.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.show();\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true'); // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  }\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n  ;\n\n  _proto.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menu.hide();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  }\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n  ;\n\n  _proto.disable = function disable() {\n    this.unpressButton();\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.menuButton_.disable();\n  }\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n  ;\n\n  _proto.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component$1);\n\nComponent$1.registerComponent('MenuButton', MenuButton);\n\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = /*#__PURE__*/function (_MenuButton) {\n  _inheritsLoose(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    var _this;\n\n    var tracks = options.tracks;\n    _this = _MenuButton.call(this, player, options) || this;\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return _assertThisInitialized(_this);\n    }\n\n    var updateHandler = bind(_assertThisInitialized(_this), _this.update);\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    tracks.addEventListener('labelchange', updateHandler);\n\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n      tracks.removeEventListener('labelchange', updateHandler);\n    });\n\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent$1.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-keys.js\n */\n\n/**\n  * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n  * Note that 'Enter' and 'Space' are not included here (otherwise they would\n  * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n  * @typedef MenuKeys\n  * @array\n  */\nvar MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = /*#__PURE__*/function (_ClickableComponent) {\n  _inheritsLoose(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    var _this;\n\n    _this = _ClickableComponent.call(this, player, options) || this;\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n\n    return _this;\n  }\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  var _proto = MenuItem.prototype;\n\n  _proto.createEl = function createEl$1(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    var el = _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      tabIndex: -1\n    }, props), attrs); // swap icon with menu item text.\n\n\n    el.replaceChild(createEl('span', {\n      className: 'vjs-menu-item-text',\n      textContent: this.localize(this.options_.label)\n    }), el.querySelector('.vjs-icon-placeholder'));\n    return el;\n  }\n  /**\n   * Ignore keys which are used by the menu, but pass any other ones up. See\n   * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    if (!MenuKeys.some(function (key) {\n      return keycode.isEventKey(event, key);\n    })) {\n      // Pass keydown handling up for unused keys\n      _ClickableComponent.prototype.handleKeyDown.call(this, event);\n    }\n  }\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    this.selected(true);\n  }\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n  ;\n\n  _proto.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true'); // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false'); // Indicate un-selected state to screen reader\n\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent$1.registerComponent('MenuItem', MenuItem);\n\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.textTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track; // Determine the relevant kind(s) of tracks for this component and filter\n    // out empty kinds.\n\n    _this.kinds = (options.kinds || [options.kind || _this.track.kind]).filter(Boolean);\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    }); // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n\n\n    if (tracks.onchange === undefined) {\n      var event;\n\n      _this.on(['tap', 'click'], function () {\n        if (typeof window$1.Event !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window$1.Event('change');\n          } catch (err) {// continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    } // set the default state based on current tracks\n\n\n    _this.handleTracksChange();\n\n    return _this;\n  }\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = TextTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    var referenceTrack = this.track;\n    var tracks = this.player_.textTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // If the track from the text tracks list is not of the right kind,\n      // skip it. We do not want to affect tracks of incompatible kind(s).\n\n      if (this.kinds.indexOf(track.kind) === -1) {\n        continue;\n      } // If this text track is the component's track and it is not showing,\n      // set it to showing.\n\n\n      if (track === referenceTrack) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        } // If this text track is not the component's track and it is not\n        // disabled, set it to disabled.\n\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  }\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing'; // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage; // Don't replace the kind of track across the same language\n\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      // it is no longer necessary to store `kind` or `kinds` on the track itself\n      // since they are now stored in the `kinds` property of all instances of\n      // TextTrackMenuItem, but this will remain for backwards compatibility\n      kind: options.kind,\n      kinds: options.kinds,\n      \"default\": false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    } // MenuItem is selectable\n\n\n    options.selectable = true; // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n\n    options.multiSelectable = false;\n    return _TextTrackMenuItem.call(this, player, options) || this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  var _proto = OffTextTrackMenuItem.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    } // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n\n\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  _proto.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = /*#__PURE__*/function (_TrackButton) {\n  _inheritsLoose(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.textTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  var _proto = TextTrackButton.prototype;\n\n  _proto.createItems = function createItems(items, TrackMenuItem) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    if (TrackMenuItem === void 0) {\n      TrackMenuItem = TextTrackMenuItem;\n    }\n\n    // Label is an override for the [track] off label\n    // USed to localise captions/subtitles\n    var label;\n\n    if (this.label_) {\n      label = this.label_ + \" off\";\n    } // Add an OFF menu item to turn all tracks off\n\n\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n    this.hideThreshold_ += 1;\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // only add tracks that are of an appropriate kind and have a label\n\n      if (this.kinds_.indexOf(track.kind) > -1) {\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          kinds: this.kinds_,\n          kind: this.kind_,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n        item.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent$1.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime(); // Modify options for parent MenuItem class's init.\n\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n    _this.cue = cue;\n    return _this;\n  }\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = ChaptersTrackMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player_.currentTime(this.cue.startTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n\n    _this.selectCurrentItem_ = function () {\n      _this.items.forEach(function (item) {\n        item.selected(_this.track_.activeCues[0] === item.cue);\n      });\n    };\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = ChaptersButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-chapters-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n  ;\n\n  _proto.update = function update(event) {\n    if (event && event.track && event.track.kind !== 'chapters') {\n      return;\n    }\n\n    var track = this.findChaptersTrack();\n\n    if (track !== this.track_) {\n      this.setTrack(track);\n\n      _TextTrackButton.prototype.update.call(this);\n    } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n      // Update the menu initially or if the number of cues has changed since set\n      _TextTrackButton.prototype.update.call(this);\n    }\n  }\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n  ;\n\n  _proto.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    } // here this.track_ refers to the old track instance\n\n\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n      this.track_ = null;\n    }\n\n    this.track_ = track; // here this.track_ refers to the new track instance\n\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n\n      this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n    }\n  }\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n  ;\n\n  _proto.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  }\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n  ;\n\n  _proto.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n\n    return this.localize(toTitleCase$1(this.kind_));\n  }\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n  ;\n\n  _proto.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  }\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, {\n        track: this.track_,\n        cue: cue\n      });\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nChaptersButton.prototype.controlText_ = 'Chapters';\nComponent$1.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    var _this;\n\n    _this = _TextTrackButton.call(this, player, options, ready) || this;\n    var tracks = player.textTracks();\n    var changeHandler = bind(_assertThisInitialized(_this), _this.handleTracksChange);\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  var _proto = DescriptionsButton.prototype;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false; // Check whether a track of a different kind is showing\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    } // If another track is showing, disable this menu button\n\n\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-descriptions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\nComponent$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubtitlesButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subtitles-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    var _this;\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      \"default\": false,\n      mode: 'disabled'\n    }; // CaptionSettingsMenuItem has no concept of 'selected'\n\n    options.selectable = false;\n    options.name = 'CaptionSettingsMenuItem';\n    _this = _TextTrackMenuItem.call(this, player, options) || this;\n\n    _this.addClass('vjs-texttrack-settings');\n\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n\n    return _this;\n  }\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = CaptionSettingsMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    return _TextTrackButton.call(this, player, options, ready) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = CaptionsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-captions-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.kind_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\nCaptionsButton.prototype.controlText_ = 'Captions';\nComponent$1.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = /*#__PURE__*/function (_TextTrackMenuItem) {\n  _inheritsLoose(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    return _TextTrackMenuItem.apply(this, arguments) || this;\n  }\n\n  var _proto = SubsCapsMenuItem.prototype;\n\n  _proto.createEl = function createEl$1(type, props, attrs) {\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, props, attrs);\n\n    var parentSpan = el.querySelector('.vjs-menu-item-text');\n\n    if (this.options_.track.kind === 'captions') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        // space added as the text will visually flow with the\n        // label\n        textContent: \" \" + this.localize('Captions')\n      }));\n    }\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = /*#__PURE__*/function (_TextTrackButton) {\n  _inheritsLoose(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _TextTrackButton.call(this, player, options) || this; // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n\n    _this.label_ = 'subtitles';\n\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n\n    _this.menuButton_.controlText(toTitleCase$1(_this.label_));\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = SubsCapsButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-subs-caps-button \" + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, {\n        kind: this.label_\n      }));\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\n\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\nComponent$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    var _this;\n\n    var track = options.track;\n    var tracks = player.audioTracks(); // Modify options for parent MenuItem class's init.\n\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.track = track;\n\n    _this.addClass(\"vjs-\" + track.kind + \"-menu-item\");\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_assertThisInitialized(_this), args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n\n    return _this;\n  }\n\n  var _proto = AudioTrackMenuItem.prototype;\n\n  _proto.createEl = function createEl$1(type, props, attrs) {\n    var el = _MenuItem.prototype.createEl.call(this, type, props, attrs);\n\n    var parentSpan = el.querySelector('.vjs-menu-item-text');\n\n    if (this.options_.track.kind === 'main-desc') {\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      parentSpan.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: ' ' + this.localize('Descriptions')\n      }));\n    }\n\n    return el;\n  }\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this, event); // the audio track list will automatically toggle other tracks\n    // off for us.\n\n\n    this.track.enabled = true; // when native audio tracks are used, we want to make sure that other tracks are turned off\n\n    if (this.player_.tech_.featuresNativeAudioTracks) {\n      var tracks = this.player_.audioTracks();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i]; // skip the current track since we enabled it above\n\n        if (track === this.track) {\n          continue;\n        }\n\n        track.enabled = track === this.track;\n      }\n    }\n  }\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n  ;\n\n  _proto.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = /*#__PURE__*/function (_TrackButton) {\n  _inheritsLoose(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    options.tracks = player.audioTracks();\n    return _TrackButton.call(this, player, options) || this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  var _proto = AudioTrackButton.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-audio-button \" + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n  ;\n\n  _proto.createItems = function createItems(items) {\n    if (items === void 0) {\n      items = [];\n    }\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = /*#__PURE__*/function (_MenuItem) {\n  _inheritsLoose(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    var _this;\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10); // Modify options for parent MenuItem class's init.\n\n    options.label = label;\n    options.selected = rate === player.playbackRate();\n    options.selectable = true;\n    options.multiSelectable = false;\n    _this = _MenuItem.call(this, player, options) || this;\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', function (e) {\n      return _this.update(e);\n    });\n\n    return _this;\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  var _proto = PlaybackRateMenuItem.prototype;\n\n  _proto.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n\n    this.player().playbackRate(this.rate);\n  }\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\nComponent$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = /*#__PURE__*/function (_MenuButton) {\n  _inheritsLoose(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    var _this;\n\n    _this = _MenuButton.call(this, player, options) || this;\n\n    _this.menuButton_.el_.setAttribute('aria-describedby', _this.labelElId_);\n\n    _this.updateVisibility();\n\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', function (e) {\n      return _this.updateVisibility(e);\n    });\n\n    _this.on(player, 'ratechange', function (e) {\n      return _this.updateLabel(e);\n    });\n\n    _this.on(player, 'playbackrateschange', function (e) {\n      return _this.handlePlaybackRateschange(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  var _proto = PlaybackRateMenuButton.prototype;\n\n  _proto.createEl = function createEl$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      id: this.labelElId_,\n      textContent: '1x'\n    });\n    el.appendChild(this.labelEl_);\n    return el;\n  };\n\n  _proto.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  ;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  _proto.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return \"vjs-playback-rate \" + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  }\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   */\n  ;\n\n  _proto.createItems = function createItems() {\n    var rates = this.playbackRates();\n    var items = [];\n\n    for (var i = rates.length - 1; i >= 0; i--) {\n      items.push(new PlaybackRateMenuItem(this.player(), {\n        rate: rates[i] + 'x'\n      }));\n    }\n\n    return items;\n  }\n  /**\n   * Updates ARIA accessibility attributes\n   */\n  ;\n\n  _proto.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  }\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n  ;\n\n  _proto.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n    var currentIndex = rates.indexOf(currentRate); // this get the next rate and it will select first one if the last one currently selected\n\n    var newIndex = (currentIndex + 1) % rates.length;\n    this.player().playbackRate(rates[newIndex]);\n  }\n  /**\n   * On playbackrateschange, update the menu to account for the new items.\n   *\n   * @listens Player#playbackrateschange\n   */\n  ;\n\n  _proto.handlePlaybackRateschange = function handlePlaybackRateschange(event) {\n    this.update();\n  }\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates() {\n    var player = this.player();\n    return player.playbackRates && player.playbackRates() || [];\n  }\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n  ;\n\n  _proto.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  }\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n  ;\n\n  _proto.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  }\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n  ;\n\n  _proto.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.textContent = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\nComponent$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Spacer, _Component);\n\n  function Spacer() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = Spacer.prototype;\n\n  /**\n  * Builds the default DOM `className`.\n  *\n  * @return {string}\n  *         The DOM `className` for this object.\n  */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-spacer \" + _Component.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl(tag, props, attributes) {\n    if (tag === void 0) {\n      tag = 'div';\n    }\n\n    if (props === void 0) {\n      props = {};\n    }\n\n    if (attributes === void 0) {\n      attributes = {};\n    }\n\n    if (!props.className) {\n      props.className = this.buildCSSClass();\n    }\n\n    return _Component.prototype.createEl.call(this, tag, props, attributes);\n  };\n\n  return Spacer;\n}(Component$1);\n\nComponent$1.registerComponent('Spacer', Spacer);\n\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = /*#__PURE__*/function (_Spacer) {\n  _inheritsLoose(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    return _Spacer.apply(this, arguments) || this;\n  }\n\n  var _proto = CustomControlSpacer.prototype;\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-custom-control-spacer \" + _Spacer.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    return _Spacer.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      // No-flex/table-cell mode requires there be some content\n      // in the cell to fill the remaining space of the table.\n      textContent: \"\\xA0\"\n    });\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ControlBar, _Component);\n\n  function ControlBar() {\n    return _Component.apply(this, arguments) || this;\n  }\n\n  var _proto = ControlBar.prototype;\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component$1);\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nif ('exitPictureInPicture' in document) {\n  ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n}\n\nComponent$1.registerComponent('ControlBar', ControlBar);\n\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = /*#__PURE__*/function (_ModalDialog) {\n  _inheritsLoose(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    var _this;\n\n    _this = _ModalDialog.call(this, player, options) || this;\n\n    _this.on(player, 'error', function (e) {\n      return _this.open(e);\n    });\n\n    return _this;\n  }\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  var _proto = ErrorDisplay.prototype;\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return \"vjs-error-display \" + _ModalDialog.prototype.buildCSSClass.call(this);\n  }\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n  ;\n\n  _proto.content = function content() {\n    var error = this.player().error();\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = _extends({}, ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\nComponent$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\nvar LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent']; // Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\n\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    \"default\": 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\n\n\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n  return parseOptionValue(value, parser);\n}\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\n\n\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\n\nvar TextTrackSettings = /*#__PURE__*/function (_ModalDialog) {\n  _inheritsLoose(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    var _this;\n\n    options.temporary = false;\n    _this = _ModalDialog.call(this, player, options) || this;\n    _this.updateDisplay = _this.updateDisplay.bind(_assertThisInitialized(_this)); // fill the modal and pretend we have opened it\n\n    _this.fill();\n\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults(); // Grab `persistTextTrackSettings` from the player options if not passed in child options\n\n\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n\n    return _this;\n  }\n\n  var _proto = TextTrackSettings.prototype;\n\n  _proto.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  }\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElSelect_ = function createElSelect_(key, legendId, type) {\n    var _this2 = this;\n\n    if (legendId === void 0) {\n      legendId = '';\n    }\n\n    if (type === void 0) {\n      type = 'label';\n    }\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n    return [\"<\" + type + \" id=\\\"\" + id + \"\\\" class=\\\"\" + (type === 'label' ? 'vjs-label' : '') + \"\\\">\", this.localize(config.label), \"</\" + type + \">\", \"<select aria-labelledby=\\\"\" + selectLabelledbyIds + \"\\\">\"].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n      return [\"<option id=\\\"\" + optionId + \"\\\" value=\\\"\" + o[0] + \"\\\" \", \"aria-labelledby=\\\"\" + selectLabelledbyIds + \" \" + optionId + \"\\\">\", _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  }\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFgColor_ = function createElFgColor_() {\n    var legendId = \"captions-text-legend-\" + this.id_;\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElBgColor_ = function createElBgColor_() {\n    var legendId = \"captions-background-\" + this.id_;\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElWinColor_ = function createElWinColor_() {\n    var legendId = \"captions-window-\" + this.id_;\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', \"<legend id=\\\"\" + legendId + \"\\\">\", this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  }\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  }\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  }\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n  ;\n\n  _proto.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: [\"<button type=\\\"button\\\" class=\\\"vjs-default-button\\\" title=\\\"\" + defaultsDescription + \"\\\">\", this.localize('Reset'), \"<span class=\\\"vjs-control-text\\\"> \" + defaultsDescription + \"</span>\", '</button>', \"<button type=\\\"button\\\" class=\\\"vjs-done-button\\\">\" + this.localize('Done') + \"</button>\"].join('')\n    });\n  };\n\n  _proto.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  _proto.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  _proto.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  _proto.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  }\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  }\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n  ;\n\n  _proto.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  }\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n  ;\n\n  _proto.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config[\"default\"] : 0;\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  }\n  /**\n   * Restore texttrack settings from localStorage\n   */\n  ;\n\n  _proto.restoreSettings = function restoreSettings() {\n    var values;\n\n    try {\n      values = JSON.parse(window$1.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  }\n  /**\n   * Save text track settings to localStorage\n   */\n  ;\n\n  _proto.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window$1.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n      } else {\n        window$1.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  }\n  /**\n   * Update display of text track settings\n   */\n  ;\n\n  _proto.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  }\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n  ;\n\n  _proto.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    var _this;\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window$1.ResizeObserver; // if `null` was passed, we want to disable the ResizeObserver\n\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    } // Only create an element when ResizeObserver isn't available\n\n\n    var options_ = mergeOptions$3({\n      createEl: !RESIZE_OBSERVER_AVAILABLE,\n      reportTouchActivity: false\n    }, options);\n    _this = _Component.call(this, player, options_) || this;\n    _this.ResizeObserver = options.ResizeObserver || window$1.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, _assertThisInitialized(_this));\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (!_this.el_ || !_this.el_.contentWindow) {\n          return;\n        }\n\n        var debouncedHandler_ = _this.debouncedHandler_;\n\n        var unloadListener_ = _this.unloadListener_ = function () {\n          off(this, 'resize', debouncedHandler_);\n          off(this, 'unload', unloadListener_);\n          unloadListener_ = null;\n        }; // safari and edge can unload the iframe before resizemanager dispose\n        // we have to dispose of event handlers correctly before that happens\n\n\n        on(_this.el_.contentWindow, 'unload', unloadListener_);\n        on(_this.el_.contentWindow, 'resize', debouncedHandler_);\n      };\n\n      _this.one('load', _this.loadListener_);\n    }\n\n    return _this;\n  }\n\n  var _proto = ResizeManager.prototype;\n\n  _proto.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager',\n      tabIndex: -1,\n      title: this.localize('No content')\n    }, {\n      'aria-hidden': 'true'\n    });\n  }\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n  ;\n\n  _proto.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    // make sure player is still around to trigger\n    // prevents this from causing an error after dispose\n    if (!this.player_ || !this.player_.trigger) {\n      return;\n    }\n\n    this.player_.trigger('playerresize');\n  };\n\n  _proto.dispose = function dispose() {\n    if (this.debouncedHandler_) {\n      this.debouncedHandler_.cancel();\n    }\n\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n      this.unloadListener_.call(this.el_.contentWindow);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return ResizeManager;\n}(Component$1);\n\nComponent$1.registerComponent('ResizeManager', ResizeManager);\n\nvar defaults = {\n  trackingThreshold: 20,\n  liveTolerance: 15\n};\n/*\n  track when we are at the live edge, and other helpers for live playback */\n\n/**\n * A class for checking live current time and determining when the player\n * is at or behind the live edge.\n */\n\nvar LiveTracker = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(LiveTracker, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {number} [options.trackingThreshold=20]\n   *        Number of seconds of live window (seekableEnd - seekableStart) that\n   *        media needs to have before the liveui will be shown.\n   *\n   * @param {number} [options.liveTolerance=15]\n   *        Number of seconds behind live that we have to be\n   *        before we will be considered non-live. Note that this will only\n   *        be used when playing at the live edge. This allows large seekable end\n   *        changes to not effect wether we are live or not.\n   */\n  function LiveTracker(player, options) {\n    var _this;\n\n    // LiveTracker does not need an element\n    var options_ = mergeOptions$3(defaults, options, {\n      createEl: false\n    });\n    _this = _Component.call(this, player, options_) || this;\n\n    _this.handleVisibilityChange_ = function (e) {\n      return _this.handleVisibilityChange(e);\n    };\n\n    _this.trackLiveHandler_ = function () {\n      return _this.trackLive_();\n    };\n\n    _this.handlePlay_ = function (e) {\n      return _this.handlePlay(e);\n    };\n\n    _this.handleFirstTimeupdate_ = function (e) {\n      return _this.handleFirstTimeupdate(e);\n    };\n\n    _this.handleSeeked_ = function (e) {\n      return _this.handleSeeked(e);\n    };\n\n    _this.seekToLiveEdge_ = function (e) {\n      return _this.seekToLiveEdge(e);\n    };\n\n    _this.reset_();\n\n    _this.on(_this.player_, 'durationchange', function (e) {\n      return _this.handleDurationchange(e);\n    }); // we should try to toggle tracking on canplay as native playback engines, like Safari\n    // may not have the proper values for things like seekableEnd until then\n\n\n    _this.on(_this.player_, 'canplay', function () {\n      return _this.toggleTracking();\n    }); // we don't need to track live playback if the document is hidden,\n    // also, tracking when the document is hidden can\n    // cause the CPU to spike and eventually crash the page on IE11.\n\n\n    if (IE_VERSION && 'hidden' in document && 'visibilityState' in document) {\n      _this.on(document, 'visibilitychange', _this.handleVisibilityChange_);\n    }\n\n    return _this;\n  }\n  /**\n   * toggle tracking based on document visiblility\n   */\n\n\n  var _proto = LiveTracker.prototype;\n\n  _proto.handleVisibilityChange = function handleVisibilityChange() {\n    if (this.player_.duration() !== Infinity) {\n      return;\n    }\n\n    if (document.hidden) {\n      this.stopTracking();\n    } else {\n      this.startTracking();\n    }\n  }\n  /**\n   * all the functionality for tracking when seek end changes\n   * and for tracking how far past seek end we should be\n   */\n  ;\n\n  _proto.trackLive_ = function trackLive_() {\n    var seekable = this.player_.seekable(); // skip undefined seekable\n\n    if (!seekable || !seekable.length) {\n      return;\n    }\n\n    var newTime = Number(window$1.performance.now().toFixed(4));\n    var deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n    this.lastTime_ = newTime;\n    this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n    var liveCurrentTime = this.liveCurrentTime();\n    var currentTime = this.player_.currentTime(); // we are behind live if any are true\n    // 1. the player is paused\n    // 2. the user seeked to a location 2 seconds away from live\n    // 3. the difference between live and current time is greater\n    //    liveTolerance which defaults to 15s\n\n    var isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance; // we cannot be behind if\n    // 1. until we have not seen a timeupdate yet\n    // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n\n    if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n      isBehind = false;\n    }\n\n    if (isBehind !== this.behindLiveEdge_) {\n      this.behindLiveEdge_ = isBehind;\n      this.trigger('liveedgechange');\n    }\n  }\n  /**\n   * handle a durationchange event on the player\n   * and start/stop tracking accordingly.\n   */\n  ;\n\n  _proto.handleDurationchange = function handleDurationchange() {\n    this.toggleTracking();\n  }\n  /**\n   * start/stop tracking\n   */\n  ;\n\n  _proto.toggleTracking = function toggleTracking() {\n    if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n      if (this.player_.options_.liveui) {\n        this.player_.addClass('vjs-liveui');\n      }\n\n      this.startTracking();\n    } else {\n      this.player_.removeClass('vjs-liveui');\n      this.stopTracking();\n    }\n  }\n  /**\n   * start tracking live playback\n   */\n  ;\n\n  _proto.startTracking = function startTracking() {\n    if (this.isTracking()) {\n      return;\n    } // If we haven't seen a timeupdate, we need to check whether playback\n    // began before this component started tracking. This can happen commonly\n    // when using autoplay.\n\n\n    if (!this.timeupdateSeen_) {\n      this.timeupdateSeen_ = this.player_.hasStarted();\n    }\n\n    this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n    this.trackLive_();\n    this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n\n    if (!this.timeupdateSeen_) {\n      this.one(this.player_, 'play', this.handlePlay_);\n      this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    } else {\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n  }\n  /**\n   * handle the first timeupdate on the player if it wasn't already playing\n   * when live tracker started tracking.\n   */\n  ;\n\n  _proto.handleFirstTimeupdate = function handleFirstTimeupdate() {\n    this.timeupdateSeen_ = true;\n    this.on(this.player_, 'seeked', this.handleSeeked_);\n  }\n  /**\n   * Keep track of what time a seek starts, and listen for seeked\n   * to find where a seek ends.\n   */\n  ;\n\n  _proto.handleSeeked = function handleSeeked() {\n    var timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n    this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n    this.nextSeekedFromUser_ = false;\n    this.trackLive_();\n  }\n  /**\n   * handle the first play on the player, and make sure that we seek\n   * right to the live edge.\n   */\n  ;\n\n  _proto.handlePlay = function handlePlay() {\n    this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n  /**\n   * Stop tracking, and set all internal variables to\n   * their initial value.\n   */\n  ;\n\n  _proto.reset_ = function reset_() {\n    this.lastTime_ = -1;\n    this.pastSeekEnd_ = 0;\n    this.lastSeekEnd_ = -1;\n    this.behindLiveEdge_ = true;\n    this.timeupdateSeen_ = false;\n    this.seekedBehindLive_ = false;\n    this.nextSeekedFromUser_ = false;\n    this.clearInterval(this.trackingInterval_);\n    this.trackingInterval_ = null;\n    this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n    this.off(this.player_, 'seeked', this.handleSeeked_);\n    this.off(this.player_, 'play', this.handlePlay_);\n    this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n    this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n  }\n  /**\n   * The next seeked event is from the user. Meaning that any seek\n   * > 2s behind live will be considered behind live for real and\n   * liveTolerance will be ignored.\n   */\n  ;\n\n  _proto.nextSeekedFromUser = function nextSeekedFromUser() {\n    this.nextSeekedFromUser_ = true;\n  }\n  /**\n   * stop tracking live playback\n   */\n  ;\n\n  _proto.stopTracking = function stopTracking() {\n    if (!this.isTracking()) {\n      return;\n    }\n\n    this.reset_();\n    this.trigger('liveedgechange');\n  }\n  /**\n   * A helper to get the player seekable end\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The furthest seekable end or Infinity.\n   */\n  ;\n\n  _proto.seekableEnd = function seekableEnd() {\n    var seekable = this.player_.seekable();\n    var seekableEnds = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableEnds.push(seekable.end(i));\n    } // grab the furthest seekable end after sorting, or if there are none\n    // default to Infinity\n\n\n    return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n  }\n  /**\n   * A helper to get the player seekable start\n   * so that we don't have to null check everywhere\n   *\n   * @return {number}\n   *         The earliest seekable start or 0.\n   */\n  ;\n\n  _proto.seekableStart = function seekableStart() {\n    var seekable = this.player_.seekable();\n    var seekableStarts = [];\n    var i = seekable ? seekable.length : 0;\n\n    while (i--) {\n      seekableStarts.push(seekable.start(i));\n    } // grab the first seekable start after sorting, or if there are none\n    // default to 0\n\n\n    return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n  }\n  /**\n   * Get the live time window aka\n   * the amount of time between seekable start and\n   * live current time.\n   *\n   * @return {number}\n   *         The amount of seconds that are seekable in\n   *         the live video.\n   */\n  ;\n\n  _proto.liveWindow = function liveWindow() {\n    var liveCurrentTime = this.liveCurrentTime(); // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n\n    if (liveCurrentTime === Infinity) {\n      return 0;\n    }\n\n    return liveCurrentTime - this.seekableStart();\n  }\n  /**\n   * Determines if the player is live, only checks if this component\n   * is tracking live playback or not\n   *\n   * @return {boolean}\n   *         Wether liveTracker is tracking\n   */\n  ;\n\n  _proto.isLive = function isLive() {\n    return this.isTracking();\n  }\n  /**\n   * Determines if currentTime is at the live edge and won't fall behind\n   * on each seekableendchange\n   *\n   * @return {boolean}\n   *         Wether playback is at the live edge\n   */\n  ;\n\n  _proto.atLiveEdge = function atLiveEdge() {\n    return !this.behindLiveEdge();\n  }\n  /**\n   * get what we expect the live current time to be\n   *\n   * @return {number}\n   *         The expected live current time\n   */\n  ;\n\n  _proto.liveCurrentTime = function liveCurrentTime() {\n    return this.pastSeekEnd() + this.seekableEnd();\n  }\n  /**\n   * The number of seconds that have occured after seekable end\n   * changed. This will be reset to 0 once seekable end changes.\n   *\n   * @return {number}\n   *         Seconds past the current seekable end\n   */\n  ;\n\n  _proto.pastSeekEnd = function pastSeekEnd() {\n    var seekableEnd = this.seekableEnd();\n\n    if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n      this.pastSeekEnd_ = 0;\n    }\n\n    this.lastSeekEnd_ = seekableEnd;\n    return this.pastSeekEnd_;\n  }\n  /**\n   * If we are currently behind the live edge, aka currentTime will be\n   * behind on a seekableendchange\n   *\n   * @return {boolean}\n   *         If we are behind the live edge\n   */\n  ;\n\n  _proto.behindLiveEdge = function behindLiveEdge() {\n    return this.behindLiveEdge_;\n  }\n  /**\n   * Wether live tracker is currently tracking or not.\n   */\n  ;\n\n  _proto.isTracking = function isTracking() {\n    return typeof this.trackingInterval_ === 'number';\n  }\n  /**\n   * Seek to the live edge if we are behind the live edge\n   */\n  ;\n\n  _proto.seekToLiveEdge = function seekToLiveEdge() {\n    this.seekedBehindLive_ = false;\n\n    if (this.atLiveEdge()) {\n      return;\n    }\n\n    this.nextSeekedFromUser_ = false;\n    this.player_.currentTime(this.liveCurrentTime());\n  }\n  /**\n   * Dispose of liveTracker\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.off(document, 'visibilitychange', this.handleVisibilityChange_);\n    this.stopTracking();\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  return LiveTracker;\n}(Component$1);\n\nComponent$1.registerComponent('LiveTracker', LiveTracker);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\n\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el(); // if `el.src` is set, that source will be loaded.\n\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n\n\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = ''; // if there are no sources, do not fire sourceset\n\n  if (!sources.length) {\n    return false;\n  } // only count valid/non-duplicate source elements\n\n\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  } // there were no valid sources\n\n\n  if (!srcUrls.length) {\n    return false;\n  } // there is only one valid source element url\n  // use that\n\n\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\n\n\nvar innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n  get: function get() {\n    return this.cloneNode(true).innerHTML;\n  },\n  set: function set(v) {\n    // make a dummy node to use innerHTML on\n    var dummy = document.createElement(this.nodeName.toLowerCase()); // set innerHTML to the value provided\n\n    dummy.innerHTML = v; // make a document fragment to hold the nodes from dummy\n\n    var docFrag = document.createDocumentFragment(); // copy all of the nodes created by the innerHTML on dummy\n    // to the document fragment\n\n    while (dummy.childNodes.length) {\n      docFrag.appendChild(dummy.childNodes[0]);\n    } // remove content\n\n\n    this.innerText = ''; // now we add all of that html in one by appending the\n    // document fragment. This is how innerHTML does it.\n\n    window$1.Element.prototype.appendChild.call(this, docFrag); // then return the result that innerHTML's setter would\n\n    return this.innerHTML;\n  }\n});\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\n\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, window$1.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n/**\n * Patches browser internal functions so that we can tell synchronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\n\n\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el(); // make sure firstSourceWatch isn't setup twice.\n\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    } // store the old function\n\n\n    old[k] = el[k]; // call the old function with a sourceset if a source\n    // was loaded\n\n    el[k] = appendWrapper(old[k]);\n  });\n  Object.defineProperty(el, 'innerHTML', mergeOptions$3(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  }; // on the first sourceset, we need to revert our changes\n\n\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\n\nvar srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n  get: function get() {\n    if (this.hasAttribute('src')) {\n      return getAbsoluteURL(window$1.Element.prototype.getAttribute.call(this, 'src'));\n    }\n\n    return '';\n  },\n  set: function set(v) {\n    window$1.Element.prototype.setAttribute.call(this, 'src', v);\n    return v;\n  }\n});\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window$1.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\n\n\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el(); // make sure sourceset isn't setup twice.\n\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n  Object.defineProperty(el, 'src', mergeOptions$3(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v); // we use the getter here to get the actual value set on src\n\n      tech.triggerSourceset(el.src);\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el); // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\n/**\n * Object.defineProperty but \"lazy\", which means that the value is only set after\n * it retrieved the first time, rather than being set right away.\n *\n * @param {Object} obj the object to set the property on\n * @param {string} key the key for the property to set\n * @param {Function} getValue the function used to get the value when it is needed.\n * @param {boolean} setter wether a setter shoould be allowed or not\n */\nvar defineLazyProperty = function defineLazyProperty(obj, key, getValue, setter) {\n  if (setter === void 0) {\n    setter = true;\n  }\n\n  var set = function set(value) {\n    return Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      writable: true\n    });\n  };\n\n  var options = {\n    configurable: true,\n    enumerable: true,\n    get: function get() {\n      var value = getValue();\n      set(value);\n      return value;\n    }\n  };\n\n  if (setter) {\n    options.set = set;\n  }\n\n  return Object.defineProperty(obj, key, options);\n};\n\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SourceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = /*#__PURE__*/function (_Tech) {\n  _inheritsLoose(Html5, _Tech);\n\n  /**\n  * Create an instance of this Tech.\n  *\n  * @param {Object} [options]\n  *        The key/value store of player options.\n  *\n  * @param {Component~ReadyCallback} ready\n  *        Callback function to call when the `HTML5` Tech is ready.\n  */\n  function Html5(options, ready) {\n    var _this;\n\n    _this = _Tech.call(this, options, ready) || this;\n    var source = options.source;\n    var crossoriginTracks = false;\n    _this.featuresVideoFrameCallback = _this.featuresVideoFrameCallback && _this.el_.tagName === 'VIDEO'; // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    } // setup sourceset after late sourceset/init\n\n\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    _this.isScrubbing_ = false;\n\n    if (_this.el_.hasChildNodes()) {\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n\n            _this.remoteTextTracks().addTrack(node.track);\n\n            _this.textTracks().addTrack(node.track);\n\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n    } // prevent iOS Safari from disabling metadata text tracks during native playback\n\n\n    _this.restoreMetadataTracksInIOSNativePlayer_(); // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n\n\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    } // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n\n\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n\n    return _this;\n  }\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  var _proto = Html5.prototype;\n\n  _proto.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null; // tech will handle clearing of the emulated track list\n\n    _Tech.prototype.dispose.call(this);\n  }\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n  ;\n\n  _proto.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  }\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n  ;\n\n  _proto.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState; // captures a snapshot of every metadata track's current state\n\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    }; // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n\n\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      } // we only want this handler to be executed on the first 'change' event\n\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    }; // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n\n\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot); // remove the listener before adding it just in case it wasn't previously removed\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    }); // start updating the snapshot again after leaving fullscreen\n\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot); // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  }\n  /**\n   * Attempt to force override of tracks for the given type\n   *\n   * @param {string} type - Track type to override, possible values include 'Audio',\n   * 'Video', and 'Text'.\n   * @param {boolean} override - If set to true native audio/video will be overridden,\n   * otherwise native audio/video will potentially be used.\n   * @private\n   */\n  ;\n\n  _proto.overrideNative_ = function overrideNative_(type, override) {\n    var _this2 = this;\n\n    // If there is no behavioral change don't add/remove listeners\n    if (override !== this[\"featuresNative\" + type + \"Tracks\"]) {\n      return;\n    }\n\n    var lowerCaseType = type.toLowerCase();\n\n    if (this[lowerCaseType + \"TracksListeners_\"]) {\n      Object.keys(this[lowerCaseType + \"TracksListeners_\"]).forEach(function (eventName) {\n        var elTracks = _this2.el()[lowerCaseType + \"Tracks\"];\n\n        elTracks.removeEventListener(eventName, _this2[lowerCaseType + \"TracksListeners_\"][eventName]);\n      });\n    }\n\n    this[\"featuresNative\" + type + \"Tracks\"] = !override;\n    this[lowerCaseType + \"TracksListeners_\"] = null;\n    this.proxyNativeTracksForType_(lowerCaseType);\n  }\n  /**\n   * Attempt to force override of native audio tracks.\n   *\n   * @param {boolean} override - If set to true native audio will be overridden,\n   * otherwise native audio will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeAudioTracks = function overrideNativeAudioTracks(override) {\n    this.overrideNative_('Audio', override);\n  }\n  /**\n   * Attempt to force override of native video tracks.\n   *\n   * @param {boolean} override - If set to true native video will be overridden,\n   * otherwise native video will potentially be used.\n   */\n  ;\n\n  _proto.overrideNativeVideoTracks = function overrideNativeVideoTracks(override) {\n    this.overrideNative_('Video', override);\n  }\n  /**\n   * Proxy native track list events for the given type to our track\n   * lists if the browser we are playing in supports that type of track list.\n   *\n   * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracksForType_ = function proxyNativeTracksForType_(name) {\n    var _this3 = this;\n\n    var props = NORMAL[name];\n    var elTracks = this.el()[props.getterName];\n    var techTracks = this[props.getterName]();\n\n    if (!this[\"featuresNative\" + props.capitalName + \"Tracks\"] || !elTracks || !elTracks.addEventListener) {\n      return;\n    }\n\n    var listeners = {\n      change: function change(e) {\n        var event = {\n          type: 'change',\n          target: techTracks,\n          currentTarget: techTracks,\n          srcElement: techTracks\n        };\n        techTracks.trigger(event); // if we are a text track change event, we should also notify the\n        // remote text track list. This can potentially cause a false positive\n        // if we were to get a change event on a non-remote track and\n        // we triggered the event on the remote text track list which doesn't\n        // contain that track. However, best practices mean looping through the\n        // list of tracks and searching for the appropriate mode value, so,\n        // this shouldn't pose an issue\n\n        if (name === 'text') {\n          _this3[REMOTE.remoteText.getterName]().trigger(event);\n        }\n      },\n      addtrack: function addtrack(e) {\n        techTracks.addTrack(e.track);\n      },\n      removetrack: function removetrack(e) {\n        techTracks.removeTrack(e.track);\n      }\n    };\n\n    var removeOldTracks = function removeOldTracks() {\n      var removeTracks = [];\n\n      for (var i = 0; i < techTracks.length; i++) {\n        var found = false;\n\n        for (var j = 0; j < elTracks.length; j++) {\n          if (elTracks[j] === techTracks[i]) {\n            found = true;\n            break;\n          }\n        }\n\n        if (!found) {\n          removeTracks.push(techTracks[i]);\n        }\n      }\n\n      while (removeTracks.length) {\n        techTracks.removeTrack(removeTracks.shift());\n      }\n    };\n\n    this[props.getterName + 'Listeners_'] = listeners;\n    Object.keys(listeners).forEach(function (eventName) {\n      var listener = listeners[eventName];\n      elTracks.addEventListener(eventName, listener);\n\n      _this3.on('dispose', function (e) {\n        return elTracks.removeEventListener(eventName, listener);\n      });\n    }); // Remove (native) tracks that are not used anymore\n\n    this.on('loadstart', removeOldTracks);\n    this.on('dispose', function (e) {\n      return _this3.off('loadstart', removeOldTracks);\n    });\n  }\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n  ;\n\n  _proto.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this4 = this;\n\n    NORMAL.names.forEach(function (name) {\n      _this4.proxyNativeTracksForType_(name);\n    });\n  }\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var el = this.options_.tag; // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video'); // determine if native controls should be used\n\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions$3({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          \"class\": 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    if (this.options_.disablePictureInPicture !== undefined) {\n      el.disablePictureInPicture = this.options_.disablePictureInPicture;\n    } // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n\n\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  }\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n  ;\n\n  _proto.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n      return;\n    } // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n\n\n    var eventsToTrigger = ['loadstart']; // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n\n    eventsToTrigger.push('loadedmetadata'); // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    } // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n\n\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    } // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n\n\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    } // We still need to give the player time to add event listeners\n\n\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  }\n  /**\n   * Set whether we are scrubbing or not.\n   * This is used to decide whether we should use `fastSeek` or not.\n   * `fastSeek` is used to provide trick play on Safari browsers.\n   *\n   * @param {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  ;\n\n  _proto.setScrubbing = function setScrubbing(isScrubbing) {\n    this.isScrubbing_ = isScrubbing;\n  }\n  /**\n   * Get whether we are scrubbing or not.\n   *\n   * @return {boolean} isScrubbing\n   *                  - true for we are currently scrubbing\n   *                  - false for we are no longer scrubbing\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing() {\n    return this.isScrubbing_;\n  }\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n        this.el_.fastSeek(seconds);\n      } else {\n        this.el_.currentTime = seconds;\n      }\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)'); // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  }\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n  ;\n\n  _proto.duration = function duration() {\n    var _this5 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this5.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this5.el_.duration === Infinity) {\n            _this5.trigger('durationchange');\n          }\n\n          _this5.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n\n    return this.el_.duration || NaN;\n  }\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n  ;\n\n  _proto.width = function width() {\n    return this.el_.offsetWidth;\n  }\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The height of the HTML5 media element.\n   */\n  ;\n\n  _proto.height = function height() {\n    return this.el_.offsetHeight;\n  }\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n  ;\n\n  _proto.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this6 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', {\n        isFullscreen: false\n      }); // Safari will sometimes set contols on the videoelement when existing fullscreen.\n\n      if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n        this.el_.controls = false;\n      }\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n        this.trigger('fullscreenchange', {\n          isFullscreen: true,\n          // set a flag in case another tech triggers fullscreenchange\n          nativeIOSFullscreen: true\n        });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this6.off('webkitbeginfullscreen', beginFn);\n\n      _this6.off('webkitendfullscreen', endFn);\n    });\n  }\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window$1.navigator && window$1.navigator.userAgent || ''; // Seems to be broken in Chromium/Chrome && Safari in Leopard\n\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n  ;\n\n  _proto.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      silencePromise(this.el_.play()); // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n\n      this.setTimeout(function () {\n        video.pause();\n\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }, 0);\n    } else {\n      try {\n        video.webkitEnterFullScreen();\n      } catch (e) {\n        this.trigger('fullscreenerror', e);\n      }\n    }\n  }\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n  ;\n\n  _proto.exitFullScreen = function exitFullScreen() {\n    if (!this.el_.webkitDisplayingFullscreen) {\n      this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n      return;\n    }\n\n    this.el_.webkitExitFullScreen();\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    return this.el_.requestPictureInPicture();\n  }\n  /**\n   * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n   * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n   * Needs to be checked later than the constructor\n   * This will be a false positive for clear sources loaded after a Fairplay source\n   *\n   * @param {function} cb function to call\n   * @return {number} id of request\n   */\n  ;\n\n  _proto.requestVideoFrameCallback = function requestVideoFrameCallback(cb) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      return this.el_.requestVideoFrameCallback(cb);\n    }\n\n    return _Tech.prototype.requestVideoFrameCallback.call(this, cb);\n  }\n  /**\n   * Native or fallback requestVideoFrameCallback\n   *\n   * @param {number} id request id to cancel\n   */\n  ;\n\n  _proto.cancelVideoFrameCallback = function cancelVideoFrameCallback(id) {\n    if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n      this.el_.cancelVideoFrameCallback(id);\n    } else {\n      _Tech.prototype.cancelVideoFrameCallback.call(this, id);\n    }\n  }\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n  ;\n\n  _proto.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    } // Setting src through `src` instead of `setSrc` will be deprecated\n\n\n    this.setSrc(_src);\n  }\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  }\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n\n    return this.el_.currentSrc;\n  }\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n  ;\n\n  _proto.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  }\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  }\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label]\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n  ;\n\n  _proto.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n\n    if (options[\"default\"]) {\n      htmlTrackElement[\"default\"] = options[\"default\"];\n    }\n\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  }\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window$1.performance && typeof window$1.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window$1.performance.now();\n    } else if (window$1.performance && window$1.performance.timing && typeof window$1.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window$1.Date.now() - window$1.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n/* HTML5 Support Testing ---------------------------------------------------- */\n\n/**\n * Element for testing browser HTML5 media capabilities\n *\n * @type {Element}\n * @constant\n * @private\n */\n\n\ndefineLazyProperty(Html5, 'TEST_VID', function () {\n  if (!isReal()) {\n    return;\n  }\n\n  var video = document.createElement('video');\n  var track = document.createElement('track');\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  video.appendChild(track);\n  return video;\n});\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\n\nHtml5.isSupported = function () {\n  // IE with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n/**\n * Check if the tech can support the given source\n *\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\n\n\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    var canControl = volume !== Html5.TEST_VID.volume; // With the introduction of iOS 15, there are cases where the volume is read as\n    // changed but reverts back to its original state at the start of the next tick.\n    // To determine whether volume can be controlled on iOS,\n    // a timeout is set and the volume is checked asynchronously.\n    // Since `features` doesn't currently work asynchronously, the value is manually set.\n\n    if (canControl && IS_IOS) {\n      window$1.setTimeout(function () {\n        if (Html5 && Html5.prototype) {\n          Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n        }\n      }); // default iOS to false, which will be updated in the timeout above.\n\n      return false;\n    }\n\n    return canControl;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\n\n\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted; // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n\n    Html5.TEST_VID.muted = !muted;\n\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\n\n\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  } // IE will error if Windows Media Player not installed #3315\n\n\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overridden\n *         - False otherwise\n */\n\n\nHtml5.canOverrideAttributes = function () {\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'src', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n      get: noop,\n      set: noop\n    });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\n\n\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\n\n\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\n\n\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\n\n/**\n * Boolean indicating whether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\n\n[['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function (_ref) {\n  var key = _ref[0],\n      fn = _ref[1];\n  defineLazyProperty(Html5.prototype, key, function () {\n    return Html5[fn]();\n  }, true);\n});\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS; // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresFullscreenResize = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggered instead.\n *\n * @type {boolean}\n * @default\n */\n\nHtml5.prototype.featuresProgressEvents = true;\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggered instead.\n *\n * @default\n */\n\nHtml5.prototype.featuresTimeupdateEvents = true;\n/**\n * Whether the HTML5 el supports `requestVideoFrameCallback`\n *\n * @type {boolean}\n */\n\nHtml5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback); // HTML5 Feature detection and Device Fixes --------------------------------- //\n\nvar canPlayType;\n\nHtml5.patchCanPlayType = function () {\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\n\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      var mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\n\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  if (canPlayType) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  }\n\n  return r;\n}; // by default, patch the media element\n\n\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  } // remove any child track or source nodes to prevent their loading\n\n\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  } // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n\n\n  el.removeAttribute('src'); // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  } // remove any src reference.\n  // not setting `src=''` because that throws an error\n\n\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {// satisfy linter\n      }\n    })();\n  }\n};\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n\n\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n}); // Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on initial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n}); // Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n// played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occurred during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - False indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n/**\n * Get the value of 'disablePictureInPicture' from the video element.\n *\n * @method Html5#disablePictureInPicture\n * @return {boolean} value\n *         - The value of `disablePictureInPicture` from the video element.\n *         - True indicates that the video can't be played in Picture-In-Picture mode\n *         - False indicates that the video can be played in Picture-In-Picture mode\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NETWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n/**\n * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight',\n/**\n * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#crossOrigin\n * @return {string}\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n}); // Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n// setDisablePictureInPicture, setCrossOrigin\n\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate',\n/**\n * Prevents the browser from suggesting a Picture-in-Picture context menu\n * or to request Picture-in-Picture automatically in some cases.\n *\n * @method Html5#setDisablePictureInPicture\n * @param {boolean} value\n *         The true value will disable Picture-in-Picture mode.\n *\n * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n */\n'disablePictureInPicture',\n/**\n * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n * to the browser that should sent the cookies along with the requests for the\n * different assets/playlists\n *\n * @method Html5#setCrossOrigin\n * @param {string} crossOrigin\n *         - anonymous indicates that the media should not sent cookies.\n *         - use-credentials indicates that the media should sent cookies along the requests.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n */\n'crossOrigin'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n}); // wrap native functions with a function\n// The list is as follows:\n// pause, load, play\n\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\nTech.withSourceHandlers(Html5);\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @property {Tech~SourceObject} source\n *        The source object\n *\n * @property {Html5} tech\n *        The instance of the HTML5 tech.\n */\n\nHtml5.nativeSourceHandler = {};\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\n\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE without MediaPlayer throws an error (#519)\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\n\n\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type); // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n    return Html5.nativeSourceHandler.canPlayType(\"video/\" + ext);\n  }\n\n  return '';\n};\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\n\n\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\n\n\nHtml5.nativeSourceHandler.dispose = function () {}; // Register the native source handler\n\n\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\nTech.registerTech('Html5', Html5);\n\n// on the player when they happen\n\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange']; // events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\n\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\nvar BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\nvar BREAKPOINT_CLASSES = {}; // grep: vjs-layout-tiny\n// grep: vjs-layout-x-small\n// grep: vjs-layout-small\n// grep: vjs-layout-medium\n// grep: vjs-layout-large\n// grep: vjs-layout-x-large\n// grep: vjs-layout-huge\n\nBREAKPOINT_ORDER.forEach(function (k) {\n  var v = k.charAt(0) === 'x' ? \"x-\" + k.substring(1) : k;\n  BREAKPOINT_CLASSES[k] = \"vjs-layout-\" + v;\n});\nvar DEFAULT_BREAKPOINTS = {\n  tiny: 210,\n  xsmall: 320,\n  small: 425,\n  medium: 768,\n  large: 1440,\n  xlarge: 2560,\n  huge: Infinity\n};\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    var _this;\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || \"vjs_video_\" + newGUID(); // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n\n    options = assign(Player.getTagSettings(tag), options); // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n\n    options.initChildren = false; // Same with creating the element\n\n    options.createEl = false; // don't auto mixin the evented mixin\n\n    options.evented = false; // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n\n    options.reportTouchActivity = false; // If language is not set, get the closest lang attribute\n\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n\n          element = element.parentNode;\n        }\n      }\n    } // Run base component initializing with new options\n\n\n    _this = _Component.call(this, null, options, ready) || this; // Create bound methods for document listeners.\n\n    _this.boundDocumentFullscreenChange_ = function (e) {\n      return _this.documentFullscreenChange_(e);\n    };\n\n    _this.boundFullWindowOnEscKey_ = function (e) {\n      return _this.fullWindowOnEscKey(e);\n    };\n\n    _this.boundUpdateStyleEl_ = function (e) {\n      return _this.updateStyleEl_(e);\n    };\n\n    _this.boundApplyInitTime_ = function (e) {\n      return _this.applyInitTime_(e);\n    };\n\n    _this.boundUpdateCurrentBreakpoint_ = function (e) {\n      return _this.updateCurrentBreakpoint_(e);\n    };\n\n    _this.boundHandleTechClick_ = function (e) {\n      return _this.handleTechClick_(e);\n    };\n\n    _this.boundHandleTechDoubleClick_ = function (e) {\n      return _this.handleTechDoubleClick_(e);\n    };\n\n    _this.boundHandleTechTouchStart_ = function (e) {\n      return _this.handleTechTouchStart_(e);\n    };\n\n    _this.boundHandleTechTouchMove_ = function (e) {\n      return _this.handleTechTouchMove_(e);\n    };\n\n    _this.boundHandleTechTouchEnd_ = function (e) {\n      return _this.handleTechTouchEnd_(e);\n    };\n\n    _this.boundHandleTechTap_ = function (e) {\n      return _this.handleTechTap_(e);\n    }; // default isFullscreen_ to false\n\n\n    _this.isFullscreen_ = false; // create logger\n\n    _this.log = createLogger(_this.id_); // Hold our own reference to fullscreen api so it can be mocked in tests\n\n    _this.fsApi_ = FullscreenApi; // Tracks when a tech changes the poster\n\n    _this.isPosterFromTech_ = false; // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n\n    _this.queuedCallbacks_ = []; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    _this.isReady_ = false; // Init state hasStarted_\n\n    _this.hasStarted_ = false; // Init state userActive_\n\n    _this.userActive_ = false; // Init debugEnabled_\n\n    _this.debugEnabled_ = false; // Init state audioOnlyMode_\n\n    _this.audioOnlyMode_ = false; // Init state audioPosterMode_\n\n    _this.audioPosterMode_ = false; // Init state audioOnlyCache_\n\n    _this.audioOnlyCache_ = {\n      playerHeight: null,\n      hiddenChildren: []\n    }; // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    } // Store the original tag used to set options\n\n\n    _this.tag = tag; // Store the tag attributes used to restore html5 element\n\n    _this.tagAttributes = tag && getAttributes(tag); // Update current language\n\n    _this.language(_this.options_.language); // Update Supported Languages\n\n\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n      Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n        languagesToLower[name.toLowerCase()] = options.languages[name];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    _this.resetCache_(); // Set poster\n\n\n    _this.poster_ = options.poster || ''; // Set controls\n\n    _this.controls_ = !!options.controls; // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n\n    tag.controls = false;\n    tag.removeAttribute('controls');\n    _this.changingSrc_ = false;\n    _this.playCallbacks_ = [];\n    _this.playTerminatedQueue_ = []; // the attribute overrides the option\n\n    if (tag.hasAttribute('autoplay')) {\n      _this.autoplay(true);\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    } // check plugins\n\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        if (typeof _this[name] !== 'function') {\n          throw new Error(\"plugin \\\"\" + name + \"\\\" does not exist\");\n        }\n      });\n    }\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n\n\n    _this.scrubbing_ = false;\n    _this.el_ = _this.createEl(); // Make this an evented object and use `el_` as its event bus.\n\n    evented(_assertThisInitialized(_this), {\n      eventBusKey: 'el_'\n    }); // listen to document and player fullscreenchange handlers so we receive those events\n    // before a user can receive them so we can update isFullscreen appropriately.\n    // make sure that we listen to fullscreenchange events before everything else to make sure that\n    // our isFullscreen method is updated properly for internal components as well as external.\n\n    if (_this.fsApi_.requestFullscreen) {\n      on(document, _this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n\n      _this.on(_this.fsApi_.fullscreenchange, _this.boundDocumentFullscreenChange_);\n    }\n\n    if (_this.fluid_) {\n      _this.on(['playerreset', 'resize'], _this.boundUpdateStyleEl_);\n    } // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n\n\n    var playerOptionsCopy = mergeOptions$3(_this.options_); // Load plugins\n\n    if (options.plugins) {\n      Object.keys(options.plugins).forEach(function (name) {\n        _this[name](options.plugins[name]);\n      });\n    } // Enable debug mode to fire debugon event for all plugins.\n\n\n    if (options.debug) {\n      _this.debug(true);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n    _this.middleware_ = [];\n\n    _this.playbackRates(options.playbackRates);\n\n    _this.initChildren(); // Set isAudio based on whether or not an audio tag was used\n\n\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio'); // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n\n\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    } // Set ARIA label and region role depending on player type\n\n\n    _this.el_.setAttribute('role', 'region');\n\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    } // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // TODO: Make this check be performed again when the window switches between monitors\n    // (See https://github.com/videojs/video.js/issues/5683)\n\n\n    if (TOUCH_ENABLED) {\n      _this.addClass('vjs-touch-enabled');\n    } // iOS Safari has broken hover handling\n\n\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    } // Make player easily findable by ID\n\n\n    Player.players[_this.id_] = _assertThisInitialized(_this); // Add a major version class to aid css in plugins\n\n    var majorVersion = version$5.split('.')[0];\n\n    _this.addClass(\"vjs-v\" + majorVersion); // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n\n\n    _this.userActive(true);\n\n    _this.reportUserActivity();\n\n    _this.one('play', function (e) {\n      return _this.listenForUserActivity_(e);\n    });\n\n    _this.on('stageclick', function (e) {\n      return _this.handleStageClick_(e);\n    });\n\n    _this.on('keydown', function (e) {\n      return _this.handleKeyDown(e);\n    });\n\n    _this.on('languagechange', function (e) {\n      return _this.handleLanguagechange(e);\n    });\n\n    _this.breakpoints(_this.options_.breakpoints);\n\n    _this.responsive(_this.options_.responsive); // Calling both the audio mode methods after the player is fully\n    // setup to be able to listen to the events triggered by them\n\n\n    _this.on('ready', function () {\n      // Calling the audioPosterMode method first so that\n      // the audioOnlyMode can take precedence when both options are set to true\n      _this.audioPosterMode(_this.options_.audioPosterMode);\n\n      _this.audioOnlyMode(_this.options_.audioOnlyMode);\n    });\n\n    return _this;\n  }\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  var _proto = Player.prototype;\n\n  _proto.dispose = function dispose() {\n    var _this2 = this;\n\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose'); // prevent dispose from being called twice\n\n    this.off('dispose'); // Make sure all player-specific document listeners are unbound. This is\n\n    off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n    off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    } // Kill reference to this player\n\n\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this); // remove all event handlers for track lists\n    // all tracks and track listeners are removed on\n    // tech dispose\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      var list = _this2[props.getterName](); // if it is not a native list\n      // we have to manually remove event listeners\n\n\n      if (list && list.off) {\n        list.off();\n      }\n    }); // the actual .el_ is removed here, or replaced if\n\n    _Component.prototype.dispose.call(this, {\n      restoreEl: this.options_.restoreEl\n    });\n  }\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n  ;\n\n  _proto.createEl = function createEl() {\n    var tag = this.tag;\n    var el;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    } // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n\n\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n      playerElIngest = this.playerElIngest_ = el; // move properties over from our custom `video-js` element\n      // to our new `video` element. This will move things like\n      // `src` or `controls` that were set via js before the player\n      // was initialized.\n\n      Object.keys(el).forEach(function (k) {\n        try {\n          tag[k] = el[k];\n        } catch (e) {// we got a a property like outerHTML which we can't actually copy, ignore it\n        }\n      });\n    } // set tabindex to -1 to remove the video element from the focus order\n\n\n    tag.setAttribute('tabindex', '-1');\n    attrs.tabindex = '-1'; // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button), and\n    // for the same issue with Chrome (on Windows) with JAWS.\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 or Chrome if JAWS is not being used\n\n    if (IE_VERSION || IS_CHROME && IS_WINDOWS) {\n      tag.setAttribute('role', 'application');\n      attrs.role = 'application';\n    } // Remove width/height attrs from tag so CSS can make it 100% width/height\n\n\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    if ('width' in attrs) {\n      delete attrs.width;\n    }\n\n    if ('height' in attrs) {\n      delete attrs.height;\n    }\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // don't copy over the class attribute to the player element when we're in a div embed\n      // the class is already set up properly in the divEmbed case\n      // and we want to make sure that the `video-js` class doesn't get lost\n      if (!(divEmbed && attr === 'class')) {\n        el.setAttribute(attr, attrs[attr]);\n      }\n\n      if (divEmbed) {\n        tag.setAttribute(attr, attrs[attr]);\n      }\n    }); // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech'; // Make player findable on elements\n\n    tag.player = el.player = this; // Default state of video is paused\n\n    this.addClass('vjs-paused'); // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    this.fill_ = false;\n    this.fluid_ = false; // Pass in the width/height/aspectRatio options which will update the style el\n\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fill(this.options_.fill);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio); // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n\n    this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin); // Hide any links within the video/audio tag,\n    // because IE doesn't hide them completely from screen readers.\n\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    } // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n\n\n    tag.initNetworkState_ = tag.networkState; // Wrap video tag in div (el/box) container\n\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    } // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n\n\n    prependTo(tag, el);\n    this.children_.unshift(tag); // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n\n    this.el_.setAttribute('lang', this.language_);\n    this.el_.setAttribute('translate', 'no');\n    this.el_ = el;\n    return el;\n  }\n  /**\n   * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string} [value]\n   *        The value to set the `Player`'s crossOrigin to. If an argument is\n   *        given, must be one of `anonymous` or `use-credentials`.\n   *\n   * @return {string|undefined}\n   *         - The current crossOrigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.crossOrigin = function crossOrigin(value) {\n    if (!value) {\n      return this.techGet_('crossOrigin');\n    }\n\n    if (value !== 'anonymous' && value !== 'use-credentials') {\n      log$1.warn(\"crossOrigin must be \\\"anonymous\\\" or \\\"use-credentials\\\", given \\\"\" + value + \"\\\"\");\n      return;\n    }\n\n    this.techCall_('setCrossOrigin', value);\n    return;\n  }\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n  ;\n\n  _proto.width = function width(value) {\n    return this.dimension('width', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n  ;\n\n  _proto.height = function height(value) {\n    return this.dimension('height', value);\n  }\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n  ;\n\n  _proto.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '' || value === 'auto') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error(\"Improper value \\\"\" + value + \"\\\" supplied for for \" + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * Turning this on will turn off fill mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fluid = function fluid(bool) {\n    var _this3 = this;\n\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (isEvented(this)) {\n      this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n    }\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n      this.fill(false);\n      addEventedCallback(this, function () {\n        _this3.on(['playerreset', 'resize'], _this3.boundUpdateStyleEl_);\n      });\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  }\n  /**\n   * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n   *\n   * Turning this on will turn off fluid mode.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will be a getter.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n  ;\n\n  _proto.fill = function fill(bool) {\n    if (bool === undefined) {\n      return !!this.fill_;\n    }\n\n    this.fill_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fill');\n      this.fluid(false);\n    } else {\n      this.removeClass('vjs-fill');\n    }\n  }\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player`'s aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n  ;\n\n  _proto.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    } // Check for width:height format\n\n\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n\n    this.aspectRatio_ = ratio; // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n\n    this.fluid(true);\n    this.updateStyleEl_();\n  }\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n  ;\n\n  _proto.updateStyleEl_ = function updateStyleEl_() {\n    if (window$1.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width;\n    var height;\n    var aspectRatio;\n    var idClass; // The aspect ratio is either used directly or to calculate width and height.\n\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    } // Get the ratio as a decimal we can use to calculate dimensions\n\n\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    } // Ensure the CSS class is valid by starting with an alpha character\n\n\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    } // Ensure the right class is still on the player for the style element\n\n\n    this.addClass(idClass);\n    setTextContent(this.styleEl_, \"\\n      .\" + idClass + \" {\\n        width: \" + width + \"px;\\n        height: \" + height + \"px;\\n      }\\n\\n      .\" + idClass + \".vjs-fluid:not(.vjs-audio-only-mode) {\\n        padding-top: \" + ratioMultiplier * 100 + \"%;\\n      }\\n    \");\n  }\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadTech_ = function loadTech_(techName, source) {\n    var _this4 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase$1(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1); // get rid of the HTML5 video tag as soon as we are using another tech\n\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName; // Turn off API access because we're loading a new tech that might load asynchronously\n\n    this.isReady_ = false;\n    var autoplay = this.autoplay(); // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n\n    if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n      autoplay = false;\n    } // Grab tech-specific options from player options and add source and parent element to use.\n\n\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + \"_\" + camelTechName + \"_api\",\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'disablePictureInPicture': this.options_.disablePictureInPicture,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset,\n      'Promise': this.options_.Promise\n    };\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      techOptions[props.getterName] = _this4[props.privateName];\n    });\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    } // Initialize tech instance\n\n\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error(\"No Tech named '\" + titleTechName + \"' exists! '\" + titleTechName + \"' should be registered using videojs.registerTech()'\");\n    }\n\n    this.tech_ = new TechClass(techOptions); // player.triggerReady is always async, so don't need this to be async\n\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_); // Listen to all HTML5-defined events and trigger them on the player\n\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this4.on(_this4.tech_, event, function (e) {\n        return _this4[\"handleTech\" + toTitleCase$1(event) + \"_\"](e);\n      });\n    });\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this4.on(_this4.tech_, event, function (eventObj) {\n        if (_this4.tech_.playbackRate() === 0 && _this4.tech_.seeking()) {\n          _this4.queuedCallbacks_.push({\n            callback: _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"].bind(_this4),\n            event: eventObj\n          });\n\n          return;\n        }\n\n        _this4[\"handleTech\" + TECH_EVENTS_QUEUE[event] + \"_\"](eventObj);\n      });\n    });\n    this.on(this.tech_, 'loadstart', function (e) {\n      return _this4.handleTechLoadStart_(e);\n    });\n    this.on(this.tech_, 'sourceset', function (e) {\n      return _this4.handleTechSourceset_(e);\n    });\n    this.on(this.tech_, 'waiting', function (e) {\n      return _this4.handleTechWaiting_(e);\n    });\n    this.on(this.tech_, 'ended', function (e) {\n      return _this4.handleTechEnded_(e);\n    });\n    this.on(this.tech_, 'seeking', function (e) {\n      return _this4.handleTechSeeking_(e);\n    });\n    this.on(this.tech_, 'play', function (e) {\n      return _this4.handleTechPlay_(e);\n    });\n    this.on(this.tech_, 'firstplay', function (e) {\n      return _this4.handleTechFirstPlay_(e);\n    });\n    this.on(this.tech_, 'pause', function (e) {\n      return _this4.handleTechPause_(e);\n    });\n    this.on(this.tech_, 'durationchange', function (e) {\n      return _this4.handleTechDurationChange_(e);\n    });\n    this.on(this.tech_, 'fullscreenchange', function (e, data) {\n      return _this4.handleTechFullscreenChange_(e, data);\n    });\n    this.on(this.tech_, 'fullscreenerror', function (e, err) {\n      return _this4.handleTechFullscreenError_(e, err);\n    });\n    this.on(this.tech_, 'enterpictureinpicture', function (e) {\n      return _this4.handleTechEnterPictureInPicture_(e);\n    });\n    this.on(this.tech_, 'leavepictureinpicture', function (e) {\n      return _this4.handleTechLeavePictureInPicture_(e);\n    });\n    this.on(this.tech_, 'error', function (e) {\n      return _this4.handleTechError_(e);\n    });\n    this.on(this.tech_, 'posterchange', function (e) {\n      return _this4.handleTechPosterChange_(e);\n    });\n    this.on(this.tech_, 'textdata', function (e) {\n      return _this4.handleTechTextData_(e);\n    });\n    this.on(this.tech_, 'ratechange', function (e) {\n      return _this4.handleTechRateChange_(e);\n    });\n    this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    } // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n\n\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    } // Get rid of the original video tag reference after the first tech is loaded\n\n\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  }\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n  ;\n\n  _proto.unloadTech_ = function unloadTech_() {\n    var _this5 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n      _this5[props.privateName] = _this5[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n    this.isReady_ = false;\n    this.tech_.dispose();\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  }\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n  ;\n\n  _proto.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n    }\n\n    return this.tech_;\n  }\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n  ;\n\n  _proto.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n    this.on(this.tech_, 'click', this.boundHandleTechClick_);\n    this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_); // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n\n    this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_); // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n\n    this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n  }\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n    this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n    this.off(this.tech_, 'click', this.boundHandleTechClick_);\n    this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n  }\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady(); // Keep the same volume as before\n\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    } // Look if the tech found a higher resolution poster while loading\n\n\n    this.handleTechPosterChange_(); // Update the duration if available\n\n    this.handleTechDurationChange_();\n  }\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking'); // reset the error state\n\n    this.error(null); // Update the duration\n\n    this.handleTechDurationChange_(); // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    } // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n\n\n    this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n  }\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n  ;\n\n  _proto.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this6 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    } // Save original muted() value, set muted to true, and attempt to play().\n    // On promise rejection, restore muted from saved value\n\n\n    var resolveMuted = function resolveMuted() {\n      var previouslyMuted = _this6.muted();\n\n      _this6.muted(true);\n\n      var restoreMuted = function restoreMuted() {\n        _this6.muted(previouslyMuted);\n      }; // restore muted on play terminatation\n\n\n      _this6.playTerminatedQueue_.push(restoreMuted);\n\n      var mutedPromise = _this6.play();\n\n      if (!isPromise(mutedPromise)) {\n        return;\n      }\n\n      return mutedPromise[\"catch\"](function (err) {\n        restoreMuted();\n        throw new Error(\"Rejection at manualAutoplay. Restoring muted value. \" + (err ? err : ''));\n      });\n    };\n\n    var promise; // if muted defaults to true\n    // the only thing we can do is call play\n\n    if (type === 'any' && !this.muted()) {\n      promise = this.play();\n\n      if (isPromise(promise)) {\n        promise = promise[\"catch\"](resolveMuted);\n      }\n    } else if (type === 'muted' && !this.muted()) {\n      promise = resolveMuted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!isPromise(promise)) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this6.trigger({\n        type: 'autoplay-success',\n        autoplay: type\n      });\n    })[\"catch\"](function () {\n      _this6.trigger({\n        type: 'autoplay-failure',\n        autoplay: type\n      });\n    });\n  }\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n  ;\n\n  _proto.updateSourceCaches_ = function updateSourceCaches_(srcObj) {\n    if (srcObj === void 0) {\n      srcObj = '';\n    }\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    } // make sure all the caches are set to default values\n    // to prevent null checking\n\n\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || []; // try to get the type of the src that was passed in\n\n    if (src && !type) {\n      type = findMimetype(this, src);\n    } // update `currentSource` cache always\n\n\n    this.cache_.source = mergeOptions$3({}, srcObj, {\n      src: src,\n      type: type\n    });\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    } // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n\n\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources; // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    } // update the tech `src` cache\n\n\n    this.cache_.src = src;\n  }\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n  ;\n\n  _proto.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this7 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      var updateSourceCaches = function updateSourceCaches(src) {\n        return _this7.updateSourceCaches_(src);\n      };\n\n      var playerSrc = this.currentSource().src;\n      var eventSrc = event.src; // if we have a playerSrc that is not a blob, and a tech src that is a blob\n\n      if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n        // if both the tech source and the player source were updated we assume\n        // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n        if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n          updateSourceCaches = function updateSourceCaches() {};\n        }\n      } // update the source to the initial source right away\n      // in some cases this will be empty string\n\n\n      updateSourceCaches(eventSrc); // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n\n      if (!event.src) {\n        this.tech_.any(['sourceset', 'loadstart'], function (e) {\n          // if a sourceset happens before a `loadstart` there\n          // is nothing to do as this `handleTechSourceset_`\n          // will be called again and this will be handled there.\n          if (e.type === 'sourceset') {\n            return;\n          }\n\n          var techSrc = _this7.techGet('currentSrc');\n\n          _this7.lastSource_.tech = techSrc;\n\n          _this7.updateSourceCaches_(techSrc);\n        });\n      }\n    }\n\n    this.lastSource_ = {\n      player: this.currentSource().src,\n      tech: event.src\n    };\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  }\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n  ;\n\n  _proto.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  }\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing'); // hide the poster when the user hits play\n\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('play');\n  }\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n  ;\n\n  _proto.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n\n    this.trigger('ratechange');\n  }\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n  ;\n\n  _proto.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this8 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('waiting'); // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n    // premature removal of the waiting class, wait for the time to change.\n\n    var timeWhenWaiting = this.currentTime();\n\n    var timeUpdateListener = function timeUpdateListener() {\n      if (timeWhenWaiting !== _this8.currentTime()) {\n        _this8.removeClass('vjs-waiting');\n\n        _this8.off('timeupdate', timeUpdateListener);\n      }\n    };\n\n    this.on('timeupdate', timeUpdateListener);\n  }\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplay');\n  }\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n  ;\n\n  _proto.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('canplaythrough');\n  }\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n  ;\n\n  _proto.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('playing');\n  }\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeking');\n  }\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n  ;\n\n  _proto.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    this.removeClass('vjs-ended');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('seeked');\n  }\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   *             As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n  ;\n\n  _proto.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('firstplay');\n  }\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n  ;\n\n  _proto.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('pause');\n  }\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n  ;\n\n  _proto.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    this.removeClass('vjs-waiting');\n\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('ended');\n  }\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  }\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#click\n   * @private\n   */\n  ;\n\n  _proto.handleTechClick_ = function handleTechClick_(event) {\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n      if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n        this.options_.userActions.click.call(this, event);\n      } else if (this.paused()) {\n        silencePromise(this.play());\n      } else {\n        this.pause();\n      }\n    }\n  }\n  /**\n   * Handle a double-click on the media element to enter/exit fullscreen\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#dblclick\n   * @private\n   */\n  ;\n\n  _proto.handleTechDoubleClick_ = function handleTechDoubleClick_(event) {\n    if (!this.controls_) {\n      return;\n    } // we do not want to toggle fullscreen state\n    // when double-clicking inside a control bar or a modal\n\n\n    var inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), function (el) {\n      return el.contains(event.target);\n    });\n\n    if (!inAllowedEls) {\n      /*\n       * options.userActions.doubleClick\n       *\n       * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n       * Set to `false` to disable double-click handling\n       * Set to a function to substitute an external double-click handler\n       */\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n          this.options_.userActions.doubleClick.call(this, event);\n        } else if (this.isFullscreen()) {\n          this.exitFullscreen();\n        } else {\n          this.requestFullscreen();\n        }\n      }\n    }\n  }\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n  ;\n\n  _proto.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  }\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  }\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  }\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n  ;\n\n  _proto.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    if (event.cancelable) {\n      event.preventDefault();\n    }\n  }\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n  ;\n\n  _proto.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.toggleFullscreenClass_ = function toggleFullscreenClass_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  }\n  /**\n   * when the document fschange event triggers it calls this\n   */\n  ;\n\n  _proto.documentFullscreenChange_ = function documentFullscreenChange_(e) {\n    var targetPlayer = e.target.player; // if another player was fullscreen\n    // do a null check for targetPlayer because older firefox's would put document as e.target\n\n    if (targetPlayer && targetPlayer !== this) {\n      return;\n    }\n\n    var el = this.el();\n    var isFs = document[this.fsApi_.fullscreenElement] === el;\n\n    if (!isFs && el.matches) {\n      isFs = el.matches(':' + this.fsApi_.fullscreen);\n    } else if (!isFs && el.msMatchesSelector) {\n      isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n    }\n\n    this.isFullscreen(isFs);\n  }\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    var _this9 = this;\n\n    if (data) {\n      if (data.nativeIOSFullscreen) {\n        this.addClass('vjs-ios-native-fs');\n        this.tech_.one('webkitendfullscreen', function () {\n          _this9.removeClass('vjs-ios-native-fs');\n        });\n      }\n\n      this.isFullscreen(data.isFullscreen);\n    }\n  };\n\n  _proto.handleTechFullscreenError_ = function handleTechFullscreenError_(event, err) {\n    this.trigger('fullscreenerror', err);\n  }\n  /**\n   * @private\n   */\n  ;\n\n  _proto.togglePictureInPictureClass_ = function togglePictureInPictureClass_() {\n    if (this.isInPictureInPicture()) {\n      this.addClass('vjs-picture-in-picture');\n    } else {\n      this.removeClass('vjs-picture-in-picture');\n    }\n  }\n  /**\n   * Handle Tech Enter Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the enterpictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#enterpictureinpicture\n   */\n  ;\n\n  _proto.handleTechEnterPictureInPicture_ = function handleTechEnterPictureInPicture_(event) {\n    this.isInPictureInPicture(true);\n  }\n  /**\n   * Handle Tech Leave Picture-in-Picture.\n   *\n   * @param {EventTarget~Event} event\n   *        the leavepictureinpicture event that triggered this function\n   *\n   * @private\n   * @listens Tech#leavepictureinpicture\n   */\n  ;\n\n  _proto.handleTechLeavePictureInPicture_ = function handleTechLeavePictureInPicture_(event) {\n    this.isInPictureInPicture(false);\n  }\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n  ;\n\n  _proto.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n    this.error(error);\n  }\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n  ;\n\n  _proto.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n\n\n    this.trigger('textdata', data);\n  }\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n  ;\n\n  _proto.getCache = function getCache() {\n    return this.cache_;\n  }\n  /**\n   * Resets the internal cache object.\n   *\n   * Using this function outside the player constructor or reset method may\n   * have unintended side-effects.\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetCache_ = function resetCache_() {\n    this.cache_ = {\n      // Right now, the currentTime is not _really_ cached because it is always\n      // retrieved from the tech (see: currentTime). However, for completeness,\n      // we set it to zero here to ensure that if we do start actually caching\n      // it, we reset it along with everything else.\n      currentTime: 0,\n      initTime: 0,\n      inactivityTimeout: this.options_.inactivityTimeout,\n      duration: NaN,\n      lastVolume: 1,\n      lastPlaybackRate: this.defaultPlaybackRate(),\n      media: null,\n      src: '',\n      source: {},\n      sources: [],\n      playbackRates: [],\n      volume: 1\n    };\n  }\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n  ;\n\n  _proto.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  }\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n  ;\n\n  _proto.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    } // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // TODO: Is this needed for techs other than Flash?\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n\n\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1(\"Video.js: \" + method + \" method not defined for \" + this.techName_ + \" playback technology.\", e);\n        throw e;\n      } // When a method isn't available on the object it throws a TypeError\n\n\n      if (e.name === 'TypeError') {\n        log$1(\"Video.js: \" + method + \" unavailable on \" + this.techName_ + \" playback technology element.\", e);\n        this.tech_.isReady_ = false;\n        throw e;\n      } // If error unknown, just log and throw\n\n\n      log$1(e);\n      throw e;\n    }\n  }\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a promise if the browser supports Promises (or one\n   *         was passed in as an option). This promise will be resolved on\n   *         the return value of play. If this is undefined it will fulfill the\n   *         promise chain otherwise the promise chain will be fulfilled when\n   *         the promise from play is fulfilled.\n   */\n  ;\n\n  _proto.play = function play() {\n    var _this10 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      return new PromiseClass(function (resolve) {\n        _this10.play_(resolve);\n      });\n    }\n\n    return this.play_();\n  }\n  /**\n   * The actual logic for play, takes a callback that will be resolved on the\n   * return value of play. This allows us to resolve to the play promise if there\n   * is one on modern browsers.\n   *\n   * @private\n   * @param {Function} [callback]\n   *        The callback that should be called when the techs play is actually called\n   */\n  ;\n\n  _proto.play_ = function play_(callback) {\n    var _this11 = this;\n\n    if (callback === void 0) {\n      callback = silencePromise;\n    }\n\n    this.playCallbacks_.push(callback);\n    var isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc())); // treat calls to play_ somewhat like the `one` event function\n\n    if (this.waitToPlay_) {\n      this.off(['ready', 'loadstart'], this.waitToPlay_);\n      this.waitToPlay_ = null;\n    } // if the player/tech is not ready or the src itself is not ready\n    // queue up a call to play on `ready` or `loadstart`\n\n\n    if (!this.isReady_ || !isSrcReady) {\n      this.waitToPlay_ = function (e) {\n        _this11.play_();\n      };\n\n      this.one(['ready', 'loadstart'], this.waitToPlay_); // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n      // in that case, we need to prime the video element by calling load so it'll be ready in time\n\n      if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n        this.load();\n      }\n\n      return;\n    } // If the player/tech is ready and we have a source, we can attempt playback.\n\n\n    var val = this.techGet_('play'); // play was terminated if the returned value is null\n\n    if (val === null) {\n      this.runPlayTerminatedQueue_();\n    } else {\n      this.runPlayCallbacks_(val);\n    }\n  }\n  /**\n   * These functions will be run when if play is terminated. If play\n   * runPlayCallbacks_ is run these function will not be run. This allows us\n   * to differenciate between a terminated play and an actual call to play.\n   */\n  ;\n\n  _proto.runPlayTerminatedQueue_ = function runPlayTerminatedQueue_() {\n    var queue = this.playTerminatedQueue_.slice(0);\n    this.playTerminatedQueue_ = [];\n    queue.forEach(function (q) {\n      q();\n    });\n  }\n  /**\n   * When a callback to play is delayed we have to run these\n   * callbacks when play is actually called on the tech. This function\n   * runs the callbacks that were delayed and accepts the return value\n   * from the tech.\n   *\n   * @param {undefined|Promise} val\n   *        The return value from the tech.\n   */\n  ;\n\n  _proto.runPlayCallbacks_ = function runPlayCallbacks_(val) {\n    var callbacks = this.playCallbacks_.slice(0);\n    this.playCallbacks_ = []; // clear play terminatedQueue since we finished a real play\n\n    this.playTerminatedQueue_ = [];\n    callbacks.forEach(function (cb) {\n      cb(val);\n    });\n  }\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n  ;\n\n  _proto.pause = function pause() {\n    this.techCall_('pause');\n  }\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n  ;\n\n  _proto.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  }\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n  ;\n\n  _proto.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  }\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        whether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n  ;\n\n  _proto.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n\n    this.scrubbing_ = !!isScrubbing;\n    this.techCall_('setScrubbing', this.scrubbing_);\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  }\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n  ;\n\n  _proto.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n\n      if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n        this.cache_.initTime = seconds;\n        this.off('canplay', this.boundApplyInitTime_);\n        this.one('canplay', this.boundApplyInitTime_);\n        return;\n      }\n\n      this.techCall_('setCurrentTime', seconds);\n      this.cache_.initTime = 0;\n      return;\n    } // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n\n\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  }\n  /**\n   * Apply the value of initTime stored in cache as currentTime.\n   *\n   * @private\n   */\n  ;\n\n  _proto.applyInitTime_ = function applyInitTime_() {\n    this.currentTime(this.cache_.initTime);\n  }\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and depending on preload behaviour may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n  ;\n\n  _proto.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds); // Standardize on Infinity for signaling video is live\n\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      // TODO: Required for techs other than Flash?\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n\n      if (!isNaN(seconds)) {\n        // Do not fire durationchange unless the duration value is known.\n        // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n        /**\n         * @event Player#durationchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('durationchange');\n      }\n    }\n  }\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  }\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n  ;\n\n  _proto.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  } //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  }\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is buffered 0 being 0% and 1 being 100%\n   */\n  ;\n\n  _proto.bufferedPercent = function bufferedPercent$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  }\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n  ;\n\n  _proto.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  }\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n  ;\n\n  _proto.volume = function volume(percentAsDecimal) {\n    var vol;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    } // Default to 1 when returning current volume.\n\n\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  }\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n  ;\n\n  _proto.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n\n    return this.techGet_('muted') || false;\n  }\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on initial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n  ;\n\n  _proto.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n\n    return this.techGet_('defaultMuted') || false;\n  }\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n  ;\n\n  _proto.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n\n    return this.cache_.lastVolume;\n  }\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n  ;\n\n  _proto.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  }\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n  ;\n\n  _proto.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      var oldValue = this.isFullscreen_;\n      this.isFullscreen_ = Boolean(isFS); // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n      // this is the only place where we trigger fullscreenchange events for older browsers\n      // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n\n      if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n        /**\n           * @event Player#fullscreenchange\n           * @type {EventTarget~Event}\n           */\n        this.trigger('fullscreenchange');\n      }\n\n      this.toggleFullscreenClass_();\n      return;\n    }\n\n    return this.isFullscreen_;\n  }\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @param  {Object} [fullscreenOptions]\n   *         Override the player fullscreen options\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.requestFullscreen = function requestFullscreen(fullscreenOptions) {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      var self = this;\n      return new PromiseClass(function (resolve, reject) {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        var promise = self.requestFullscreenHelper_(fullscreenOptions);\n\n        if (promise) {\n          promise.then(offHandler, offHandler);\n          promise.then(resolve, reject);\n        }\n      });\n    }\n\n    return this.requestFullscreenHelper_();\n  };\n\n  _proto.requestFullscreenHelper_ = function requestFullscreenHelper_(fullscreenOptions) {\n    var _this12 = this;\n\n    var fsOptions; // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n    // Use defaults or player configured option unless passed directly to this method.\n\n    if (!this.fsApi_.prefixed) {\n      fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n\n      if (fullscreenOptions !== undefined) {\n        fsOptions = fullscreenOptions;\n      }\n    } // This method works as follows:\n    // 1. if a fullscreen api is available, use it\n    //   1. call requestFullscreen with potential options\n    //   2. if we got a promise from above, use it to update isFullscreen()\n    // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n    //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n    // 3. otherwise, use \"fullWindow\" mode\n\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n      if (promise) {\n        promise.then(function () {\n          return _this12.isFullscreen(true);\n        }, function () {\n          return _this12.isFullscreen(false);\n        });\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n    }\n  }\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n  ;\n\n  _proto.exitFullscreen = function exitFullscreen() {\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      var self = this;\n      return new PromiseClass(function (resolve, reject) {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        var promise = self.exitFullscreenHelper_();\n\n        if (promise) {\n          promise.then(offHandler, offHandler); // map the promise to our resolve/reject methods\n\n          promise.then(resolve, reject);\n        }\n      });\n    }\n\n    return this.exitFullscreenHelper_();\n  };\n\n  _proto.exitFullscreenHelper_ = function exitFullscreenHelper_() {\n    var _this13 = this;\n\n    if (this.fsApi_.requestFullscreen) {\n      var promise = document[this.fsApi_.exitFullscreen]();\n\n      if (promise) {\n        // we're splitting the promise here, so, we want to catch the\n        // potential error so that this chain doesn't have unhandled errors\n        silencePromise(promise.then(function () {\n          return _this13.isFullscreen(false);\n        }));\n      }\n\n      return promise;\n    } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n    }\n  }\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n  ;\n\n  _proto.enterFullWindow = function enterFullWindow() {\n    this.isFullscreen(true);\n    this.isFullWindow = true; // Storing original doc overflow value to return to when fullscreen is off\n\n    this.docOrigOverflow = document.documentElement.style.overflow; // Add listener for esc key to exit fullscreen\n\n    on(document, 'keydown', this.boundFullWindowOnEscKey_); // Hide any scroll bars\n\n    document.documentElement.style.overflow = 'hidden'; // Apply fullscreen styles\n\n    addClass(document.body, 'vjs-full-window');\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('enterFullWindow');\n  }\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n  ;\n\n  _proto.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (keycode.isEventKey(event, 'Esc')) {\n      if (this.isFullscreen() === true) {\n        if (!this.isFullWindow) {\n          this.exitFullscreen();\n        } else {\n          this.exitFullWindow();\n        }\n      }\n    }\n  }\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n  ;\n\n  _proto.exitFullWindow = function exitFullWindow() {\n    this.isFullscreen(false);\n    this.isFullWindow = false;\n    off(document, 'keydown', this.boundFullWindowOnEscKey_); // Unhide scroll bars.\n\n    document.documentElement.style.overflow = this.docOrigOverflow; // Remove fullscreen styles\n\n    removeClass(document.body, 'vjs-full-window'); // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('exitFullWindow');\n  }\n  /**\n   * Disable Picture-in-Picture mode.\n   *\n   * @param {boolean} value\n   *                  - true will disable Picture-in-Picture mode\n   *                  - false will enable Picture-in-Picture mode\n   */\n  ;\n\n  _proto.disablePictureInPicture = function disablePictureInPicture(value) {\n    if (value === undefined) {\n      return this.techGet_('disablePictureInPicture');\n    }\n\n    this.techCall_('setDisablePictureInPicture', value);\n    this.options_.disablePictureInPicture = value;\n    this.trigger('disablepictureinpicturechanged');\n  }\n  /**\n   * Check if the player is in Picture-in-Picture mode or tell the player that it\n   * is or is not in Picture-in-Picture mode.\n   *\n   * @param  {boolean} [isPiP]\n   *         Set the players current Picture-in-Picture state\n   *\n   * @return {boolean}\n   *         - true if Picture-in-Picture is on and getting\n   *         - false if Picture-in-Picture is off and getting\n   */\n  ;\n\n  _proto.isInPictureInPicture = function isInPictureInPicture(isPiP) {\n    if (isPiP !== undefined) {\n      this.isInPictureInPicture_ = !!isPiP;\n      this.togglePictureInPictureClass_();\n      return;\n    }\n\n    return !!this.isInPictureInPicture_;\n  }\n  /**\n   * Create a floating video window always on top of other windows so that users may\n   * continue consuming media while they interact with other content sites, or\n   * applications on their device.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#enterpictureinpicture\n   *\n   * @return {Promise}\n   *         A promise with a Picture-in-Picture window.\n   */\n  ;\n\n  _proto.requestPictureInPicture = function requestPictureInPicture() {\n    if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n      /**\n       * This event fires when the player enters picture in picture mode\n       *\n       * @event Player#enterpictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return this.techGet_('requestPictureInPicture');\n    }\n  }\n  /**\n   * Exit Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n   *\n   * @fires Player#leavepictureinpicture\n   *\n   * @return {Promise}\n   *         A promise.\n   */\n  ;\n\n  _proto.exitPictureInPicture = function exitPictureInPicture() {\n    if ('pictureInPictureEnabled' in document) {\n      /**\n       * This event fires when the player leaves picture in picture mode\n       *\n       * @event Player#leavepictureinpicture\n       * @type {EventTarget~Event}\n       */\n      return document.exitPictureInPicture();\n    }\n  }\n  /**\n   * Called when this Player has focus and a key gets pressed down, or when\n   * any Component of this player receives a key press that it doesn't handle.\n   * This allows player-wide hotkeys (either as defined below, or optionally\n   * by an external function).\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n  ;\n\n  _proto.handleKeyDown = function handleKeyDown(event) {\n    var userActions = this.options_.userActions; // Bail out if hotkeys are not configured.\n\n    if (!userActions || !userActions.hotkeys) {\n      return;\n    } // Function that determines whether or not to exclude an element from\n    // hotkeys handling.\n\n\n    var excludeElement = function excludeElement(el) {\n      var tagName = el.tagName.toLowerCase(); // The first and easiest test is for `contenteditable` elements.\n\n      if (el.isContentEditable) {\n        return true;\n      } // Inputs matching these types will still trigger hotkey handling as\n      // they are not text inputs.\n\n\n      var allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n\n      if (tagName === 'input') {\n        return allowedInputTypes.indexOf(el.type) === -1;\n      } // The final test is by tag name. These tags will be excluded entirely.\n\n\n      var excludedTags = ['textarea'];\n      return excludedTags.indexOf(tagName) !== -1;\n    }; // Bail out if the user is focused on an interactive form element.\n\n\n    if (excludeElement(this.el_.ownerDocument.activeElement)) {\n      return;\n    }\n\n    if (typeof userActions.hotkeys === 'function') {\n      userActions.hotkeys.call(this, event);\n    } else {\n      this.handleHotkeys(event);\n    }\n  }\n  /**\n   * Called when this Player receives a hotkey keydown event.\n   * Supported player-wide hotkeys are:\n   *\n   *   f          - toggle fullscreen\n   *   m          - toggle mute\n   *   k or Space - toggle play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   */\n  ;\n\n  _proto.handleHotkeys = function handleHotkeys(event) {\n    var hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {}; // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n\n    var _hotkeys$fullscreenKe = hotkeys.fullscreenKey,\n        fullscreenKey = _hotkeys$fullscreenKe === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'f');\n    } : _hotkeys$fullscreenKe,\n        _hotkeys$muteKey = hotkeys.muteKey,\n        muteKey = _hotkeys$muteKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'm');\n    } : _hotkeys$muteKey,\n        _hotkeys$playPauseKey = hotkeys.playPauseKey,\n        playPauseKey = _hotkeys$playPauseKey === void 0 ? function (keydownEvent) {\n      return keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space');\n    } : _hotkeys$playPauseKey;\n\n    if (fullscreenKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var FSToggle = Component$1.getComponent('FullscreenToggle');\n\n      if (document[this.fsApi_.fullscreenEnabled] !== false) {\n        FSToggle.prototype.handleClick.call(this, event);\n      }\n    } else if (muteKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var MuteToggle = Component$1.getComponent('MuteToggle');\n      MuteToggle.prototype.handleClick.call(this, event);\n    } else if (playPauseKey.call(this, event)) {\n      event.preventDefault();\n      event.stopPropagation();\n      var PlayToggle = Component$1.getComponent('PlayToggle');\n      PlayToggle.prototype.handleClick.call(this, event);\n    }\n  }\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  ;\n\n  _proto.canPlayType = function canPlayType(type) {\n    var can; // Loop through each playback technology in the options order\n\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName); // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n\n      if (!tech) {\n        tech = Component$1.getComponent(techName);\n      } // Check if the current tech is defined before continuing\n\n\n      if (!tech) {\n        log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n        continue;\n      } // Check if the browser supports this technology\n\n\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  }\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n  ;\n\n  _proto.selectSource = function selectSource(sources) {\n    var _this14 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error(\"The \\\"\" + techName + \"\\\" tech is undefined. Skipped browser support check for that tech.\");\n      return false;\n    }); // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found;\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n      return found;\n    };\n\n    var foundSourceAndTech;\n\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this14.options_[techName.toLowerCase()])) {\n        return {\n          source: source,\n          tech: techName\n        };\n      }\n    }; // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n\n\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  }\n  /**\n   * Executes source setting and getting logic\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   * @param {boolean} isRetry\n   *        Indicates whether this is being called internally as a result of a retry\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.handleSrc_ = function handleSrc_(source, isRetry) {\n    var _this15 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    } // Reset retry behavior for new source\n\n\n    if (this.resetRetryOnError_) {\n      this.resetRetryOnError_();\n    } // filter out invalid sources and turn our source into\n    // an array of source objects\n\n\n    var sources = filterSource(source); // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({\n          code: 4,\n          message: this.options_.notSupportedMessage\n        });\n      }, 0);\n      return;\n    } // initial sources\n\n\n    this.changingSrc_ = true; // Only update the cached source list if we are not retrying a new source after error,\n    // since in that case we want to include the failed source(s) in the cache\n\n    if (!isRetry) {\n      this.cache_.sources = sources;\n    }\n\n    this.updateSourceCaches_(sources[0]); // middlewareSource is the source after it has been changed by middleware\n\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this15.middleware_ = mws; // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n\n      if (!isRetry) {\n        _this15.cache_.sources = sources;\n      }\n\n      _this15.updateSourceCaches_(middlewareSource);\n\n      var err = _this15.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this15.handleSrc_(sources.slice(1));\n        }\n\n        _this15.changingSrc_ = false; // We need to wrap this in a timeout to give folks a chance to add error event handlers\n\n        _this15.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0); // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n\n\n        _this15.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this15.tech_);\n    }); // Try another available source if this one fails before playback.\n\n    if (this.options_.retryOnError && sources.length > 1) {\n      var retry = function retry() {\n        // Remove the error modal\n        _this15.error(null);\n\n        _this15.handleSrc_(sources.slice(1), true);\n      };\n\n      var stopListeningForErrors = function stopListeningForErrors() {\n        _this15.off('error', retry);\n      };\n\n      this.one('error', retry);\n      this.one('playing', stopListeningForErrors);\n\n      this.resetRetryOnError_ = function () {\n        _this15.off('error', retry);\n\n        _this15.off('playing', stopListeningForErrors);\n      };\n    }\n  }\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n  ;\n\n  _proto.src = function src(source) {\n    return this.handleSrc_(source, false);\n  }\n  /**\n   * Set the source object on the tech, returns a boolean that indicates whether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n  ;\n\n  _proto.src_ = function src_(source) {\n    var _this16 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true; // load this technology with the chosen source\n\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this16.changingSrc_ = false;\n      });\n      return false;\n    } // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n\n\n    this.ready(function () {\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n    return false;\n  }\n  /**\n   * Begin loading the src data.\n   */\n  ;\n\n  _proto.load = function load() {\n    this.techCall_('load');\n  }\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * removes all the text tracks in the existing `tech`,\n   * and calls `reset` on the `tech`.\n   */\n  ;\n\n  _proto.reset = function reset() {\n    var _this17 = this;\n\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (this.paused() || !PromiseClass) {\n      this.doReset_();\n    } else {\n      var playPromise = this.play();\n      silencePromise(playPromise.then(function () {\n        return _this17.doReset_();\n      }));\n    }\n  };\n\n  _proto.doReset_ = function doReset_() {\n    if (this.tech_) {\n      this.tech_.clearTracks('text');\n    }\n\n    this.resetCache_();\n    this.poster('');\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n    this.resetControlBarUI_();\n\n    if (isEvented(this)) {\n      this.trigger('playerreset');\n    }\n  }\n  /**\n   * Reset Control Bar's UI by calling sub-methods that reset\n   * all of Control Bar's components\n   */\n  ;\n\n  _proto.resetControlBarUI_ = function resetControlBarUI_() {\n    this.resetProgressBar_();\n    this.resetPlaybackRate_();\n    this.resetVolumeBar_();\n  }\n  /**\n   * Reset tech's progress so progress bar is reset in the UI\n   */\n  ;\n\n  _proto.resetProgressBar_ = function resetProgressBar_() {\n    this.currentTime(0);\n\n    var _ref3 = this.controlBar || {},\n        durationDisplay = _ref3.durationDisplay,\n        remainingTimeDisplay = _ref3.remainingTimeDisplay;\n\n    if (durationDisplay) {\n      durationDisplay.updateContent();\n    }\n\n    if (remainingTimeDisplay) {\n      remainingTimeDisplay.updateContent();\n    }\n  }\n  /**\n   * Reset Playback ratio\n   */\n  ;\n\n  _proto.resetPlaybackRate_ = function resetPlaybackRate_() {\n    this.playbackRate(this.defaultPlaybackRate());\n    this.handleTechRateChange_();\n  }\n  /**\n   * Reset Volume bar\n   */\n  ;\n\n  _proto.resetVolumeBar_ = function resetVolumeBar_() {\n    this.volume(1.0);\n    this.trigger('volumechange');\n  }\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n  ;\n\n  _proto.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = []; // assume `{}` or `{ src }`\n\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  }\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n  ;\n\n  _proto.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  }\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n  ;\n\n  _proto.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  }\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n  ;\n\n  _proto.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  }\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false means that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n  ;\n\n  _proto.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n\n    return this.techGet_('preload');\n  }\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n  ;\n\n  _proto.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay; // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n\n    if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n      techAutoplay = false; // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false; // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay; // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  }\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  ;\n\n  _proto.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n\n    return this.techGet_('playsinline');\n  }\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {boolean}\n   *         The current value of loop when getting\n   */\n  ;\n\n  _proto.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n\n    return this.techGet_('loop');\n  }\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n  ;\n\n  _proto.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    } // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n\n\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    } // update the internal poster variable\n\n\n    this.poster_ = src; // update the tech's poster\n\n    this.techCall_('setPoster', src);\n    this.isPosterFromTech_ = false; // alert components that the poster has been set\n\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('posterchange');\n  }\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n  ;\n\n  _proto.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true; // Let components know the poster has changed\n\n        this.trigger('posterchange');\n      }\n    }\n  }\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n  ;\n\n  _proto.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsenabled');\n\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('controlsdisabled');\n\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  }\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls) or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n  ;\n\n  _proto.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool; // Don't trigger a change event unless it actually changed\n\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('usingcustomcontrols');\n    }\n  }\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n  ;\n\n  _proto.error = function error(err) {\n    var _this18 = this;\n\n    if (err === undefined) {\n      return this.error_ || null;\n    } // allow hooks to modify error object\n\n\n    hooks('beforeerror').forEach(function (hookFunction) {\n      var newErr = hookFunction(_this18, err);\n\n      if (!(isObject(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n        _this18.log.error('please return a value that MediaError expects in beforeerror hooks');\n\n        return;\n      }\n\n      err = newErr;\n    }); // Suppress the first error message for no compatible source until\n    // user interaction\n\n    if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n      var triggerSuppressedError = function triggerSuppressedError() {\n        this.error(err);\n      };\n\n      this.options_.suppressNotSupportedError = false;\n      this.any(['click', 'touchstart'], triggerSuppressedError);\n      this.one('loadstart', function () {\n        this.off(['click', 'touchstart'], triggerSuppressedError);\n      });\n      return;\n    } // restoring to default\n\n\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n\n      return;\n    }\n\n    this.error_ = new MediaError(err); // add the vjs-error classname to the player\n\n    this.addClass('vjs-error'); // log the name of the error type and any message\n    // IE11 logs \"[object object]\" and required you to expand message to see error object\n\n    log$1.error(\"(CODE:\" + this.error_.code + \" \" + MediaError.errorTypes[this.error_.code] + \")\", this.error_.message, this.error_);\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('error'); // notify hooks of the per player error\n\n    hooks('error').forEach(function (hookFunction) {\n      return hookFunction(_this18, _this18.error_);\n    });\n    return;\n  }\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n  ;\n\n  _proto.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  }\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n  ;\n\n  _proto.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n\n      this.trigger('useractive');\n      return;\n    } // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n\n\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n\n    this.trigger('userinactive');\n  }\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n  ;\n\n  _proto.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress;\n    var lastMoveX;\n    var lastMoveY;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity(); // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n\n      this.clearInterval(mouseInProgress); // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUpAndMouseLeave = function handleMouseUpAndMouseLeave(event) {\n      handleActivity(); // Stop the interval that maintains activity if the mouse/touch is down\n\n      this.clearInterval(mouseInProgress);\n    }; // Any mouse movement will be considered user activity\n\n\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUpAndMouseLeave);\n    this.on('mouseleave', handleMouseUpAndMouseLeave);\n    var controlBar = this.getChild('controlBar'); // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n    // controlBar would no longer be hidden by default timeout.\n\n    if (controlBar && !IS_IOS && !IS_ANDROID) {\n      controlBar.on('mouseenter', function (event) {\n        if (this.player().options_.inactivityTimeout !== 0) {\n          this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n        }\n\n        this.player().options_.inactivityTimeout = 0;\n      });\n      controlBar.on('mouseleave', function (event) {\n        this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n      });\n    } // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n\n\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity); // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n\n    var inactivityTimeout;\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      } // Reset the activity tracker\n\n\n      this.userActivity_ = false; // If the user state was inactive, set the state to active\n\n      this.userActive(true); // Clear any existing inactivity timeout to start the timer over\n\n      this.clearTimeout(inactivityTimeout);\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      } // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n\n\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  }\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n  ;\n\n  _proto.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n  ;\n\n  _proto.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n\n    return 1.0;\n  }\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n  ;\n\n  _proto.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  _proto.enableAudioOnlyUI_ = function enableAudioOnlyUI_() {\n    var _this19 = this;\n\n    // Update styling immediately to show the control bar so we can get its height\n    this.addClass('vjs-audio-only-mode');\n    var playerChildren = this.children();\n    var controlBar = this.getChild('ControlBar');\n    var controlBarHeight = controlBar && controlBar.currentHeight(); // Hide all player components except the control bar. Control bar components\n    // needed only for video are hidden with CSS\n\n    playerChildren.forEach(function (child) {\n      if (child === controlBar) {\n        return;\n      }\n\n      if (child.el_ && !child.hasClass('vjs-hidden')) {\n        child.hide();\n\n        _this19.audioOnlyCache_.hiddenChildren.push(child);\n      }\n    });\n    this.audioOnlyCache_.playerHeight = this.currentHeight(); // Set the player height the same as the control bar\n\n    this.height(controlBarHeight);\n    this.trigger('audioonlymodechange');\n  };\n\n  _proto.disableAudioOnlyUI_ = function disableAudioOnlyUI_() {\n    this.removeClass('vjs-audio-only-mode'); // Show player components that were previously hidden\n\n    this.audioOnlyCache_.hiddenChildren.forEach(function (child) {\n      return child.show();\n    }); // Reset player height\n\n    this.height(this.audioOnlyCache_.playerHeight);\n    this.trigger('audioonlymodechange');\n  }\n  /**\n   * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n   *\n   * Setting this to `true` will hide all player components except the control bar,\n   * as well as control bar components needed only for video.\n   *\n   * @param {boolean} [value]\n   *         The value to set audioOnlyMode to.\n   *\n   * @return {Promise|boolean}\n   *        A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  ;\n\n  _proto.audioOnlyMode = function audioOnlyMode(value) {\n    var _this20 = this;\n\n    if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n      return this.audioOnlyMode_;\n    }\n\n    this.audioOnlyMode_ = value;\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      // Enable Audio Only Mode\n      if (value) {\n        var exitPromises = []; // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n\n        if (this.isInPictureInPicture()) {\n          exitPromises.push(this.exitPictureInPicture());\n        }\n\n        if (this.isFullscreen()) {\n          exitPromises.push(this.exitFullscreen());\n        }\n\n        if (this.audioPosterMode()) {\n          exitPromises.push(this.audioPosterMode(false));\n        }\n\n        return PromiseClass.all(exitPromises).then(function () {\n          return _this20.enableAudioOnlyUI_();\n        });\n      } // Disable Audio Only Mode\n\n\n      return PromiseClass.resolve().then(function () {\n        return _this20.disableAudioOnlyUI_();\n      });\n    }\n\n    if (value) {\n      if (this.isInPictureInPicture()) {\n        this.exitPictureInPicture();\n      }\n\n      if (this.isFullscreen()) {\n        this.exitFullscreen();\n      }\n\n      this.enableAudioOnlyUI_();\n    } else {\n      this.disableAudioOnlyUI_();\n    }\n  };\n\n  _proto.enablePosterModeUI_ = function enablePosterModeUI_() {\n    // Hide the video element and show the poster image to enable posterModeUI\n    var tech = this.tech_ && this.tech_;\n    tech.hide();\n    this.addClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  };\n\n  _proto.disablePosterModeUI_ = function disablePosterModeUI_() {\n    // Show the video element and hide the poster image to disable posterModeUI\n    var tech = this.tech_ && this.tech_;\n    tech.show();\n    this.removeClass('vjs-audio-poster-mode');\n    this.trigger('audiopostermodechange');\n  }\n  /**\n   * Get the current audioPosterMode state or set audioPosterMode to true or false\n   *\n   * @param {boolean} [value]\n   *         The value to set audioPosterMode to.\n   *\n   * @return {Promise|boolean}\n   *         A Promise is returned when setting the state, and a boolean when getting\n   *        the present state\n   */\n  ;\n\n  _proto.audioPosterMode = function audioPosterMode(value) {\n    var _this21 = this;\n\n    if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n      return this.audioPosterMode_;\n    }\n\n    this.audioPosterMode_ = value;\n    var PromiseClass = this.options_.Promise || window$1.Promise;\n\n    if (PromiseClass) {\n      if (value) {\n        if (this.audioOnlyMode()) {\n          var audioOnlyModePromise = this.audioOnlyMode(false);\n          return audioOnlyModePromise.then(function () {\n            // enable audio poster mode after audio only mode is disabled\n            _this21.enablePosterModeUI_();\n          });\n        }\n\n        return PromiseClass.resolve().then(function () {\n          // enable audio poster mode\n          _this21.enablePosterModeUI_();\n        });\n      }\n\n      return PromiseClass.resolve().then(function () {\n        // disable audio poster mode\n        _this21.disablePosterModeUI_();\n      });\n    }\n\n    if (value) {\n      if (this.audioOnlyMode()) {\n        this.audioOnlyMode(false);\n      }\n\n      this.enablePosterModeUI_();\n      return;\n    }\n\n    this.disablePosterModeUI_();\n  }\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n  ;\n\n  _proto.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  }\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n   * When manualCleanup is set to false, the track will be automatically removed\n   * on source changes.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *                                       removed on a source change\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n  ;\n\n  _proto.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  }\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n  ;\n\n  _proto.removeRemoteTextTrack = function removeRemoteTextTrack(obj) {\n    if (obj === void 0) {\n      obj = {};\n    }\n\n    var _obj = obj,\n        track = _obj.track;\n\n    if (!track) {\n      track = obj;\n    } // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  }\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n  ;\n\n  _proto.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  }\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n  ;\n\n  _proto.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  }\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n  ;\n\n  _proto.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  }\n  /**\n   * The player's language code.\n   *\n   * Changing the language will trigger\n   * [languagechange]{@link Player#event:languagechange}\n   * which Components can use to update control text.\n   * ClickableComponent will update its control text by default on\n   * [languagechange]{@link Player#event:languagechange}.\n   *\n   * @fires Player#languagechange\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n  ;\n\n  _proto.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    if (this.language_ !== String(code).toLowerCase()) {\n      this.language_ = String(code).toLowerCase(); // during first init, it's possible some things won't be evented\n\n      if (isEvented(this)) {\n        /**\n        * fires when the player language change\n        *\n        * @event Player#languagechange\n        * @type {EventTarget~Event}\n        */\n        this.trigger('languagechange');\n      }\n    }\n  }\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n  ;\n\n  _proto.languages = function languages() {\n    return mergeOptions$3(Player.prototype.options_.languages, this.languages_);\n  }\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n  ;\n\n  _proto.toJSON = function toJSON() {\n    var options = mergeOptions$3(this.options_);\n    var tracks = options.tracks;\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i]; // deep merge tracks and null out player so no circular references\n\n      track = mergeOptions$3(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  }\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n  ;\n\n  _proto.createModal = function createModal(content, options) {\n    var _this22 = this;\n\n    options = options || {};\n    options.content = content || '';\n    var modal = new ModalDialog(this, options);\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this22.removeChild(modal);\n    });\n    modal.open();\n    return modal;\n  }\n  /**\n   * Change breakpoint classes when the player resizes.\n   *\n   * @private\n   */\n  ;\n\n  _proto.updateCurrentBreakpoint_ = function updateCurrentBreakpoint_() {\n    if (!this.responsive()) {\n      return;\n    }\n\n    var currentBreakpoint = this.currentBreakpoint();\n    var currentWidth = this.currentWidth();\n\n    for (var i = 0; i < BREAKPOINT_ORDER.length; i++) {\n      var candidateBreakpoint = BREAKPOINT_ORDER[i];\n      var maxWidth = this.breakpoints_[candidateBreakpoint];\n\n      if (currentWidth <= maxWidth) {\n        // The current breakpoint did not change, nothing to do.\n        if (currentBreakpoint === candidateBreakpoint) {\n          return;\n        } // Only remove a class if there is a current breakpoint.\n\n\n        if (currentBreakpoint) {\n          this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n        }\n\n        this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n        this.breakpoint_ = candidateBreakpoint;\n        break;\n      }\n    }\n  }\n  /**\n   * Removes the current breakpoint.\n   *\n   * @private\n   */\n  ;\n\n  _proto.removeCurrentBreakpoint_ = function removeCurrentBreakpoint_() {\n    var className = this.currentBreakpointClass();\n    this.breakpoint_ = '';\n\n    if (className) {\n      this.removeClass(className);\n    }\n  }\n  /**\n   * Get or set breakpoints on the player.\n   *\n   * Calling this method with an object or `true` will remove any previous\n   * custom breakpoints and start from the defaults again.\n   *\n   * @param  {Object|boolean} [breakpoints]\n   *         If an object is given, it can be used to provide custom\n   *         breakpoints. If `true` is given, will set default breakpoints.\n   *         If this argument is not given, will simply return the current\n   *         breakpoints.\n   *\n   * @param  {number} [breakpoints.tiny]\n   *         The maximum width for the \"vjs-layout-tiny\" class.\n   *\n   * @param  {number} [breakpoints.xsmall]\n   *         The maximum width for the \"vjs-layout-x-small\" class.\n   *\n   * @param  {number} [breakpoints.small]\n   *         The maximum width for the \"vjs-layout-small\" class.\n   *\n   * @param  {number} [breakpoints.medium]\n   *         The maximum width for the \"vjs-layout-medium\" class.\n   *\n   * @param  {number} [breakpoints.large]\n   *         The maximum width for the \"vjs-layout-large\" class.\n   *\n   * @param  {number} [breakpoints.xlarge]\n   *         The maximum width for the \"vjs-layout-x-large\" class.\n   *\n   * @param  {number} [breakpoints.huge]\n   *         The maximum width for the \"vjs-layout-huge\" class.\n   *\n   * @return {Object}\n   *         An object mapping breakpoint names to maximum width values.\n   */\n  ;\n\n  _proto.breakpoints = function breakpoints(_breakpoints) {\n    // Used as a getter.\n    if (_breakpoints === undefined) {\n      return assign(this.breakpoints_);\n    }\n\n    this.breakpoint_ = '';\n    this.breakpoints_ = assign({}, DEFAULT_BREAKPOINTS, _breakpoints); // When breakpoint definitions change, we need to update the currently\n    // selected breakpoint.\n\n    this.updateCurrentBreakpoint_(); // Clone the breakpoints before returning.\n\n    return assign(this.breakpoints_);\n  }\n  /**\n   * Get or set a flag indicating whether or not this player should adjust\n   * its UI based on its dimensions.\n   *\n   * @param  {boolean} value\n   *         Should be `true` if the player should adjust its UI based on its\n   *         dimensions; otherwise, should be `false`.\n   *\n   * @return {boolean}\n   *         Will be `true` if this player should adjust its UI based on its\n   *         dimensions; otherwise, will be `false`.\n   */\n  ;\n\n  _proto.responsive = function responsive(value) {\n    // Used as a getter.\n    if (value === undefined) {\n      return this.responsive_;\n    }\n\n    value = Boolean(value);\n    var current = this.responsive_; // Nothing changed.\n\n    if (value === current) {\n      return;\n    } // The value actually changed, set it.\n\n\n    this.responsive_ = value; // Start listening for breakpoints and set the initial breakpoint if the\n    // player is now responsive.\n\n    if (value) {\n      this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.updateCurrentBreakpoint_(); // Stop listening for breakpoints if the player is no longer responsive.\n    } else {\n      this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n      this.removeCurrentBreakpoint_();\n    }\n\n    return value;\n  }\n  /**\n   * Get current breakpoint name, if any.\n   *\n   * @return {string}\n   *         If there is currently a breakpoint set, returns a the key from the\n   *         breakpoints object matching it. Otherwise, returns an empty string.\n   */\n  ;\n\n  _proto.currentBreakpoint = function currentBreakpoint() {\n    return this.breakpoint_;\n  }\n  /**\n   * Get the current breakpoint class name.\n   *\n   * @return {string}\n   *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n   *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n   *         there is no current breakpoint.\n   */\n  ;\n\n  _proto.currentBreakpointClass = function currentBreakpointClass() {\n    return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n  }\n  /**\n   * An object that describes a single piece of media.\n   *\n   * Properties that are not part of this type description will be retained; so,\n   * this can be viewed as a generic metadata storage mechanism as well.\n   *\n   * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n   * @typedef  {Object} Player~MediaObject\n   *\n   * @property {string} [album]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {string} [artist]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [artwork]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API. If not specified, will be populated via the `poster`, if\n   *           available.\n   *\n   * @property {string} [poster]\n   *           URL to an image that will display before playback.\n   *\n   * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n   *           A single source object, an array of source objects, or a string\n   *           referencing a URL to a media source. It is _highly recommended_\n   *           that an object or array of objects is used here, so that source\n   *           selection algorithms can take the `type` into account.\n   *\n   * @property {string} [title]\n   *           Unused, except if this object is passed to the `MediaSession`\n   *           API.\n   *\n   * @property {Object[]} [textTracks]\n   *           An array of objects to be used to create text tracks, following\n   *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n   *           For ease of removal, these will be created as \"remote\" text\n   *           tracks and set to automatically clean up on source changes.\n   *\n   *           These objects may have properties like `src`, `kind`, `label`,\n   *           and `language`, see {@link Tech#createRemoteTextTrack}.\n   */\n\n  /**\n   * Populate the player using a {@link Player~MediaObject|MediaObject}.\n   *\n   * @param  {Player~MediaObject} media\n   *         A media object.\n   *\n   * @param  {Function} ready\n   *         A callback to be called when the player is ready.\n   */\n  ;\n\n  _proto.loadMedia = function loadMedia(media, ready) {\n    var _this23 = this;\n\n    if (!media || typeof media !== 'object') {\n      return;\n    }\n\n    this.reset(); // Clone the media object so it cannot be mutated from outside.\n\n    this.cache_.media = mergeOptions$3(media);\n    var _this$cache_$media = this.cache_.media,\n        artwork = _this$cache_$media.artwork,\n        poster = _this$cache_$media.poster,\n        src = _this$cache_$media.src,\n        textTracks = _this$cache_$media.textTracks; // If `artwork` is not given, create it using `poster`.\n\n    if (!artwork && poster) {\n      this.cache_.media.artwork = [{\n        src: poster,\n        type: getMimetype(poster)\n      }];\n    }\n\n    if (src) {\n      this.src(src);\n    }\n\n    if (poster) {\n      this.poster(poster);\n    }\n\n    if (Array.isArray(textTracks)) {\n      textTracks.forEach(function (tt) {\n        return _this23.addRemoteTextTrack(tt, false);\n      });\n    }\n\n    this.ready(ready);\n  }\n  /**\n   * Get a clone of the current {@link Player~MediaObject} for this player.\n   *\n   * If the `loadMedia` method has not been used, will attempt to return a\n   * {@link Player~MediaObject} based on the current state of the player.\n   *\n   * @return {Player~MediaObject}\n   */\n  ;\n\n  _proto.getMedia = function getMedia() {\n    if (!this.cache_.media) {\n      var poster = this.poster();\n      var src = this.currentSources();\n      var textTracks = Array.prototype.map.call(this.remoteTextTracks(), function (tt) {\n        return {\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        };\n      });\n      var media = {\n        src: src,\n        textTracks: textTracks\n      };\n\n      if (poster) {\n        media.poster = poster;\n        media.artwork = [{\n          src: media.poster,\n          type: getMimetype(media.poster)\n        }];\n      }\n\n      return media;\n    }\n\n    return mergeOptions$3(this.cache_.media);\n  }\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n  ;\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fill')) {\n      tagOptions.fill = true;\n    }\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    } // Check if data-setup attr exists.\n\n\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions); // Get tag children settings\n\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i]; // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  }\n  /**\n   * Determine whether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n  ;\n\n  _proto.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i'); // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style || // IE10-specific (2012 flex spec), available for completeness\n    'msFlexOrder' in elem.style);\n  }\n  /**\n   * Set debug mode to enable/disable logs at info level.\n   *\n   * @param {boolean} enabled\n   * @fires Player#debugon\n   * @fires Player#debugoff\n   */\n  ;\n\n  _proto.debug = function debug(enabled) {\n    if (enabled === undefined) {\n      return this.debugEnabled_;\n    }\n\n    if (enabled) {\n      this.trigger('debugon');\n      this.previousLogLevel_ = this.log.level;\n      this.log.level('debug');\n      this.debugEnabled_ = true;\n    } else {\n      this.trigger('debugoff');\n      this.log.level(this.previousLogLevel_);\n      this.previousLogLevel_ = undefined;\n      this.debugEnabled_ = false;\n    }\n  }\n  /**\n   * Set or get current playback rates.\n   * Takes an array and updates the playback rates menu with the new items.\n   * Pass in an empty array to hide the menu.\n   * Values other than arrays are ignored.\n   *\n   * @fires Player#playbackrateschange\n   * @param {number[]} newRates\n   *                   The new rates that the playback rates menu should update to.\n   *                   An empty array will hide the menu\n   * @return {number[]} When used as a getter will return the current playback rates\n   */\n  ;\n\n  _proto.playbackRates = function playbackRates(newRates) {\n    if (newRates === undefined) {\n      return this.cache_.playbackRates;\n    } // ignore any value that isn't an array\n\n\n    if (!Array.isArray(newRates)) {\n      return;\n    } // ignore any arrays that don't only contain numbers\n\n\n    if (!newRates.every(function (rate) {\n      return typeof rate === 'number';\n    })) {\n      return;\n    }\n\n    this.cache_.playbackRates = newRates;\n    /**\n    * fires when the playback rates in a player are changed\n    *\n    * @event Player#playbackrateschange\n    * @type {EventTarget~Event}\n    */\n\n    this.trigger('playbackrateschange');\n  };\n\n  return Player;\n}(Component$1);\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    } // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n\n\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n/**\n * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n * behavior.\n *\n * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n *\n * @param {string} [value]\n *        The value to set the `Player`'s crossorigin to. If an argument is\n *        given, must be one of `anonymous` or `use-credentials`.\n *\n * @return {string|undefined}\n *         - The current crossorigin value of the `Player` when getting.\n *         - undefined when setting\n */\n\nPlayer.prototype.crossorigin = Player.prototype.crossOrigin;\n/**\n * Global enumeration of players.\n *\n * The keys are the player IDs and the values are either the {@link Player}\n * instance or `null` for disposed players.\n *\n * @type {Object}\n */\n\nPlayer.players = {};\nvar navigator = window$1.navigator;\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\n\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n  html5: {},\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n  liveui: false,\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n  // locales and their language translations\n  languages: {},\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.',\n  normalizeAutoplay: false,\n  fullscreen: {\n    options: {\n      navigationUI: 'hide'\n    }\n  },\n  breakpoints: {},\n  responsive: false,\n  audioOnlyMode: false,\n  audioPosterMode: false\n};\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype[\"handleTech\" + toTitleCase$1(event) + \"_\"] = function () {\n    return this.trigger(event);\n  };\n});\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent$1.registerComponent('Player', Player);\n\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\n\nvar BASE_PLUGIN_NAME = 'plugin';\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\n\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\n\nvar pluginStorage = {};\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {boolean}\n *          Whether or not the plugin has been registered.\n */\n\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @return {Function|undefined}\n *          The plugin (or undefined).\n */\n\n\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\n\n\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\n\n\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @return {Function}\n *          A wrapper function for the given plugin.\n */\n\n\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: null\n    }, true);\n    var instance = plugin.apply(this, arguments);\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: plugin,\n      instance: instance\n    });\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n  return basicPluginWrapper;\n};\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @return {Function}\n */\n\n\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n  return function () {\n    triggerSetupEvent(this, {\n      name: name,\n      plugin: PluginSubClass,\n      instance: null\n    }, true);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = _construct(PluginSubClass, [this].concat(args)); // The plugin is replaced by a function that returns the current instance.\n\n\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n    return instance;\n  };\n};\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\n\nvar Plugin = /*#__PURE__*/function () {\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    if (!this.log) {\n      this.log = this.player.log.createLogger(this.name);\n    } // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n\n\n    evented(this);\n    delete this.trigger;\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name); // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n\n    this.dispose = this.dispose.bind(this); // If the player is disposed, dispose the plugin.\n\n    player.on('dispose', this.dispose);\n  }\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  var _proto = Plugin.prototype;\n\n  _proto.version = function version() {\n    return this.constructor.VERSION;\n  }\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @return {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n  ;\n\n  _proto.getEventHash = function getEventHash(hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  }\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @return {boolean}\n   *          Whether or not default was prevented.\n   */\n  ;\n\n  _proto.trigger = function trigger$1(event, hash) {\n    if (hash === void 0) {\n      hash = {};\n    }\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  }\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n  ;\n\n  _proto.handleStateChanged = function handleStateChanged(e) {}\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose); // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null; // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  }\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @return {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n  ;\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  }\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @return {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n  ;\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", must be a string, was \" + typeof name + \".\");\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn(\"A plugin named \\\"\" + name + \"\\\" already exists. You may want to avoid re-registering plugins!\");\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error(\"Illegal plugin name, \\\"\" + name + \"\\\", cannot share a name with an existing player method!\");\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error(\"Illegal plugin for \\\"\" + name + \"\\\", must be a function, was \" + typeof plugin + \".\");\n    }\n\n    pluginStorage[name] = plugin; // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  }\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param  {string} name\n   *         The name of the plugin to be de-registered. Must be a string that\n   *         matches an existing plugin.\n   *\n   * @throws {Error}\n   *         If an attempt is made to de-register the base plugin.\n   */\n  ;\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  }\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @return {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n  ;\n\n  Plugin.getPlugins = function getPlugins(names) {\n    if (names === void 0) {\n      names = Object.keys(pluginStorage);\n    }\n\n    var result;\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n    return result;\n  }\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {string}\n   *          The plugin's version or an empty string.\n   */\n  ;\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\n\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n/**\n * Documented in player.js\n *\n * @ignore\n */\n\n\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n/**\n * Used to subclass an existing class by emulating ES subclassing using the\n * `extends` keyword.\n *\n * @function\n * @example\n * var MyComponent = videojs.extend(videojs.getComponent('Component'), {\n *   myCustomMethod: function() {\n *     // Do things in my method.\n *   }\n * });\n *\n * @param    {Function} superClass\n *           The class to inherit from\n *\n * @param    {Object}   [subClassMethods={}]\n *           Methods of the new class\n *\n * @return   {Function}\n *           The new class with subClassMethods that inherited superClass.\n */\n\nvar extend = function extend(superClass, subClassMethods) {\n  if (subClassMethods === void 0) {\n    subClassMethods = {};\n  }\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if (typeof subClassMethods === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass); // this is needed for backward-compatibility and node compatibility.\n\n\n  if (superClass) {\n    subClass.super_ = superClass;\n  } // Extend subObj's prototype with functions and other properties from props\n\n\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @private\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @return {string}\n *          The string, without any leading `#`.\n */\n\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n/**\n * The `videojs()` function doubles as the main function for users to create a\n * {@link Player} instance as well as the main library namespace.\n *\n * It can also be used as a getter for a pre-existing {@link Player} instance.\n * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n * purpose because it avoids any potential for unintended initialization.\n *\n * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n * of our JSDoc template, we cannot properly document this as both a function\n * and a namespace, so its function signature is documented here.\n *\n * #### Arguments\n * ##### id\n * string|Element, **required**\n *\n * Video element or video element ID.\n *\n * ##### options\n * Object, optional\n *\n * Options object for providing settings.\n * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * ##### ready\n * {@link Component~ReadyCallback}, optional\n *\n * A function to be called when the {@link Player} and {@link Tech} are ready.\n *\n * #### Return Value\n *\n * The `videojs()` function returns a {@link Player} instance.\n *\n * @namespace\n *\n * @borrows AudioTrack as AudioTrack\n * @borrows Component.getComponent as getComponent\n * @borrows module:computed-style~computedStyle as computedStyle\n * @borrows module:events.on as on\n * @borrows module:events.one as one\n * @borrows module:events.off as off\n * @borrows module:events.trigger as trigger\n * @borrows EventTarget as EventTarget\n * @borrows module:extend~extend as extend\n * @borrows module:fn.bind as bind\n * @borrows module:format-time.formatTime as formatTime\n * @borrows module:format-time.resetFormatTime as resetFormatTime\n * @borrows module:format-time.setFormatTime as setFormatTime\n * @borrows module:merge-options.mergeOptions as mergeOptions\n * @borrows module:middleware.use as use\n * @borrows Player.players as players\n * @borrows Plugin.registerPlugin as registerPlugin\n * @borrows Plugin.deregisterPlugin as deregisterPlugin\n * @borrows Plugin.getPlugins as getPlugins\n * @borrows Plugin.getPlugin as getPlugin\n * @borrows Plugin.getPluginVersion as getPluginVersion\n * @borrows Tech.getTech as getTech\n * @borrows Tech.registerTech as registerTech\n * @borrows TextTrack as TextTrack\n * @borrows module:time-ranges.createTimeRanges as createTimeRange\n * @borrows module:time-ranges.createTimeRanges as createTimeRanges\n * @borrows module:url.isCrossOrigin as isCrossOrigin\n * @borrows module:url.parseUrl as parseUrl\n * @borrows VideoTrack as VideoTrack\n *\n * @param  {string|Element} id\n *         Video element or video element ID.\n *\n * @param  {Object} [options]\n *         Options object for providing settings.\n *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n *\n * @param  {Component~ReadyCallback} [ready]\n *         A function to be called when the {@link Player} and {@link Tech} are\n *         ready.\n *\n * @return {Player}\n *         The `videojs()` function returns a {@link Player|Player} instance.\n */\n\n\nfunction videojs(id, options, ready) {\n  var player = videojs.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn(\"Player \\\"\" + id + \"\\\" is already initialised. Options will not be applied.\");\n    }\n\n    if (ready) {\n      player.ready(ready);\n    }\n\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  } // document.body.contains(el) will only check if el is contained within that one document.\n  // This causes problems for elements in iframes.\n  // Instead, use the element's ownerDocument instead of the global document.\n  // This will make sure that the element is indeed in the dom of that document.\n  // Additionally, check that the document in question has a default view.\n  // If the document is no longer attached to the dom, the defaultView of the document will be null.\n\n\n  if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {}; // Store a copy of the el before modification, if it is to be restored in destroy()\n  // If div ingest, store the parent div\n\n  if (options.restoreEl === true) {\n    options.restoreEl = (el.parentNode && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n  }\n\n  hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions$3(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions$3(options, opts);\n  }); // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n\n  var PlayerComponent = Component$1.getComponent('Player');\n  player = new PlayerComponent(el, options, ready);\n  hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n  return player;\n}\n\nvideojs.hooks_ = hooks_;\nvideojs.hooks = hooks;\nvideojs.hook = hook;\nvideojs.hookOnce = hookOnce;\nvideojs.removeHook = removeHook; // Add default styles\n\nif (window$1.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n\n    setTextContent(style, \"\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid:not(.vjs-audio-only-mode) {\\n        padding-top: 56.25%\\n      }\\n    \");\n  }\n} // Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\n\n\nautoSetupTimeout(1, videojs);\n/**\n * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n *\n * @type {string}\n */\n\nvideojs.VERSION = version$5;\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\n\nvideojs.options = Player.prototype.options_;\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\n\nvideojs.getPlayers = function () {\n  return Player.players;\n};\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @return {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\n\n\nvideojs.getPlayer = function (id) {\n  var players = Player.players;\n  var tag;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId; // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\n\n\nvideojs.getAllPlayers = function () {\n  return (// Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\nvideojs.players = Player.players;\nvideojs.getComponent = Component$1.getComponent;\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\n\nvideojs.registerComponent = function (name, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn(\"The \" + name + \" tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)\");\n  }\n\n  Component$1.registerComponent.call(Component$1, name, comp);\n};\n\nvideojs.getTech = Tech.getTech;\nvideojs.registerTech = Tech.registerTech;\nvideojs.use = use;\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @property {object} middleware.TERMINATOR\n */\n\nObject.defineProperty(videojs, 'middleware', {\n  value: {},\n  writeable: false,\n  enumerable: true\n});\nObject.defineProperty(videojs.middleware, 'TERMINATOR', {\n  value: TERMINATOR,\n  writeable: false,\n  enumerable: true\n});\n/**\n * A reference to the {@link module:browser|browser utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:browser|browser}\n */\n\nvideojs.browser = browser;\n/**\n * Use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED} instead; only\n * included for backward-compatibility with 4.x.\n *\n * @deprecated Since version 5.0, use {@link module:browser.TOUCH_ENABLED|browser.TOUCH_ENABLED instead.\n * @type {boolean}\n */\n\nvideojs.TOUCH_ENABLED = TOUCH_ENABLED;\nvideojs.extend = extend;\nvideojs.mergeOptions = mergeOptions$3;\nvideojs.bind = bind;\nvideojs.registerPlugin = Plugin.registerPlugin;\nvideojs.deregisterPlugin = Plugin.deregisterPlugin;\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\n\nvideojs.plugin = function (name, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name, plugin);\n};\n\nvideojs.getPlugins = Plugin.getPlugins;\nvideojs.getPlugin = Plugin.getPlugin;\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\n\nvideojs.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n  videojs.options.languages = mergeOptions$3(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n  return videojs.options.languages[code];\n};\n/**\n * A reference to the {@link module:log|log utility module} as an object.\n *\n * @type {Function}\n * @see  {@link module:log|log}\n */\n\n\nvideojs.log = log$1;\nvideojs.createLogger = createLogger;\nvideojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\nvideojs.formatTime = formatTime;\nvideojs.setFormatTime = setFormatTime;\nvideojs.resetFormatTime = resetFormatTime;\nvideojs.parseUrl = parseUrl;\nvideojs.isCrossOrigin = isCrossOrigin;\nvideojs.EventTarget = EventTarget$2;\nvideojs.on = on;\nvideojs.one = one;\nvideojs.off = off;\nvideojs.trigger = trigger;\n/**\n * A cross-browser XMLHttpRequest wrapper.\n *\n * @function\n * @param    {Object} options\n *           Settings for the request.\n *\n * @return   {XMLHttpRequest|XDomainRequest}\n *           The request object.\n *\n * @see      https://github.com/Raynos/xhr\n */\n\nvideojs.xhr = XHR;\nvideojs.TextTrack = TextTrack;\nvideojs.AudioTrack = AudioTrack;\nvideojs.VideoTrack = VideoTrack;\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs[k] = function () {\n    log$1.warn(\"videojs.\" + k + \"() is deprecated; use videojs.dom.\" + k + \"() instead\");\n    return Dom[k].apply(null, arguments);\n  };\n});\nvideojs.computedStyle = computedStyle;\n/**\n * A reference to the {@link module:dom|DOM utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:dom|dom}\n */\n\nvideojs.dom = Dom;\n/**\n * A reference to the {@link module:url|URL utility module} as an object.\n *\n * @type {Object}\n * @see  {@link module:url|url}\n */\n\nvideojs.url = Url;\nvideojs.defineLazyProperty = defineLazyProperty; // Adding less ambiguous text for fullscreen button.\n// In a major update this could become the default text and key.\n\nvideojs.addLanguage('en', {\n  'Non-Fullscreen': 'Exit Fullscreen'\n});\n\n/*! @name @videojs/http-streaming @version 2.14.3 @license Apache-2.0 */\n/**\n * @file resolve-url.js - Handling how URLs are resolved and manipulated\n */\n\nvar resolveUrl = _resolveUrl;\n/**\n * Checks whether xhr request was redirected and returns correct url depending\n * on `handleManifestRedirects` option\n *\n * @api private\n *\n * @param  {string} url - an url being requested\n * @param  {XMLHttpRequest} req - xhr request result\n *\n * @return {string}\n */\n\nvar resolveManifestRedirect = function resolveManifestRedirect(handleManifestRedirect, url, req) {\n  // To understand how the responseURL below is set and generated:\n  // - https://fetch.spec.whatwg.org/#concept-response-url\n  // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n  if (handleManifestRedirect && req && req.responseURL && url !== req.responseURL) {\n    return req.responseURL;\n  }\n\n  return url;\n};\n\nvar logger = function logger(source) {\n  if (videojs.log.debug) {\n    return videojs.log.debug.bind(videojs, 'VHS:', source + \" >\");\n  }\n\n  return function () {};\n};\n/**\n * ranges\n *\n * Utilities for working with TimeRanges.\n *\n */\n\n\nvar TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n// can be misleading because of precision differences or when the current media has poorly\n// aligned audio and video, which can cause values to be slightly off from what you would\n// expect. This value is what we consider to be safe to use in such comparisons to account\n// for these scenarios.\n\nvar SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n\nvar filterRanges = function filterRanges(timeRanges, predicate) {\n  var results = [];\n  var i;\n\n  if (timeRanges && timeRanges.length) {\n    // Search for ranges that match the predicate\n    for (i = 0; i < timeRanges.length; i++) {\n      if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n        results.push([timeRanges.start(i), timeRanges.end(i)]);\n      }\n    }\n  }\n\n  return videojs.createTimeRanges(results);\n};\n/**\n * Attempts to find the buffered TimeRange that contains the specified\n * time.\n *\n * @param {TimeRanges} buffered - the TimeRanges object to query\n * @param {number} time  - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object\n */\n\n\nvar findRange = function findRange(buffered, time) {\n  return filterRanges(buffered, function (start, end) {\n    return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n  });\n};\n/**\n * Returns the TimeRanges that begin later than the specified time.\n *\n * @param {TimeRanges} timeRanges - the TimeRanges object to query\n * @param {number} time - the time to filter on.\n * @return {TimeRanges} a new TimeRanges object.\n */\n\n\nvar findNextRange = function findNextRange(timeRanges, time) {\n  return filterRanges(timeRanges, function (start) {\n    return start - TIME_FUDGE_FACTOR >= time;\n  });\n};\n/**\n * Returns gaps within a list of TimeRanges\n *\n * @param {TimeRanges} buffered - the TimeRanges object\n * @return {TimeRanges} a TimeRanges object of gaps\n */\n\n\nvar findGaps = function findGaps(buffered) {\n  if (buffered.length < 2) {\n    return videojs.createTimeRanges();\n  }\n\n  var ranges = [];\n\n  for (var i = 1; i < buffered.length; i++) {\n    var start = buffered.end(i - 1);\n    var end = buffered.start(i);\n    ranges.push([start, end]);\n  }\n\n  return videojs.createTimeRanges(ranges);\n};\n/**\n * Calculate the intersection of two TimeRanges\n *\n * @param {TimeRanges} bufferA\n * @param {TimeRanges} bufferB\n * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n */\n\n\nvar bufferIntersection = function bufferIntersection(bufferA, bufferB) {\n  var start = null;\n  var end = null;\n  var arity = 0;\n  var extents = [];\n  var ranges = [];\n\n  if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n    return videojs.createTimeRange();\n  } // Handle the case where we have both buffers and create an\n  // intersection of the two\n\n\n  var count = bufferA.length; // A) Gather up all start and end times\n\n  while (count--) {\n    extents.push({\n      time: bufferA.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferA.end(count),\n      type: 'end'\n    });\n  }\n\n  count = bufferB.length;\n\n  while (count--) {\n    extents.push({\n      time: bufferB.start(count),\n      type: 'start'\n    });\n    extents.push({\n      time: bufferB.end(count),\n      type: 'end'\n    });\n  } // B) Sort them by time\n\n\n  extents.sort(function (a, b) {\n    return a.time - b.time;\n  }); // C) Go along one by one incrementing arity for start and decrementing\n  //    arity for ends\n\n  for (count = 0; count < extents.length; count++) {\n    if (extents[count].type === 'start') {\n      arity++; // D) If arity is ever incremented to 2 we are entering an\n      //    overlapping range\n\n      if (arity === 2) {\n        start = extents[count].time;\n      }\n    } else if (extents[count].type === 'end') {\n      arity--; // E) If arity is ever decremented to 1 we leaving an\n      //    overlapping range\n\n      if (arity === 1) {\n        end = extents[count].time;\n      }\n    } // F) Record overlapping ranges\n\n\n    if (start !== null && end !== null) {\n      ranges.push([start, end]);\n      start = null;\n      end = null;\n    }\n  }\n\n  return videojs.createTimeRanges(ranges);\n};\n/**\n * Gets a human readable string for a TimeRange\n *\n * @param {TimeRange} range\n * @return {string} a human readable string\n */\n\n\nvar printableRange = function printableRange(range) {\n  var strArr = [];\n\n  if (!range || !range.length) {\n    return '';\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    strArr.push(range.start(i) + ' => ' + range.end(i));\n  }\n\n  return strArr.join(', ');\n};\n/**\n * Calculates the amount of time left in seconds until the player hits the end of the\n * buffer and causes a rebuffer\n *\n * @param {TimeRange} buffered\n *        The state of the buffer\n * @param {Numnber} currentTime\n *        The current time of the player\n * @param {number} playbackRate\n *        The current playback rate of the player. Defaults to 1.\n * @return {number}\n *         Time until the player has to start rebuffering in seconds.\n * @function timeUntilRebuffer\n */\n\n\nvar timeUntilRebuffer = function timeUntilRebuffer(buffered, currentTime, playbackRate) {\n  if (playbackRate === void 0) {\n    playbackRate = 1;\n  }\n\n  var bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n  return (bufferedEnd - currentTime) / playbackRate;\n};\n/**\n * Converts a TimeRanges object into an array representation\n *\n * @param {TimeRanges} timeRanges\n * @return {Array}\n */\n\n\nvar timeRangesToArray = function timeRangesToArray(timeRanges) {\n  var timeRangesList = [];\n\n  for (var i = 0; i < timeRanges.length; i++) {\n    timeRangesList.push({\n      start: timeRanges.start(i),\n      end: timeRanges.end(i)\n    });\n  }\n\n  return timeRangesList;\n};\n/**\n * Determines if two time range objects are different.\n *\n * @param {TimeRange} a\n *        the first time range object to check\n *\n * @param {TimeRange} b\n *        the second time range object to check\n *\n * @return {Boolean}\n *         Whether the time range objects differ\n */\n\n\nvar isRangeDifferent = function isRangeDifferent(a, b) {\n  // same object\n  if (a === b) {\n    return false;\n  } // one or the other is undefined\n\n\n  if (!a && b || !b && a) {\n    return true;\n  } // length is different\n\n\n  if (a.length !== b.length) {\n    return true;\n  } // see if any start/end pair is different\n\n\n  for (var i = 0; i < a.length; i++) {\n    if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n      return true;\n    }\n  } // if the length and every pair is the same\n  // this is the same time range\n\n\n  return false;\n};\n\nvar lastBufferedEnd = function lastBufferedEnd(a) {\n  if (!a || !a.length || !a.end) {\n    return;\n  }\n\n  return a.end(a.length - 1);\n};\n/**\n * A utility function to add up the amount of time in a timeRange\n * after a specified startTime.\n * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n *     would return 40 as there are 40s seconds after 0 in the timeRange\n *\n * @param {TimeRange} range\n *        The range to check against\n * @param {number} startTime\n *        The time in the time range that you should start counting from\n *\n * @return {number}\n *          The number of seconds in the buffer passed the specified time.\n */\n\n\nvar timeAheadOf = function timeAheadOf(range, startTime) {\n  var time = 0;\n\n  if (!range || !range.length) {\n    return time;\n  }\n\n  for (var i = 0; i < range.length; i++) {\n    var start = range.start(i);\n    var end = range.end(i); // startTime is after this range entirely\n\n    if (startTime > end) {\n      continue;\n    } // startTime is within this range\n\n\n    if (startTime > start && startTime <= end) {\n      time += end - startTime;\n      continue;\n    } // startTime is before this range.\n\n\n    time += end - start;\n  }\n\n  return time;\n};\n/**\n * @file playlist.js\n *\n * Playlist related utilities.\n */\n\n\nvar createTimeRange = videojs.createTimeRange;\n/**\n * Get the duration of a segment, with special cases for\n * llhls segments that do not have a duration yet.\n *\n * @param {Object} playlist\n *        the playlist that the segment belongs to.\n * @param {Object} segment\n *        the segment to get a duration for.\n *\n * @return {number}\n *          the segment duration\n */\n\nvar segmentDurationWithParts = function segmentDurationWithParts(playlist, segment) {\n  // if this isn't a preload segment\n  // then we will have a segment duration that is accurate.\n  if (!segment.preload) {\n    return segment.duration;\n  } // otherwise we have to add up parts and preload hints\n  // to get an up to date duration.\n\n\n  var result = 0;\n  (segment.parts || []).forEach(function (p) {\n    result += p.duration;\n  }); // for preload hints we have to use partTargetDuration\n  // as they won't even have a duration yet.\n\n  (segment.preloadHints || []).forEach(function (p) {\n    if (p.type === 'PART') {\n      result += playlist.partTargetDuration;\n    }\n  });\n  return result;\n};\n/**\n * A function to get a combined list of parts and segments with durations\n * and indexes.\n *\n * @param {Playlist} playlist the playlist to get the list for.\n *\n * @return {Array} The part/segment list.\n */\n\n\nvar getPartsAndSegments = function getPartsAndSegments(playlist) {\n  return (playlist.segments || []).reduce(function (acc, segment, si) {\n    if (segment.parts) {\n      segment.parts.forEach(function (part, pi) {\n        acc.push({\n          duration: part.duration,\n          segmentIndex: si,\n          partIndex: pi,\n          part: part,\n          segment: segment\n        });\n      });\n    } else {\n      acc.push({\n        duration: segment.duration,\n        segmentIndex: si,\n        partIndex: null,\n        segment: segment,\n        part: null\n      });\n    }\n\n    return acc;\n  }, []);\n};\n\nvar getLastParts = function getLastParts(media) {\n  var lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n  return lastSegment && lastSegment.parts || [];\n};\n\nvar getKnownPartCount = function getKnownPartCount(_ref) {\n  var preloadSegment = _ref.preloadSegment;\n\n  if (!preloadSegment) {\n    return;\n  }\n\n  var parts = preloadSegment.parts,\n      preloadHints = preloadSegment.preloadHints;\n  var partCount = (preloadHints || []).reduce(function (count, hint) {\n    return count + (hint.type === 'PART' ? 1 : 0);\n  }, 0);\n  partCount += parts && parts.length ? parts.length : 0;\n  return partCount;\n};\n/**\n * Get the number of seconds to delay from the end of a\n * live playlist.\n *\n * @param {Playlist} master the master playlist\n * @param {Playlist} media the media playlist\n * @return {number} the hold back in seconds.\n */\n\n\nvar liveEdgeDelay = function liveEdgeDelay(master, media) {\n  if (media.endList) {\n    return 0;\n  } // dash suggestedPresentationDelay trumps everything\n\n\n  if (master && master.suggestedPresentationDelay) {\n    return master.suggestedPresentationDelay;\n  }\n\n  var hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n  if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n    return media.serverControl.partHoldBack;\n  } else if (hasParts && media.partTargetDuration) {\n    return media.partTargetDuration * 3; // finally look for full segment delays\n  } else if (media.serverControl && media.serverControl.holdBack) {\n    return media.serverControl.holdBack;\n  } else if (media.targetDuration) {\n    return media.targetDuration * 3;\n  }\n\n  return 0;\n};\n/**\n * walk backward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {Number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar backwardDuration = function backwardDuration(playlist, endSequence) {\n  var result = 0;\n  var i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n  // the interval, use it\n\n  var segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n  // information that is earlier than endSequence\n\n  if (segment) {\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start,\n        precise: true\n      };\n    }\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - segment.duration,\n        precise: true\n      };\n    }\n  }\n\n  while (i--) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: result + segment.end,\n        precise: true\n      };\n    }\n\n    result += segmentDurationWithParts(playlist, segment);\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: result + segment.start,\n        precise: true\n      };\n    }\n  }\n\n  return {\n    result: result,\n    precise: false\n  };\n};\n/**\n * walk forward until we find a duration we can use\n * or return a failure\n *\n * @param {Playlist} playlist the playlist to walk through\n * @param {number} endSequence the mediaSequence to stop walking on\n */\n\n\nvar forwardDuration = function forwardDuration(playlist, endSequence) {\n  var result = 0;\n  var segment;\n  var i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n  // information\n\n  for (; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i];\n\n    if (typeof segment.start !== 'undefined') {\n      return {\n        result: segment.start - result,\n        precise: true\n      };\n    }\n\n    result += segmentDurationWithParts(playlist, segment);\n\n    if (typeof segment.end !== 'undefined') {\n      return {\n        result: segment.end - result,\n        precise: true\n      };\n    }\n  } // indicate we didn't find a useful duration estimate\n\n\n  return {\n    result: -1,\n    precise: false\n  };\n};\n/**\n  * Calculate the media duration from the segments associated with a\n  * playlist. The duration of a subinterval of the available segments\n  * may be calculated by specifying an end index.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper boundary\n  * for the playlist.  Defaults to playlist length.\n  * @param {number} expired the amount of time that has dropped\n  * off the front of the playlist in a live scenario\n  * @return {number} the duration between the first available segment\n  * and end index.\n  */\n\n\nvar intervalDuration = function intervalDuration(playlist, endSequence, expired) {\n  if (typeof endSequence === 'undefined') {\n    endSequence = playlist.mediaSequence + playlist.segments.length;\n  }\n\n  if (endSequence < playlist.mediaSequence) {\n    return 0;\n  } // do a backward walk to estimate the duration\n\n\n  var backward = backwardDuration(playlist, endSequence);\n\n  if (backward.precise) {\n    // if we were able to base our duration estimate on timing\n    // information provided directly from the Media Source, return\n    // it\n    return backward.result;\n  } // walk forward to see if a precise duration estimate can be made\n  // that way\n\n\n  var forward = forwardDuration(playlist, endSequence);\n\n  if (forward.precise) {\n    // we found a segment that has been buffered and so it's\n    // position is known precisely\n    return forward.result;\n  } // return the less-precise, playlist-based duration estimate\n\n\n  return backward.result + expired;\n};\n/**\n  * Calculates the duration of a playlist. If a start and end index\n  * are specified, the duration will be for the subset of the media\n  * timeline between those two indices. The total duration for live\n  * playlists is always Infinity.\n  *\n  * @param {Object} playlist a media playlist object\n  * @param {number=} endSequence an exclusive upper\n  * boundary for the playlist. Defaults to the playlist media\n  * sequence number plus its length.\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @return {number} the duration between the start index and end\n  * index.\n  */\n\n\nvar duration = function duration(playlist, endSequence, expired) {\n  if (!playlist) {\n    return 0;\n  }\n\n  if (typeof expired !== 'number') {\n    expired = 0;\n  } // if a slice of the total duration is not requested, use\n  // playlist-level duration indicators when they're present\n\n\n  if (typeof endSequence === 'undefined') {\n    // if present, use the duration specified in the playlist\n    if (playlist.totalDuration) {\n      return playlist.totalDuration;\n    } // duration should be Infinity for live playlists\n\n\n    if (!playlist.endList) {\n      return window$1.Infinity;\n    }\n  } // calculate the total duration based on the segment durations\n\n\n  return intervalDuration(playlist, endSequence, expired);\n};\n/**\n  * Calculate the time between two indexes in the current playlist\n  * neight the start- nor the end-index need to be within the current\n  * playlist in which case, the targetDuration of the playlist is used\n  * to approximate the durations of the segments\n  *\n  * @param {Array} options.durationList list to iterate over for durations.\n  * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n  * @param {number} options.startIndex partsAndSegments index to start\n  * @param {number} options.endIndex partsAndSegments index to end.\n  * @return {number} the number of seconds between startIndex and endIndex\n  */\n\n\nvar sumDurations = function sumDurations(_ref2) {\n  var defaultDuration = _ref2.defaultDuration,\n      durationList = _ref2.durationList,\n      startIndex = _ref2.startIndex,\n      endIndex = _ref2.endIndex;\n  var durations = 0;\n\n  if (startIndex > endIndex) {\n    var _ref3 = [endIndex, startIndex];\n    startIndex = _ref3[0];\n    endIndex = _ref3[1];\n  }\n\n  if (startIndex < 0) {\n    for (var i = startIndex; i < Math.min(0, endIndex); i++) {\n      durations += defaultDuration;\n    }\n\n    startIndex = 0;\n  }\n\n  for (var _i = startIndex; _i < endIndex; _i++) {\n    durations += durationList[_i].duration;\n  }\n\n  return durations;\n};\n/**\n * Calculates the playlist end time\n *\n * @param {Object} playlist a media playlist object\n * @param {number=} expired the amount of time that has\n *                  dropped off the front of the playlist in a live scenario\n * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n *                        playlist end calculation should consider the safe live end\n *                        (truncate the playlist end by three segments). This is normally\n *                        used for calculating the end of the playlist's seekable range.\n *                        This takes into account the value of liveEdgePadding.\n *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n *                 If this is provided, it is used in the safe live end calculation.\n *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n * @return {number} the end time of playlist\n * @function playlistEnd\n */\n\n\nvar playlistEnd = function playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n  if (!playlist || !playlist.segments) {\n    return null;\n  }\n\n  if (playlist.endList) {\n    return duration(playlist);\n  }\n\n  if (expired === null) {\n    return null;\n  }\n\n  expired = expired || 0;\n  var lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n\n  if (useSafeLiveEnd) {\n    liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n    lastSegmentEndTime -= liveEdgePadding;\n  } // don't return a time less than zero\n\n\n  return Math.max(0, lastSegmentEndTime);\n};\n/**\n  * Calculates the interval of time that is currently seekable in a\n  * playlist. The returned time ranges are relative to the earliest\n  * moment in the specified playlist that is still available. A full\n  * seekable implementation for live streams would need to offset\n  * these values by the duration of content that has expired from the\n  * stream.\n  *\n  * @param {Object} playlist a media playlist object\n  * dropped off the front of the playlist in a live scenario\n  * @param {number=} expired the amount of time that has\n  * dropped off the front of the playlist in a live scenario\n  * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n  *        Corresponds to suggestedPresentationDelay in DASH manifests.\n  * @return {TimeRanges} the periods of time that are valid targets\n  * for seeking\n  */\n\n\nvar seekable = function seekable(playlist, expired, liveEdgePadding) {\n  var useSafeLiveEnd = true;\n  var seekableStart = expired || 0;\n  var seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n\n  if (seekableEnd === null) {\n    return createTimeRange();\n  }\n\n  return createTimeRange(seekableStart, seekableEnd);\n};\n/**\n * Determine the index and estimated starting time of the segment that\n * contains a specified playback position in a media playlist.\n *\n * @param {Object} options.playlist the media playlist to query\n * @param {number} options.currentTime The number of seconds since the earliest\n * possible position to determine the containing segment for\n * @param {number} options.startTime the time when the segment/part starts\n * @param {number} options.startingSegmentIndex the segment index to start looking at.\n * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n *\n * @return {Object} an object with partIndex, segmentIndex, and startTime.\n */\n\n\nvar getMediaInfoForTime = function getMediaInfoForTime(_ref4) {\n  var playlist = _ref4.playlist,\n      currentTime = _ref4.currentTime,\n      startingSegmentIndex = _ref4.startingSegmentIndex,\n      startingPartIndex = _ref4.startingPartIndex,\n      startTime = _ref4.startTime,\n      experimentalExactManifestTimings = _ref4.experimentalExactManifestTimings;\n  var time = currentTime - startTime;\n  var partsAndSegments = getPartsAndSegments(playlist);\n  var startIndex = 0;\n\n  for (var i = 0; i < partsAndSegments.length; i++) {\n    var partAndSegment = partsAndSegments[i];\n\n    if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n      continue;\n    } // skip this if part index does not match.\n\n\n    if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n      continue;\n    }\n\n    startIndex = i;\n    break;\n  }\n\n  if (time < 0) {\n    // Walk backward from startIndex in the playlist, adding durations\n    // until we find a segment that contains `time` and return it\n    if (startIndex > 0) {\n      for (var _i2 = startIndex - 1; _i2 >= 0; _i2--) {\n        var _partAndSegment = partsAndSegments[_i2];\n        time += _partAndSegment.duration;\n\n        if (experimentalExactManifestTimings) {\n          if (time < 0) {\n            continue;\n          }\n        } else if (time + TIME_FUDGE_FACTOR <= 0) {\n          continue;\n        }\n\n        return {\n          partIndex: _partAndSegment.partIndex,\n          segmentIndex: _partAndSegment.segmentIndex,\n          startTime: startTime - sumDurations({\n            defaultDuration: playlist.targetDuration,\n            durationList: partsAndSegments,\n            startIndex: startIndex,\n            endIndex: _i2\n          })\n        };\n      }\n    } // We were unable to find a good segment within the playlist\n    // so select the first segment\n\n\n    return {\n      partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n      segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n      startTime: currentTime\n    };\n  } // When startIndex is negative, we first walk forward to first segment\n  // adding target durations. If we \"run out of time\" before getting to\n  // the first segment, return the first segment\n\n\n  if (startIndex < 0) {\n    for (var _i3 = startIndex; _i3 < 0; _i3++) {\n      time -= playlist.targetDuration;\n\n      if (time < 0) {\n        return {\n          partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n          segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n          startTime: currentTime\n        };\n      }\n    }\n\n    startIndex = 0;\n  } // Walk forward from startIndex in the playlist, subtracting durations\n  // until we find a segment that contains `time` and return it\n\n\n  for (var _i4 = startIndex; _i4 < partsAndSegments.length; _i4++) {\n    var _partAndSegment2 = partsAndSegments[_i4];\n    time -= _partAndSegment2.duration;\n\n    if (experimentalExactManifestTimings) {\n      if (time > 0) {\n        continue;\n      }\n    } else if (time - TIME_FUDGE_FACTOR >= 0) {\n      continue;\n    }\n\n    return {\n      partIndex: _partAndSegment2.partIndex,\n      segmentIndex: _partAndSegment2.segmentIndex,\n      startTime: startTime + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: partsAndSegments,\n        startIndex: startIndex,\n        endIndex: _i4\n      })\n    };\n  } // We are out of possible candidates so load the last one...\n\n\n  return {\n    segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n    partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n    startTime: currentTime\n  };\n};\n/**\n * Check whether the playlist is blacklisted or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is blacklisted or not\n * @function isBlacklisted\n */\n\n\nvar isBlacklisted = function isBlacklisted(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n};\n/**\n * Check whether the playlist is compatible with current playback configuration or has\n * been blacklisted permanently for being incompatible.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is incompatible or not\n * @function isIncompatible\n */\n\n\nvar isIncompatible = function isIncompatible(playlist) {\n  return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n};\n/**\n * Check whether the playlist is enabled or not.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is enabled or not\n * @function isEnabled\n */\n\n\nvar isEnabled = function isEnabled(playlist) {\n  var blacklisted = isBlacklisted(playlist);\n  return !playlist.disabled && !blacklisted;\n};\n/**\n * Check whether the playlist has been manually disabled through the representations api.\n *\n * @param {Object} playlist the media playlist object\n * @return {boolean} whether the playlist is disabled manually or not\n * @function isDisabled\n */\n\n\nvar isDisabled = function isDisabled(playlist) {\n  return playlist.disabled;\n};\n/**\n * Returns whether the current playlist is an AES encrypted HLS stream\n *\n * @return {boolean} true if it's an AES encrypted HLS stream\n */\n\n\nvar isAes = function isAes(media) {\n  for (var i = 0; i < media.segments.length; i++) {\n    if (media.segments[i].key) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Checks if the playlist has a value for the specified attribute\n *\n * @param {string} attr\n *        Attribute to check for\n * @param {Object} playlist\n *        The media playlist object\n * @return {boolean}\n *         Whether the playlist contains a value for the attribute or not\n * @function hasAttribute\n */\n\n\nvar hasAttribute = function hasAttribute(attr, playlist) {\n  return playlist.attributes && playlist.attributes[attr];\n};\n/**\n * Estimates the time required to complete a segment download from the specified playlist\n *\n * @param {number} segmentDuration\n *        Duration of requested segment\n * @param {number} bandwidth\n *        Current measured bandwidth of the player\n * @param {Object} playlist\n *        The media playlist object\n * @param {number=} bytesReceived\n *        Number of bytes already received for the request. Defaults to 0\n * @return {number|NaN}\n *         The estimated time to request the segment. NaN if bandwidth information for\n *         the given playlist is unavailable\n * @function estimateSegmentRequestTime\n */\n\n\nvar estimateSegmentRequestTime = function estimateSegmentRequestTime(segmentDuration, bandwidth, playlist, bytesReceived) {\n  if (bytesReceived === void 0) {\n    bytesReceived = 0;\n  }\n\n  if (!hasAttribute('BANDWIDTH', playlist)) {\n    return NaN;\n  }\n\n  var size = segmentDuration * playlist.attributes.BANDWIDTH;\n  return (size - bytesReceived * 8) / bandwidth;\n};\n/*\n * Returns whether the current playlist is the lowest rendition\n *\n * @return {Boolean} true if on lowest rendition\n */\n\n\nvar isLowestEnabledRendition = function isLowestEnabledRendition(master, media) {\n  if (master.playlists.length === 1) {\n    return true;\n  }\n\n  var currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n  return master.playlists.filter(function (playlist) {\n    if (!isEnabled(playlist)) {\n      return false;\n    }\n\n    return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n  }).length === 0;\n};\n\nvar playlistMatch = function playlistMatch(a, b) {\n  // both playlits are null\n  // or only one playlist is non-null\n  // no match\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // playlist objects are the same, match\n\n\n  if (a === b) {\n    return true;\n  } // first try to use id as it should be the most\n  // accurate\n\n\n  if (a.id && b.id && a.id === b.id) {\n    return true;\n  } // next try to use reslovedUri as it should be the\n  // second most accurate.\n\n\n  if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n    return true;\n  } // finally try to use uri as it should be accurate\n  // but might miss a few cases for relative uris\n\n\n  if (a.uri && b.uri && a.uri === b.uri) {\n    return true;\n  }\n\n  return false;\n};\n\nvar someAudioVariant = function someAudioVariant(master, callback) {\n  var AUDIO = master && master.mediaGroups && master.mediaGroups.AUDIO || {};\n  var found = false;\n\n  for (var groupName in AUDIO) {\n    for (var label in AUDIO[groupName]) {\n      found = callback(AUDIO[groupName][label]);\n\n      if (found) {\n        break;\n      }\n    }\n\n    if (found) {\n      break;\n    }\n  }\n\n  return !!found;\n};\n\nvar isAudioOnly = function isAudioOnly(master) {\n  // we are audio only if we have no main playlists but do\n  // have media group playlists.\n  if (!master || !master.playlists || !master.playlists.length) {\n    // without audio variants or playlists this\n    // is not an audio only master.\n    var found = someAudioVariant(master, function (variant) {\n      return variant.playlists && variant.playlists.length || variant.uri;\n    });\n    return found;\n  } // if every playlist has only an audio codec it is audio only\n\n\n  var _loop = function _loop(i) {\n    var playlist = master.playlists[i];\n    var CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n    if (CODECS && CODECS.split(',').every(function (c) {\n      return isAudioCodec(c);\n    })) {\n      return \"continue\";\n    } // playlist is in an audio group it is audio only\n\n\n    var found = someAudioVariant(master, function (variant) {\n      return playlistMatch(playlist, variant);\n    });\n\n    if (found) {\n      return \"continue\";\n    } // if we make it here this playlist isn't audio and we\n    // are not audio only\n\n\n    return {\n      v: false\n    };\n  };\n\n  for (var i = 0; i < master.playlists.length; i++) {\n    var _ret = _loop(i);\n\n    if (_ret === \"continue\") continue;\n    if (typeof _ret === \"object\") return _ret.v;\n  } // if we make it past every playlist without returning, then\n  // this is an audio only playlist.\n\n\n  return true;\n}; // exports\n\n\nvar Playlist = {\n  liveEdgeDelay: liveEdgeDelay,\n  duration: duration,\n  seekable: seekable,\n  getMediaInfoForTime: getMediaInfoForTime,\n  isEnabled: isEnabled,\n  isDisabled: isDisabled,\n  isBlacklisted: isBlacklisted,\n  isIncompatible: isIncompatible,\n  playlistEnd: playlistEnd,\n  isAes: isAes,\n  hasAttribute: hasAttribute,\n  estimateSegmentRequestTime: estimateSegmentRequestTime,\n  isLowestEnabledRendition: isLowestEnabledRendition,\n  isAudioOnly: isAudioOnly,\n  playlistMatch: playlistMatch,\n  segmentDurationWithParts: segmentDurationWithParts\n};\nvar log = videojs.log;\n\nvar createPlaylistID = function createPlaylistID(index, uri) {\n  return index + \"-\" + uri;\n};\n/**\n * Parses a given m3u8 playlist\n *\n * @param {Function} [onwarn]\n *        a function to call when the parser triggers a warning event.\n * @param {Function} [oninfo]\n *        a function to call when the parser triggers an info event.\n * @param {string} manifestString\n *        The downloaded manifest string\n * @param {Object[]} [customTagParsers]\n *        An array of custom tag parsers for the m3u8-parser instance\n * @param {Object[]} [customTagMappers]\n *        An array of custom tag mappers for the m3u8-parser instance\n * @param {boolean} [experimentalLLHLS=false]\n *        Whether to keep ll-hls features in the manifest after parsing.\n * @return {Object}\n *         The manifest object\n */\n\n\nvar parseManifest = function parseManifest(_ref) {\n  var onwarn = _ref.onwarn,\n      oninfo = _ref.oninfo,\n      manifestString = _ref.manifestString,\n      _ref$customTagParsers = _ref.customTagParsers,\n      customTagParsers = _ref$customTagParsers === void 0 ? [] : _ref$customTagParsers,\n      _ref$customTagMappers = _ref.customTagMappers,\n      customTagMappers = _ref$customTagMappers === void 0 ? [] : _ref$customTagMappers,\n      experimentalLLHLS = _ref.experimentalLLHLS;\n  var parser = new Parser();\n\n  if (onwarn) {\n    parser.on('warn', onwarn);\n  }\n\n  if (oninfo) {\n    parser.on('info', oninfo);\n  }\n\n  customTagParsers.forEach(function (customParser) {\n    return parser.addParser(customParser);\n  });\n  customTagMappers.forEach(function (mapper) {\n    return parser.addTagMapper(mapper);\n  });\n  parser.push(manifestString);\n  parser.end();\n  var manifest = parser.manifest; // remove llhls features from the parsed manifest\n  // if we don't want llhls support.\n\n  if (!experimentalLLHLS) {\n    ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n      if (manifest.hasOwnProperty(k)) {\n        delete manifest[k];\n      }\n    });\n\n    if (manifest.segments) {\n      manifest.segments.forEach(function (segment) {\n        ['parts', 'preloadHints'].forEach(function (k) {\n          if (segment.hasOwnProperty(k)) {\n            delete segment[k];\n          }\n        });\n      });\n    }\n  }\n\n  if (!manifest.targetDuration) {\n    var targetDuration = 10;\n\n    if (manifest.segments && manifest.segments.length) {\n      targetDuration = manifest.segments.reduce(function (acc, s) {\n        return Math.max(acc, s.duration);\n      }, 0);\n    }\n\n    if (onwarn) {\n      onwarn(\"manifest has no targetDuration defaulting to \" + targetDuration);\n    }\n\n    manifest.targetDuration = targetDuration;\n  }\n\n  var parts = getLastParts(manifest);\n\n  if (parts.length && !manifest.partTargetDuration) {\n    var partTargetDuration = parts.reduce(function (acc, p) {\n      return Math.max(acc, p.duration);\n    }, 0);\n\n    if (onwarn) {\n      onwarn(\"manifest has no partTargetDuration defaulting to \" + partTargetDuration);\n      log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n    }\n\n    manifest.partTargetDuration = partTargetDuration;\n  }\n\n  return manifest;\n};\n/**\n * Loops through all supported media groups in master and calls the provided\n * callback for each group\n *\n * @param {Object} master\n *        The parsed master manifest object\n * @param {Function} callback\n *        Callback to call for each media group\n */\n\n\nvar forEachMediaGroup = function forEachMediaGroup(master, callback) {\n  if (!master.mediaGroups) {\n    return;\n  }\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (mediaType) {\n    if (!master.mediaGroups[mediaType]) {\n      return;\n    }\n\n    for (var groupKey in master.mediaGroups[mediaType]) {\n      for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n        var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n        callback(mediaProperties, mediaType, groupKey, labelKey);\n      }\n    }\n  });\n};\n/**\n * Adds properties and attributes to the playlist to keep consistent functionality for\n * playlists throughout VHS.\n *\n * @param {Object} config\n *        Arguments object\n * @param {Object} config.playlist\n *        The media playlist\n * @param {string} [config.uri]\n *        The uri to the media playlist (if media playlist is not from within a master\n *        playlist)\n * @param {string} id\n *        ID to use for the playlist\n */\n\n\nvar setupMediaPlaylist = function setupMediaPlaylist(_ref2) {\n  var playlist = _ref2.playlist,\n      uri = _ref2.uri,\n      id = _ref2.id;\n  playlist.id = id;\n  playlist.playlistErrors_ = 0;\n\n  if (uri) {\n    // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n    // playlists do not contain their own source URI, but one is needed for consistency in\n    // VHS.\n    playlist.uri = uri;\n  } // For HLS master playlists, even though certain attributes MUST be defined, the\n  // stream may still be played without them.\n  // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n  // manifest.\n  //\n  // To avoid undefined reference errors through the project, and make the code easier\n  // to write/read, add an empty attributes object for these cases.\n\n\n  playlist.attributes = playlist.attributes || {};\n};\n/**\n * Adds ID, resolvedUri, and attributes properties to each playlist of the master, where\n * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n * playlist references to the playlists array.\n *\n * @param {Object} master\n *        The master playlist\n */\n\n\nvar setupMediaPlaylists = function setupMediaPlaylists(master) {\n  var i = master.playlists.length;\n\n  while (i--) {\n    var playlist = master.playlists[i];\n    setupMediaPlaylist({\n      playlist: playlist,\n      id: createPlaylistID(i, playlist.uri)\n    });\n    playlist.resolvedUri = resolveUrl(master.uri, playlist.uri);\n    master.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n    master.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n    // the stream can be played without it. Although an attributes property may have been\n    // added to the playlist to prevent undefined references, issue a warning to fix the\n    // manifest.\n\n    if (!playlist.attributes.BANDWIDTH) {\n      log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n    }\n  }\n};\n/**\n * Adds resolvedUri properties to each media group.\n *\n * @param {Object} master\n *        The master playlist\n */\n\n\nvar resolveMediaGroupUris = function resolveMediaGroupUris(master) {\n  forEachMediaGroup(master, function (properties) {\n    if (properties.uri) {\n      properties.resolvedUri = resolveUrl(master.uri, properties.uri);\n    }\n  });\n};\n/**\n * Creates a master playlist wrapper to insert a sole media playlist into.\n *\n * @param {Object} media\n *        Media playlist\n * @param {string} uri\n *        The media URI\n *\n * @return {Object}\n *         Master playlist\n */\n\n\nvar masterForMedia = function masterForMedia(media, uri) {\n  var id = createPlaylistID(0, uri);\n  var master = {\n    mediaGroups: {\n      'AUDIO': {},\n      'VIDEO': {},\n      'CLOSED-CAPTIONS': {},\n      'SUBTITLES': {}\n    },\n    uri: window$1.location.href,\n    resolvedUri: window$1.location.href,\n    playlists: [{\n      uri: uri,\n      id: id,\n      resolvedUri: uri,\n      // m3u8-parser does not attach an attributes property to media playlists so make\n      // sure that the property is attached to avoid undefined reference errors\n      attributes: {}\n    }]\n  }; // set up ID reference\n\n  master.playlists[id] = master.playlists[0]; // URI reference added for backwards compatibility\n\n  master.playlists[uri] = master.playlists[0];\n  return master;\n};\n/**\n * Does an in-place update of the master manifest to add updated playlist URI references\n * as well as other properties needed by VHS that aren't included by the parser.\n *\n * @param {Object} master\n *        Master manifest object\n * @param {string} uri\n *        The source URI\n */\n\n\nvar addPropertiesToMaster = function addPropertiesToMaster(master, uri) {\n  master.uri = uri;\n\n  for (var i = 0; i < master.playlists.length; i++) {\n    if (!master.playlists[i].uri) {\n      // Set up phony URIs for the playlists since playlists are referenced by their URIs\n      // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n      // TODO: consider adding dummy URIs in mpd-parser\n      var phonyUri = \"placeholder-uri-\" + i;\n      master.playlists[i].uri = phonyUri;\n    }\n  }\n\n  var audioOnlyMaster = isAudioOnly(master);\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    var groupId = \"placeholder-uri-\" + mediaType + \"-\" + groupKey + \"-\" + labelKey; // add a playlist array under properties\n\n    if (!properties.playlists || !properties.playlists.length) {\n      // If the manifest is audio only and this media group does not have a uri, check\n      // if the media group is located in the main list of playlists. If it is, don't add\n      // placeholder properties as it shouldn't be considered an alternate audio track.\n      if (audioOnlyMaster && mediaType === 'AUDIO' && !properties.uri) {\n        for (var _i = 0; _i < master.playlists.length; _i++) {\n          var p = master.playlists[_i];\n\n          if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n            return;\n          }\n        }\n      }\n\n      properties.playlists = [_extends({}, properties)];\n    }\n\n    properties.playlists.forEach(function (p, i) {\n      var id = createPlaylistID(i, groupId);\n\n      if (p.uri) {\n        p.resolvedUri = p.resolvedUri || resolveUrl(master.uri, p.uri);\n      } else {\n        // DEPRECATED, this has been added to prevent a breaking change.\n        // previously we only ever had a single media group playlist, so\n        // we mark the first playlist uri without prepending the index as we used to\n        // ideally we would do all of the playlists the same way.\n        p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n        // the placeholder again\n\n        p.resolvedUri = p.uri;\n      }\n\n      p.id = p.id || id; // add an empty attributes object, all playlists are\n      // expected to have this.\n\n      p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n      master.playlists[p.id] = p;\n      master.playlists[p.uri] = p;\n    });\n  });\n  setupMediaPlaylists(master);\n  resolveMediaGroupUris(master);\n};\n\nvar mergeOptions$2 = videojs.mergeOptions,\n    EventTarget$1 = videojs.EventTarget;\n\nvar addLLHLSQueryDirectives = function addLLHLSQueryDirectives(uri, media) {\n  if (media.endList || !media.serverControl) {\n    return uri;\n  }\n\n  var parameters = {};\n\n  if (media.serverControl.canBlockReload) {\n    var preloadSegment = media.preloadSegment; // next msn is a zero based value, length is not.\n\n    var nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n    // that we are going to request a part of that preload segment.\n    // the logic below is used to determine that.\n\n    if (preloadSegment) {\n      var parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n      var nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n      // length of parts, then we know we had part preload hints\n      // and we need to add the _HLS_part= query\n\n      if (nextPart > -1 && nextPart !== parts.length - 1) {\n        // add existing parts to our preload hints\n        // eslint-disable-next-line\n        parameters._HLS_part = nextPart;\n      } // this if statement makes sure that we request the msn\n      // of the preload segment if:\n      // 1. the preload segment had parts (and was not yet a full segment)\n      //    but was added to our segments array\n      // 2. the preload segment had preload hints for parts that are not in\n      //    the manifest yet.\n      // in all other cases we want the segment after the preload segment\n      // which will be given by using media.segments.length because it is 1 based\n      // rather than 0 based.\n\n\n      if (nextPart > -1 || parts.length) {\n        nextMSN--;\n      }\n    } // add _HLS_msn= in front of any _HLS_part query\n    // eslint-disable-next-line\n\n\n    parameters._HLS_msn = nextMSN;\n  }\n\n  if (media.serverControl && media.serverControl.canSkipUntil) {\n    // add _HLS_skip= infront of all other queries.\n    // eslint-disable-next-line\n    parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n  }\n\n  if (Object.keys(parameters).length) {\n    var parsedUri = new window$1.URL(uri);\n    ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n      if (!parameters.hasOwnProperty(name)) {\n        return;\n      }\n\n      parsedUri.searchParams.set(name, parameters[name]);\n    });\n    uri = parsedUri.toString();\n  }\n\n  return uri;\n};\n/**\n * Returns a new segment object with properties and\n * the parts array merged.\n *\n * @param {Object} a the old segment\n * @param {Object} b the new segment\n *\n * @return {Object} the merged segment\n */\n\n\nvar updateSegment = function updateSegment(a, b) {\n  if (!a) {\n    return b;\n  }\n\n  var result = mergeOptions$2(a, b); // if only the old segment has preload hints\n  // and the new one does not, remove preload hints.\n\n  if (a.preloadHints && !b.preloadHints) {\n    delete result.preloadHints;\n  } // if only the old segment has parts\n  // then the parts are no longer valid\n\n\n  if (a.parts && !b.parts) {\n    delete result.parts; // if both segments have parts\n    // copy part propeties from the old segment\n    // to the new one.\n  } else if (a.parts && b.parts) {\n    for (var i = 0; i < b.parts.length; i++) {\n      if (a.parts && a.parts[i]) {\n        result.parts[i] = mergeOptions$2(a.parts[i], b.parts[i]);\n      }\n    }\n  } // set skipped to false for segments that have\n  // have had information merged from the old segment.\n\n\n  if (!a.skipped && b.skipped) {\n    result.skipped = false;\n  } // set preload to false for segments that have\n  // had information added in the new segment.\n\n\n  if (a.preload && !b.preload) {\n    result.preload = false;\n  }\n\n  return result;\n};\n/**\n * Returns a new array of segments that is the result of merging\n * properties from an older list of segments onto an updated\n * list. No properties on the updated playlist will be ovewritten.\n *\n * @param {Array} original the outdated list of segments\n * @param {Array} update the updated list of segments\n * @param {number=} offset the index of the first update\n * segment in the original segment list. For non-live playlists,\n * this should always be zero and does not need to be\n * specified. For live playlists, it should be the difference\n * between the media sequence numbers in the original and updated\n * playlists.\n * @return {Array} a list of merged segment objects\n */\n\n\nvar updateSegments = function updateSegments(original, update, offset) {\n  var oldSegments = original.slice();\n  var newSegments = update.slice();\n  offset = offset || 0;\n  var result = [];\n  var currentMap;\n\n  for (var newIndex = 0; newIndex < newSegments.length; newIndex++) {\n    var oldSegment = oldSegments[newIndex + offset];\n    var newSegment = newSegments[newIndex];\n\n    if (oldSegment) {\n      currentMap = oldSegment.map || currentMap;\n      result.push(updateSegment(oldSegment, newSegment));\n    } else {\n      // carry over map to new segment if it is missing\n      if (currentMap && !newSegment.map) {\n        newSegment.map = currentMap;\n      }\n\n      result.push(newSegment);\n    }\n  }\n\n  return result;\n};\n\nvar resolveSegmentUris = function resolveSegmentUris(segment, baseUri) {\n  // preloadSegment will not have a uri at all\n  // as the segment isn't actually in the manifest yet, only parts\n  if (!segment.resolvedUri && segment.uri) {\n    segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n  }\n\n  if (segment.key && !segment.key.resolvedUri) {\n    segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n  }\n\n  if (segment.map && !segment.map.resolvedUri) {\n    segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n  }\n\n  if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n    segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n  }\n\n  if (segment.parts && segment.parts.length) {\n    segment.parts.forEach(function (p) {\n      if (p.resolvedUri) {\n        return;\n      }\n\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n\n  if (segment.preloadHints && segment.preloadHints.length) {\n    segment.preloadHints.forEach(function (p) {\n      if (p.resolvedUri) {\n        return;\n      }\n\n      p.resolvedUri = resolveUrl(baseUri, p.uri);\n    });\n  }\n};\n\nvar getAllSegments = function getAllSegments(media) {\n  var segments = media.segments || [];\n  var preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n  // a usable segment, only include a preloadSegment that has\n  // parts.\n\n  if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n    // if preloadHints has a MAP that means that the\n    // init segment is going to change. We cannot use any of the parts\n    // from this preload segment.\n    if (preloadSegment.preloadHints) {\n      for (var i = 0; i < preloadSegment.preloadHints.length; i++) {\n        if (preloadSegment.preloadHints[i].type === 'MAP') {\n          return segments;\n        }\n      }\n    } // set the duration for our preload segment to target duration.\n\n\n    preloadSegment.duration = media.targetDuration;\n    preloadSegment.preload = true;\n    segments.push(preloadSegment);\n  }\n\n  return segments;\n}; // consider the playlist unchanged if the playlist object is the same or\n// the number of segments is equal, the media sequence number is unchanged,\n// and this playlist hasn't become the end of the playlist\n\n\nvar isPlaylistUnchanged = function isPlaylistUnchanged(a, b) {\n  return a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n};\n/**\n  * Returns a new master playlist that is the result of merging an\n  * updated media playlist into the original version. If the\n  * updated media playlist does not match any of the playlist\n  * entries in the original master playlist, null is returned.\n  *\n  * @param {Object} master a parsed master M3U8 object\n  * @param {Object} media a parsed media M3U8 object\n  * @return {Object} a new object that represents the original\n  * master playlist with the updated media playlist merged in, or\n  * null if the merge produced no change.\n  */\n\n\nvar updateMaster$1 = function updateMaster(master, newMedia, unchangedCheck) {\n  if (unchangedCheck === void 0) {\n    unchangedCheck = isPlaylistUnchanged;\n  }\n\n  var result = mergeOptions$2(master, {});\n  var oldMedia = result.playlists[newMedia.id];\n\n  if (!oldMedia) {\n    return null;\n  }\n\n  if (unchangedCheck(oldMedia, newMedia)) {\n    return null;\n  }\n\n  newMedia.segments = getAllSegments(newMedia);\n  var mergedPlaylist = mergeOptions$2(oldMedia, newMedia); // always use the new media's preload segment\n\n  if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n    delete mergedPlaylist.preloadSegment;\n  } // if the update could overlap existing segment information, merge the two segment lists\n\n\n  if (oldMedia.segments) {\n    if (newMedia.skip) {\n      newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n      // old properties into the new segments\n\n      for (var i = 0; i < newMedia.skip.skippedSegments; i++) {\n        newMedia.segments.unshift({\n          skipped: true\n        });\n      }\n    }\n\n    mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n  } // resolve any segment URIs to prevent us from having to do it later\n\n\n  mergedPlaylist.segments.forEach(function (segment) {\n    resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n  }); // TODO Right now in the playlists array there are two references to each playlist, one\n  // that is referenced by index, and one by URI. The index reference may no longer be\n  // necessary.\n\n  for (var _i = 0; _i < result.playlists.length; _i++) {\n    if (result.playlists[_i].id === newMedia.id) {\n      result.playlists[_i] = mergedPlaylist;\n    }\n  }\n\n  result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n  result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (!properties.playlists) {\n      return;\n    }\n\n    for (var _i2 = 0; _i2 < properties.playlists.length; _i2++) {\n      if (newMedia.id === properties.playlists[_i2].id) {\n        properties.playlists[_i2] = mergedPlaylist;\n      }\n    }\n  });\n  return result;\n};\n/**\n * Calculates the time to wait before refreshing a live playlist\n *\n * @param {Object} media\n *        The current media\n * @param {boolean} update\n *        True if there were any updates from the last refresh, false otherwise\n * @return {number}\n *         The time in ms to wait before refreshing the live playlist\n */\n\n\nvar refreshDelay = function refreshDelay(media, update) {\n  var segments = media.segments || [];\n  var lastSegment = segments[segments.length - 1];\n  var lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n  var lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n\n  if (update && lastDuration) {\n    return lastDuration * 1000;\n  } // if the playlist is unchanged since the last reload or last segment duration\n  // cannot be determined, try again after half the target duration\n\n\n  return (media.partTargetDuration || media.targetDuration || 10) * 500;\n};\n/**\n * Load a playlist from a remote location\n *\n * @class PlaylistLoader\n * @extends Stream\n * @param {string|Object} src url or object of manifest\n * @param {boolean} withCredentials the withCredentials xhr option\n * @class\n */\n\n\nvar PlaylistLoader = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(PlaylistLoader, _EventTarget);\n\n  function PlaylistLoader(src, vhs, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n\n    if (!src) {\n      throw new Error('A non-empty playlist URL or object is required');\n    }\n\n    _this.logger_ = logger('PlaylistLoader');\n    var _options = options,\n        _options$withCredenti = _options.withCredentials,\n        withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\n        _options$handleManife = _options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\n    _this.src = src;\n    _this.vhs_ = vhs;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n    var vhsOptions = vhs.options_;\n    _this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n    _this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n    _this.experimentalLLHLS = vhsOptions && vhsOptions.experimentalLLHLS || false; // force experimentalLLHLS for IE 11\n\n    if (videojs.browser.IE_VERSION) {\n      _this.experimentalLLHLS = false;\n    } // initialize the loader state\n\n\n    _this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n    _this.handleMediaupdatetimeout_ = _this.handleMediaupdatetimeout_.bind(_assertThisInitialized(_this));\n\n    _this.on('mediaupdatetimeout', _this.handleMediaupdatetimeout_);\n\n    return _this;\n  }\n\n  var _proto = PlaylistLoader.prototype;\n\n  _proto.handleMediaupdatetimeout_ = function handleMediaupdatetimeout_() {\n    var _this2 = this;\n\n    if (this.state !== 'HAVE_METADATA') {\n      // only refresh the media playlist if no other activity is going on\n      return;\n    }\n\n    var media = this.media();\n    var uri = resolveUrl(this.master.uri, media.uri);\n\n    if (this.experimentalLLHLS) {\n      uri = addLLHLSQueryDirectives(uri, media);\n    }\n\n    this.state = 'HAVE_CURRENT_METADATA';\n    this.request = this.vhs_.xhr({\n      uri: uri,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this2.request) {\n        return;\n      }\n\n      if (error) {\n        return _this2.playlistRequestError(_this2.request, _this2.media(), 'HAVE_METADATA');\n      }\n\n      _this2.haveMetadata({\n        playlistString: _this2.request.responseText,\n        url: _this2.media().uri,\n        id: _this2.media().id\n      });\n    });\n  };\n\n  _proto.playlistRequestError = function playlistRequestError(xhr, playlist, startingState) {\n    var uri = playlist.uri,\n        id = playlist.id; // any in-flight request is now finished\n\n    this.request = null;\n\n    if (startingState) {\n      this.state = startingState;\n    }\n\n    this.error = {\n      playlist: this.master.playlists[id],\n      status: xhr.status,\n      message: \"HLS playlist request error at URL: \" + uri + \".\",\n      responseText: xhr.responseText,\n      code: xhr.status >= 500 ? 4 : 2\n    };\n    this.trigger('error');\n  };\n\n  _proto.parseManifest_ = function parseManifest_(_ref) {\n    var _this3 = this;\n\n    var url = _ref.url,\n        manifestString = _ref.manifestString;\n    return parseManifest({\n      onwarn: function onwarn(_ref2) {\n        var message = _ref2.message;\n        return _this3.logger_(\"m3u8-parser warn for \" + url + \": \" + message);\n      },\n      oninfo: function oninfo(_ref3) {\n        var message = _ref3.message;\n        return _this3.logger_(\"m3u8-parser info for \" + url + \": \" + message);\n      },\n      manifestString: manifestString,\n      customTagParsers: this.customTagParsers,\n      customTagMappers: this.customTagMappers,\n      experimentalLLHLS: this.experimentalLLHLS\n    });\n  }\n  /**\n   * Update the playlist loader's state in response to a new or updated playlist.\n   *\n   * @param {string} [playlistString]\n   *        Playlist string (if playlistObject is not provided)\n   * @param {Object} [playlistObject]\n   *        Playlist object (if playlistString is not provided)\n   * @param {string} url\n   *        URL of playlist\n   * @param {string} id\n   *        ID to use for playlist\n   */\n  ;\n\n  _proto.haveMetadata = function haveMetadata(_ref4) {\n    var playlistString = _ref4.playlistString,\n        playlistObject = _ref4.playlistObject,\n        url = _ref4.url,\n        id = _ref4.id; // any in-flight request is now finished\n\n    this.request = null;\n    this.state = 'HAVE_METADATA';\n    var playlist = playlistObject || this.parseManifest_({\n      url: url,\n      manifestString: playlistString\n    });\n    playlist.lastRequest = Date.now();\n    setupMediaPlaylist({\n      playlist: playlist,\n      uri: url,\n      id: id\n    }); // merge this playlist into the master\n\n    var update = updateMaster$1(this.master, playlist);\n    this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n    this.pendingMedia_ = null;\n\n    if (update) {\n      this.master = update;\n      this.media_ = this.master.playlists[id];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n\n    this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n    this.trigger('loadedplaylist');\n  }\n  /**\n    * Abort any outstanding work and clean up.\n    */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    window$1.clearTimeout(this.finalRenditionTimeout);\n    this.off();\n  };\n\n  _proto.stopRequest = function stopRequest() {\n    if (this.request) {\n      var oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  }\n  /**\n    * When called without any arguments, returns the currently\n    * active media playlist. When called with a single argument,\n    * triggers the playlist loader to asynchronously switch to the\n    * specified media playlist. Calling this method while the\n    * loader is in the HAVE_NOTHING causes an error to be emitted\n    * but otherwise has no effect.\n    *\n    * @param {Object=} playlist the parsed media playlist\n    * object to switch to\n    * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n    *\n    * @return {Playlist} the current loaded media\n    */\n  ;\n\n  _proto.media = function media(playlist, shouldDelay) {\n    var _this4 = this; // getter\n\n\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    } // find the playlist object if the target playlist has been\n    // specified by URI\n\n\n    if (typeof playlist === 'string') {\n      if (!this.master.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n\n      playlist = this.master.playlists[playlist];\n    }\n\n    window$1.clearTimeout(this.finalRenditionTimeout);\n\n    if (shouldDelay) {\n      var delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n      this.finalRenditionTimeout = window$1.setTimeout(this.media.bind(this, playlist, false), delay);\n      return;\n    }\n\n    var startingState = this.state;\n    var mediaChange = !this.media_ || playlist.id !== this.media_.id;\n    var masterPlaylistRef = this.master.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n    if (masterPlaylistRef && masterPlaylistRef.endList || // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n    // media playlist or, for the case of demuxed audio, a resolved audio media group)\n    playlist.endList && playlist.segments.length) {\n      // abort outstanding playlist requests\n      if (this.request) {\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      }\n\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n\n        if (startingState === 'HAVE_MASTER') {\n          // The initial playlist was a master manifest, and the first media selected was\n          // also provided (in the form of a resolved playlist object) as part of the\n          // source object (rather than just a URL). Therefore, since the media playlist\n          // doesn't need to be requested, loadedmetadata won't trigger as part of the\n          // normal flow, and needs an explicit trigger here.\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      }\n\n      return;\n    } // We update/set the timeout here so that live playlists\n    // that are not a media change will \"start\" the loader as expected.\n    // We expect that this function will start the media update timeout\n    // cycle again. This also prevents a playlist switch failure from\n    // causing us to stall during live.\n\n\n    this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n    if (!mediaChange) {\n      return;\n    }\n\n    this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n    if (this.request) {\n      if (playlist.resolvedUri === this.request.url) {\n        // requesting to switch to the same playlist multiple times\n        // has no effect after the first\n        return;\n      }\n\n      this.request.onreadystatechange = null;\n      this.request.abort();\n      this.request = null;\n    } // request the new playlist\n\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n\n    this.pendingMedia_ = playlist;\n    this.request = this.vhs_.xhr({\n      uri: playlist.resolvedUri,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this4.request) {\n        return;\n      }\n\n      playlist.lastRequest = Date.now();\n      playlist.resolvedUri = resolveManifestRedirect(_this4.handleManifestRedirects, playlist.resolvedUri, req);\n\n      if (error) {\n        return _this4.playlistRequestError(_this4.request, playlist, startingState);\n      }\n\n      _this4.haveMetadata({\n        playlistString: req.responseText,\n        url: playlist.uri,\n        id: playlist.id\n      }); // fire loadedmetadata the first time a media playlist is loaded\n\n\n      if (startingState === 'HAVE_MASTER') {\n        _this4.trigger('loadedmetadata');\n      } else {\n        _this4.trigger('mediachange');\n      }\n    });\n  }\n  /**\n   * pause loading of the playlist\n   */\n  ;\n\n  _proto.pause = function pause() {\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n\n    this.stopRequest();\n\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    } // Need to restore state now that no activity is happening\n\n\n    if (this.state === 'SWITCHING_MEDIA') {\n      // if the loader was in the process of switching media, it should either return to\n      // HAVE_MASTER or HAVE_METADATA depending on if the loader has loaded a media\n      // playlist yet. This is determined by the existence of loader.media_\n      if (this.media_) {\n        this.state = 'HAVE_METADATA';\n      } else {\n        this.state = 'HAVE_MASTER';\n      }\n    } else if (this.state === 'HAVE_CURRENT_METADATA') {\n      this.state = 'HAVE_METADATA';\n    }\n  }\n  /**\n   * start loading of the playlist\n   */\n  ;\n\n  _proto.load = function load(shouldDelay) {\n    var _this5 = this;\n\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    }\n\n    var media = this.media();\n\n    if (shouldDelay) {\n      var delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\n        _this5.mediaUpdateTimeout = null;\n\n        _this5.load();\n      }, delay);\n      return;\n    }\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n\n    if (media && !media.endList) {\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  };\n\n  _proto.updateMediaUpdateTimeout_ = function updateMediaUpdateTimeout_(delay) {\n    var _this6 = this;\n\n    if (this.mediaUpdateTimeout) {\n      window$1.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n    } // we only have use mediaupdatetimeout for live playlists.\n\n\n    if (!this.media() || this.media().endList) {\n      return;\n    }\n\n    this.mediaUpdateTimeout = window$1.setTimeout(function () {\n      _this6.mediaUpdateTimeout = null;\n\n      _this6.trigger('mediaupdatetimeout');\n\n      _this6.updateMediaUpdateTimeout_(delay);\n    }, delay);\n  }\n  /**\n   * start loading of the playlist\n   */\n  ;\n\n  _proto.start = function start() {\n    var _this7 = this;\n\n    this.started = true;\n\n    if (typeof this.src === 'object') {\n      // in the case of an entirely constructed manifest object (meaning there's no actual\n      // manifest on a server), default the uri to the page's href\n      if (!this.src.uri) {\n        this.src.uri = window$1.location.href;\n      } // resolvedUri is added on internally after the initial request. Since there's no\n      // request for pre-resolved manifests, add on resolvedUri here.\n\n\n      this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n      // request can be skipped (since the top level of the manifest, at a minimum, is\n      // already available as a parsed manifest object). However, if the manifest object\n      // represents a master playlist, some media playlists may need to be resolved before\n      // the starting segment list is available. Therefore, go directly to setup of the\n      // initial playlist, and let the normal flow continue from there.\n      //\n      // Note that the call to setup is asynchronous, as other sections of VHS may assume\n      // that the first request is asynchronous.\n\n      setTimeout(function () {\n        _this7.setupInitialPlaylist(_this7.src);\n      }, 0);\n      return;\n    } // request the specified URL\n\n\n    this.request = this.vhs_.xhr({\n      uri: this.src,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this7.request) {\n        return;\n      } // clear the loader's request reference\n\n\n      _this7.request = null;\n\n      if (error) {\n        _this7.error = {\n          status: req.status,\n          message: \"HLS playlist request error at URL: \" + _this7.src + \".\",\n          responseText: req.responseText,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n\n        if (_this7.state === 'HAVE_NOTHING') {\n          _this7.started = false;\n        }\n\n        return _this7.trigger('error');\n      }\n\n      _this7.src = resolveManifestRedirect(_this7.handleManifestRedirects, _this7.src, req);\n\n      var manifest = _this7.parseManifest_({\n        manifestString: req.responseText,\n        url: _this7.src\n      });\n\n      _this7.setupInitialPlaylist(manifest);\n    });\n  };\n\n  _proto.srcUri = function srcUri() {\n    return typeof this.src === 'string' ? this.src : this.src.uri;\n  }\n  /**\n   * Given a manifest object that's either a master or media playlist, trigger the proper\n   * events and set the state of the playlist loader.\n   *\n   * If the manifest object represents a master playlist, `loadedplaylist` will be\n   * triggered to allow listeners to select a playlist. If none is selected, the loader\n   * will default to the first one in the playlists array.\n   *\n   * If the manifest object represents a media playlist, `loadedplaylist` will be\n   * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n   *\n   * In the case of a media playlist, a master playlist object wrapper with one playlist\n   * will be created so that all logic can handle playlists in the same fashion (as an\n   * assumed manifest object schema).\n   *\n   * @param {Object} manifest\n   *        The parsed manifest object\n   */\n  ;\n\n  _proto.setupInitialPlaylist = function setupInitialPlaylist(manifest) {\n    this.state = 'HAVE_MASTER';\n\n    if (manifest.playlists) {\n      this.master = manifest;\n      addPropertiesToMaster(this.master, this.srcUri()); // If the initial master playlist has playlists wtih segments already resolved,\n      // then resolve URIs in advance, as they are usually done after a playlist request,\n      // which may not happen if the playlist is resolved.\n\n      manifest.playlists.forEach(function (playlist) {\n        playlist.segments = getAllSegments(playlist);\n        playlist.segments.forEach(function (segment) {\n          resolveSegmentUris(segment, playlist.resolvedUri);\n        });\n      });\n      this.trigger('loadedplaylist');\n\n      if (!this.request) {\n        // no media playlist was specifically selected so start\n        // from the first listed one\n        this.media(this.master.playlists[0]);\n      }\n\n      return;\n    } // In order to support media playlists passed in as vhs-json, the case where the uri\n    // is not provided as part of the manifest should be considered, and an appropriate\n    // default used.\n\n\n    var uri = this.srcUri() || window$1.location.href;\n    this.master = masterForMedia(manifest, uri);\n    this.haveMetadata({\n      playlistObject: manifest,\n      url: uri,\n      id: this.master.playlists[0].id\n    });\n    this.trigger('loadedmetadata');\n  };\n\n  return PlaylistLoader;\n}(EventTarget$1);\n/**\n * @file xhr.js\n */\n\n\nvar videojsXHR = videojs.xhr,\n    mergeOptions$1 = videojs.mergeOptions;\n\nvar callbackWrapper = function callbackWrapper(request, error, response, callback) {\n  var reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n\n  if (!error && reqResponse) {\n    request.responseTime = Date.now();\n    request.roundTripTime = request.responseTime - request.requestTime;\n    request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n\n    if (!request.bandwidth) {\n      request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n    }\n  }\n\n  if (response.headers) {\n    request.responseHeaders = response.headers;\n  } // videojs.xhr now uses a specific code on the error\n  // object to signal that a request has timed out instead\n  // of setting a boolean on the request object\n\n\n  if (error && error.code === 'ETIMEDOUT') {\n    request.timedout = true;\n  } // videojs.xhr no longer considers status codes outside of 200 and 0\n  // (for file uris) to be errors, but the old XHR did, so emulate that\n  // behavior. Status 206 may be used in response to byterange requests.\n\n\n  if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n    error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n  }\n\n  callback(error, request);\n};\n\nvar xhrFactory = function xhrFactory() {\n  var xhr = function XhrFunction(options, callback) {\n    // Add a default timeout\n    options = mergeOptions$1({\n      timeout: 45e3\n    }, options); // Allow an optional user-specified function to modify the option\n    // object before we construct the xhr request\n\n    var beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest;\n\n    if (beforeRequest && typeof beforeRequest === 'function') {\n      var newOptions = beforeRequest(options);\n\n      if (newOptions) {\n        options = newOptions;\n      }\n    } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n    // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n\n    var xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr;\n    var request = xhrMethod(options, function (error, response) {\n      return callbackWrapper(request, error, response, callback);\n    });\n    var originalAbort = request.abort;\n\n    request.abort = function () {\n      request.aborted = true;\n      return originalAbort.apply(request, arguments);\n    };\n\n    request.uri = options.uri;\n    request.requestTime = Date.now();\n    return request;\n  };\n\n  xhr.original = true;\n  return xhr;\n};\n/**\n * Turns segment byterange into a string suitable for use in\n * HTTP Range requests\n *\n * @param {Object} byterange - an object with two values defining the start and end\n *                             of a byte-range\n */\n\n\nvar byterangeStr = function byterangeStr(byterange) {\n  // `byterangeEnd` is one less than `offset + length` because the HTTP range\n  // header uses inclusive ranges\n  var byterangeEnd;\n  var byterangeStart = byterange.offset;\n\n  if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n    byterangeEnd = window$1.BigInt(byterange.offset) + window$1.BigInt(byterange.length) - window$1.BigInt(1);\n  } else {\n    byterangeEnd = byterange.offset + byterange.length - 1;\n  }\n\n  return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n};\n/**\n * Defines headers for use in the xhr request for a particular segment.\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n */\n\n\nvar segmentXhrHeaders = function segmentXhrHeaders(segment) {\n  var headers = {};\n\n  if (segment.byterange) {\n    headers.Range = byterangeStr(segment.byterange);\n  }\n\n  return headers;\n};\n/**\n * @file bin-utils.js\n */\n\n/**\n * convert a TimeRange to text\n *\n * @param {TimeRange} range the timerange to use for conversion\n * @param {number} i the iterator on the range to convert\n * @return {string} the range in string format\n */\n\n\nvar textRange = function textRange(range, i) {\n  return range.start(i) + '-' + range.end(i);\n};\n/**\n * format a number as hex string\n *\n * @param {number} e The number\n * @param {number} i the iterator\n * @return {string} the hex formatted number as a string\n */\n\n\nvar formatHexString = function formatHexString(e, i) {\n  var value = e.toString(16);\n  return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n};\n\nvar formatAsciiString = function formatAsciiString(e) {\n  if (e >= 0x20 && e < 0x7e) {\n    return String.fromCharCode(e);\n  }\n\n  return '.';\n};\n/**\n * Creates an object for sending to a web worker modifying properties that are TypedArrays\n * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n *\n * @param {Object} message\n *        Object of properties and values to send to the web worker\n * @return {Object}\n *         Modified message with TypedArray values expanded\n * @function createTransferableMessage\n */\n\n\nvar createTransferableMessage = function createTransferableMessage(message) {\n  var transferable = {};\n  Object.keys(message).forEach(function (key) {\n    var value = message[key];\n\n    if (isArrayBufferView(value)) {\n      transferable[key] = {\n        bytes: value.buffer,\n        byteOffset: value.byteOffset,\n        byteLength: value.byteLength\n      };\n    } else {\n      transferable[key] = value;\n    }\n  });\n  return transferable;\n};\n/**\n * Returns a unique string identifier for a media initialization\n * segment.\n *\n * @param {Object} initSegment\n *        the init segment object.\n *\n * @return {string} the generated init segment id\n */\n\n\nvar initSegmentId = function initSegmentId(initSegment) {\n  var byterange = initSegment.byterange || {\n    length: Infinity,\n    offset: 0\n  };\n  return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n};\n/**\n * Returns a unique string identifier for a media segment key.\n *\n * @param {Object} key the encryption key\n * @return {string} the unique id for the media segment key.\n */\n\n\nvar segmentKeyId = function segmentKeyId(key) {\n  return key.resolvedUri;\n};\n/**\n * utils to help dump binary data to the console\n *\n * @param {Array|TypedArray} data\n *        data to dump to a string\n *\n * @return {string} the data as a hex string.\n */\n\n\nvar hexDump = function hexDump(data) {\n  var bytes = Array.prototype.slice.call(data);\n  var step = 16;\n  var result = '';\n  var hex;\n  var ascii;\n\n  for (var j = 0; j < bytes.length / step; j++) {\n    hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n    ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n    result += hex + ' ' + ascii + '\\n';\n  }\n\n  return result;\n};\n\nvar tagDump = function tagDump(_ref) {\n  var bytes = _ref.bytes;\n  return hexDump(bytes);\n};\n\nvar textRanges = function textRanges(ranges) {\n  var result = '';\n  var i;\n\n  for (i = 0; i < ranges.length; i++) {\n    result += textRange(ranges, i) + ' ';\n  }\n\n  return result;\n};\n\nvar utils = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  createTransferableMessage: createTransferableMessage,\n  initSegmentId: initSegmentId,\n  segmentKeyId: segmentKeyId,\n  hexDump: hexDump,\n  tagDump: tagDump,\n  textRanges: textRanges\n}); // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n// 25% was arbitrarily chosen, and may need to be refined over time.\n\nvar SEGMENT_END_FUDGE_PERCENT = 0.25;\n/**\n * Converts a player time (any time that can be gotten/set from player.currentTime(),\n * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n *\n * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n * point\" (a point where we have a mapping from program time to player time, with player\n * time being the post transmux start of the segment).\n *\n * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n *\n * @param {number} playerTime the player time\n * @param {Object} segment the segment which contains the player time\n * @return {Date} program time\n */\n\nvar playerTimeToProgramTime = function playerTimeToProgramTime(playerTime, segment) {\n  if (!segment.dateTimeObject) {\n    // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n    // be used to map the start of a segment with a real world time).\n    return null;\n  }\n\n  var transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n  var transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n  var startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n  var offsetFromSegmentStart = playerTime - startOfSegment;\n  return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n};\n\nvar originalSegmentVideoDuration = function originalSegmentVideoDuration(videoTimingInfo) {\n  return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n};\n/**\n * Finds a segment that contains the time requested given as an ISO-8601 string. The\n * returned segment might be an estimate or an accurate match.\n *\n * @param {string} programTime The ISO-8601 programTime to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForProgramTime = function findSegmentForProgramTime(programTime, playlist) {\n  // Assumptions:\n  //  - verifyProgramDateTimeTags has already been run\n  //  - live streams have been started\n  var dateTimeObject;\n\n  try {\n    dateTimeObject = new Date(programTime);\n  } catch (e) {\n    return null;\n  }\n\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segment = playlist.segments[0];\n\n  if (dateTimeObject < segment.dateTimeObject) {\n    // Requested time is before stream start.\n    return null;\n  }\n\n  for (var i = 0; i < playlist.segments.length - 1; i++) {\n    segment = playlist.segments[i];\n    var nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n\n    if (dateTimeObject < nextSegmentStart) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n  var lastSegmentStart = lastSegment.dateTimeObject;\n  var lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n  var lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n\n  if (dateTimeObject > lastSegmentEnd) {\n    // Beyond the end of the stream, or our best guess of the end of the stream.\n    return null;\n  }\n\n  if (dateTimeObject > lastSegmentStart) {\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n    // Although, given that all segments have accurate date time objects, the segment\n    // selected should be accurate, unless the video has been transmuxed at some point\n    // (determined by the presence of the videoTimingInfo object), the segment's \"player\n    // time\" (the start time in the player) can't be considered accurate.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Finds a segment that contains the given player time(in seconds).\n *\n * @param {number} time The player time to find a match for\n * @param {Object} playlist A playlist object to search within\n */\n\n\nvar findSegmentForPlayerTime = function findSegmentForPlayerTime(time, playlist) {\n  // Assumptions:\n  // - there will always be a segment.duration\n  // - we can start from zero\n  // - segments are in time order\n  if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n    return null;\n  }\n\n  var segmentEnd = 0;\n  var segment;\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n    // should contain the most accurate values we have for the segment's player times.\n    //\n    // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n    // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n    // calculate an end value.\n\n    segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n\n    if (time <= segmentEnd) {\n      break;\n    }\n  }\n\n  var lastSegment = playlist.segments[playlist.segments.length - 1];\n\n  if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n    // The time requested is beyond the stream end.\n    return null;\n  }\n\n  if (time > segmentEnd) {\n    // The time is within or beyond the last segment.\n    //\n    // Check to see if the time is beyond a reasonable guess of the end of the stream.\n    if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n      // Technically, because the duration value is only an estimate, the time may still\n      // exist in the last segment, however, there isn't enough information to make even\n      // a reasonable estimate.\n      return null;\n    }\n\n    segment = lastSegment;\n  }\n\n  return {\n    segment: segment,\n    estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n    // Because videoTimingInfo is only set after transmux, it is the only way to get\n    // accurate timing values.\n    type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n  };\n};\n/**\n * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n * If the offset returned is positive, the programTime occurs after the\n * comparisonTimestamp.\n * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n *\n * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n * @param {string} programTime The programTime as an ISO-8601 string\n * @return {number} offset\n */\n\n\nvar getOffsetFromTimestamp = function getOffsetFromTimestamp(comparisonTimeStamp, programTime) {\n  var segmentDateTime;\n  var programDateTime;\n\n  try {\n    segmentDateTime = new Date(comparisonTimeStamp);\n    programDateTime = new Date(programTime);\n  } catch (e) {// TODO handle error\n  }\n\n  var segmentTimeEpoch = segmentDateTime.getTime();\n  var programTimeEpoch = programDateTime.getTime();\n  return (programTimeEpoch - segmentTimeEpoch) / 1000;\n};\n/**\n * Checks that all segments in this playlist have programDateTime tags.\n *\n * @param {Object} playlist A playlist object\n */\n\n\nvar verifyProgramDateTimeTags = function verifyProgramDateTimeTags(playlist) {\n  if (!playlist.segments || playlist.segments.length === 0) {\n    return false;\n  }\n\n  for (var i = 0; i < playlist.segments.length; i++) {\n    var segment = playlist.segments[i];\n\n    if (!segment.dateTimeObject) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Returns the programTime of the media given a playlist and a playerTime.\n * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n * If the segments containing the time requested have not been buffered yet, an estimate\n * may be returned to the callback.\n *\n * @param {Object} args\n * @param {Object} args.playlist A playlist object to search within\n * @param {number} time A playerTime in seconds\n * @param {Function} callback(err, programTime)\n * @return {string} err.message A detailed error message\n * @return {Object} programTime\n * @return {number} programTime.mediaSeconds The streamTime in seconds\n * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n */\n\n\nvar getProgramTime = function getProgramTime(_ref) {\n  var playlist = _ref.playlist,\n      _ref$time = _ref.time,\n      time = _ref$time === void 0 ? undefined : _ref$time,\n      callback = _ref.callback;\n\n  if (!callback) {\n    throw new Error('getProgramTime: callback must be provided');\n  }\n\n  if (!playlist || time === undefined) {\n    return callback({\n      message: 'getProgramTime: playlist and time must be provided'\n    });\n  }\n\n  var matchedSegment = findSegmentForPlayerTime(time, playlist);\n\n  if (!matchedSegment) {\n    return callback({\n      message: 'valid programTime was not found'\n    });\n  }\n\n  if (matchedSegment.type === 'estimate') {\n    return callback({\n      message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n      seekTime: matchedSegment.estimatedStart\n    });\n  }\n\n  var programTimeObject = {\n    mediaSeconds: time\n  };\n  var programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n\n  if (programTime) {\n    programTimeObject.programDateTime = programTime.toISOString();\n  }\n\n  return callback(null, programTimeObject);\n};\n/**\n * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n *\n * @param {Object} args\n * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n * @param {Object} args.playlist A playlist to look within\n * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n * @param {Function} args.seekTo A method to perform a seek\n * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n * @param {Object} args.tech The tech to seek on\n * @param {Function} args.callback(err, newTime) A callback to return the new time to\n * @return {string} err.message A detailed error message\n * @return {number} newTime The exact time that was seeked to in seconds\n */\n\n\nvar seekToProgramTime = function seekToProgramTime(_ref2) {\n  var programTime = _ref2.programTime,\n      playlist = _ref2.playlist,\n      _ref2$retryCount = _ref2.retryCount,\n      retryCount = _ref2$retryCount === void 0 ? 2 : _ref2$retryCount,\n      seekTo = _ref2.seekTo,\n      _ref2$pauseAfterSeek = _ref2.pauseAfterSeek,\n      pauseAfterSeek = _ref2$pauseAfterSeek === void 0 ? true : _ref2$pauseAfterSeek,\n      tech = _ref2.tech,\n      callback = _ref2.callback;\n\n  if (!callback) {\n    throw new Error('seekToProgramTime: callback must be provided');\n  }\n\n  if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n    return callback({\n      message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n    });\n  }\n\n  if (!playlist.endList && !tech.hasStarted_) {\n    return callback({\n      message: 'player must be playing a live stream to start buffering'\n    });\n  }\n\n  if (!verifyProgramDateTimeTags(playlist)) {\n    return callback({\n      message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n    });\n  }\n\n  var matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n  if (!matchedSegment) {\n    return callback({\n      message: programTime + \" was not found in the stream\"\n    });\n  }\n\n  var segment = matchedSegment.segment;\n  var mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n\n  if (matchedSegment.type === 'estimate') {\n    // we've run out of retries\n    if (retryCount === 0) {\n      return callback({\n        message: programTime + \" is not buffered yet. Try again\"\n      });\n    }\n\n    seekTo(matchedSegment.estimatedStart + mediaOffset);\n    tech.one('seeked', function () {\n      seekToProgramTime({\n        programTime: programTime,\n        playlist: playlist,\n        retryCount: retryCount - 1,\n        seekTo: seekTo,\n        pauseAfterSeek: pauseAfterSeek,\n        tech: tech,\n        callback: callback\n      });\n    });\n    return;\n  } // Since the segment.start value is determined from the buffered end or ending time\n  // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n  // modifications.\n\n\n  var seekToTime = segment.start + mediaOffset;\n\n  var seekedCallback = function seekedCallback() {\n    return callback(null, tech.currentTime());\n  }; // listen for seeked event\n\n\n  tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n  if (pauseAfterSeek) {\n    tech.pause();\n  }\n\n  seekTo(seekToTime);\n}; // which will only happen if the request is complete.\n\n\nvar callbackOnCompleted = function callbackOnCompleted(request, cb) {\n  if (request.readyState === 4) {\n    return cb();\n  }\n\n  return;\n};\n\nvar containerRequest = function containerRequest(uri, xhr, cb) {\n  var bytes = [];\n  var id3Offset;\n  var finished = false;\n\n  var endRequestAndCallback = function endRequestAndCallback(err, req, type, _bytes) {\n    req.abort();\n    finished = true;\n    return cb(err, req, type, _bytes);\n  };\n\n  var progressListener = function progressListener(error, request) {\n    if (finished) {\n      return;\n    }\n\n    if (error) {\n      return endRequestAndCallback(error, request, '', bytes);\n    } // grap the new part of content that was just downloaded\n\n\n    var newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n    bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n    id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n    // or we need at least two bytes after an id3Offset\n\n    if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n      return callbackOnCompleted(request, function () {\n        return endRequestAndCallback(error, request, '', bytes);\n      });\n    }\n\n    var type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n    // to see the second sync byte, wait until we have enough data\n    // before declaring it ts\n\n    if (type === 'ts' && bytes.length < 188) {\n      return callbackOnCompleted(request, function () {\n        return endRequestAndCallback(error, request, '', bytes);\n      });\n    } // this may be an unsynced ts segment\n    // wait for 376 bytes before detecting no container\n\n\n    if (!type && bytes.length < 376) {\n      return callbackOnCompleted(request, function () {\n        return endRequestAndCallback(error, request, '', bytes);\n      });\n    }\n\n    return endRequestAndCallback(null, request, type, bytes);\n  };\n\n  var options = {\n    uri: uri,\n    beforeSend: function beforeSend(request) {\n      // this forces the browser to pass the bytes to us unprocessed\n      request.overrideMimeType('text/plain; charset=x-user-defined');\n      request.addEventListener('progress', function (_ref) {\n        _ref.total;\n        _ref.loaded;\n        return callbackWrapper(request, null, {\n          statusCode: request.status\n        }, progressListener);\n      });\n    }\n  };\n  var request = xhr(options, function (error, response) {\n    return callbackWrapper(request, error, response, progressListener);\n  });\n  return request;\n};\n\nvar EventTarget = videojs.EventTarget,\n    mergeOptions = videojs.mergeOptions;\n\nvar dashPlaylistUnchanged = function dashPlaylistUnchanged(a, b) {\n  if (!isPlaylistUnchanged(a, b)) {\n    return false;\n  } // for dash the above check will often return true in scenarios where\n  // the playlist actually has changed because mediaSequence isn't a\n  // dash thing, and we often set it to 1. So if the playlists have the same amount\n  // of segments we return true.\n  // So for dash we need to make sure that the underlying segments are different.\n  // if sidx changed then the playlists are different.\n\n\n  if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n    return false;\n  } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n    return false;\n  } // one or the other does not have segments\n  // there was a change.\n\n\n  if (a.segments && !b.segments || !a.segments && b.segments) {\n    return false;\n  } // neither has segments nothing changed\n\n\n  if (!a.segments && !b.segments) {\n    return true;\n  } // check segments themselves\n\n\n  for (var i = 0; i < a.segments.length; i++) {\n    var aSegment = a.segments[i];\n    var bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n    if (aSegment.uri !== bSegment.uri) {\n      return false;\n    } // neither segment has a byterange, there will be no byterange change.\n\n\n    if (!aSegment.byterange && !bSegment.byterange) {\n      continue;\n    }\n\n    var aByterange = aSegment.byterange;\n    var bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n    if (aByterange && !bByterange || !aByterange && bByterange) {\n      return false;\n    } // if both segments have byterange with different offsets, there was a change.\n\n\n    if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n      return false;\n    }\n  } // if everything was the same with segments, this is the same playlist.\n\n\n  return true;\n};\n/**\n * Parses the master XML string and updates playlist URI references.\n *\n * @param {Object} config\n *        Object of arguments\n * @param {string} config.masterXml\n *        The mpd XML\n * @param {string} config.srcUrl\n *        The mpd URL\n * @param {Date} config.clientOffset\n *         A time difference between server and client\n * @param {Object} config.sidxMapping\n *        SIDX mappings for moof/mdat URIs and byte ranges\n * @return {Object}\n *         The parsed mpd manifest object\n */\n\n\nvar parseMasterXml = function parseMasterXml(_ref) {\n  var masterXml = _ref.masterXml,\n      srcUrl = _ref.srcUrl,\n      clientOffset = _ref.clientOffset,\n      sidxMapping = _ref.sidxMapping,\n      previousManifest = _ref.previousManifest;\n  var manifest = parse(masterXml, {\n    manifestUri: srcUrl,\n    clientOffset: clientOffset,\n    sidxMapping: sidxMapping,\n    previousManifest: previousManifest\n  });\n  addPropertiesToMaster(manifest, srcUrl);\n  return manifest;\n};\n/**\n * Returns a new master manifest that is the result of merging an updated master manifest\n * into the original version.\n *\n * @param {Object} oldMaster\n *        The old parsed mpd object\n * @param {Object} newMaster\n *        The updated parsed mpd object\n * @return {Object}\n *         A new object representing the original master manifest with the updated media\n *         playlists merged in\n */\n\n\nvar updateMaster = function updateMaster(oldMaster, newMaster, sidxMapping) {\n  var noChanges = true;\n  var update = mergeOptions(oldMaster, {\n    // These are top level properties that can be updated\n    duration: newMaster.duration,\n    minimumUpdatePeriod: newMaster.minimumUpdatePeriod,\n    timelineStarts: newMaster.timelineStarts\n  }); // First update the playlists in playlist list\n\n  for (var i = 0; i < newMaster.playlists.length; i++) {\n    var playlist = newMaster.playlists[i];\n\n    if (playlist.sidx) {\n      var sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n      if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n        addSidxSegmentsToPlaylist(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n      }\n    }\n\n    var playlistUpdate = updateMaster$1(update, playlist, dashPlaylistUnchanged);\n\n    if (playlistUpdate) {\n      update = playlistUpdate;\n      noChanges = false;\n    }\n  } // Then update media group playlists\n\n\n  forEachMediaGroup(newMaster, function (properties, type, group, label) {\n    if (properties.playlists && properties.playlists.length) {\n      var id = properties.playlists[0].id;\n\n      var _playlistUpdate = updateMaster$1(update, properties.playlists[0], dashPlaylistUnchanged);\n\n      if (_playlistUpdate) {\n        update = _playlistUpdate; // update the playlist reference within media groups\n\n        update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n        noChanges = false;\n      }\n    }\n  });\n\n  if (newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\n    noChanges = false;\n  }\n\n  if (noChanges) {\n    return null;\n  }\n\n  return update;\n}; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n// If the SIDXs have maps, the two maps should match,\n// both `a` and `b` missing SIDXs is considered matching.\n// If `a` or `b` but not both have a map, they aren't matching.\n\n\nvar equivalentSidx = function equivalentSidx(a, b) {\n  var neitherMap = Boolean(!a.map && !b.map);\n  var equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n  return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n}; // exported for testing\n\n\nvar compareSidxEntry = function compareSidxEntry(playlists, oldSidxMapping) {\n  var newSidxMapping = {};\n\n  for (var id in playlists) {\n    var playlist = playlists[id];\n    var currentSidxInfo = playlist.sidx;\n\n    if (currentSidxInfo) {\n      var key = generateSidxKey(currentSidxInfo);\n\n      if (!oldSidxMapping[key]) {\n        break;\n      }\n\n      var savedSidxInfo = oldSidxMapping[key].sidxInfo;\n\n      if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n        newSidxMapping[key] = oldSidxMapping[key];\n      }\n    }\n  }\n\n  return newSidxMapping;\n};\n/**\n *  A function that filters out changed items as they need to be requested separately.\n *\n *  The method is exported for testing\n *\n *  @param {Object} master the parsed mpd XML returned via mpd-parser\n *  @param {Object} oldSidxMapping the SIDX to compare against\n */\n\n\nvar filterChangedSidxMappings = function filterChangedSidxMappings(master, oldSidxMapping) {\n  var videoSidx = compareSidxEntry(master.playlists, oldSidxMapping);\n  var mediaGroupSidx = videoSidx;\n  forEachMediaGroup(master, function (properties, mediaType, groupKey, labelKey) {\n    if (properties.playlists && properties.playlists.length) {\n      var playlists = properties.playlists;\n      mediaGroupSidx = mergeOptions(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n    }\n  });\n  return mediaGroupSidx;\n};\n\nvar DashPlaylistLoader = /*#__PURE__*/function (_EventTarget) {\n  _inheritsLoose(DashPlaylistLoader, _EventTarget); // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n  // playlist loader setups from media groups will expect to be able to pass a playlist\n  // (since there aren't external URLs to media playlists with DASH)\n\n\n  function DashPlaylistLoader(srcUrlOrPlaylist, vhs, options, masterPlaylistLoader) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _EventTarget.call(this) || this;\n    _this.masterPlaylistLoader_ = masterPlaylistLoader || _assertThisInitialized(_this);\n\n    if (!masterPlaylistLoader) {\n      _this.isMaster_ = true;\n    }\n\n    var _options = options,\n        _options$withCredenti = _options.withCredentials,\n        withCredentials = _options$withCredenti === void 0 ? false : _options$withCredenti,\n        _options$handleManife = _options.handleManifestRedirects,\n        handleManifestRedirects = _options$handleManife === void 0 ? false : _options$handleManife;\n    _this.vhs_ = vhs;\n    _this.withCredentials = withCredentials;\n    _this.handleManifestRedirects = handleManifestRedirects;\n\n    if (!srcUrlOrPlaylist) {\n      throw new Error('A non-empty playlist URL or object is required');\n    } // event naming?\n\n\n    _this.on('minimumUpdatePeriod', function () {\n      _this.refreshXml_();\n    }); // live playlist staleness timeout\n\n\n    _this.on('mediaupdatetimeout', function () {\n      _this.refreshMedia_(_this.media().id);\n    });\n\n    _this.state = 'HAVE_NOTHING';\n    _this.loadedPlaylists_ = {};\n    _this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n    // The masterPlaylistLoader will be created with a string\n\n    if (_this.isMaster_) {\n      _this.masterPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n      // once multi-period is refactored\n\n      _this.masterPlaylistLoader_.sidxMapping_ = {};\n    } else {\n      _this.childPlaylist_ = srcUrlOrPlaylist;\n    }\n\n    return _this;\n  }\n\n  var _proto = DashPlaylistLoader.prototype;\n\n  _proto.requestErrored_ = function requestErrored_(err, request, startingState) {\n    // disposed\n    if (!this.request) {\n      return true;\n    } // pending request is cleared\n\n\n    this.request = null;\n\n    if (err) {\n      // use the provided error object or create one\n      // based on the request/response\n      this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n        status: request.status,\n        message: 'DASH request error at URL: ' + request.uri,\n        response: request.response,\n        // MEDIA_ERR_NETWORK\n        code: 2\n      };\n\n      if (startingState) {\n        this.state = startingState;\n      }\n\n      this.trigger('error');\n      return true;\n    }\n  }\n  /**\n   * Verify that the container of the sidx segment can be parsed\n   * and if it can, get and parse that segment.\n   */\n  ;\n\n  _proto.addSidxSegments_ = function addSidxSegments_(playlist, startingState, cb) {\n    var _this2 = this;\n\n    var sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n    if (!playlist.sidx || !sidxKey || this.masterPlaylistLoader_.sidxMapping_[sidxKey]) {\n      // keep this function async\n      this.mediaRequest_ = window$1.setTimeout(function () {\n        return cb(false);\n      }, 0);\n      return;\n    } // resolve the segment URL relative to the playlist\n\n\n    var uri = resolveManifestRedirect(this.handleManifestRedirects, playlist.sidx.resolvedUri);\n\n    var fin = function fin(err, request) {\n      if (_this2.requestErrored_(err, request, startingState)) {\n        return;\n      }\n\n      var sidxMapping = _this2.masterPlaylistLoader_.sidxMapping_;\n      var sidx;\n\n      try {\n        sidx = parseSidx(toUint8(request.response).subarray(8));\n      } catch (e) {\n        // sidx parsing failed.\n        _this2.requestErrored_(e, request, startingState);\n\n        return;\n      }\n\n      sidxMapping[sidxKey] = {\n        sidxInfo: playlist.sidx,\n        sidx: sidx\n      };\n      addSidxSegmentsToPlaylist(playlist, sidx, playlist.sidx.resolvedUri);\n      return cb(true);\n    };\n\n    this.request = containerRequest(uri, this.vhs_.xhr, function (err, request, container, bytes) {\n      if (err) {\n        return fin(err, request);\n      }\n\n      if (!container || container !== 'mp4') {\n        return fin({\n          status: request.status,\n          message: \"Unsupported \" + (container || 'unknown') + \" container type for sidx segment at URL: \" + uri,\n          // response is just bytes in this case\n          // but we really don't want to return that.\n          response: '',\n          playlist: playlist,\n          internal: true,\n          blacklistDuration: Infinity,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        }, request);\n      } // if we already downloaded the sidx bytes in the container request, use them\n\n\n      var _playlist$sidx$bytera = playlist.sidx.byterange,\n          offset = _playlist$sidx$bytera.offset,\n          length = _playlist$sidx$bytera.length;\n\n      if (bytes.length >= length + offset) {\n        return fin(err, {\n          response: bytes.subarray(offset, offset + length),\n          status: request.status,\n          uri: request.uri\n        });\n      } // otherwise request sidx bytes\n\n\n      _this2.request = _this2.vhs_.xhr({\n        uri: uri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders({\n          byterange: playlist.sidx.byterange\n        })\n      }, fin);\n    });\n  };\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.stopRequest();\n    this.loadedPlaylists_ = {};\n    window$1.clearTimeout(this.minimumUpdatePeriodTimeout_);\n    window$1.clearTimeout(this.mediaRequest_);\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    this.mediaRequest_ = null;\n    this.minimumUpdatePeriodTimeout_ = null;\n\n    if (this.masterPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\n      this.masterPlaylistLoader_.createMupOnMedia_ = null;\n    }\n\n    this.off();\n  };\n\n  _proto.hasPendingRequest = function hasPendingRequest() {\n    return this.request || this.mediaRequest_;\n  };\n\n  _proto.stopRequest = function stopRequest() {\n    if (this.request) {\n      var oldRequest = this.request;\n      this.request = null;\n      oldRequest.onreadystatechange = null;\n      oldRequest.abort();\n    }\n  };\n\n  _proto.media = function media(playlist) {\n    var _this3 = this; // getter\n\n\n    if (!playlist) {\n      return this.media_;\n    } // setter\n\n\n    if (this.state === 'HAVE_NOTHING') {\n      throw new Error('Cannot switch media playlist from ' + this.state);\n    }\n\n    var startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n    if (typeof playlist === 'string') {\n      if (!this.masterPlaylistLoader_.master.playlists[playlist]) {\n        throw new Error('Unknown playlist URI: ' + playlist);\n      }\n\n      playlist = this.masterPlaylistLoader_.master.playlists[playlist];\n    }\n\n    var mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n    if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n      this.state = 'HAVE_METADATA';\n      this.media_ = playlist; // trigger media change if the active media has been updated\n\n      if (mediaChange) {\n        this.trigger('mediachanging');\n        this.trigger('mediachange');\n      }\n\n      return;\n    } // switching to the active playlist is a no-op\n\n\n    if (!mediaChange) {\n      return;\n    } // switching from an already loaded playlist\n\n\n    if (this.media_) {\n      this.trigger('mediachanging');\n    }\n\n    this.addSidxSegments_(playlist, startingState, function (sidxChanged) {\n      // everything is ready just continue to haveMetadata\n      _this3.haveMetadata({\n        startingState: startingState,\n        playlist: playlist\n      });\n    });\n  };\n\n  _proto.haveMetadata = function haveMetadata(_ref2) {\n    var startingState = _ref2.startingState,\n        playlist = _ref2.playlist;\n    this.state = 'HAVE_METADATA';\n    this.loadedPlaylists_[playlist.id] = playlist;\n    this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n    this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n    // to resolve setup of media groups\n\n    if (startingState === 'HAVE_MASTER') {\n      this.trigger('loadedmetadata');\n    } else {\n      // trigger media change if the active media has been updated\n      this.trigger('mediachange');\n    }\n  };\n\n  _proto.pause = function pause() {\n    if (this.masterPlaylistLoader_.createMupOnMedia_) {\n      this.off('loadedmetadata', this.masterPlaylistLoader_.createMupOnMedia_);\n      this.masterPlaylistLoader_.createMupOnMedia_ = null;\n    }\n\n    this.stopRequest();\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n\n    if (this.isMaster_) {\n      window$1.clearTimeout(this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_);\n      this.masterPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n    }\n\n    if (this.state === 'HAVE_NOTHING') {\n      // If we pause the loader before any data has been retrieved, its as if we never\n      // started, so reset to an unstarted state.\n      this.started = false;\n    }\n  };\n\n  _proto.load = function load(isFinalRendition) {\n    var _this4 = this;\n\n    window$1.clearTimeout(this.mediaUpdateTimeout);\n    this.mediaUpdateTimeout = null;\n    var media = this.media();\n\n    if (isFinalRendition) {\n      var delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n      this.mediaUpdateTimeout = window$1.setTimeout(function () {\n        return _this4.load();\n      }, delay);\n      return;\n    } // because the playlists are internal to the manifest, load should either load the\n    // main manifest, or do nothing but trigger an event\n\n\n    if (!this.started) {\n      this.start();\n      return;\n    }\n\n    if (media && !media.endList) {\n      // Check to see if this is the master loader and the MUP was cleared (this happens\n      // when the loader was paused). `media` should be set at this point since one is always\n      // set during `start()`.\n      if (this.isMaster_ && !this.minimumUpdatePeriodTimeout_) {\n        // Trigger minimumUpdatePeriod to refresh the master manifest\n        this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n\n      this.trigger('mediaupdatetimeout');\n    } else {\n      this.trigger('loadedplaylist');\n    }\n  };\n\n  _proto.start = function start() {\n    var _this5 = this;\n\n    this.started = true; // We don't need to request the master manifest again\n    // Call this asynchronously to match the xhr request behavior below\n\n    if (!this.isMaster_) {\n      this.mediaRequest_ = window$1.setTimeout(function () {\n        return _this5.haveMaster_();\n      }, 0);\n      return;\n    }\n\n    this.requestMaster_(function (req, masterChanged) {\n      _this5.haveMaster_();\n\n      if (!_this5.hasPendingRequest() && !_this5.media_) {\n        _this5.media(_this5.masterPlaylistLoader_.master.playlists[0]);\n      }\n    });\n  };\n\n  _proto.requestMaster_ = function requestMaster_(cb) {\n    var _this6 = this;\n\n    this.request = this.vhs_.xhr({\n      uri: this.masterPlaylistLoader_.srcUrl,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      if (_this6.requestErrored_(error, req)) {\n        if (_this6.state === 'HAVE_NOTHING') {\n          _this6.started = false;\n        }\n\n        return;\n      }\n\n      var masterChanged = req.responseText !== _this6.masterPlaylistLoader_.masterXml_;\n      _this6.masterPlaylistLoader_.masterXml_ = req.responseText;\n\n      if (req.responseHeaders && req.responseHeaders.date) {\n        _this6.masterLoaded_ = Date.parse(req.responseHeaders.date);\n      } else {\n        _this6.masterLoaded_ = Date.now();\n      }\n\n      _this6.masterPlaylistLoader_.srcUrl = resolveManifestRedirect(_this6.handleManifestRedirects, _this6.masterPlaylistLoader_.srcUrl, req);\n\n      if (masterChanged) {\n        _this6.handleMaster_();\n\n        _this6.syncClientServerClock_(function () {\n          return cb(req, masterChanged);\n        });\n\n        return;\n      }\n\n      return cb(req, masterChanged);\n    });\n  }\n  /**\n   * Parses the master xml for UTCTiming node to sync the client clock to the server\n   * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n   *\n   * @param {Function} done\n   *        Function to call when clock sync has completed\n   */\n  ;\n\n  _proto.syncClientServerClock_ = function syncClientServerClock_(done) {\n    var _this7 = this;\n\n    var utcTiming = parseUTCTiming(this.masterPlaylistLoader_.masterXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n    // server clock\n\n    if (utcTiming === null) {\n      this.masterPlaylistLoader_.clientOffset_ = this.masterLoaded_ - Date.now();\n      return done();\n    }\n\n    if (utcTiming.method === 'DIRECT') {\n      this.masterPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n      return done();\n    }\n\n    this.request = this.vhs_.xhr({\n      uri: resolveUrl(this.masterPlaylistLoader_.srcUrl, utcTiming.value),\n      method: utcTiming.method,\n      withCredentials: this.withCredentials\n    }, function (error, req) {\n      // disposed\n      if (!_this7.request) {\n        return;\n      }\n\n      if (error) {\n        // sync request failed, fall back to using date header from mpd\n        // TODO: log warning\n        _this7.masterPlaylistLoader_.clientOffset_ = _this7.masterLoaded_ - Date.now();\n        return done();\n      }\n\n      var serverTime;\n\n      if (utcTiming.method === 'HEAD') {\n        if (!req.responseHeaders || !req.responseHeaders.date) {\n          // expected date header not preset, fall back to using date header from mpd\n          // TODO: log warning\n          serverTime = _this7.masterLoaded_;\n        } else {\n          serverTime = Date.parse(req.responseHeaders.date);\n        }\n      } else {\n        serverTime = Date.parse(req.responseText);\n      }\n\n      _this7.masterPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n      done();\n    });\n  };\n\n  _proto.haveMaster_ = function haveMaster_() {\n    this.state = 'HAVE_MASTER';\n\n    if (this.isMaster_) {\n      // We have the master playlist at this point, so\n      // trigger this to allow MasterPlaylistController\n      // to make an initial playlist selection\n      this.trigger('loadedplaylist');\n    } else if (!this.media_) {\n      // no media playlist was specifically selected so select\n      // the one the child playlist loader was created with\n      this.media(this.childPlaylist_);\n    }\n  };\n\n  _proto.handleMaster_ = function handleMaster_() {\n    // clear media request\n    this.mediaRequest_ = null;\n    var oldMaster = this.masterPlaylistLoader_.master;\n    var newMaster = parseMasterXml({\n      masterXml: this.masterPlaylistLoader_.masterXml_,\n      srcUrl: this.masterPlaylistLoader_.srcUrl,\n      clientOffset: this.masterPlaylistLoader_.clientOffset_,\n      sidxMapping: this.masterPlaylistLoader_.sidxMapping_,\n      previousManifest: oldMaster\n    }); // if we have an old master to compare the new master against\n\n    if (oldMaster) {\n      newMaster = updateMaster(oldMaster, newMaster, this.masterPlaylistLoader_.sidxMapping_);\n    } // only update master if we have a new master\n\n\n    this.masterPlaylistLoader_.master = newMaster ? newMaster : oldMaster;\n    var location = this.masterPlaylistLoader_.master.locations && this.masterPlaylistLoader_.master.locations[0];\n\n    if (location && location !== this.masterPlaylistLoader_.srcUrl) {\n      this.masterPlaylistLoader_.srcUrl = location;\n    }\n\n    if (!oldMaster || newMaster && newMaster.minimumUpdatePeriod !== oldMaster.minimumUpdatePeriod) {\n      this.updateMinimumUpdatePeriodTimeout_();\n    }\n\n    return Boolean(newMaster);\n  };\n\n  _proto.updateMinimumUpdatePeriodTimeout_ = function updateMinimumUpdatePeriodTimeout_() {\n    var mpl = this.masterPlaylistLoader_; // cancel any pending creation of mup on media\n    // a new one will be added if needed.\n\n    if (mpl.createMupOnMedia_) {\n      mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n      mpl.createMupOnMedia_ = null;\n    } // clear any pending timeouts\n\n\n    if (mpl.minimumUpdatePeriodTimeout_) {\n      window$1.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n      mpl.minimumUpdatePeriodTimeout_ = null;\n    }\n\n    var mup = mpl.master && mpl.master.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n    // MPD has no future validity, so a new one will need to be acquired when new\n    // media segments are to be made available. Thus, we use the target duration\n    // in this case\n\n    if (mup === 0) {\n      if (mpl.media()) {\n        mup = mpl.media().targetDuration * 1000;\n      } else {\n        mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n        mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n      }\n    } // if minimumUpdatePeriod is invalid or <= zero, which\n    // can happen when a live video becomes VOD. skip timeout\n    // creation.\n\n\n    if (typeof mup !== 'number' || mup <= 0) {\n      if (mup < 0) {\n        this.logger_(\"found invalid minimumUpdatePeriod of \" + mup + \", not setting a timeout\");\n      }\n\n      return;\n    }\n\n    this.createMUPTimeout_(mup);\n  };\n\n  _proto.createMUPTimeout_ = function createMUPTimeout_(mup) {\n    var mpl = this.masterPlaylistLoader_;\n    mpl.minimumUpdatePeriodTimeout_ = window$1.setTimeout(function () {\n      mpl.minimumUpdatePeriodTimeout_ = null;\n      mpl.trigger('minimumUpdatePeriod');\n      mpl.createMUPTimeout_(mup);\n    }, mup);\n  }\n  /**\n   * Sends request to refresh the master xml and updates the parsed master manifest\n   */\n  ;\n\n  _proto.refreshXml_ = function refreshXml_() {\n    var _this8 = this;\n\n    this.requestMaster_(function (req, masterChanged) {\n      if (!masterChanged) {\n        return;\n      }\n\n      if (_this8.media_) {\n        _this8.media_ = _this8.masterPlaylistLoader_.master.playlists[_this8.media_.id];\n      } // This will filter out updated sidx info from the mapping\n\n\n      _this8.masterPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(_this8.masterPlaylistLoader_.master, _this8.masterPlaylistLoader_.sidxMapping_);\n\n      _this8.addSidxSegments_(_this8.media(), _this8.state, function (sidxChanged) {\n        // TODO: do we need to reload the current playlist?\n        _this8.refreshMedia_(_this8.media().id);\n      });\n    });\n  }\n  /**\n   * Refreshes the media playlist by re-parsing the master xml and updating playlist\n   * references. If this is an alternate loader, the updated parsed manifest is retrieved\n   * from the master loader.\n   */\n  ;\n\n  _proto.refreshMedia_ = function refreshMedia_(mediaID) {\n    var _this9 = this;\n\n    if (!mediaID) {\n      throw new Error('refreshMedia_ must take a media id');\n    } // for master we have to reparse the master xml\n    // to re-create segments based on current timing values\n    // which may change media. We only skip updating master\n    // if this is the first time this.media_ is being set.\n    // as master was just parsed in that case.\n\n\n    if (this.media_ && this.isMaster_) {\n      this.handleMaster_();\n    }\n\n    var playlists = this.masterPlaylistLoader_.master.playlists;\n    var mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n\n    if (mediaChanged) {\n      this.media_ = playlists[mediaID];\n    } else {\n      this.trigger('playlistunchanged');\n    }\n\n    if (!this.mediaUpdateTimeout) {\n      var createMediaUpdateTimeout = function createMediaUpdateTimeout() {\n        if (_this9.media().endList) {\n          return;\n        }\n\n        _this9.mediaUpdateTimeout = window$1.setTimeout(function () {\n          _this9.trigger('mediaupdatetimeout');\n\n          createMediaUpdateTimeout();\n        }, refreshDelay(_this9.media(), Boolean(mediaChanged)));\n      };\n\n      createMediaUpdateTimeout();\n    }\n\n    this.trigger('loadedplaylist');\n  };\n\n  return DashPlaylistLoader;\n}(EventTarget);\n\nvar Config = {\n  GOAL_BUFFER_LENGTH: 30,\n  MAX_GOAL_BUFFER_LENGTH: 60,\n  BACK_BUFFER_LENGTH: 30,\n  GOAL_BUFFER_LENGTH_RATE: 1,\n  // 0.5 MB/s\n  INITIAL_BANDWIDTH: 4194304,\n  // A fudge factor to apply to advertised playlist bitrates to account for\n  // temporary flucations in client bandwidth\n  BANDWIDTH_VARIANCE: 1.2,\n  // How much of the buffer must be filled before we consider upswitching\n  BUFFER_LOW_WATER_LINE: 0,\n  MAX_BUFFER_LOW_WATER_LINE: 30,\n  // TODO: Remove this when experimentalBufferBasedABR is removed\n  EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n  BUFFER_LOW_WATER_LINE_RATE: 1,\n  // If the buffer is greater than the high water line, we won't switch down\n  BUFFER_HIGH_WATER_LINE: 30\n};\n\nvar stringToArrayBuffer = function stringToArrayBuffer(string) {\n  var view = new Uint8Array(new ArrayBuffer(string.length));\n\n  for (var i = 0; i < string.length; i++) {\n    view[i] = string.charCodeAt(i);\n  }\n\n  return view.buffer;\n};\n/* global Blob, BlobBuilder, Worker */\n// unify worker interface\n\n\nvar browserWorkerPolyFill = function browserWorkerPolyFill(workerObj) {\n  // node only supports on/off\n  workerObj.on = workerObj.addEventListener;\n  workerObj.off = workerObj.removeEventListener;\n  return workerObj;\n};\n\nvar createObjectURL = function createObjectURL(str) {\n  try {\n    return URL.createObjectURL(new Blob([str], {\n      type: 'application/javascript'\n    }));\n  } catch (e) {\n    var blob = new BlobBuilder();\n    blob.append(str);\n    return URL.createObjectURL(blob.getBlob());\n  }\n};\n\nvar factory = function factory(code) {\n  return function () {\n    var objectUrl = createObjectURL(code);\n    var worker = browserWorkerPolyFill(new Worker(objectUrl));\n    worker.objURL = objectUrl;\n    var terminate = worker.terminate;\n    worker.on = worker.addEventListener;\n    worker.off = worker.removeEventListener;\n\n    worker.terminate = function () {\n      URL.revokeObjectURL(objectUrl);\n      return terminate.call(this);\n    };\n\n    return worker;\n  };\n};\n\nvar transform = function transform(code) {\n  return \"var browserWorkerPolyFill = \" + browserWorkerPolyFill.toString() + \";\\n\" + 'browserWorkerPolyFill(self);\\n' + code;\n};\n\nvar getWorkerString = function getWorkerString(fn) {\n  return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n};\n/* rollup-plugin-worker-factory start for worker!/Users/abarstow/videojs/http-streaming/src/transmuxer-worker.js */\n\n\nvar workerCode$1 = transform(getWorkerString(function () {\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * A lightweight readable stream implemention that handles event dispatching.\n   * Objects that inherit from streams should call init in their constructors.\n   */\n  var Stream = function Stream() {\n    this.init = function () {\n      var listeners = {};\n      /**\n       * Add a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      this.on = function (type, listener) {\n        if (!listeners[type]) {\n          listeners[type] = [];\n        }\n\n        listeners[type] = listeners[type].concat(listener);\n      };\n      /**\n       * Remove a listener for a specified event type.\n       * @param type {string} the event name\n       * @param listener {function} a function previously registered for this\n       * type of event through `on`\n       */\n\n\n      this.off = function (type, listener) {\n        var index;\n\n        if (!listeners[type]) {\n          return false;\n        }\n\n        index = listeners[type].indexOf(listener);\n        listeners[type] = listeners[type].slice();\n        listeners[type].splice(index, 1);\n        return index > -1;\n      };\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       * @param type {string} the event name\n       */\n\n\n      this.trigger = function (type) {\n        var callbacks, i, length, args;\n        callbacks = listeners[type];\n\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n\n        if (arguments.length === 2) {\n          length = callbacks.length;\n\n          for (i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          args = [];\n          i = arguments.length;\n\n          for (i = 1; i < arguments.length; ++i) {\n            args.push(arguments[i]);\n          }\n\n          length = callbacks.length;\n\n          for (i = 0; i < length; ++i) {\n            callbacks[i].apply(this, args);\n          }\n        }\n      };\n      /**\n       * Destroys the stream and cleans up.\n       */\n\n\n      this.dispose = function () {\n        listeners = {};\n      };\n    };\n  };\n  /**\n   * Forwards all `data` events on this stream to the destination stream. The\n   * destination stream should provide a method `push` to receive the data\n   * events as they arrive.\n   * @param destination {stream} the stream that will receive all `data` events\n   * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n   *                            when the current stream emits a 'done' event\n   * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n   */\n\n\n  Stream.prototype.pipe = function (destination) {\n    this.on('data', function (data) {\n      destination.push(data);\n    });\n    this.on('done', function (flushSource) {\n      destination.flush(flushSource);\n    });\n    this.on('partialdone', function (flushSource) {\n      destination.partialFlush(flushSource);\n    });\n    this.on('endedtimeline', function (flushSource) {\n      destination.endTimeline(flushSource);\n    });\n    this.on('reset', function (flushSource) {\n      destination.reset(flushSource);\n    });\n    return destination;\n  }; // Default stream functions that are expected to be overridden to perform\n  // actual work. These are provided by the prototype as a sort of no-op\n  // implementation so that we don't have to check for their existence in the\n  // `pipe` function above.\n\n\n  Stream.prototype.push = function (data) {\n    this.trigger('data', data);\n  };\n\n  Stream.prototype.flush = function (flushSource) {\n    this.trigger('done', flushSource);\n  };\n\n  Stream.prototype.partialFlush = function (flushSource) {\n    this.trigger('partialdone', flushSource);\n  };\n\n  Stream.prototype.endTimeline = function (flushSource) {\n    this.trigger('endedtimeline', flushSource);\n  };\n\n  Stream.prototype.reset = function (flushSource) {\n    this.trigger('reset', flushSource);\n  };\n\n  var stream = Stream;\n  var MAX_UINT32$1 = Math.pow(2, 32);\n\n  var getUint64$2 = function getUint64(uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n\n      return value;\n    }\n\n    return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n  };\n\n  var numbers = {\n    getUint64: getUint64$2,\n    MAX_UINT32: MAX_UINT32$1\n  };\n  var MAX_UINT32 = numbers.MAX_UINT32;\n  var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n  (function () {\n    var i;\n    types = {\n      avc1: [],\n      // codingname\n      avcC: [],\n      btrt: [],\n      dinf: [],\n      dref: [],\n      esds: [],\n      ftyp: [],\n      hdlr: [],\n      mdat: [],\n      mdhd: [],\n      mdia: [],\n      mfhd: [],\n      minf: [],\n      moof: [],\n      moov: [],\n      mp4a: [],\n      // codingname\n      mvex: [],\n      mvhd: [],\n      pasp: [],\n      sdtp: [],\n      smhd: [],\n      stbl: [],\n      stco: [],\n      stsc: [],\n      stsd: [],\n      stsz: [],\n      stts: [],\n      styp: [],\n      tfdt: [],\n      tfhd: [],\n      traf: [],\n      trak: [],\n      trun: [],\n      trex: [],\n      tkhd: [],\n      vmhd: []\n    }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n    // don't throw an error\n\n    if (typeof Uint8Array === 'undefined') {\n      return;\n    }\n\n    for (i in types) {\n      if (types.hasOwnProperty(i)) {\n        types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n      }\n    }\n\n    MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n    AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n    MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n    VIDEO_HDLR = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]);\n    AUDIO_HDLR = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // pre_defined\n    0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ]);\n    HDLR_TYPES = {\n      video: VIDEO_HDLR,\n      audio: AUDIO_HDLR\n    };\n    DREF = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version 0\n    0x00, 0x00, 0x01 // entry_flags\n    ]);\n    SMHD = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, // balance, 0 means centered\n    0x00, 0x00 // reserved\n    ]);\n    STCO = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n    ]);\n    STSC = STCO;\n    STSZ = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n    ]);\n    STTS = STCO;\n    VMHD = new Uint8Array([0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphicsmode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n    ]);\n  })();\n\n  box = function box(type) {\n    var payload = [],\n        size = 0,\n        i,\n        result,\n        view;\n\n    for (i = 1; i < arguments.length; i++) {\n      payload.push(arguments[i]);\n    }\n\n    i = payload.length; // calculate the total size we need to allocate\n\n    while (i--) {\n      size += payload[i].byteLength;\n    }\n\n    result = new Uint8Array(size + 8);\n    view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n    view.setUint32(0, result.byteLength);\n    result.set(type, 4); // copy the payload into the result\n\n    for (i = 0, size = 8; i < payload.length; i++) {\n      result.set(payload[i], size);\n      size += payload[i].byteLength;\n    }\n\n    return result;\n  };\n\n  dinf = function dinf() {\n    return box(types.dinf, box(types.dref, DREF));\n  };\n\n  esds = function esds(track) {\n    return box(types.esds, new Uint8Array([0x00, // version\n    0x00, 0x00, 0x00, // flags\n    // ES_Descriptor\n    0x03, // tag, ES_DescrTag\n    0x19, // length\n    0x00, 0x00, // ES_ID\n    0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n    // DecoderConfigDescriptor\n    0x04, // tag, DecoderConfigDescrTag\n    0x11, // length\n    0x40, // object type\n    0x15, // streamType\n    0x00, 0x06, 0x00, // bufferSizeDB\n    0x00, 0x00, 0xda, 0xc0, // maxBitrate\n    0x00, 0x00, 0xda, 0xc0, // avgBitrate\n    // DecoderSpecificInfo\n    0x05, // tag, DecoderSpecificInfoTag\n    0x02, // length\n    // ISO/IEC 14496-3, AudioSpecificConfig\n    // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n    track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n    ]));\n  };\n\n  ftyp = function ftyp() {\n    return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n  };\n\n  hdlr = function hdlr(type) {\n    return box(types.hdlr, HDLR_TYPES[type]);\n  };\n\n  mdat = function mdat(data) {\n    return box(types.mdat, data);\n  };\n\n  mdhd = function mdhd(track) {\n    var result = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x02, // creation_time\n    0x00, 0x00, 0x00, 0x03, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n    track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF, // duration\n    0x55, 0xc4, // 'und' language (undetermined)\n    0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n    // defined. The sample rate can be parsed out of an ADTS header, for\n    // instance.\n\n    if (track.samplerate) {\n      result[12] = track.samplerate >>> 24 & 0xFF;\n      result[13] = track.samplerate >>> 16 & 0xFF;\n      result[14] = track.samplerate >>> 8 & 0xFF;\n      result[15] = track.samplerate & 0xFF;\n    }\n\n    return box(types.mdhd, result);\n  };\n\n  mdia = function mdia(track) {\n    return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n  };\n\n  mfhd = function mfhd(sequenceNumber) {\n    return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00, // flags\n    (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n    ]));\n  };\n\n  minf = function minf(track) {\n    return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n  };\n\n  moof = function moof(sequenceNumber, tracks) {\n    var trackFragments = [],\n        i = tracks.length; // build traf boxes for each track fragment\n\n    while (i--) {\n      trackFragments[i] = traf(tracks[i]);\n    }\n\n    return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n  };\n  /**\n   * Returns a movie box.\n   * @param tracks {array} the tracks associated with this movie\n   * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n   */\n\n\n  moov = function moov(tracks) {\n    var i = tracks.length,\n        boxes = [];\n\n    while (i--) {\n      boxes[i] = trak(tracks[i]);\n    }\n\n    return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n  };\n\n  mvex = function mvex(tracks) {\n    var i = tracks.length,\n        boxes = [];\n\n    while (i--) {\n      boxes[i] = trex(tracks[i]);\n    }\n\n    return box.apply(null, [types.mvex].concat(boxes));\n  };\n\n  mvhd = function mvhd(duration) {\n    var bytes = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // creation_time\n    0x00, 0x00, 0x00, 0x02, // modification_time\n    0x00, 0x01, 0x5f, 0x90, // timescale, 90,000 \"ticks\" per second\n    (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF, // duration\n    0x00, 0x01, 0x00, 0x00, // 1.0 rate\n    0x01, 0x00, // 1.0 volume\n    0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n    0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]);\n    return box(types.mvhd, bytes);\n  };\n\n  sdtp = function sdtp(track) {\n    var samples = track.samples || [],\n        bytes = new Uint8Array(4 + samples.length),\n        flags,\n        i; // leave the full box header (4 bytes) all zero\n    // write the sample table\n\n    for (i = 0; i < samples.length; i++) {\n      flags = samples[i].flags;\n      bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n    }\n\n    return box(types.sdtp, bytes);\n  };\n\n  stbl = function stbl(track) {\n    return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n  };\n\n  (function () {\n    var videoSample, audioSample;\n\n    stsd = function stsd(track) {\n      return box(types.stsd, new Uint8Array([0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n    };\n\n    videoSample = function videoSample(track) {\n      var sps = track.sps || [],\n          pps = track.pps || [],\n          sequenceParameterSets = [],\n          pictureParameterSets = [],\n          i,\n          avc1Box; // assemble the SPSs\n\n      for (i = 0; i < sps.length; i++) {\n        sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n        sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n        sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n      } // assemble the PPSs\n\n\n      for (i = 0; i < pps.length; i++) {\n        pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n        pictureParameterSets.push(pps[i].byteLength & 0xFF);\n        pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n      }\n\n      avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width & 0xff00) >> 8, track.width & 0xff, // width\n      (track.height & 0xff00) >> 8, track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11 // pre_defined = -1\n      ]), box(types.avcC, new Uint8Array([0x01, // configurationVersion\n      track.profileIdc, // AVCProfileIndication\n      track.profileCompatibility, // profile_compatibility\n      track.levelIdc, // AVCLevelIndication\n      0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n      ].concat([sps.length], // numOfSequenceParameterSets\n      sequenceParameterSets, // \"SPS\"\n      [pps.length], // numOfPictureParameterSets\n      pictureParameterSets // \"PPS\"\n      ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80, // bufferSizeDB\n      0x00, 0x2d, 0xc6, 0xc0, // maxBitrate\n      0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n      ]))];\n\n      if (track.sarRatio) {\n        var hSpacing = track.sarRatio[0],\n            vSpacing = track.sarRatio[1];\n        avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n      }\n\n      return box.apply(null, avc1Box);\n    };\n\n    audioSample = function audioSample(track) {\n      return box(types.mp4a, new Uint8Array([// SampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      // AudioSampleEntry, ISO/IEC 14496-12\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, // reserved\n      (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff, // channelcount\n      (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff, // samplesize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n      // MP4AudioSampleEntry, ISO/IEC 14496-14\n      ]), esds(track));\n    };\n  })();\n\n  tkhd = function tkhd(track) {\n    var result = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x07, // flags\n    0x00, 0x00, 0x00, 0x00, // creation_time\n    0x00, 0x00, 0x00, 0x00, // modification_time\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x00, // reserved\n    (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF, // duration\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n    0x00, 0x00, // layer\n    0x00, 0x00, // alternate_group\n    0x01, 0x00, // non-audio track volume\n    0x00, 0x00, // reserved\n    0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, // transformation: unity matrix\n    (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00, // width\n    (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n    ]);\n    return box(types.tkhd, result);\n  };\n  /**\n   * Generate a track fragment (traf) box. A traf box collects metadata\n   * about tracks in a movie fragment (moof) box.\n   */\n\n\n  traf = function traf(track) {\n    var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n    trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x3a, // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x01, // sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x00, 0x00, 0x00 // default_sample_flags\n    ]));\n    upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n    lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n    trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01, // version 1\n    0x00, 0x00, 0x00, // flags\n    // baseMediaDecodeTime\n    upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n    // the containing moof to the first payload byte of the associated\n    // mdat\n\n    dataOffset = 32 + // tfhd\n    20 + // tfdt\n    8 + // traf header\n    16 + // mfhd\n    8 + // moof header\n    8; // mdat header\n    // audio tracks require less metadata\n\n    if (track.type === 'audio') {\n      trackFragmentRun = trun$1(track, dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n    } // video tracks should contain an independent and disposable samples\n    // box (sdtp)\n    // generate one and adjust offsets to match\n\n\n    sampleDependencyTable = sdtp(track);\n    trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n    return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n  };\n  /**\n   * Generate a track box.\n   * @param track {object} a track definition\n   * @return {Uint8Array} the track box\n   */\n\n\n  trak = function trak(track) {\n    track.duration = track.duration || 0xffffffff;\n    return box(types.trak, tkhd(track), mdia(track));\n  };\n\n  trex = function trex(track) {\n    var result = new Uint8Array([0x00, // version 0\n    0x00, 0x00, 0x00, // flags\n    (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF, // track_ID\n    0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n    0x00, 0x00, 0x00, 0x00, // default_sample_duration\n    0x00, 0x00, 0x00, 0x00, // default_sample_size\n    0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]); // the last two bytes of default_sample_flags is the sample\n    // degradation priority, a hint about the importance of this sample\n    // relative to others. Lower the degradation priority for all sample\n    // types other than video.\n\n    if (track.type !== 'video') {\n      result[result.length - 1] = 0x00;\n    }\n\n    return box(types.trex, result);\n  };\n\n  (function () {\n    var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n    // duration is present for the first sample, it will be present for\n    // all subsequent samples.\n    // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n    trunHeader = function trunHeader(samples, offset) {\n      var durationPresent = 0,\n          sizePresent = 0,\n          flagsPresent = 0,\n          compositionTimeOffset = 0; // trun flag constants\n\n      if (samples.length) {\n        if (samples[0].duration !== undefined) {\n          durationPresent = 0x1;\n        }\n\n        if (samples[0].size !== undefined) {\n          sizePresent = 0x2;\n        }\n\n        if (samples[0].flags !== undefined) {\n          flagsPresent = 0x4;\n        }\n\n        if (samples[0].compositionTimeOffset !== undefined) {\n          compositionTimeOffset = 0x8;\n        }\n      }\n\n      return [0x00, // version 0\n      0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01, // flags\n      (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF, // sample_count\n      (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n      ];\n    };\n\n    videoTrun = function videoTrun(track, offset) {\n      var bytesOffest, bytes, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 16 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 16);\n      bytes.set(header);\n      bytesOffest = header.length;\n\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n        bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n        bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n        bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n      }\n\n      return box(types.trun, bytes);\n    };\n\n    audioTrun = function audioTrun(track, offset) {\n      var bytes, bytesOffest, header, samples, sample, i;\n      samples = track.samples || [];\n      offset += 8 + 12 + 8 * samples.length;\n      header = trunHeader(samples, offset);\n      bytes = new Uint8Array(header.length + samples.length * 8);\n      bytes.set(header);\n      bytesOffest = header.length;\n\n      for (i = 0; i < samples.length; i++) {\n        sample = samples[i];\n        bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n        bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n        bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n        bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n        bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n      }\n\n      return box(types.trun, bytes);\n    };\n\n    trun$1 = function trun(track, offset) {\n      if (track.type === 'audio') {\n        return audioTrun(track, offset);\n      }\n\n      return videoTrun(track, offset);\n    };\n  })();\n\n  var mp4Generator = {\n    ftyp: ftyp,\n    mdat: mdat,\n    moof: moof,\n    moov: moov,\n    initSegment: function initSegment(tracks) {\n      var fileType = ftyp(),\n          movie = moov(tracks),\n          result;\n      result = new Uint8Array(fileType.byteLength + movie.byteLength);\n      result.set(fileType);\n      result.set(movie, fileType.byteLength);\n      return result;\n    }\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  // Convert an array of nal units into an array of frames with each frame being\n  // composed of the nal units that make up that frame\n  // Also keep track of cummulative data about the frame from the nal units such\n  // as the frame duration, starting pts, etc.\n\n  var groupNalsIntoFrames = function groupNalsIntoFrames(nalUnits) {\n    var i,\n        currentNal,\n        currentFrame = [],\n        frames = []; // TODO added for LHLS, make sure this is OK\n\n    frames.byteLength = 0;\n    frames.nalCount = 0;\n    frames.duration = 0;\n    currentFrame.byteLength = 0;\n\n    for (i = 0; i < nalUnits.length; i++) {\n      currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n      if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n        // Since the very first nal unit is expected to be an AUD\n        // only push to the frames array when currentFrame is not empty\n        if (currentFrame.length) {\n          currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n          frames.byteLength += currentFrame.byteLength;\n          frames.nalCount += currentFrame.length;\n          frames.duration += currentFrame.duration;\n          frames.push(currentFrame);\n        }\n\n        currentFrame = [currentNal];\n        currentFrame.byteLength = currentNal.data.byteLength;\n        currentFrame.pts = currentNal.pts;\n        currentFrame.dts = currentNal.dts;\n      } else {\n        // Specifically flag key frames for ease of use later\n        if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n          currentFrame.keyFrame = true;\n        }\n\n        currentFrame.duration = currentNal.dts - currentFrame.dts;\n        currentFrame.byteLength += currentNal.data.byteLength;\n        currentFrame.push(currentNal);\n      }\n    } // For the last frame, use the duration of the previous frame if we\n    // have nothing better to go on\n\n\n    if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n      currentFrame.duration = frames[frames.length - 1].duration;\n    } // Push the final frame\n    // TODO added for LHLS, make sure this is OK\n\n\n    frames.byteLength += currentFrame.byteLength;\n    frames.nalCount += currentFrame.length;\n    frames.duration += currentFrame.duration;\n    frames.push(currentFrame);\n    return frames;\n  }; // Convert an array of frames into an array of Gop with each Gop being composed\n  // of the frames that make up that Gop\n  // Also keep track of cummulative data about the Gop from the frames such as the\n  // Gop duration, starting pts, etc.\n\n\n  var groupFramesIntoGops = function groupFramesIntoGops(frames) {\n    var i,\n        currentFrame,\n        currentGop = [],\n        gops = []; // We must pre-set some of the values on the Gop since we\n    // keep running totals of these values\n\n    currentGop.byteLength = 0;\n    currentGop.nalCount = 0;\n    currentGop.duration = 0;\n    currentGop.pts = frames[0].pts;\n    currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n    gops.byteLength = 0;\n    gops.nalCount = 0;\n    gops.duration = 0;\n    gops.pts = frames[0].pts;\n    gops.dts = frames[0].dts;\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n\n      if (currentFrame.keyFrame) {\n        // Since the very first frame is expected to be an keyframe\n        // only push to the gops array when currentGop is not empty\n        if (currentGop.length) {\n          gops.push(currentGop);\n          gops.byteLength += currentGop.byteLength;\n          gops.nalCount += currentGop.nalCount;\n          gops.duration += currentGop.duration;\n        }\n\n        currentGop = [currentFrame];\n        currentGop.nalCount = currentFrame.length;\n        currentGop.byteLength = currentFrame.byteLength;\n        currentGop.pts = currentFrame.pts;\n        currentGop.dts = currentFrame.dts;\n        currentGop.duration = currentFrame.duration;\n      } else {\n        currentGop.duration += currentFrame.duration;\n        currentGop.nalCount += currentFrame.length;\n        currentGop.byteLength += currentFrame.byteLength;\n        currentGop.push(currentFrame);\n      }\n    }\n\n    if (gops.length && currentGop.duration <= 0) {\n      currentGop.duration = gops[gops.length - 1].duration;\n    }\n\n    gops.byteLength += currentGop.byteLength;\n    gops.nalCount += currentGop.nalCount;\n    gops.duration += currentGop.duration; // push the final Gop\n\n    gops.push(currentGop);\n    return gops;\n  };\n  /*\n   * Search for the first keyframe in the GOPs and throw away all frames\n   * until that keyframe. Then extend the duration of the pulled keyframe\n   * and pull the PTS and DTS of the keyframe so that it covers the time\n   * range of the frames that were disposed.\n   *\n   * @param {Array} gops video GOPs\n   * @returns {Array} modified video GOPs\n   */\n\n\n  var extendFirstKeyFrame = function extendFirstKeyFrame(gops) {\n    var currentGop;\n\n    if (!gops[0][0].keyFrame && gops.length > 1) {\n      // Remove the first GOP\n      currentGop = gops.shift();\n      gops.byteLength -= currentGop.byteLength;\n      gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n      // first gop to cover the time period of the\n      // frames we just removed\n\n      gops[0][0].dts = currentGop.dts;\n      gops[0][0].pts = currentGop.pts;\n      gops[0][0].duration += currentGop.duration;\n    }\n\n    return gops;\n  };\n  /**\n   * Default sample object\n   * see ISO/IEC 14496-12:2012, section 8.6.4.3\n   */\n\n\n  var createDefaultSample = function createDefaultSample() {\n    return {\n      size: 0,\n      flags: {\n        isLeading: 0,\n        dependsOn: 1,\n        isDependedOn: 0,\n        hasRedundancy: 0,\n        degradationPriority: 0,\n        isNonSyncSample: 1\n      }\n    };\n  };\n  /*\n   * Collates information from a video frame into an object for eventual\n   * entry into an MP4 sample table.\n   *\n   * @param {Object} frame the video frame\n   * @param {Number} dataOffset the byte offset to position the sample\n   * @return {Object} object containing sample table info for a frame\n   */\n\n\n  var sampleForFrame = function sampleForFrame(frame, dataOffset) {\n    var sample = createDefaultSample();\n    sample.dataOffset = dataOffset;\n    sample.compositionTimeOffset = frame.pts - frame.dts;\n    sample.duration = frame.duration;\n    sample.size = 4 * frame.length; // Space for nal unit size\n\n    sample.size += frame.byteLength;\n\n    if (frame.keyFrame) {\n      sample.flags.dependsOn = 2;\n      sample.flags.isNonSyncSample = 0;\n    }\n\n    return sample;\n  }; // generate the track's sample table from an array of gops\n\n\n  var generateSampleTable$1 = function generateSampleTable(gops, baseDataOffset) {\n    var h,\n        i,\n        sample,\n        currentGop,\n        currentFrame,\n        dataOffset = baseDataOffset || 0,\n        samples = [];\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h];\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i];\n        sample = sampleForFrame(currentFrame, dataOffset);\n        dataOffset += sample.size;\n        samples.push(sample);\n      }\n    }\n\n    return samples;\n  }; // generate the track's raw mdat data from an array of gops\n\n\n  var concatenateNalData = function concatenateNalData(gops) {\n    var h,\n        i,\n        j,\n        currentGop,\n        currentFrame,\n        currentNal,\n        dataOffset = 0,\n        nalsByteLength = gops.byteLength,\n        numberOfNals = gops.nalCount,\n        totalByteLength = nalsByteLength + 4 * numberOfNals,\n        data = new Uint8Array(totalByteLength),\n        view = new DataView(data.buffer); // For each Gop..\n\n    for (h = 0; h < gops.length; h++) {\n      currentGop = gops[h]; // For each Frame..\n\n      for (i = 0; i < currentGop.length; i++) {\n        currentFrame = currentGop[i]; // For each NAL..\n\n        for (j = 0; j < currentFrame.length; j++) {\n          currentNal = currentFrame[j];\n          view.setUint32(dataOffset, currentNal.data.byteLength);\n          dataOffset += 4;\n          data.set(currentNal.data, dataOffset);\n          dataOffset += currentNal.data.byteLength;\n        }\n      }\n    }\n\n    return data;\n  }; // generate the track's sample table from a frame\n\n\n  var generateSampleTableForFrame = function generateSampleTableForFrame(frame, baseDataOffset) {\n    var sample,\n        dataOffset = baseDataOffset || 0,\n        samples = [];\n    sample = sampleForFrame(frame, dataOffset);\n    samples.push(sample);\n    return samples;\n  }; // generate the track's raw mdat data from a frame\n\n\n  var concatenateNalDataForFrame = function concatenateNalDataForFrame(frame) {\n    var i,\n        currentNal,\n        dataOffset = 0,\n        nalsByteLength = frame.byteLength,\n        numberOfNals = frame.length,\n        totalByteLength = nalsByteLength + 4 * numberOfNals,\n        data = new Uint8Array(totalByteLength),\n        view = new DataView(data.buffer); // For each NAL..\n\n    for (i = 0; i < frame.length; i++) {\n      currentNal = frame[i];\n      view.setUint32(dataOffset, currentNal.data.byteLength);\n      dataOffset += 4;\n      data.set(currentNal.data, dataOffset);\n      dataOffset += currentNal.data.byteLength;\n    }\n\n    return data;\n  };\n\n  var frameUtils = {\n    groupNalsIntoFrames: groupNalsIntoFrames,\n    groupFramesIntoGops: groupFramesIntoGops,\n    extendFirstKeyFrame: extendFirstKeyFrame,\n    generateSampleTable: generateSampleTable$1,\n    concatenateNalData: concatenateNalData,\n    generateSampleTableForFrame: generateSampleTableForFrame,\n    concatenateNalDataForFrame: concatenateNalDataForFrame\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var highPrefix = [33, 16, 5, 32, 164, 27];\n  var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n\n  var zeroFill = function zeroFill(count) {\n    var a = [];\n\n    while (count--) {\n      a.push(0);\n    }\n\n    return a;\n  };\n\n  var makeTable = function makeTable(metaTable) {\n    return Object.keys(metaTable).reduce(function (obj, key) {\n      obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n        return arr.concat(part);\n      }, []));\n      return obj;\n    }, {});\n  };\n\n  var silence;\n\n  var silence_1 = function silence_1() {\n    if (!silence) {\n      // Frames-of-silence to use for filling in missing AAC frames\n      var coneOfSilence = {\n        96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n        88200: [highPrefix, [231], zeroFill(170), [56]],\n        64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n        48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n        44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n        32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n        24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n        16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n        12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n        11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n        8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n      };\n      silence = makeTable(coneOfSilence);\n    }\n\n    return silence;\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n\n  var ONE_SECOND_IN_TS$4 = 90000,\n      // 90kHz clock\n  secondsToVideoTs,\n      secondsToAudioTs,\n      videoTsToSeconds,\n      audioTsToSeconds,\n      audioTsToVideoTs,\n      videoTsToAudioTs,\n      metadataTsToSeconds;\n\n  secondsToVideoTs = function secondsToVideoTs(seconds) {\n    return seconds * ONE_SECOND_IN_TS$4;\n  };\n\n  secondsToAudioTs = function secondsToAudioTs(seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n\n  videoTsToSeconds = function videoTsToSeconds(timestamp) {\n    return timestamp / ONE_SECOND_IN_TS$4;\n  };\n\n  audioTsToSeconds = function audioTsToSeconds(timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n\n  audioTsToVideoTs = function audioTsToVideoTs(timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n\n  videoTsToAudioTs = function videoTsToAudioTs(timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n\n\n  metadataTsToSeconds = function metadataTsToSeconds(timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n\n  var clock = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  /**\n   * Sum the `byteLength` properties of the data in each AAC frame\n   */\n\n  var sumFrameByteLengths = function sumFrameByteLengths(array) {\n    var i,\n        currentObj,\n        sum = 0; // sum the byteLength's all each nal unit in the frame\n\n    for (i = 0; i < array.length; i++) {\n      currentObj = array[i];\n      sum += currentObj.data.byteLength;\n    }\n\n    return sum;\n  }; // Possibly pad (prefix) the audio track with silence if appending this track\n  // would lead to the introduction of a gap in the audio buffer\n\n\n  var prefixWithSilence = function prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n    var baseMediaDecodeTimeTs,\n        frameDuration = 0,\n        audioGapDuration = 0,\n        audioFillFrameCount = 0,\n        audioFillDuration = 0,\n        silentFrame,\n        i,\n        firstFrame;\n\n    if (!frames.length) {\n      return;\n    }\n\n    baseMediaDecodeTimeTs = clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n    frameDuration = Math.ceil(clock.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n\n    if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n      // insert the shortest possible amount (audio gap or audio to video gap)\n      audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n      audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n      audioFillDuration = audioFillFrameCount * frameDuration;\n    } // don't attempt to fill gaps smaller than a single frame or larger\n    // than a half second\n\n\n    if (audioFillFrameCount < 1 || audioFillDuration > clock.ONE_SECOND_IN_TS / 2) {\n      return;\n    }\n\n    silentFrame = silence_1()[track.samplerate];\n\n    if (!silentFrame) {\n      // we don't have a silent frame pregenerated for the sample rate, so use a frame\n      // from the content instead\n      silentFrame = frames[0].data;\n    }\n\n    for (i = 0; i < audioFillFrameCount; i++) {\n      firstFrame = frames[0];\n      frames.splice(0, 0, {\n        data: silentFrame,\n        dts: firstFrame.dts - frameDuration,\n        pts: firstFrame.pts - frameDuration\n      });\n    }\n\n    track.baseMediaDecodeTime -= Math.floor(clock.videoTsToAudioTs(audioFillDuration, track.samplerate));\n    return audioFillDuration;\n  }; // If the audio segment extends before the earliest allowed dts\n  // value, remove AAC frames until starts at or after the earliest\n  // allowed DTS so that we don't end up with a negative baseMedia-\n  // DecodeTime for the audio track\n\n\n  var trimAdtsFramesByEarliestDts = function trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts) {\n    if (track.minSegmentDts >= earliestAllowedDts) {\n      return adtsFrames;\n    } // We will need to recalculate the earliest segment Dts\n\n\n    track.minSegmentDts = Infinity;\n    return adtsFrames.filter(function (currentFrame) {\n      // If this is an allowed frame, keep it and record it's Dts\n      if (currentFrame.dts >= earliestAllowedDts) {\n        track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n        track.minSegmentPts = track.minSegmentDts;\n        return true;\n      } // Otherwise, discard it\n\n\n      return false;\n    });\n  }; // generate the track's raw mdat data from an array of frames\n\n\n  var generateSampleTable = function generateSampleTable(frames) {\n    var i,\n        currentFrame,\n        samples = [];\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      samples.push({\n        size: currentFrame.data.byteLength,\n        duration: 1024 // For AAC audio, all samples contain 1024 samples\n\n      });\n    }\n\n    return samples;\n  }; // generate the track's sample table from an array of frames\n\n\n  var concatenateFrameData = function concatenateFrameData(frames) {\n    var i,\n        currentFrame,\n        dataOffset = 0,\n        data = new Uint8Array(sumFrameByteLengths(frames));\n\n    for (i = 0; i < frames.length; i++) {\n      currentFrame = frames[i];\n      data.set(currentFrame.data, dataOffset);\n      dataOffset += currentFrame.data.byteLength;\n    }\n\n    return data;\n  };\n\n  var audioFrameUtils = {\n    prefixWithSilence: prefixWithSilence,\n    trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n    generateSampleTable: generateSampleTable,\n    concatenateFrameData: concatenateFrameData\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ONE_SECOND_IN_TS$3 = clock.ONE_SECOND_IN_TS;\n  /**\n   * Store information about the start and end of the track and the\n   * duration for each frame/sample we process in order to calculate\n   * the baseMediaDecodeTime\n   */\n\n  var collectDtsInfo = function collectDtsInfo(track, data) {\n    if (typeof data.pts === 'number') {\n      if (track.timelineStartInfo.pts === undefined) {\n        track.timelineStartInfo.pts = data.pts;\n      }\n\n      if (track.minSegmentPts === undefined) {\n        track.minSegmentPts = data.pts;\n      } else {\n        track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n      }\n\n      if (track.maxSegmentPts === undefined) {\n        track.maxSegmentPts = data.pts;\n      } else {\n        track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n      }\n    }\n\n    if (typeof data.dts === 'number') {\n      if (track.timelineStartInfo.dts === undefined) {\n        track.timelineStartInfo.dts = data.dts;\n      }\n\n      if (track.minSegmentDts === undefined) {\n        track.minSegmentDts = data.dts;\n      } else {\n        track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n      }\n\n      if (track.maxSegmentDts === undefined) {\n        track.maxSegmentDts = data.dts;\n      } else {\n        track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n      }\n    }\n  };\n  /**\n   * Clear values used to calculate the baseMediaDecodeTime between\n   * tracks\n   */\n\n\n  var clearDtsInfo = function clearDtsInfo(track) {\n    delete track.minSegmentDts;\n    delete track.maxSegmentDts;\n    delete track.minSegmentPts;\n    delete track.maxSegmentPts;\n  };\n  /**\n   * Calculate the track's baseMediaDecodeTime based on the earliest\n   * DTS the transmuxer has ever seen and the minimum DTS for the\n   * current track\n   * @param track {object} track metadata configuration\n   * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n\n  var calculateTrackBaseMediaDecodeTime = function calculateTrackBaseMediaDecodeTime(track, keepOriginalTimestamps) {\n    var baseMediaDecodeTime,\n        scale,\n        minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n    if (!keepOriginalTimestamps) {\n      minSegmentDts -= track.timelineStartInfo.dts;\n    } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n    // we want the start of the first segment to be placed\n\n\n    baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n    baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n    baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n\n    if (track.type === 'audio') {\n      // Audio has a different clock equal to the sampling_rate so we need to\n      // scale the PTS values into the clock rate of the track\n      scale = track.samplerate / ONE_SECOND_IN_TS$3;\n      baseMediaDecodeTime *= scale;\n      baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n    }\n\n    return baseMediaDecodeTime;\n  };\n\n  var trackDecodeInfo = {\n    clearDtsInfo: clearDtsInfo,\n    calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n    collectDtsInfo: collectDtsInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Reads in-band caption information from a video elementary\n   * stream. Captions must follow the CEA-708 standard for injection\n   * into an MPEG-2 transport streams.\n   * @see https://en.wikipedia.org/wiki/CEA-708\n   * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n   */\n  // payload type field to indicate how they are to be\n  // interpreted. CEAS-708 caption content is always transmitted with\n  // payload type 0x04.\n\n  var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n      RBSP_TRAILING_BITS = 128;\n  /**\n    * Parse a supplemental enhancement information (SEI) NAL unit.\n    * Stops parsing once a message of type ITU T T35 has been found.\n    *\n    * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n    * @return {object} the parsed SEI payload\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n    */\n\n  var parseSei = function parseSei(bytes) {\n    var i = 0,\n        result = {\n      payloadType: -1,\n      payloadSize: 0\n    },\n        payloadType = 0,\n        payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n    while (i < bytes.byteLength) {\n      // stop once we have hit the end of the sei_rbsp\n      if (bytes[i] === RBSP_TRAILING_BITS) {\n        break;\n      } // Parse payload type\n\n\n      while (bytes[i] === 0xFF) {\n        payloadType += 255;\n        i++;\n      }\n\n      payloadType += bytes[i++]; // Parse payload size\n\n      while (bytes[i] === 0xFF) {\n        payloadSize += 255;\n        i++;\n      }\n\n      payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n      // there can only ever be one caption message in a frame's sei\n\n      if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n        var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n\n        if (userIdentifier === 'GA94') {\n          result.payloadType = payloadType;\n          result.payloadSize = payloadSize;\n          result.payload = bytes.subarray(i, i + payloadSize);\n          break;\n        } else {\n          result.payload = void 0;\n        }\n      } // skip the payload and parse the next message\n\n\n      i += payloadSize;\n      payloadType = 0;\n      payloadSize = 0;\n    }\n\n    return result;\n  }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n\n  var parseUserData = function parseUserData(sei) {\n    // itu_t_t35_contry_code must be 181 (United States) for\n    // captions\n    if (sei.payload[0] !== 181) {\n      return null;\n    } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n\n    if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n      return null;\n    } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n\n    if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n      return null;\n    } // finally, user_data_type_code should be 0x03 for caption data\n\n\n    if (sei.payload[7] !== 0x03) {\n      return null;\n    } // return the user_data_type_structure and strip the trailing\n    // marker bits\n\n\n    return sei.payload.subarray(8, sei.payload.length - 1);\n  }; // see CEA-708-D, section 4.4\n\n\n  var parseCaptionPackets = function parseCaptionPackets(pts, userData) {\n    var results = [],\n        i,\n        count,\n        offset,\n        data; // if this is just filler, return immediately\n\n    if (!(userData[0] & 0x40)) {\n      return results;\n    } // parse out the cc_data_1 and cc_data_2 fields\n\n\n    count = userData[0] & 0x1f;\n\n    for (i = 0; i < count; i++) {\n      offset = i * 3;\n      data = {\n        type: userData[offset + 2] & 0x03,\n        pts: pts\n      }; // capture cc data when cc_valid is 1\n\n      if (userData[offset + 2] & 0x04) {\n        data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n        results.push(data);\n      }\n    }\n\n    return results;\n  };\n\n  var discardEmulationPreventionBytes$1 = function discardEmulationPreventionBytes(data) {\n    var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n    while (i < length - 2) {\n      if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2);\n        i += 2;\n      } else {\n        i++;\n      }\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n\n    if (emulationPreventionBytesPositions.length === 0) {\n      return data;\n    } // Create a new array to hold the NAL unit data\n\n\n    newLength = length - emulationPreventionBytesPositions.length;\n    newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        emulationPreventionBytesPositions.shift();\n      }\n\n      newData[i] = data[sourceIndex];\n    }\n\n    return newData;\n  }; // exports\n\n\n  var captionPacketParser = {\n    parseSei: parseSei,\n    parseUserData: parseUserData,\n    parseCaptionPackets: parseCaptionPackets,\n    discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n    USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n  }; // Link To Transport\n  // -----------------\n\n  var CaptionStream$1 = function CaptionStream(options) {\n    options = options || {};\n    CaptionStream.prototype.init.call(this); // parse708captions flag, default to true\n\n    this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n    this.captionPackets_ = [];\n    this.ccStreams_ = [new Cea608Stream(0, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(0, 1), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 0), // eslint-disable-line no-use-before-define\n    new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n    ];\n\n    if (this.parse708captions_) {\n      this.cc708Stream_ = new Cea708Stream({\n        captionServices: options.captionServices\n      }); // eslint-disable-line no-use-before-define\n    }\n\n    this.reset(); // forward data and done events from CCs to this CaptionStream\n\n    this.ccStreams_.forEach(function (cc) {\n      cc.on('data', this.trigger.bind(this, 'data'));\n      cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      cc.on('done', this.trigger.bind(this, 'done'));\n    }, this);\n\n    if (this.parse708captions_) {\n      this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n      this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n      this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n    }\n  };\n\n  CaptionStream$1.prototype = new stream();\n\n  CaptionStream$1.prototype.push = function (event) {\n    var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n    if (event.nalUnitType !== 'sei_rbsp') {\n      return;\n    } // parse the sei\n\n\n    sei = captionPacketParser.parseSei(event.escapedRBSP); // no payload data, skip\n\n    if (!sei.payload) {\n      return;\n    } // ignore everything but user_data_registered_itu_t_t35\n\n\n    if (sei.payloadType !== captionPacketParser.USER_DATA_REGISTERED_ITU_T_T35) {\n      return;\n    } // parse out the user data payload\n\n\n    userData = captionPacketParser.parseUserData(sei); // ignore unrecognized userData\n\n    if (!userData) {\n      return;\n    } // Sometimes, the same segment # will be downloaded twice. To stop the\n    // caption data from being processed twice, we track the latest dts we've\n    // received and ignore everything with a dts before that. However, since\n    // data for a specific dts can be split across packets on either side of\n    // a segment boundary, we need to make sure we *don't* ignore the packets\n    // from the *next* segment that have dts === this.latestDts_. By constantly\n    // tracking the number of packets received with dts === this.latestDts_, we\n    // know how many should be ignored once we start receiving duplicates.\n\n\n    if (event.dts < this.latestDts_) {\n      // We've started getting older data, so set the flag.\n      this.ignoreNextEqualDts_ = true;\n      return;\n    } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n      this.numSameDts_--;\n\n      if (!this.numSameDts_) {\n        // We've received the last duplicate packet, time to start processing again\n        this.ignoreNextEqualDts_ = false;\n      }\n\n      return;\n    } // parse out CC data packets and save them for later\n\n\n    newCaptionPackets = captionPacketParser.parseCaptionPackets(event.pts, userData);\n    this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n\n    if (this.latestDts_ !== event.dts) {\n      this.numSameDts_ = 0;\n    }\n\n    this.numSameDts_++;\n    this.latestDts_ = event.dts;\n  };\n\n  CaptionStream$1.prototype.flushCCStreams = function (flushType) {\n    this.ccStreams_.forEach(function (cc) {\n      return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n    }, this);\n  };\n\n  CaptionStream$1.prototype.flushStream = function (flushType) {\n    // make sure we actually parsed captions before proceeding\n    if (!this.captionPackets_.length) {\n      this.flushCCStreams(flushType);\n      return;\n    } // In Chrome, the Array#sort function is not stable so add a\n    // presortIndex that we can use to ensure we get a stable-sort\n\n\n    this.captionPackets_.forEach(function (elem, idx) {\n      elem.presortIndex = idx;\n    }); // sort caption byte-pairs based on their PTS values\n\n    this.captionPackets_.sort(function (a, b) {\n      if (a.pts === b.pts) {\n        return a.presortIndex - b.presortIndex;\n      }\n\n      return a.pts - b.pts;\n    });\n    this.captionPackets_.forEach(function (packet) {\n      if (packet.type < 2) {\n        // Dispatch packet to the right Cea608Stream\n        this.dispatchCea608Packet(packet);\n      } else {\n        // Dispatch packet to the Cea708Stream\n        this.dispatchCea708Packet(packet);\n      }\n    }, this);\n    this.captionPackets_.length = 0;\n    this.flushCCStreams(flushType);\n  };\n\n  CaptionStream$1.prototype.flush = function () {\n    return this.flushStream('flush');\n  }; // Only called if handling partial data\n\n\n  CaptionStream$1.prototype.partialFlush = function () {\n    return this.flushStream('partialFlush');\n  };\n\n  CaptionStream$1.prototype.reset = function () {\n    this.latestDts_ = null;\n    this.ignoreNextEqualDts_ = false;\n    this.numSameDts_ = 0;\n    this.activeCea608Channel_ = [null, null];\n    this.ccStreams_.forEach(function (ccStream) {\n      ccStream.reset();\n    });\n  }; // From the CEA-608 spec:\n\n  /*\n   * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n   * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n   * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n   * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n   * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n   * to switch to captioning or Text.\n  */\n  // With that in mind, we ignore any data between an XDS control code and a\n  // subsequent closed-captioning control code.\n\n\n  CaptionStream$1.prototype.dispatchCea608Packet = function (packet) {\n    // NOTE: packet.type is the CEA608 field\n    if (this.setsTextOrXDSActive(packet)) {\n      this.activeCea608Channel_[packet.type] = null;\n    } else if (this.setsChannel1Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 0;\n    } else if (this.setsChannel2Active(packet)) {\n      this.activeCea608Channel_[packet.type] = 1;\n    }\n\n    if (this.activeCea608Channel_[packet.type] === null) {\n      // If we haven't received anything to set the active channel, or the\n      // packets are Text/XDS data, discard the data; we don't want jumbled\n      // captions\n      return;\n    }\n\n    this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n  };\n\n  CaptionStream$1.prototype.setsChannel1Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1000;\n  };\n\n  CaptionStream$1.prototype.setsChannel2Active = function (packet) {\n    return (packet.ccData & 0x7800) === 0x1800;\n  };\n\n  CaptionStream$1.prototype.setsTextOrXDSActive = function (packet) {\n    return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n  };\n\n  CaptionStream$1.prototype.dispatchCea708Packet = function (packet) {\n    if (this.parse708captions_) {\n      this.cc708Stream_.push(packet);\n    }\n  }; // ----------------------\n  // Session to Application\n  // ----------------------\n  // This hash maps special and extended character codes to their\n  // proper Unicode equivalent. The first one-byte key is just a\n  // non-standard character code. The two-byte keys that follow are\n  // the extended CEA708 character codes, along with the preceding\n  // 0x10 extended character byte to distinguish these codes from\n  // non-extended character codes. Every CEA708 character code that\n  // is not in this object maps directly to a standard unicode\n  // character code.\n  // The transparent space and non-breaking transparent space are\n  // technically not fully supported since there is no code to\n  // make them transparent, so they have normal non-transparent\n  // stand-ins.\n  // The special closed caption (CC) character isn't a standard\n  // unicode character, so a fairly similar unicode character was\n  // chosen in it's place.\n\n\n  var CHARACTER_TRANSLATION_708 = {\n    0x7f: 0x266a,\n    // ♪\n    0x1020: 0x20,\n    // Transparent Space\n    0x1021: 0xa0,\n    // Nob-breaking Transparent Space\n    0x1025: 0x2026,\n    // …\n    0x102a: 0x0160,\n    // Š\n    0x102c: 0x0152,\n    // Œ\n    0x1030: 0x2588,\n    // █\n    0x1031: 0x2018,\n    // ‘\n    0x1032: 0x2019,\n    // ’\n    0x1033: 0x201c,\n    // “\n    0x1034: 0x201d,\n    // ”\n    0x1035: 0x2022,\n    // •\n    0x1039: 0x2122,\n    // ™\n    0x103a: 0x0161,\n    // š\n    0x103c: 0x0153,\n    // œ\n    0x103d: 0x2120,\n    // ℠\n    0x103f: 0x0178,\n    // Ÿ\n    0x1076: 0x215b,\n    // ⅛\n    0x1077: 0x215c,\n    // ⅜\n    0x1078: 0x215d,\n    // ⅝\n    0x1079: 0x215e,\n    // ⅞\n    0x107a: 0x23d0,\n    // ⏐\n    0x107b: 0x23a4,\n    // ⎤\n    0x107c: 0x23a3,\n    // ⎣\n    0x107d: 0x23af,\n    // ⎯\n    0x107e: 0x23a6,\n    // ⎦\n    0x107f: 0x23a1,\n    // ⎡\n    0x10a0: 0x3138 // ㄸ (CC char)\n\n  };\n\n  var get708CharFromCode = function get708CharFromCode(code) {\n    var newCode = CHARACTER_TRANSLATION_708[code] || code;\n\n    if (code & 0x1000 && code === newCode) {\n      // Invalid extended code\n      return '';\n    }\n\n    return String.fromCharCode(newCode);\n  };\n\n  var within708TextBlock = function within708TextBlock(b) {\n    return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n  };\n\n  var Cea708Window = function Cea708Window(windowNum) {\n    this.windowNum = windowNum;\n    this.reset();\n  };\n\n  Cea708Window.prototype.reset = function () {\n    this.clearText();\n    this.pendingNewLine = false;\n    this.winAttr = {};\n    this.penAttr = {};\n    this.penLoc = {};\n    this.penColor = {}; // These default values are arbitrary,\n    // defineWindow will usually override them\n\n    this.visible = 0;\n    this.rowLock = 0;\n    this.columnLock = 0;\n    this.priority = 0;\n    this.relativePositioning = 0;\n    this.anchorVertical = 0;\n    this.anchorHorizontal = 0;\n    this.anchorPoint = 0;\n    this.rowCount = 1;\n    this.virtualRowCount = this.rowCount + 1;\n    this.columnCount = 41;\n    this.windowStyle = 0;\n    this.penStyle = 0;\n  };\n\n  Cea708Window.prototype.getText = function () {\n    return this.rows.join('\\n');\n  };\n\n  Cea708Window.prototype.clearText = function () {\n    this.rows = [''];\n    this.rowIdx = 0;\n  };\n\n  Cea708Window.prototype.newLine = function (pts) {\n    if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n      this.beforeRowOverflow(pts);\n    }\n\n    if (this.rows.length > 0) {\n      this.rows.push('');\n      this.rowIdx++;\n    } // Show all virtual rows since there's no visible scrolling\n\n\n    while (this.rows.length > this.virtualRowCount) {\n      this.rows.shift();\n      this.rowIdx--;\n    }\n  };\n\n  Cea708Window.prototype.isEmpty = function () {\n    if (this.rows.length === 0) {\n      return true;\n    } else if (this.rows.length === 1) {\n      return this.rows[0] === '';\n    }\n\n    return false;\n  };\n\n  Cea708Window.prototype.addText = function (text) {\n    this.rows[this.rowIdx] += text;\n  };\n\n  Cea708Window.prototype.backspace = function () {\n    if (!this.isEmpty()) {\n      var row = this.rows[this.rowIdx];\n      this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n    }\n  };\n\n  var Cea708Service = function Cea708Service(serviceNum, encoding, stream) {\n    this.serviceNum = serviceNum;\n    this.text = '';\n    this.currentWindow = new Cea708Window(-1);\n    this.windows = [];\n    this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n    if (typeof encoding === 'string') {\n      this.createTextDecoder(encoding);\n    }\n  };\n  /**\n   * Initialize service windows\n   * Must be run before service use\n   *\n   * @param  {Integer}  pts               PTS value\n   * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n   */\n\n\n  Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n    this.startPts = pts;\n\n    for (var win = 0; win < 8; win++) {\n      this.windows[win] = new Cea708Window(win);\n\n      if (typeof beforeRowOverflow === 'function') {\n        this.windows[win].beforeRowOverflow = beforeRowOverflow;\n      }\n    }\n  };\n  /**\n   * Set current window of service to be affected by commands\n   *\n   * @param  {Integer} windowNum Window number\n   */\n\n\n  Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n    this.currentWindow = this.windows[windowNum];\n  };\n  /**\n   * Try to create a TextDecoder if it is natively supported\n   */\n\n\n  Cea708Service.prototype.createTextDecoder = function (encoding) {\n    if (typeof TextDecoder === 'undefined') {\n      this.stream.trigger('log', {\n        level: 'warn',\n        message: 'The `encoding` option is unsupported without TextDecoder support'\n      });\n    } else {\n      try {\n        this.textDecoder_ = new TextDecoder(encoding);\n      } catch (error) {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n        });\n      }\n    }\n  };\n\n  var Cea708Stream = function Cea708Stream(options) {\n    options = options || {};\n    Cea708Stream.prototype.init.call(this);\n    var self = this;\n    var captionServices = options.captionServices || {};\n    var captionServiceEncodings = {};\n    var serviceProps; // Get service encodings from captionServices option block\n\n    Object.keys(captionServices).forEach(function (serviceName) {\n      serviceProps = captionServices[serviceName];\n\n      if (/^SERVICE/.test(serviceName)) {\n        captionServiceEncodings[serviceName] = serviceProps.encoding;\n      }\n    });\n    this.serviceEncodings = captionServiceEncodings;\n    this.current708Packet = null;\n    this.services = {};\n\n    this.push = function (packet) {\n      if (packet.type === 3) {\n        // 708 packet start\n        self.new708Packet();\n        self.add708Bytes(packet);\n      } else {\n        if (self.current708Packet === null) {\n          // This should only happen at the start of a file if there's no packet start.\n          self.new708Packet();\n        }\n\n        self.add708Bytes(packet);\n      }\n    };\n  };\n\n  Cea708Stream.prototype = new stream();\n  /**\n   * Push current 708 packet, create new 708 packet.\n   */\n\n  Cea708Stream.prototype.new708Packet = function () {\n    if (this.current708Packet !== null) {\n      this.push708Packet();\n    }\n\n    this.current708Packet = {\n      data: [],\n      ptsVals: []\n    };\n  };\n  /**\n   * Add pts and both bytes from packet into current 708 packet.\n   */\n\n\n  Cea708Stream.prototype.add708Bytes = function (packet) {\n    var data = packet.ccData;\n    var byte0 = data >>> 8;\n    var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n    // that service blocks will always line up with byte pairs.\n\n    this.current708Packet.ptsVals.push(packet.pts);\n    this.current708Packet.data.push(byte0);\n    this.current708Packet.data.push(byte1);\n  };\n  /**\n   * Parse completed 708 packet into service blocks and push each service block.\n   */\n\n\n  Cea708Stream.prototype.push708Packet = function () {\n    var packet708 = this.current708Packet;\n    var packetData = packet708.data;\n    var serviceNum = null;\n    var blockSize = null;\n    var i = 0;\n    var b = packetData[i++];\n    packet708.seq = b >> 6;\n    packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n    for (; i < packetData.length; i++) {\n      b = packetData[i++];\n      serviceNum = b >> 5;\n      blockSize = b & 0x1f; // 0b00011111\n\n      if (serviceNum === 7 && blockSize > 0) {\n        // Extended service num\n        b = packetData[i++];\n        serviceNum = b;\n      }\n\n      this.pushServiceBlock(serviceNum, i, blockSize);\n\n      if (blockSize > 0) {\n        i += blockSize - 1;\n      }\n    }\n  };\n  /**\n   * Parse service block, execute commands, read text.\n   *\n   * Note: While many of these commands serve important purposes,\n   * many others just parse out the parameters or attributes, but\n   * nothing is done with them because this is not a full and complete\n   * implementation of the entire 708 spec.\n   *\n   * @param  {Integer} serviceNum Service number\n   * @param  {Integer} start      Start index of the 708 packet data\n   * @param  {Integer} size       Block size\n   */\n\n\n  Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n    var b;\n    var i = start;\n    var packetData = this.current708Packet.data;\n    var service = this.services[serviceNum];\n\n    if (!service) {\n      service = this.initService(serviceNum, i);\n    }\n\n    for (; i < start + size && i < packetData.length; i++) {\n      b = packetData[i];\n\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service);\n      } else if (b === 0x18) {\n        i = this.multiByteCharacter(i, service);\n      } else if (b === 0x10) {\n        i = this.extendedCommands(i, service);\n      } else if (0x80 <= b && b <= 0x87) {\n        i = this.setCurrentWindow(i, service);\n      } else if (0x98 <= b && b <= 0x9f) {\n        i = this.defineWindow(i, service);\n      } else if (b === 0x88) {\n        i = this.clearWindows(i, service);\n      } else if (b === 0x8c) {\n        i = this.deleteWindows(i, service);\n      } else if (b === 0x89) {\n        i = this.displayWindows(i, service);\n      } else if (b === 0x8a) {\n        i = this.hideWindows(i, service);\n      } else if (b === 0x8b) {\n        i = this.toggleWindows(i, service);\n      } else if (b === 0x97) {\n        i = this.setWindowAttributes(i, service);\n      } else if (b === 0x90) {\n        i = this.setPenAttributes(i, service);\n      } else if (b === 0x91) {\n        i = this.setPenColor(i, service);\n      } else if (b === 0x92) {\n        i = this.setPenLocation(i, service);\n      } else if (b === 0x8f) {\n        service = this.reset(i, service);\n      } else if (b === 0x08) {\n        // BS: Backspace\n        service.currentWindow.backspace();\n      } else if (b === 0x0c) {\n        // FF: Form feed\n        service.currentWindow.clearText();\n      } else if (b === 0x0d) {\n        // CR: Carriage return\n        service.currentWindow.pendingNewLine = true;\n      } else if (b === 0x0e) {\n        // HCR: Horizontal carriage return\n        service.currentWindow.clearText();\n      } else if (b === 0x8d) {\n        // DLY: Delay, nothing to do\n        i++;\n      } else ;\n    }\n  };\n  /**\n   * Execute an extended command\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.extendedCommands = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n\n    if (within708TextBlock(b)) {\n      i = this.handleText(i, service, {\n        isExtended: true\n      });\n    }\n\n    return i;\n  };\n  /**\n   * Get PTS value of a given byte index\n   *\n   * @param  {Integer} byteIndex  Index of the byte\n   * @return {Integer}            PTS\n   */\n\n\n  Cea708Stream.prototype.getPts = function (byteIndex) {\n    // There's 1 pts value per 2 bytes\n    return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n  };\n  /**\n   * Initializes a service\n   *\n   * @param  {Integer} serviceNum Service number\n   * @return {Service}            Initialized service object\n   */\n\n\n  Cea708Stream.prototype.initService = function (serviceNum, i) {\n    var serviceName = 'SERVICE' + serviceNum;\n    var self = this;\n    var serviceName;\n    var encoding;\n\n    if (serviceName in this.serviceEncodings) {\n      encoding = this.serviceEncodings[serviceName];\n    }\n\n    this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n    this.services[serviceNum].init(this.getPts(i), function (pts) {\n      self.flushDisplayed(pts, self.services[serviceNum]);\n    });\n    return this.services[serviceNum];\n  };\n  /**\n   * Execute text writing to current window\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.handleText = function (i, service, options) {\n    var isExtended = options && options.isExtended;\n    var isMultiByte = options && options.isMultiByte;\n    var packetData = this.current708Packet.data;\n    var extended = isExtended ? 0x1000 : 0x0000;\n    var currentByte = packetData[i];\n    var nextByte = packetData[i + 1];\n    var win = service.currentWindow;\n\n    var _char;\n\n    var charCodeArray; // Use the TextDecoder if one was created for this service\n\n    if (service.textDecoder_ && !isExtended) {\n      if (isMultiByte) {\n        charCodeArray = [currentByte, nextByte];\n        i++;\n      } else {\n        charCodeArray = [currentByte];\n      }\n\n      _char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n    } else {\n      _char = get708CharFromCode(extended | currentByte);\n    }\n\n    if (win.pendingNewLine && !win.isEmpty()) {\n      win.newLine(this.getPts(i));\n    }\n\n    win.pendingNewLine = false;\n    win.addText(_char);\n    return i;\n  };\n  /**\n   * Handle decoding of multibyte character\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var firstByte = packetData[i + 1];\n    var secondByte = packetData[i + 2];\n\n    if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n      i = this.handleText(++i, service, {\n        isMultiByte: true\n      });\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the CW# command.\n   *\n   * Set the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    return i;\n  };\n  /**\n   * Parse and execute the DF# command.\n   *\n   * Define a window and set it as the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.defineWindow = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var windowNum = b & 0x07;\n    service.setCurrentWindow(windowNum);\n    var win = service.currentWindow;\n    b = packetData[++i];\n    win.visible = (b & 0x20) >> 5; // v\n\n    win.rowLock = (b & 0x10) >> 4; // rl\n\n    win.columnLock = (b & 0x08) >> 3; // cl\n\n    win.priority = b & 0x07; // p\n\n    b = packetData[++i];\n    win.relativePositioning = (b & 0x80) >> 7; // rp\n\n    win.anchorVertical = b & 0x7f; // av\n\n    b = packetData[++i];\n    win.anchorHorizontal = b; // ah\n\n    b = packetData[++i];\n    win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n    win.rowCount = b & 0x0f; // rc\n\n    b = packetData[++i];\n    win.columnCount = b & 0x3f; // cc\n\n    b = packetData[++i];\n    win.windowStyle = (b & 0x38) >> 3; // ws\n\n    win.penStyle = b & 0x07; // ps\n    // The spec says there are (rowCount+1) \"virtual rows\"\n\n    win.virtualRowCount = win.rowCount + 1;\n    return i;\n  };\n  /**\n   * Parse and execute the SWA command.\n   *\n   * Set attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var winAttr = service.currentWindow.winAttr;\n    b = packetData[++i];\n    winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n    winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n    winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n    winAttr.fillBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n    winAttr.borderRed = (b & 0x30) >> 4; // br\n\n    winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n    winAttr.borderBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    winAttr.borderType += (b & 0x80) >> 5; // bt\n\n    winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n    winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n    winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n    winAttr.justify = b & 0x03; // j\n\n    b = packetData[++i];\n    winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n    winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n    winAttr.displayEffect = b & 0x03; // de\n\n    return i;\n  };\n  /**\n   * Gather text from all displayed windows and push a caption to output.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   */\n\n\n  Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n    var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n    // display text in the correct order, but sample files so far have not shown any issue.\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n        displayedText.push(service.windows[winId].getText());\n      }\n    }\n\n    service.endPts = pts;\n    service.text = displayedText.join('\\n\\n');\n    this.pushCaption(service);\n    service.startPts = pts;\n  };\n  /**\n   * Push a caption to output if the caption contains text.\n   *\n   * @param  {Service} service  The service object to be affected\n   */\n\n\n  Cea708Stream.prototype.pushCaption = function (service) {\n    if (service.text !== '') {\n      this.trigger('data', {\n        startPts: service.startPts,\n        endPts: service.endPts,\n        text: service.text,\n        stream: 'cc708_' + service.serviceNum\n      });\n      service.text = '';\n      service.startPts = service.endPts;\n    }\n  };\n  /**\n   * Parse and execute the DSW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.displayWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 1;\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the HDW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.hideWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible = 0;\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the TGW command.\n   *\n   * Set visible property of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.toggleWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].visible ^= 1;\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the CLW command.\n   *\n   * Clear text of windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.clearWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].clearText();\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the DLW command.\n   *\n   * Re-initialize windows based on the parsed bitmask.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.deleteWindows = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[++i];\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n\n    for (var winId = 0; winId < 8; winId++) {\n      if (b & 0x01 << winId) {\n        service.windows[winId].reset();\n      }\n    }\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPA command.\n   *\n   * Set pen attributes of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setPenAttributes = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penAttr = service.currentWindow.penAttr;\n    b = packetData[++i];\n    penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n    penAttr.offset = (b & 0x0c) >> 2; // o\n\n    penAttr.penSize = b & 0x03; // s\n\n    b = packetData[++i];\n    penAttr.italics = (b & 0x80) >> 7; // i\n\n    penAttr.underline = (b & 0x40) >> 6; // u\n\n    penAttr.edgeType = (b & 0x38) >> 3; // et\n\n    penAttr.fontStyle = b & 0x07; // fs\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPC command.\n   *\n   * Set pen color of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setPenColor = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penColor = service.currentWindow.penColor;\n    b = packetData[++i];\n    penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n    penColor.fgRed = (b & 0x30) >> 4; // fr\n\n    penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n    penColor.fgBlue = b & 0x03; // fb\n\n    b = packetData[++i];\n    penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n    penColor.bgRed = (b & 0x30) >> 4; // br\n\n    penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n    penColor.bgBlue = b & 0x03; // bb\n\n    b = packetData[++i];\n    penColor.edgeRed = (b & 0x30) >> 4; // er\n\n    penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n    penColor.edgeBlue = b & 0x03; // eb\n\n    return i;\n  };\n  /**\n   * Parse and execute the SPL command.\n   *\n   * Set pen location of the current window.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Integer}          New index after parsing\n   */\n\n\n  Cea708Stream.prototype.setPenLocation = function (i, service) {\n    var packetData = this.current708Packet.data;\n    var b = packetData[i];\n    var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n    service.currentWindow.pendingNewLine = true;\n    b = packetData[++i];\n    penLoc.row = b & 0x0f; // r\n\n    b = packetData[++i];\n    penLoc.column = b & 0x3f; // c\n\n    return i;\n  };\n  /**\n   * Execute the RST command.\n   *\n   * Reset service to a clean slate. Re-initialize.\n   *\n   * @param  {Integer} i        Current index in the 708 packet\n   * @param  {Service} service  The service object to be affected\n   * @return {Service}          Re-initialized service\n   */\n\n\n  Cea708Stream.prototype.reset = function (i, service) {\n    var pts = this.getPts(i);\n    this.flushDisplayed(pts, service);\n    return this.initService(service.serviceNum, i);\n  }; // This hash maps non-ASCII, special, and extended character codes to their\n  // proper Unicode equivalent. The first keys that are only a single byte\n  // are the non-standard ASCII characters, which simply map the CEA608 byte\n  // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n  // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n  // can be performed regardless of the field and data channel on which the\n  // character code was received.\n\n\n  var CHARACTER_TRANSLATION = {\n    0x2a: 0xe1,\n    // á\n    0x5c: 0xe9,\n    // é\n    0x5e: 0xed,\n    // í\n    0x5f: 0xf3,\n    // ó\n    0x60: 0xfa,\n    // ú\n    0x7b: 0xe7,\n    // ç\n    0x7c: 0xf7,\n    // ÷\n    0x7d: 0xd1,\n    // Ñ\n    0x7e: 0xf1,\n    // ñ\n    0x7f: 0x2588,\n    // █\n    0x0130: 0xae,\n    // ®\n    0x0131: 0xb0,\n    // °\n    0x0132: 0xbd,\n    // ½\n    0x0133: 0xbf,\n    // ¿\n    0x0134: 0x2122,\n    // ™\n    0x0135: 0xa2,\n    // ¢\n    0x0136: 0xa3,\n    // £\n    0x0137: 0x266a,\n    // ♪\n    0x0138: 0xe0,\n    // à\n    0x0139: 0xa0,\n    //\n    0x013a: 0xe8,\n    // è\n    0x013b: 0xe2,\n    // â\n    0x013c: 0xea,\n    // ê\n    0x013d: 0xee,\n    // î\n    0x013e: 0xf4,\n    // ô\n    0x013f: 0xfb,\n    // û\n    0x0220: 0xc1,\n    // Á\n    0x0221: 0xc9,\n    // É\n    0x0222: 0xd3,\n    // Ó\n    0x0223: 0xda,\n    // Ú\n    0x0224: 0xdc,\n    // Ü\n    0x0225: 0xfc,\n    // ü\n    0x0226: 0x2018,\n    // ‘\n    0x0227: 0xa1,\n    // ¡\n    0x0228: 0x2a,\n    // *\n    0x0229: 0x27,\n    // '\n    0x022a: 0x2014,\n    // —\n    0x022b: 0xa9,\n    // ©\n    0x022c: 0x2120,\n    // ℠\n    0x022d: 0x2022,\n    // •\n    0x022e: 0x201c,\n    // “\n    0x022f: 0x201d,\n    // ”\n    0x0230: 0xc0,\n    // À\n    0x0231: 0xc2,\n    // Â\n    0x0232: 0xc7,\n    // Ç\n    0x0233: 0xc8,\n    // È\n    0x0234: 0xca,\n    // Ê\n    0x0235: 0xcb,\n    // Ë\n    0x0236: 0xeb,\n    // ë\n    0x0237: 0xce,\n    // Î\n    0x0238: 0xcf,\n    // Ï\n    0x0239: 0xef,\n    // ï\n    0x023a: 0xd4,\n    // Ô\n    0x023b: 0xd9,\n    // Ù\n    0x023c: 0xf9,\n    // ù\n    0x023d: 0xdb,\n    // Û\n    0x023e: 0xab,\n    // «\n    0x023f: 0xbb,\n    // »\n    0x0320: 0xc3,\n    // Ã\n    0x0321: 0xe3,\n    // ã\n    0x0322: 0xcd,\n    // Í\n    0x0323: 0xcc,\n    // Ì\n    0x0324: 0xec,\n    // ì\n    0x0325: 0xd2,\n    // Ò\n    0x0326: 0xf2,\n    // ò\n    0x0327: 0xd5,\n    // Õ\n    0x0328: 0xf5,\n    // õ\n    0x0329: 0x7b,\n    // {\n    0x032a: 0x7d,\n    // }\n    0x032b: 0x5c,\n    // \\\n    0x032c: 0x5e,\n    // ^\n    0x032d: 0x5f,\n    // _\n    0x032e: 0x7c,\n    // |\n    0x032f: 0x7e,\n    // ~\n    0x0330: 0xc4,\n    // Ä\n    0x0331: 0xe4,\n    // ä\n    0x0332: 0xd6,\n    // Ö\n    0x0333: 0xf6,\n    // ö\n    0x0334: 0xdf,\n    // ß\n    0x0335: 0xa5,\n    // ¥\n    0x0336: 0xa4,\n    // ¤\n    0x0337: 0x2502,\n    // │\n    0x0338: 0xc5,\n    // Å\n    0x0339: 0xe5,\n    // å\n    0x033a: 0xd8,\n    // Ø\n    0x033b: 0xf8,\n    // ø\n    0x033c: 0x250c,\n    // ┌\n    0x033d: 0x2510,\n    // ┐\n    0x033e: 0x2514,\n    // └\n    0x033f: 0x2518 // ┘\n\n  };\n\n  var getCharFromCode = function getCharFromCode(code) {\n    if (code === null) {\n      return '';\n    }\n\n    code = CHARACTER_TRANSLATION[code] || code;\n    return String.fromCharCode(code);\n  }; // the index of the last row in a CEA-608 display buffer\n\n\n  var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n  // getting it through bit logic.\n\n  var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n  // cells. The \"bottom\" row is the last element in the outer array.\n\n  var createDisplayBuffer = function createDisplayBuffer() {\n    var result = [],\n        i = BOTTOM_ROW + 1;\n\n    while (i--) {\n      result.push('');\n    }\n\n    return result;\n  };\n\n  var Cea608Stream = function Cea608Stream(field, dataChannel) {\n    Cea608Stream.prototype.init.call(this);\n    this.field_ = field || 0;\n    this.dataChannel_ = dataChannel || 0;\n    this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n    this.setConstants();\n    this.reset();\n\n    this.push = function (packet) {\n      var data, swap, char0, char1, text; // remove the parity bits\n\n      data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n      if (data === this.lastControlCode_) {\n        this.lastControlCode_ = null;\n        return;\n      } // Store control codes\n\n\n      if ((data & 0xf000) === 0x1000) {\n        this.lastControlCode_ = data;\n      } else if (data !== this.PADDING_) {\n        this.lastControlCode_ = null;\n      }\n\n      char0 = data >>> 8;\n      char1 = data & 0xff;\n\n      if (data === this.PADDING_) {\n        return;\n      } else if (data === this.RESUME_CAPTION_LOADING_) {\n        this.mode_ = 'popOn';\n      } else if (data === this.END_OF_CAPTION_) {\n        // If an EOC is received while in paint-on mode, the displayed caption\n        // text should be swapped to non-displayed memory as if it was a pop-on\n        // caption. Because of that, we should explicitly switch back to pop-on\n        // mode\n        this.mode_ = 'popOn';\n        this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n        this.flushDisplayed(packet.pts); // flip memory\n\n        swap = this.displayed_;\n        this.displayed_ = this.nonDisplayed_;\n        this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n        this.startPts_ = packet.pts;\n      } else if (data === this.ROLL_UP_2_ROWS_) {\n        this.rollUpRows_ = 2;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_3_ROWS_) {\n        this.rollUpRows_ = 3;\n        this.setRollUp(packet.pts);\n      } else if (data === this.ROLL_UP_4_ROWS_) {\n        this.rollUpRows_ = 4;\n        this.setRollUp(packet.pts);\n      } else if (data === this.CARRIAGE_RETURN_) {\n        this.clearFormatting(packet.pts);\n        this.flushDisplayed(packet.pts);\n        this.shiftRowsUp_();\n        this.startPts_ = packet.pts;\n      } else if (data === this.BACKSPACE_) {\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        }\n      } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n        this.flushDisplayed(packet.pts);\n        this.displayed_ = createDisplayBuffer();\n      } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n        this.nonDisplayed_ = createDisplayBuffer();\n      } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n        if (this.mode_ !== 'paintOn') {\n          // NOTE: This should be removed when proper caption positioning is\n          // implemented\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        }\n\n        this.mode_ = 'paintOn';\n        this.startPts_ = packet.pts; // Append special characters to caption text\n      } else if (this.isSpecialCharacter(char0, char1)) {\n        // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Append extended characters to caption text\n      } else if (this.isExtCharacter(char0, char1)) {\n        // Extended characters always follow their \"non-extended\" equivalents.\n        // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n        // decoders are supposed to drop the \"è\", while compliant decoders\n        // backspace the \"e\" and insert \"è\".\n        // Delete the previous character\n        if (this.mode_ === 'popOn') {\n          this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n        } else {\n          this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n        } // Bitmask char0 so that we can apply character transformations\n        // regardless of field and data channel.\n        // Then byte-shift to the left and OR with char1 so we can pass the\n        // entire character code to `getCharFromCode`.\n\n\n        char0 = (char0 & 0x03) << 8;\n        text = getCharFromCode(char0 | char1);\n        this[this.mode_](packet.pts, text);\n        this.column_++; // Process mid-row codes\n      } else if (this.isMidRowCode(char0, char1)) {\n        // Attributes are not additive, so clear all formatting\n        this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n        // should be replaced with spaces, so add one now\n\n        this[this.mode_](packet.pts, ' ');\n        this.column_++;\n\n        if ((char1 & 0xe) === 0xe) {\n          this.addFormatting(packet.pts, ['i']);\n        }\n\n        if ((char1 & 0x1) === 0x1) {\n          this.addFormatting(packet.pts, ['u']);\n        } // Detect offset control codes and adjust cursor\n\n      } else if (this.isOffsetControlCode(char0, char1)) {\n        // Cursor position is set by indent PAC (see below) in 4-column\n        // increments, with an additional offset code of 1-3 to reach any\n        // of the 32 columns specified by CEA-608. So all we need to do\n        // here is increment the column cursor by the given offset.\n        this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n      } else if (this.isPAC(char0, char1)) {\n        // There's no logic for PAC -> row mapping, so we have to just\n        // find the row code in an array and use its index :(\n        var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n        if (this.mode_ === 'rollUp') {\n          // This implies that the base row is incorrectly set.\n          // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n          // of roll-up rows set.\n          if (row - this.rollUpRows_ + 1 < 0) {\n            row = this.rollUpRows_ - 1;\n          }\n\n          this.setRollUp(packet.pts, row);\n        }\n\n        if (row !== this.row_) {\n          // formatting is only persistent for current row\n          this.clearFormatting(packet.pts);\n          this.row_ = row;\n        } // All PACs can apply underline, so detect and apply\n        // (All odd-numbered second bytes set underline)\n\n\n        if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n          this.addFormatting(packet.pts, ['u']);\n        }\n\n        if ((data & 0x10) === 0x10) {\n          // We've got an indent level code. Each successive even number\n          // increments the column cursor by 4, so we can get the desired\n          // column position by bit-shifting to the right (to get n/2)\n          // and multiplying by 4.\n          this.column_ = ((data & 0xe) >> 1) * 4;\n        }\n\n        if (this.isColorPAC(char1)) {\n          // it's a color code, though we only support white, which\n          // can be either normal or italicized. white italics can be\n          // either 0x4e or 0x6e depending on the row, so we just\n          // bitwise-and with 0xe to see if italics should be turned on\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n        } // We have a normal character in char0, and possibly one in char1\n\n      } else if (this.isNormalChar(char0)) {\n        if (char1 === 0x00) {\n          char1 = null;\n        }\n\n        text = getCharFromCode(char0);\n        text += getCharFromCode(char1);\n        this[this.mode_](packet.pts, text);\n        this.column_ += text.length;\n      } // finish data processing\n\n    };\n  };\n\n  Cea608Stream.prototype = new stream(); // Trigger a cue point that captures the current state of the\n  // display buffer\n\n  Cea608Stream.prototype.flushDisplayed = function (pts) {\n    var content = this.displayed_ // remove spaces from the start and end of the string\n    .map(function (row, index) {\n      try {\n        return row.trim();\n      } catch (e) {\n        // Ordinarily, this shouldn't happen. However, caption\n        // parsing errors should not throw exceptions and\n        // break playback.\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping a malformed 608 caption at index ' + index + '.'\n        });\n        return '';\n      }\n    }, this) // combine all text rows to display in one cue\n    .join('\\n') // and remove blank rows from the start and end, but not the middle\n    .replace(/^\\n+|\\n+$/g, '');\n\n    if (content.length) {\n      this.trigger('data', {\n        startPts: this.startPts_,\n        endPts: pts,\n        text: content,\n        stream: this.name_\n      });\n    }\n  };\n  /**\n   * Zero out the data, used for startup and on seek\n   */\n\n\n  Cea608Stream.prototype.reset = function () {\n    this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n    // actually display captions. If a caption is shifted to a row\n    // with a lower index than this, it is cleared from the display\n    // buffer\n\n    this.topRow_ = 0;\n    this.startPts_ = 0;\n    this.displayed_ = createDisplayBuffer();\n    this.nonDisplayed_ = createDisplayBuffer();\n    this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n    this.column_ = 0;\n    this.row_ = BOTTOM_ROW;\n    this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n    this.formatting_ = [];\n  };\n  /**\n   * Sets up control code and related constants for this instance\n   */\n\n\n  Cea608Stream.prototype.setConstants = function () {\n    // The following attributes have these uses:\n    // ext_ :    char0 for mid-row codes, and the base for extended\n    //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n    //           extended codes)\n    // control_: char0 for control codes, except byte-shifted to the\n    //           left so that we can do this.control_ | CONTROL_CODE\n    // offset_:  char0 for tab offset codes\n    //\n    // It's also worth noting that control codes, and _only_ control codes,\n    // differ between field 1 and field2. Field 2 control codes are always\n    // their field 1 value plus 1. That's why there's the \"| field\" on the\n    // control value.\n    if (this.dataChannel_ === 0) {\n      this.BASE_ = 0x10;\n      this.EXT_ = 0x11;\n      this.CONTROL_ = (0x14 | this.field_) << 8;\n      this.OFFSET_ = 0x17;\n    } else if (this.dataChannel_ === 1) {\n      this.BASE_ = 0x18;\n      this.EXT_ = 0x19;\n      this.CONTROL_ = (0x1c | this.field_) << 8;\n      this.OFFSET_ = 0x1f;\n    } // Constants for the LSByte command codes recognized by Cea608Stream. This\n    // list is not exhaustive. For a more comprehensive listing and semantics see\n    // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n    // Padding\n\n\n    this.PADDING_ = 0x0000; // Pop-on Mode\n\n    this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n    this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n    this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n    this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n    this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n    this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n    this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n    this.BACKSPACE_ = this.CONTROL_ | 0x21;\n    this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n    this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n  };\n  /**\n   * Detects if the 2-byte packet data is a special character\n   *\n   * Special characters have a second byte in the range 0x30 to 0x3f,\n   * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an special character\n   */\n\n\n  Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet data is an extended character\n   *\n   * Extended characters have a second byte in the range 0x20 to 0x3f,\n   * with the first byte being 0x12 or 0x13 (for data channel 1) or\n   * 0x1a or 0x1b (for data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an extended character\n   */\n\n\n  Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n    return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n  };\n  /**\n   * Detects if the 2-byte packet is a mid-row code\n   *\n   * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n   * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n   * channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a mid-row code\n   */\n\n\n  Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n    return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n  };\n  /**\n   * Detects if the 2-byte packet is an offset control code\n   *\n   * Offset control codes have a second byte in the range 0x21 to 0x23,\n   * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n   * data channel 2).\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are an offset control code\n   */\n\n\n  Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n    return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n  };\n  /**\n   * Detects if the 2-byte packet is a Preamble Address Code\n   *\n   * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n   * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n   * range 0x40 to 0x7f.\n   *\n   * @param  {Integer} char0 The first byte\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the 2 bytes are a PAC\n   */\n\n\n  Cea608Stream.prototype.isPAC = function (char0, char1) {\n    return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a packet's second byte is in the range of a PAC color code\n   *\n   * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n   * 0x60 to 0x6f.\n   *\n   * @param  {Integer} char1 The second byte\n   * @return {Boolean}       Whether the byte is a color PAC\n   */\n\n\n  Cea608Stream.prototype.isColorPAC = function (char1) {\n    return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n  };\n  /**\n   * Detects if a single byte is in the range of a normal character\n   *\n   * Normal text bytes are in the range 0x20 to 0x7f.\n   *\n   * @param  {Integer} char  The byte\n   * @return {Boolean}       Whether the byte is a normal character\n   */\n\n\n  Cea608Stream.prototype.isNormalChar = function (_char2) {\n    return _char2 >= 0x20 && _char2 <= 0x7f;\n  };\n  /**\n   * Configures roll-up\n   *\n   * @param  {Integer} pts         Current PTS\n   * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n   *                               a new position\n   */\n\n\n  Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n    // Reset the base row to the bottom row when switching modes\n    if (this.mode_ !== 'rollUp') {\n      this.row_ = BOTTOM_ROW;\n      this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n      this.flushDisplayed(pts);\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.displayed_ = createDisplayBuffer();\n    }\n\n    if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n      // move currently displayed captions (up or down) to the new base row\n      for (var i = 0; i < this.rollUpRows_; i++) {\n        this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n        this.displayed_[this.row_ - i] = '';\n      }\n    }\n\n    if (newBaseRow === undefined) {\n      newBaseRow = this.row_;\n    }\n\n    this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n  }; // Adds the opening HTML tag for the passed character to the caption text,\n  // and keeps track of it for later closing\n\n\n  Cea608Stream.prototype.addFormatting = function (pts, format) {\n    this.formatting_ = this.formatting_.concat(format);\n    var text = format.reduce(function (text, format) {\n      return text + '<' + format + '>';\n    }, '');\n    this[this.mode_](pts, text);\n  }; // Adds HTML closing tags for current formatting to caption text and\n  // clears remembered formatting\n\n\n  Cea608Stream.prototype.clearFormatting = function (pts) {\n    if (!this.formatting_.length) {\n      return;\n    }\n\n    var text = this.formatting_.reverse().reduce(function (text, format) {\n      return text + '</' + format + '>';\n    }, '');\n    this.formatting_ = [];\n    this[this.mode_](pts, text);\n  }; // Mode Implementations\n\n\n  Cea608Stream.prototype.popOn = function (pts, text) {\n    var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n    baseRow += text;\n    this.nonDisplayed_[this.row_] = baseRow;\n  };\n\n  Cea608Stream.prototype.rollUp = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  };\n\n  Cea608Stream.prototype.shiftRowsUp_ = function () {\n    var i; // clear out inactive rows\n\n    for (i = 0; i < this.topRow_; i++) {\n      this.displayed_[i] = '';\n    }\n\n    for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n      this.displayed_[i] = '';\n    } // shift displayed rows up\n\n\n    for (i = this.topRow_; i < this.row_; i++) {\n      this.displayed_[i] = this.displayed_[i + 1];\n    } // clear out the bottom row\n\n\n    this.displayed_[this.row_] = '';\n  };\n\n  Cea608Stream.prototype.paintOn = function (pts, text) {\n    var baseRow = this.displayed_[this.row_];\n    baseRow += text;\n    this.displayed_[this.row_] = baseRow;\n  }; // exports\n\n\n  var captionStream = {\n    CaptionStream: CaptionStream$1,\n    Cea608Stream: Cea608Stream,\n    Cea708Stream: Cea708Stream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var streamTypes = {\n    H264_STREAM_TYPE: 0x1B,\n    ADTS_STREAM_TYPE: 0x0F,\n    METADATA_STREAM_TYPE: 0x15\n  };\n  var MAX_TS = 8589934592;\n  var RO_THRESH = 4294967296;\n  var TYPE_SHARED = 'shared';\n\n  var handleRollover$1 = function handleRollover(value, reference) {\n    var direction = 1;\n\n    if (value > reference) {\n      // If the current timestamp value is greater than our reference timestamp and we detect a\n      // timestamp rollover, this means the roll over is happening in the opposite direction.\n      // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n      // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n      // rollover point. In loading this segment, the timestamp values will be very large,\n      // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n      // the time stamp to be `value - 2^33`.\n      direction = -1;\n    } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n    // cause an incorrect adjustment.\n\n\n    while (Math.abs(reference - value) > RO_THRESH) {\n      value += direction * MAX_TS;\n    }\n\n    return value;\n  };\n\n  var TimestampRolloverStream$1 = function TimestampRolloverStream(type) {\n    var lastDTS, referenceDTS;\n    TimestampRolloverStream.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n    // video and audio. We could use `undefined` here, but having a string\n    // makes debugging a little clearer.\n\n    this.type_ = type || TYPE_SHARED;\n\n    this.push = function (data) {\n      // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n      // streams will only accept data that matches their type.\n      if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n        return;\n      }\n\n      if (referenceDTS === undefined) {\n        referenceDTS = data.dts;\n      }\n\n      data.dts = handleRollover$1(data.dts, referenceDTS);\n      data.pts = handleRollover$1(data.pts, referenceDTS);\n      lastDTS = data.dts;\n      this.trigger('data', data);\n    };\n\n    this.flush = function () {\n      referenceDTS = lastDTS;\n      this.trigger('done');\n    };\n\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n\n    this.discontinuity = function () {\n      referenceDTS = void 0;\n      lastDTS = void 0;\n    };\n\n    this.reset = function () {\n      this.discontinuity();\n      this.trigger('reset');\n    };\n  };\n\n  TimestampRolloverStream$1.prototype = new stream();\n  var timestampRolloverStream = {\n    TimestampRolloverStream: TimestampRolloverStream$1,\n    handleRollover: handleRollover$1\n  };\n\n  var percentEncode$1 = function percentEncode(bytes, start, end) {\n    var i,\n        result = '';\n\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n\n    return result;\n  },\n      // return the string representation of the specified byte range,\n  // interpreted as UTf-8.\n  parseUtf8 = function parseUtf8(bytes, start, end) {\n    return decodeURIComponent(percentEncode$1(bytes, start, end));\n  },\n      // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n  parseIso88591$1 = function parseIso88591(bytes, start, end) {\n    return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n  },\n      parseSyncSafeInteger$1 = function parseSyncSafeInteger(data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  },\n      tagParsers = {\n    TXXX: function TXXX(tag) {\n      var i;\n\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the text fields\n          tag.description = parseUtf8(tag.data, 1, i); // do not include the null terminator in the tag value\n\n          tag.value = parseUtf8(tag.data, i + 1, tag.data.length).replace(/\\0*$/, '');\n          break;\n        }\n      }\n\n      tag.data = tag.value;\n    },\n    WXXX: function WXXX(tag) {\n      var i;\n\n      if (tag.data[0] !== 3) {\n        // ignore frames with unrecognized character encodings\n        return;\n      }\n\n      for (i = 1; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.description = parseUtf8(tag.data, 1, i);\n          tag.url = parseUtf8(tag.data, i + 1, tag.data.length);\n          break;\n        }\n      }\n    },\n    PRIV: function PRIV(tag) {\n      var i;\n\n      for (i = 0; i < tag.data.length; i++) {\n        if (tag.data[i] === 0) {\n          // parse the description and URL fields\n          tag.owner = parseIso88591$1(tag.data, 0, i);\n          break;\n        }\n      }\n\n      tag.privateData = tag.data.subarray(i + 1);\n      tag.data = tag.privateData;\n    }\n  },\n      _MetadataStream;\n\n  _MetadataStream = function MetadataStream(options) {\n    var settings = {\n      // the bytes of the program-level descriptor field in MP2T\n      // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n      // program element descriptors\"\n      descriptor: options && options.descriptor\n    },\n        // the total size in bytes of the ID3 tag being parsed\n    tagSize = 0,\n        // tag data that is not complete enough to be parsed\n    buffer = [],\n        // the total number of bytes currently in the buffer\n    bufferSize = 0,\n        i;\n\n    _MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n    // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n\n    this.dispatchType = streamTypes.METADATA_STREAM_TYPE.toString(16);\n\n    if (settings.descriptor) {\n      for (i = 0; i < settings.descriptor.length; i++) {\n        this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n      }\n    }\n\n    this.push = function (chunk) {\n      var tag, frameStart, frameSize, frame, i, frameHeader;\n\n      if (chunk.type !== 'timed-metadata') {\n        return;\n      } // if data_alignment_indicator is set in the PES header,\n      // we must have the start of a new ID3 tag. Assume anything\n      // remaining in the buffer was malformed and throw it out\n\n\n      if (chunk.dataAlignmentIndicator) {\n        bufferSize = 0;\n        buffer.length = 0;\n      } // ignore events that don't look like ID3 data\n\n\n      if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n        this.trigger('log', {\n          level: 'warn',\n          message: 'Skipping unrecognized metadata packet'\n        });\n        return;\n      } // add this chunk to the data we've collected so far\n\n\n      buffer.push(chunk);\n      bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n      if (buffer.length === 1) {\n        // the frame size is transmitted as a 28-bit integer in the\n        // last four bytes of the ID3 header.\n        // The most significant bit of each byte is dropped and the\n        // results concatenated to recover the actual value.\n        tagSize = parseSyncSafeInteger$1(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n        // convenient for our comparisons to include it\n\n        tagSize += 10;\n      } // if the entire frame has not arrived, wait for more data\n\n\n      if (bufferSize < tagSize) {\n        return;\n      } // collect the entire frame so it can be parsed\n\n\n      tag = {\n        data: new Uint8Array(tagSize),\n        frames: [],\n        pts: buffer[0].pts,\n        dts: buffer[0].dts\n      };\n\n      for (i = 0; i < tagSize;) {\n        tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n        i += buffer[0].data.byteLength;\n        bufferSize -= buffer[0].data.byteLength;\n        buffer.shift();\n      } // find the start of the first frame and the end of the tag\n\n\n      frameStart = 10;\n\n      if (tag.data[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger$1(tag.data.subarray(10, 14)); // clip any padding off the end\n\n        tagSize -= parseSyncSafeInteger$1(tag.data.subarray(16, 20));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger$1(tag.data.subarray(frameStart + 4, frameStart + 8));\n\n        if (frameSize < 1) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Malformed ID3 frame encountered. Skipping metadata parsing.'\n          });\n          return;\n        }\n\n        frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n        frame = {\n          id: frameHeader,\n          data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n        };\n        frame.key = frame.id;\n\n        if (tagParsers[frame.id]) {\n          tagParsers[frame.id](frame); // handle the special PRIV frame used to indicate the start\n          // time for raw AAC data\n\n          if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.data,\n                size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n            size *= 4;\n            size += d[7] & 0x03;\n            frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n            // on the value of this frame\n            // we couldn't have known the appropriate pts and dts before\n            // parsing this ID3 tag so set those values now\n\n            if (tag.pts === undefined && tag.dts === undefined) {\n              tag.pts = frame.timeStamp;\n              tag.dts = frame.timeStamp;\n            }\n\n            this.trigger('timestamp', frame);\n          }\n        }\n\n        tag.frames.push(frame);\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < tagSize);\n\n      this.trigger('data', tag);\n    };\n  };\n\n  _MetadataStream.prototype = new stream();\n  var metadataStream = _MetadataStream;\n  var TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n  var _TransportPacketStream, _TransportParseStream, _ElementaryStream; // constants\n\n\n  var MP2T_PACKET_LENGTH$1 = 188,\n      // bytes\n  SYNC_BYTE$1 = 0x47;\n  /**\n   * Splits an incoming stream of binary data into MPEG-2 Transport\n   * Stream packets.\n   */\n\n  _TransportPacketStream = function TransportPacketStream() {\n    var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n        bytesInBuffer = 0;\n\n    _TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n    /**\n     * Split a stream of data into M2TS packets\n    **/\n\n\n    this.push = function (bytes) {\n      var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH$1,\n          everything; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (bytesInBuffer) {\n        everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n        everything.set(buffer.subarray(0, bytesInBuffer));\n        everything.set(bytes, bytesInBuffer);\n        bytesInBuffer = 0;\n      } else {\n        everything = bytes;\n      } // While we have enough data for a packet\n\n\n      while (endIndex < everything.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n          // We found a packet so emit it and jump one whole packet forward in\n          // the stream\n          this.trigger('data', everything.subarray(startIndex, endIndex));\n          startIndex += MP2T_PACKET_LENGTH$1;\n          endIndex += MP2T_PACKET_LENGTH$1;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n\n        startIndex++;\n        endIndex++;\n      } // If there was some data left over at the end of the segment that couldn't\n      // possibly be a whole packet, keep it because it might be the start of a packet\n      // that continues in the next segment\n\n\n      if (startIndex < everything.byteLength) {\n        buffer.set(everything.subarray(startIndex), 0);\n        bytesInBuffer = everything.byteLength - startIndex;\n      }\n    };\n    /**\n     * Passes identified M2TS packets to the TransportParseStream to be parsed\n    **/\n\n\n    this.flush = function () {\n      // If the buffer contains a whole packet when we are being flushed, emit it\n      // and empty the buffer. Otherwise hold onto the data because it may be\n      // important for decoding the next segment\n      if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n        this.trigger('data', buffer);\n        bytesInBuffer = 0;\n      }\n\n      this.trigger('done');\n    };\n\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n\n    this.reset = function () {\n      bytesInBuffer = 0;\n      this.trigger('reset');\n    };\n  };\n\n  _TransportPacketStream.prototype = new stream();\n  /**\n   * Accepts an MP2T TransportPacketStream and emits data events with parsed\n   * forms of the individual transport stream packets.\n   */\n\n  _TransportParseStream = function TransportParseStream() {\n    var parsePsi, parsePat, parsePmt, self;\n\n    _TransportParseStream.prototype.init.call(this);\n\n    self = this;\n    this.packetsWaitingForPmt = [];\n    this.programMapTable = undefined;\n\n    parsePsi = function parsePsi(payload, psi) {\n      var offset = 0; // PSI packets may be split into multiple sections and those\n      // sections may be split into multiple packets. If a PSI\n      // section starts in this packet, the payload_unit_start_indicator\n      // will be true and the first byte of the payload will indicate\n      // the offset from the current position to the start of the\n      // section.\n\n      if (psi.payloadUnitStartIndicator) {\n        offset += payload[offset] + 1;\n      }\n\n      if (psi.type === 'pat') {\n        parsePat(payload.subarray(offset), psi);\n      } else {\n        parsePmt(payload.subarray(offset), psi);\n      }\n    };\n\n    parsePat = function parsePat(payload, pat) {\n      pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n      pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n      // skip the PSI header and parse the first PMT entry\n\n      self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n      pat.pmtPid = self.pmtPid;\n    };\n    /**\n     * Parse out the relevant fields of a Program Map Table (PMT).\n     * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n     * packet. The first byte in this array should be the table_id\n     * field.\n     * @param pmt {object} the object that should be decorated with\n     * fields parsed from the PMT.\n     */\n\n\n    parsePmt = function parsePmt(payload, pmt) {\n      var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(payload[5] & 0x01)) {\n        return;\n      } // overwrite any existing program map table\n\n\n      self.programMapTable = {\n        video: null,\n        audio: null,\n        'timed-metadata': {}\n      }; // the mapping table ends at the end of the current section\n\n      sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n      offset = 12 + programInfoLength;\n\n      while (offset < tableEnd) {\n        var streamType = payload[offset];\n        var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n        // TODO: should this be done for metadata too? for now maintain behavior of\n        //       multiple metadata streams\n\n        if (streamType === streamTypes.H264_STREAM_TYPE && self.programMapTable.video === null) {\n          self.programMapTable.video = pid;\n        } else if (streamType === streamTypes.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n          self.programMapTable.audio = pid;\n        } else if (streamType === streamTypes.METADATA_STREAM_TYPE) {\n          // map pid to stream type for metadata streams\n          self.programMapTable['timed-metadata'][pid] = streamType;\n        } // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n\n        offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n      } // record the map on the packet as well\n\n\n      pmt.programMapTable = self.programMapTable;\n    };\n    /**\n     * Deliver a new MP2T packet to the next stream in the pipeline.\n     */\n\n\n    this.push = function (packet) {\n      var result = {},\n          offset = 4;\n      result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n      result.pid = packet[1] & 0x1f;\n      result.pid <<= 8;\n      result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[offset] + 1;\n      } // parse the rest of the packet based on the type\n\n\n      if (result.pid === 0) {\n        result.type = 'pat';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result);\n      } else if (result.pid === this.pmtPid) {\n        result.type = 'pmt';\n        parsePsi(packet.subarray(offset), result);\n        this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n        while (this.packetsWaitingForPmt.length) {\n          this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n        }\n      } else if (this.programMapTable === undefined) {\n        // When we have not seen a PMT yet, defer further processing of\n        // PES packets until one has been parsed\n        this.packetsWaitingForPmt.push([packet, offset, result]);\n      } else {\n        this.processPes_(packet, offset, result);\n      }\n    };\n\n    this.processPes_ = function (packet, offset, result) {\n      // set the appropriate stream type\n      if (result.pid === this.programMapTable.video) {\n        result.streamType = streamTypes.H264_STREAM_TYPE;\n      } else if (result.pid === this.programMapTable.audio) {\n        result.streamType = streamTypes.ADTS_STREAM_TYPE;\n      } else {\n        // if not video or audio, it is timed-metadata or unknown\n        // if unknown, streamType will be undefined\n        result.streamType = this.programMapTable['timed-metadata'][result.pid];\n      }\n\n      result.type = 'pes';\n      result.data = packet.subarray(offset);\n      this.trigger('data', result);\n    };\n  };\n\n  _TransportParseStream.prototype = new stream();\n  _TransportParseStream.STREAM_TYPES = {\n    h264: 0x1b,\n    adts: 0x0f\n  };\n  /**\n   * Reconsistutes program elementary stream (PES) packets from parsed\n   * transport stream packets. That is, if you pipe an\n   * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n   * events will be events which capture the bytes for individual PES\n   * packets plus relevant metadata that has been extracted from the\n   * container.\n   */\n\n  _ElementaryStream = function ElementaryStream() {\n    var self = this,\n        segmentHadPmt = false,\n        // PES packet fragments\n    video = {\n      data: [],\n      size: 0\n    },\n        audio = {\n      data: [],\n      size: 0\n    },\n        timedMetadata = {\n      data: [],\n      size: 0\n    },\n        programMapTable,\n        parsePes = function parsePes(payload, pes) {\n      var ptsDtsFlags;\n      var startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n      pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n      // that are frame data that is continuing from the previous fragment. This\n      // is to check that the pes data is the start of a new pes payload\n\n      if (startPrefix !== 1) {\n        return;\n      } // get the packet length, this will be 0 for video\n\n\n      pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n      pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n\n      ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n\n      if (ptsDtsFlags & 0xC0) {\n        // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n        pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n        pes.pts *= 4; // Left shift by 2\n\n        pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n        pes.dts = pes.pts;\n\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n\n          pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      } // the data section starts immediately after the PES header.\n      // pes_header_data_length specifies the number of header bytes\n      // that follow the last byte of the field.\n\n\n      pes.data = payload.subarray(9 + payload[8]);\n    },\n\n    /**\n      * Pass completely parsed PES packets to the next stream in the pipeline\n     **/\n    flushStream = function flushStream(stream, type, forceFlush) {\n      var packetData = new Uint8Array(stream.size),\n          event = {\n        type: type\n      },\n          i = 0,\n          offset = 0,\n          packetFlushable = false,\n          fragment; // do nothing if there is not enough buffered data for a complete\n      // PES header\n\n      if (!stream.data.length || stream.size < 9) {\n        return;\n      }\n\n      event.trackId = stream.data[0].pid; // reassemble the packet\n\n      for (i = 0; i < stream.data.length; i++) {\n        fragment = stream.data[i];\n        packetData.set(fragment.data, offset);\n        offset += fragment.data.byteLength;\n      } // parse assembled packet's PES header\n\n\n      parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n      // check that there is enough stream data to fill the packet\n\n      packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n      if (forceFlush || packetFlushable) {\n        stream.size = 0;\n        stream.data.length = 0;\n      } // only emit packets that are complete. this is to avoid assembling\n      // incomplete PES packets due to poor segmentation\n\n\n      if (packetFlushable) {\n        self.trigger('data', event);\n      }\n    };\n\n    _ElementaryStream.prototype.init.call(this);\n    /**\n     * Identifies M2TS packet types and parses PES packets using metadata\n     * parsed from the PMT\n     **/\n\n\n    this.push = function (data) {\n      ({\n        pat: function pat() {// we have to wait for the PMT to arrive as well before we\n          // have any meaningful metadata\n        },\n        pes: function pes() {\n          var stream, streamType;\n\n          switch (data.streamType) {\n            case streamTypes.H264_STREAM_TYPE:\n              stream = video;\n              streamType = 'video';\n              break;\n\n            case streamTypes.ADTS_STREAM_TYPE:\n              stream = audio;\n              streamType = 'audio';\n              break;\n\n            case streamTypes.METADATA_STREAM_TYPE:\n              stream = timedMetadata;\n              streamType = 'timed-metadata';\n              break;\n\n            default:\n              // ignore unknown stream types\n              return;\n          } // if a new packet is starting, we can flush the completed\n          // packet\n\n\n          if (data.payloadUnitStartIndicator) {\n            flushStream(stream, streamType, true);\n          } // buffer this fragment until we are sure we've received the\n          // complete payload\n\n\n          stream.data.push(data);\n          stream.size += data.data.byteLength;\n        },\n        pmt: function pmt() {\n          var event = {\n            type: 'metadata',\n            tracks: []\n          };\n          programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n\n          if (programMapTable.audio !== null) {\n            event.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n\n          segmentHadPmt = true;\n          self.trigger('data', event);\n        }\n      })[data.type]();\n    };\n\n    this.reset = function () {\n      video.size = 0;\n      video.data.length = 0;\n      audio.size = 0;\n      audio.data.length = 0;\n      this.trigger('reset');\n    };\n    /**\n     * Flush any remaining input. Video PES packets may be of variable\n     * length. Normally, the start of a new video packet can trigger the\n     * finalization of the previous packet. That is not possible if no\n     * more video is forthcoming, however. In that case, some other\n     * mechanism (like the end of the file) has to be employed. When it is\n     * clear that no additional data is forthcoming, calling this method\n     * will flush the buffered packets.\n     */\n\n\n    this.flushStreams_ = function () {\n      // !!THIS ORDER IS IMPORTANT!!\n      // video first then audio\n      flushStream(video, 'video');\n      flushStream(audio, 'audio');\n      flushStream(timedMetadata, 'timed-metadata');\n    };\n\n    this.flush = function () {\n      // if on flush we haven't had a pmt emitted\n      // and we have a pmt to emit. emit the pmt\n      // so that we trigger a trackinfo downstream.\n      if (!segmentHadPmt && programMapTable) {\n        var pmt = {\n          type: 'metadata',\n          tracks: []\n        }; // translate audio and video streams to tracks\n\n        if (programMapTable.video !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.video,\n            codec: 'avc',\n            type: 'video'\n          });\n        }\n\n        if (programMapTable.audio !== null) {\n          pmt.tracks.push({\n            timelineStartInfo: {\n              baseMediaDecodeTime: 0\n            },\n            id: +programMapTable.audio,\n            codec: 'adts',\n            type: 'audio'\n          });\n        }\n\n        self.trigger('data', pmt);\n      }\n\n      segmentHadPmt = false;\n      this.flushStreams_();\n      this.trigger('done');\n    };\n  };\n\n  _ElementaryStream.prototype = new stream();\n  var m2ts = {\n    PAT_PID: 0x0000,\n    MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n    TransportPacketStream: _TransportPacketStream,\n    TransportParseStream: _TransportParseStream,\n    ElementaryStream: _ElementaryStream,\n    TimestampRolloverStream: TimestampRolloverStream,\n    CaptionStream: captionStream.CaptionStream,\n    Cea608Stream: captionStream.Cea608Stream,\n    Cea708Stream: captionStream.Cea708Stream,\n    MetadataStream: metadataStream\n  };\n\n  for (var type in streamTypes) {\n    if (streamTypes.hasOwnProperty(type)) {\n      m2ts[type] = streamTypes[type];\n    }\n  }\n\n  var m2ts_1 = m2ts;\n  var ONE_SECOND_IN_TS$2 = clock.ONE_SECOND_IN_TS;\n\n  var _AdtsStream;\n\n  var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n  /*\n   * Accepts a ElementaryStream and emits data events with parsed\n   * AAC Audio Frames of the individual packets. Input audio in ADTS\n   * format is unpacked and re-emitted as AAC frames.\n   *\n   * @see http://wiki.multimedia.cx/index.php?title=ADTS\n   * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n   */\n\n  _AdtsStream = function AdtsStream(handlePartialSegments) {\n    var buffer,\n        frameNum = 0;\n\n    _AdtsStream.prototype.init.call(this);\n\n    this.skipWarn_ = function (start, end) {\n      this.trigger('log', {\n        level: 'warn',\n        message: \"adts skiping bytes \" + start + \" to \" + end + \" in frame \" + frameNum + \" outside syncword\"\n      });\n    };\n\n    this.push = function (packet) {\n      var i = 0,\n          frameLength,\n          protectionSkipBytes,\n          oldBuffer,\n          sampleCount,\n          adtsFrameDuration;\n\n      if (!handlePartialSegments) {\n        frameNum = 0;\n      }\n\n      if (packet.type !== 'audio') {\n        // ignore non-audio data\n        return;\n      } // Prepend any data in the buffer to the input data so that we can parse\n      // aac frames the cross a PES packet boundary\n\n\n      if (buffer && buffer.length) {\n        oldBuffer = buffer;\n        buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n        buffer.set(oldBuffer);\n        buffer.set(packet.data, oldBuffer.byteLength);\n      } else {\n        buffer = packet.data;\n      } // unpack any ADTS frames which have been fully received\n      // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n\n      var skip; // We use i + 7 here because we want to be able to parse the entire header.\n      // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n      while (i + 7 < buffer.length) {\n        // Look for the start of an ADTS header..\n        if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n          if (typeof skip !== 'number') {\n            skip = i;\n          } // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n\n\n          i++;\n          continue;\n        }\n\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n        // end of the ADTS header\n\n\n        protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n        // end of the sync sequence\n        // NOTE: frame length includes the size of the header\n\n        frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n        sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n        adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n        // then we have to wait for more data\n\n        if (buffer.byteLength - i < frameLength) {\n          break;\n        } // Otherwise, deliver the complete AAC frame\n\n\n        this.trigger('data', {\n          pts: packet.pts + frameNum * adtsFrameDuration,\n          dts: packet.dts + frameNum * adtsFrameDuration,\n          sampleCount: sampleCount,\n          audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n          channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n          samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n          samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n          // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n          samplesize: 16,\n          // data is the frame without it's header\n          data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n        });\n        frameNum++;\n        i += frameLength;\n      }\n\n      if (typeof skip === 'number') {\n        this.skipWarn_(skip, i);\n        skip = null;\n      } // remove processed bytes from the buffer.\n\n\n      buffer = buffer.subarray(i);\n    };\n\n    this.flush = function () {\n      frameNum = 0;\n      this.trigger('done');\n    };\n\n    this.reset = function () {\n      buffer = void 0;\n      this.trigger('reset');\n    };\n\n    this.endTimeline = function () {\n      buffer = void 0;\n      this.trigger('endedtimeline');\n    };\n  };\n\n  _AdtsStream.prototype = new stream();\n  var adts = _AdtsStream;\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var ExpGolomb;\n  /**\n   * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n   * scheme used by h264.\n   */\n\n  ExpGolomb = function ExpGolomb(workingData) {\n    var // the number of bytes left to examine in workingData\n    workingBytesAvailable = workingData.byteLength,\n        // the current word being examined\n    workingWord = 0,\n        // :uint\n    // the number of bits left to examine in the current word\n    workingBitsAvailable = 0; // :uint;\n    // ():uint\n\n    this.length = function () {\n      return 8 * workingBytesAvailable;\n    }; // ():uint\n\n\n    this.bitsAvailable = function () {\n      return 8 * workingBytesAvailable + workingBitsAvailable;\n    }; // ():void\n\n\n    this.loadWord = function () {\n      var position = workingData.byteLength - workingBytesAvailable,\n          workingBytes = new Uint8Array(4),\n          availableBytes = Math.min(4, workingBytesAvailable);\n\n      if (availableBytes === 0) {\n        throw new Error('no bytes available');\n      }\n\n      workingBytes.set(workingData.subarray(position, position + availableBytes));\n      workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n      workingBitsAvailable = availableBytes * 8;\n      workingBytesAvailable -= availableBytes;\n    }; // (count:int):void\n\n\n    this.skipBits = function (count) {\n      var skipBytes; // :int\n\n      if (workingBitsAvailable > count) {\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      } else {\n        count -= workingBitsAvailable;\n        skipBytes = Math.floor(count / 8);\n        count -= skipBytes * 8;\n        workingBytesAvailable -= skipBytes;\n        this.loadWord();\n        workingWord <<= count;\n        workingBitsAvailable -= count;\n      }\n    }; // (size:int):uint\n\n\n    this.readBits = function (size) {\n      var bits = Math.min(workingBitsAvailable, size),\n          // :uint\n      valu = workingWord >>> 32 - bits; // :uint\n      // if size > 31, handle error\n\n      workingBitsAvailable -= bits;\n\n      if (workingBitsAvailable > 0) {\n        workingWord <<= bits;\n      } else if (workingBytesAvailable > 0) {\n        this.loadWord();\n      }\n\n      bits = size - bits;\n\n      if (bits > 0) {\n        return valu << bits | this.readBits(bits);\n      }\n\n      return valu;\n    }; // ():uint\n\n\n    this.skipLeadingZeros = function () {\n      var leadingZeroCount; // :uint\n\n      for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n        if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n          // the first bit of working word is 1\n          workingWord <<= leadingZeroCount;\n          workingBitsAvailable -= leadingZeroCount;\n          return leadingZeroCount;\n        }\n      } // we exhausted workingWord and still have not found a 1\n\n\n      this.loadWord();\n      return leadingZeroCount + this.skipLeadingZeros();\n    }; // ():void\n\n\n    this.skipUnsignedExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():void\n\n\n    this.skipExpGolomb = function () {\n      this.skipBits(1 + this.skipLeadingZeros());\n    }; // ():uint\n\n\n    this.readUnsignedExpGolomb = function () {\n      var clz = this.skipLeadingZeros(); // :uint\n\n      return this.readBits(clz + 1) - 1;\n    }; // ():int\n\n\n    this.readExpGolomb = function () {\n      var valu = this.readUnsignedExpGolomb(); // :int\n\n      if (0x01 & valu) {\n        // the number is odd if the low order bit is set\n        return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n      }\n\n      return -1 * (valu >>> 1); // divide by two then make it negative\n    }; // Some convenience functions\n    // :Boolean\n\n\n    this.readBoolean = function () {\n      return this.readBits(1) === 1;\n    }; // ():int\n\n\n    this.readUnsignedByte = function () {\n      return this.readBits(8);\n    };\n\n    this.loadWord();\n  };\n\n  var expGolomb = ExpGolomb;\n\n  var _H264Stream, _NalByteStream;\n\n  var PROFILES_WITH_OPTIONAL_SPS_DATA;\n  /**\n   * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n   */\n\n  _NalByteStream = function NalByteStream() {\n    var syncPoint = 0,\n        i,\n        buffer;\n\n    _NalByteStream.prototype.init.call(this);\n    /*\n     * Scans a byte stream and triggers a data event with the NAL units found.\n     * @param {Object} data Event received from H264Stream\n     * @param {Uint8Array} data.data The h264 byte stream to be scanned\n     *\n     * @see H264Stream.push\n     */\n\n\n    this.push = function (data) {\n      var swapBuffer;\n\n      if (!buffer) {\n        buffer = data.data;\n      } else {\n        swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n        swapBuffer.set(buffer);\n        swapBuffer.set(data.data, buffer.byteLength);\n        buffer = swapBuffer;\n      }\n\n      var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n      // scan for NAL unit boundaries\n      // a match looks like this:\n      // 0 0 1 .. NAL .. 0 0 1\n      // ^ sync point        ^ i\n      // or this:\n      // 0 0 1 .. NAL .. 0 0 0\n      // ^ sync point        ^ i\n      // advance the sync point to a NAL start, if necessary\n\n      for (; syncPoint < len - 3; syncPoint++) {\n        if (buffer[syncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          i = syncPoint + 5;\n          break;\n        }\n      }\n\n      while (i < len) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (buffer[i]) {\n          case 0:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0) {\n              i += 2;\n              break;\n            } else if (buffer[i - 2] !== 0) {\n              i++;\n              break;\n            } // deliver the NAL unit if it isn't empty\n\n\n            if (syncPoint + 3 !== i - 2) {\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            } // drop trailing zeroes\n\n\n            do {\n              i++;\n            } while (buffer[i] !== 1 && i < len);\n\n            syncPoint = i - 2;\n            i += 3;\n            break;\n\n          case 1:\n            // skip past non-sync sequences\n            if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n              i += 3;\n              break;\n            } // deliver the NAL unit\n\n\n            this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n            syncPoint = i - 2;\n            i += 3;\n            break;\n\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            i += 3;\n            break;\n        }\n      } // filter out the NAL units that were delivered\n\n\n      buffer = buffer.subarray(syncPoint);\n      i -= syncPoint;\n      syncPoint = 0;\n    };\n\n    this.reset = function () {\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('reset');\n    };\n\n    this.flush = function () {\n      // deliver the last buffered NAL unit\n      if (buffer && buffer.byteLength > 3) {\n        this.trigger('data', buffer.subarray(syncPoint + 3));\n      } // reset the stream state\n\n\n      buffer = null;\n      syncPoint = 0;\n      this.trigger('done');\n    };\n\n    this.endTimeline = function () {\n      this.flush();\n      this.trigger('endedtimeline');\n    };\n  };\n\n  _NalByteStream.prototype = new stream(); // values of profile_idc that indicate additional fields are included in the SPS\n  // see Recommendation ITU-T H.264 (4/2013),\n  // 7.3.2.1.1 Sequence parameter set data syntax\n\n  PROFILES_WITH_OPTIONAL_SPS_DATA = {\n    100: true,\n    110: true,\n    122: true,\n    244: true,\n    44: true,\n    83: true,\n    86: true,\n    118: true,\n    128: true,\n    // TODO: the three profiles below don't\n    // appear to have sps data in the specificiation anymore?\n    138: true,\n    139: true,\n    134: true\n  };\n  /**\n   * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n   * events.\n   */\n\n  _H264Stream = function H264Stream() {\n    var nalByteStream = new _NalByteStream(),\n        self,\n        trackId,\n        currentPts,\n        currentDts,\n        discardEmulationPreventionBytes,\n        readSequenceParameterSet,\n        skipScalingList;\n\n    _H264Stream.prototype.init.call(this);\n\n    self = this;\n    /*\n     * Pushes a packet from a stream onto the NalByteStream\n     *\n     * @param {Object} packet - A packet received from a stream\n     * @param {Uint8Array} packet.data - The raw bytes of the packet\n     * @param {Number} packet.dts - Decode timestamp of the packet\n     * @param {Number} packet.pts - Presentation timestamp of the packet\n     * @param {Number} packet.trackId - The id of the h264 track this packet came from\n     * @param {('video'|'audio')} packet.type - The type of packet\n     *\n     */\n\n    this.push = function (packet) {\n      if (packet.type !== 'video') {\n        return;\n      }\n\n      trackId = packet.trackId;\n      currentPts = packet.pts;\n      currentDts = packet.dts;\n      nalByteStream.push(packet);\n    };\n    /*\n     * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n     * for the NALUs to the next stream component.\n     * Also, preprocess caption and sequence parameter NALUs.\n     *\n     * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n     * @see NalByteStream.push\n     */\n\n\n    nalByteStream.on('data', function (data) {\n      var event = {\n        trackId: trackId,\n        pts: currentPts,\n        dts: currentDts,\n        data: data,\n        nalUnitTypeCode: data[0] & 0x1f\n      };\n\n      switch (event.nalUnitTypeCode) {\n        case 0x05:\n          event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n          break;\n\n        case 0x06:\n          event.nalUnitType = 'sei_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          break;\n\n        case 0x07:\n          event.nalUnitType = 'seq_parameter_set_rbsp';\n          event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n          event.config = readSequenceParameterSet(event.escapedRBSP);\n          break;\n\n        case 0x08:\n          event.nalUnitType = 'pic_parameter_set_rbsp';\n          break;\n\n        case 0x09:\n          event.nalUnitType = 'access_unit_delimiter_rbsp';\n          break;\n      } // This triggers data on the H264Stream\n\n\n      self.trigger('data', event);\n    });\n    nalByteStream.on('done', function () {\n      self.trigger('done');\n    });\n    nalByteStream.on('partialdone', function () {\n      self.trigger('partialdone');\n    });\n    nalByteStream.on('reset', function () {\n      self.trigger('reset');\n    });\n    nalByteStream.on('endedtimeline', function () {\n      self.trigger('endedtimeline');\n    });\n\n    this.flush = function () {\n      nalByteStream.flush();\n    };\n\n    this.partialFlush = function () {\n      nalByteStream.partialFlush();\n    };\n\n    this.reset = function () {\n      nalByteStream.reset();\n    };\n\n    this.endTimeline = function () {\n      nalByteStream.endTimeline();\n    };\n    /**\n     * Advance the ExpGolomb decoder past a scaling list. The scaling\n     * list is optionally transmitted as part of a sequence parameter\n     * set and is not relevant to transmuxing.\n     * @param count {number} the number of entries in this scaling list\n     * @param expGolombDecoder {object} an ExpGolomb pointed to the\n     * start of a scaling list\n     * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n     */\n\n\n    skipScalingList = function skipScalingList(count, expGolombDecoder) {\n      var lastScale = 8,\n          nextScale = 8,\n          j,\n          deltaScale;\n\n      for (j = 0; j < count; j++) {\n        if (nextScale !== 0) {\n          deltaScale = expGolombDecoder.readExpGolomb();\n          nextScale = (lastScale + deltaScale + 256) % 256;\n        }\n\n        lastScale = nextScale === 0 ? lastScale : nextScale;\n      }\n    };\n    /**\n     * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n     * Sequence Payload\"\n     * @param data {Uint8Array} the bytes of a RBSP from a NAL\n     * unit\n     * @return {Uint8Array} the RBSP without any Emulation\n     * Prevention Bytes\n     */\n\n\n    discardEmulationPreventionBytes = function discardEmulationPreventionBytes(data) {\n      var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n\n        newData[i] = data[sourceIndex];\n      }\n\n      return newData;\n    };\n    /**\n     * Read a sequence parameter set and return some interesting video\n     * properties. A sequence parameter set is the H264 metadata that\n     * describes the properties of upcoming video frames.\n     * @param data {Uint8Array} the bytes of a sequence parameter set\n     * @return {object} an object with configuration parsed from the\n     * sequence parameter set, including the dimensions of the\n     * associated video frames.\n     */\n\n\n    readSequenceParameterSet = function readSequenceParameterSet(data) {\n      var frameCropLeftOffset = 0,\n          frameCropRightOffset = 0,\n          frameCropTopOffset = 0,\n          frameCropBottomOffset = 0,\n          expGolombDecoder,\n          profileIdc,\n          levelIdc,\n          profileCompatibility,\n          chromaFormatIdc,\n          picOrderCntType,\n          numRefFramesInPicOrderCntCycle,\n          picWidthInMbsMinus1,\n          picHeightInMapUnitsMinus1,\n          frameMbsOnlyFlag,\n          scalingListCount,\n          sarRatio = [1, 1],\n          aspectRatioIdc,\n          i;\n      expGolombDecoder = new expGolomb(data);\n      profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n      profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n      levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n      // some profiles have more optional data we don't need\n\n      if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n        chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n\n        if (chromaFormatIdc === 3) {\n          expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n        expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // seq_scaling_matrix_present_flag\n          scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n\n          for (i = 0; i < scalingListCount; i++) {\n            if (expGolombDecoder.readBoolean()) {\n              // seq_scaling_list_present_flag[ i ]\n              if (i < 6) {\n                skipScalingList(16, expGolombDecoder);\n              } else {\n                skipScalingList(64, expGolombDecoder);\n              }\n            }\n          }\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n      picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n\n      if (picOrderCntType === 0) {\n        expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n      } else if (picOrderCntType === 1) {\n        expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n        expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n        numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n\n        for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n          expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n        }\n      }\n\n      expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n      expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n      picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n      frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n\n      if (frameMbsOnlyFlag === 0) {\n        expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n      }\n\n      expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n      if (expGolombDecoder.readBoolean()) {\n        // frame_cropping_flag\n        frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n        frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n      }\n\n      if (expGolombDecoder.readBoolean()) {\n        // vui_parameters_present_flag\n        if (expGolombDecoder.readBoolean()) {\n          // aspect_ratio_info_present_flag\n          aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n\n          switch (aspectRatioIdc) {\n            case 1:\n              sarRatio = [1, 1];\n              break;\n\n            case 2:\n              sarRatio = [12, 11];\n              break;\n\n            case 3:\n              sarRatio = [10, 11];\n              break;\n\n            case 4:\n              sarRatio = [16, 11];\n              break;\n\n            case 5:\n              sarRatio = [40, 33];\n              break;\n\n            case 6:\n              sarRatio = [24, 11];\n              break;\n\n            case 7:\n              sarRatio = [20, 11];\n              break;\n\n            case 8:\n              sarRatio = [32, 11];\n              break;\n\n            case 9:\n              sarRatio = [80, 33];\n              break;\n\n            case 10:\n              sarRatio = [18, 11];\n              break;\n\n            case 11:\n              sarRatio = [15, 11];\n              break;\n\n            case 12:\n              sarRatio = [64, 33];\n              break;\n\n            case 13:\n              sarRatio = [160, 99];\n              break;\n\n            case 14:\n              sarRatio = [4, 3];\n              break;\n\n            case 15:\n              sarRatio = [3, 2];\n              break;\n\n            case 16:\n              sarRatio = [2, 1];\n              break;\n\n            case 255:\n              {\n                sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                break;\n              }\n          }\n\n          if (sarRatio) {\n            sarRatio[0] / sarRatio[1];\n          }\n        }\n      }\n\n      return {\n        profileIdc: profileIdc,\n        levelIdc: levelIdc,\n        profileCompatibility: profileCompatibility,\n        width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n        height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n        // sar is sample aspect ratio\n        sarRatio: sarRatio\n      };\n    };\n  };\n\n  _H264Stream.prototype = new stream();\n  var h264 = {\n    H264Stream: _H264Stream,\n    NalByteStream: _NalByteStream\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   *\n   * Utilities to detect basic properties and metadata about Aac data.\n   */\n\n  var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n\n  var parseId3TagSize = function parseId3TagSize(header, byteIndex) {\n    var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n        flags = header[byteIndex + 5],\n        footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n    returnSize = returnSize >= 0 ? returnSize : 0;\n\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n\n    return returnSize + 10;\n  };\n\n  var getId3Offset = function getId3Offset(data, offset) {\n    if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n      return offset;\n    }\n\n    offset += parseId3TagSize(data, offset);\n    return getId3Offset(data, offset);\n  }; // TODO: use vhs-utils\n\n\n  var isLikelyAacData$1 = function isLikelyAacData(data) {\n    var offset = getId3Offset(data, 0);\n    return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 && // verify that the 2 layer bits are 0, aka this\n    // is not mp3 data but aac data.\n    (data[offset + 1] & 0x16) === 0x10;\n  };\n\n  var parseSyncSafeInteger = function parseSyncSafeInteger(data) {\n    return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n  }; // return a percent-encoded representation of the specified byte range\n  // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n\n  var percentEncode = function percentEncode(bytes, start, end) {\n    var i,\n        result = '';\n\n    for (i = start; i < end; i++) {\n      result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n    }\n\n    return result;\n  }; // return the string representation of the specified byte range,\n  // interpreted as ISO-8859-1.\n\n\n  var parseIso88591 = function parseIso88591(bytes, start, end) {\n    return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n  };\n\n  var parseAdtsSize = function parseAdtsSize(header, byteIndex) {\n    var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n        middle = header[byteIndex + 4] << 3,\n        highTwo = header[byteIndex + 3] & 0x3 << 11;\n    return highTwo | middle | lowThree;\n  };\n\n  var parseType$2 = function parseType(header, byteIndex) {\n    if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n      return 'timed-metadata';\n    } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n      return 'audio';\n    }\n\n    return null;\n  };\n\n  var parseSampleRate = function parseSampleRate(packet) {\n    var i = 0;\n\n    while (i + 5 < packet.length) {\n      if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n        // If a valid header was not found,  jump one forward and attempt to\n        // find a valid ADTS header starting at the next byte\n        i++;\n        continue;\n      }\n\n      return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n    }\n\n    return null;\n  };\n\n  var parseAacTimestamp = function parseAacTimestamp(packet) {\n    var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n    frameStart = 10;\n\n    if (packet[5] & 0x40) {\n      // advance the frame start past the extended header\n      frameStart += 4; // header size field\n\n      frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n    } // parse one or more ID3 frames\n    // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n\n    do {\n      // determine the number of bytes in this frame\n      frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n\n      if (frameSize < 1) {\n        return null;\n      }\n\n      frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n\n      if (frameHeader === 'PRIV') {\n        frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n\n        for (var i = 0; i < frame.byteLength; i++) {\n          if (frame[i] === 0) {\n            var owner = parseIso88591(frame, 0, i);\n\n            if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n              var d = frame.subarray(i + 1);\n              var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n              size *= 4;\n              size += d[7] & 0x03;\n              return size;\n            }\n\n            break;\n          }\n        }\n      }\n\n      frameStart += 10; // advance past the frame header\n\n      frameStart += frameSize; // advance past the frame body\n    } while (frameStart < packet.byteLength);\n\n    return null;\n  };\n\n  var utils = {\n    isLikelyAacData: isLikelyAacData$1,\n    parseId3TagSize: parseId3TagSize,\n    parseAdtsSize: parseAdtsSize,\n    parseType: parseType$2,\n    parseSampleRate: parseSampleRate,\n    parseAacTimestamp: parseAacTimestamp\n  };\n\n  var _AacStream;\n  /**\n   * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n   */\n\n\n  _AacStream = function AacStream() {\n    var everything = new Uint8Array(),\n        timeStamp = 0;\n\n    _AacStream.prototype.init.call(this);\n\n    this.setTimestamp = function (timestamp) {\n      timeStamp = timestamp;\n    };\n\n    this.push = function (bytes) {\n      var frameSize = 0,\n          byteIndex = 0,\n          bytesLeft,\n          chunk,\n          packet,\n          tempLength; // If there are bytes remaining from the last segment, prepend them to the\n      // bytes that were pushed in\n\n      if (everything.length) {\n        tempLength = everything.length;\n        everything = new Uint8Array(bytes.byteLength + tempLength);\n        everything.set(everything.subarray(0, tempLength));\n        everything.set(bytes, tempLength);\n      } else {\n        everything = bytes;\n      }\n\n      while (everything.length - byteIndex >= 3) {\n        if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (everything.length - byteIndex < 10) {\n            break;\n          } // check framesize\n\n\n          frameSize = utils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n          // Add to byteIndex to support multiple ID3 tags in sequence\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n\n          chunk = {\n            type: 'timed-metadata',\n            data: everything.subarray(byteIndex, byteIndex + frameSize)\n          };\n          this.trigger('data', chunk);\n          byteIndex += frameSize;\n          continue;\n        } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (everything.length - byteIndex < 7) {\n            break;\n          }\n\n          frameSize = utils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (byteIndex + frameSize > everything.length) {\n            break;\n          }\n\n          packet = {\n            type: 'audio',\n            data: everything.subarray(byteIndex, byteIndex + frameSize),\n            pts: timeStamp,\n            dts: timeStamp\n          };\n          this.trigger('data', packet);\n          byteIndex += frameSize;\n          continue;\n        }\n\n        byteIndex++;\n      }\n\n      bytesLeft = everything.length - byteIndex;\n\n      if (bytesLeft > 0) {\n        everything = everything.subarray(byteIndex);\n      } else {\n        everything = new Uint8Array();\n      }\n    };\n\n    this.reset = function () {\n      everything = new Uint8Array();\n      this.trigger('reset');\n    };\n\n    this.endTimeline = function () {\n      everything = new Uint8Array();\n      this.trigger('endedtimeline');\n    };\n  };\n\n  _AacStream.prototype = new stream();\n  var aac = _AacStream; // constants\n\n  var AUDIO_PROPERTIES = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n  var audioProperties = AUDIO_PROPERTIES;\n  var VIDEO_PROPERTIES = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n  var videoProperties = VIDEO_PROPERTIES;\n  var H264Stream = h264.H264Stream;\n  var isLikelyAacData = utils.isLikelyAacData;\n  var ONE_SECOND_IN_TS$1 = clock.ONE_SECOND_IN_TS; // object types\n\n  var _VideoSegmentStream, _AudioSegmentStream, _Transmuxer, _CoalesceStream;\n\n  var retriggerForStream = function retriggerForStream(key, event) {\n    event.stream = key;\n    this.trigger('log', event);\n  };\n\n  var addPipelineLogRetriggers = function addPipelineLogRetriggers(transmuxer, pipeline) {\n    var keys = Object.keys(pipeline);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]; // skip non-stream keys and headOfPipeline\n      // which is just a duplicate\n\n      if (key === 'headOfPipeline' || !pipeline[key].on) {\n        continue;\n      }\n\n      pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n    }\n  };\n  /**\n   * Compare two arrays (even typed) for same-ness\n   */\n\n\n  var arrayEquals = function arrayEquals(a, b) {\n    var i;\n\n    if (a.length !== b.length) {\n      return false;\n    } // compare the value of each element in the array\n\n\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  var generateSegmentTimingInfo = function generateSegmentTimingInfo(baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n    var ptsOffsetFromDts = startPts - startDts,\n        decodeDuration = endDts - startDts,\n        presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n    // however, the player time values will reflect a start from the baseMediaDecodeTime.\n    // In order to provide relevant values for the player times, base timing info on the\n    // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n    return {\n      start: {\n        dts: baseMediaDecodeTime,\n        pts: baseMediaDecodeTime + ptsOffsetFromDts\n      },\n      end: {\n        dts: baseMediaDecodeTime + decodeDuration,\n        pts: baseMediaDecodeTime + presentationDuration\n      },\n      prependedContentDuration: prependedContentDuration,\n      baseMediaDecodeTime: baseMediaDecodeTime\n    };\n  };\n  /**\n   * Constructs a single-track, ISO BMFF media segment from AAC data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n\n  _AudioSegmentStream = function AudioSegmentStream(track, options) {\n    var adtsFrames = [],\n        sequenceNumber,\n        earliestAllowedDts = 0,\n        audioAppendStartTs = 0,\n        videoBaseMediaDecodeTime = Infinity;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n\n    _AudioSegmentStream.prototype.init.call(this);\n\n    this.push = function (data) {\n      trackDecodeInfo.collectDtsInfo(track, data);\n\n      if (track) {\n        audioProperties.forEach(function (prop) {\n          track[prop] = data[prop];\n        });\n      } // buffer audio data until end() is called\n\n\n      adtsFrames.push(data);\n    };\n\n    this.setEarliestDts = function (earliestDts) {\n      earliestAllowedDts = earliestDts;\n    };\n\n    this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      videoBaseMediaDecodeTime = baseMediaDecodeTime;\n    };\n\n    this.setAudioAppendStart = function (timestamp) {\n      audioAppendStartTs = timestamp;\n    };\n\n    this.flush = function () {\n      var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n      if (adtsFrames.length === 0) {\n        this.trigger('done', 'AudioSegmentStream');\n        return;\n      }\n\n      frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n      videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n      // samples (that is, adts frames) in the audio data\n\n      track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n      mdat = mp4Generator.mdat(audioFrameUtils.concatenateFrameData(frames));\n      adtsFrames = [];\n      moof = mp4Generator.moof(sequenceNumber, [track]);\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      trackDecodeInfo.clearDtsInfo(track);\n      frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n      // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n      // valid use-case where an init segment/data should be triggered without associated\n      // frames. Leaving for now, but should be looked into.\n\n      if (frames.length) {\n        segmentDuration = frames.length * frameDuration;\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo( // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n        // frame info is in video clock cycles. Convert to match expectation of\n        // listeners (that all timestamps will be based on video clock cycles).\n        clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate), // frame times are already in video clock, as is segment duration\n        frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n        this.trigger('timingInfo', {\n          start: frames[0].pts,\n          end: frames[0].pts + segmentDuration\n        });\n      }\n\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.trigger('done', 'AudioSegmentStream');\n    };\n\n    this.reset = function () {\n      trackDecodeInfo.clearDtsInfo(track);\n      adtsFrames = [];\n      this.trigger('reset');\n    };\n  };\n\n  _AudioSegmentStream.prototype = new stream();\n  /**\n   * Constructs a single-track, ISO BMFF media segment from H264 data\n   * events. The output of this stream can be fed to a SourceBuffer\n   * configured with a suitable initialization segment.\n   * @param track {object} track metadata configuration\n   * @param options {object} transmuxer options object\n   * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n   *        gopsToAlignWith list when attempting to align gop pts\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at 0.\n   */\n\n  _VideoSegmentStream = function VideoSegmentStream(track, options) {\n    var sequenceNumber,\n        nalUnits = [],\n        gopsToAlignWith = [],\n        config,\n        pps;\n    options = options || {};\n    sequenceNumber = options.firstSequenceNumber || 0;\n\n    _VideoSegmentStream.prototype.init.call(this);\n\n    delete track.minPTS;\n    this.gopCache_ = [];\n    /**\n      * Constructs a ISO BMFF segment given H264 nalUnits\n      * @param {Object} nalUnit A data event representing a nalUnit\n      * @param {String} nalUnit.nalUnitType\n      * @param {Object} nalUnit.config Properties for a mp4 track\n      * @param {Uint8Array} nalUnit.data The nalUnit bytes\n      * @see lib/codecs/h264.js\n     **/\n\n    this.push = function (nalUnit) {\n      trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n      if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n        config = nalUnit.config;\n        track.sps = [nalUnit.data];\n        videoProperties.forEach(function (prop) {\n          track[prop] = config[prop];\n        }, this);\n      }\n\n      if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n        pps = nalUnit.data;\n        track.pps = [nalUnit.data];\n      } // buffer video until flush() is called\n\n\n      nalUnits.push(nalUnit);\n    };\n    /**\n      * Pass constructed ISO BMFF track and boxes on to the\n      * next stream in the pipeline\n     **/\n\n\n    this.flush = function () {\n      var frames,\n          gopForFusion,\n          gops,\n          moof,\n          mdat,\n          boxes,\n          prependedContentDuration = 0,\n          firstGop,\n          lastGop; // Throw away nalUnits at the start of the byte stream until\n      // we find the first AUD\n\n      while (nalUnits.length) {\n        if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n          break;\n        }\n\n        nalUnits.shift();\n      } // Return early if no video data has been observed\n\n\n      if (nalUnits.length === 0) {\n        this.resetStream_();\n        this.trigger('done', 'VideoSegmentStream');\n        return;\n      } // Organize the raw nal-units into arrays that represent\n      // higher-level constructs such as frames and gops\n      // (group-of-pictures)\n\n\n      frames = frameUtils.groupNalsIntoFrames(nalUnits);\n      gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n      // a problem since MSE (on Chrome) requires a leading keyframe.\n      //\n      // We have two approaches to repairing this situation:\n      // 1) GOP-FUSION:\n      //    This is where we keep track of the GOPS (group-of-pictures)\n      //    from previous fragments and attempt to find one that we can\n      //    prepend to the current fragment in order to create a valid\n      //    fragment.\n      // 2) KEYFRAME-PULLING:\n      //    Here we search for the first keyframe in the fragment and\n      //    throw away all the frames between the start of the fragment\n      //    and that keyframe. We then extend the duration and pull the\n      //    PTS of the keyframe forward so that it covers the time range\n      //    of the frames that were disposed of.\n      //\n      // #1 is far prefereable over #2 which can cause \"stuttering\" but\n      // requires more things to be just right.\n\n      if (!gops[0][0].keyFrame) {\n        // Search for a gop for fusion from our gopCache\n        gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n\n        if (gopForFusion) {\n          // in order to provide more accurate timing information about the segment, save\n          // the number of seconds prepended to the original segment due to GOP fusion\n          prependedContentDuration = gopForFusion.duration;\n          gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n          // new gop at the beginning\n\n          gops.byteLength += gopForFusion.byteLength;\n          gops.nalCount += gopForFusion.nalCount;\n          gops.pts = gopForFusion.pts;\n          gops.dts = gopForFusion.dts;\n          gops.duration += gopForFusion.duration;\n        } else {\n          // If we didn't find a candidate gop fall back to keyframe-pulling\n          gops = frameUtils.extendFirstKeyFrame(gops);\n        }\n      } // Trim gops to align with gopsToAlignWith\n\n\n      if (gopsToAlignWith.length) {\n        var alignedGops;\n\n        if (options.alignGopsAtEnd) {\n          alignedGops = this.alignGopsAtEnd_(gops);\n        } else {\n          alignedGops = this.alignGopsAtStart_(gops);\n        }\n\n        if (!alignedGops) {\n          // save all the nals in the last GOP into the gop cache\n          this.gopCache_.unshift({\n            gop: gops.pop(),\n            pps: track.pps,\n            sps: track.sps\n          }); // Keep a maximum of 6 GOPs in the cache\n\n          this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n          nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n        // when recalculated before sending off to CoalesceStream\n\n\n        trackDecodeInfo.clearDtsInfo(track);\n        gops = alignedGops;\n      }\n\n      trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n      // samples (that is, frames) in the video data\n\n      track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n      mdat = mp4Generator.mdat(frameUtils.concatenateNalData(gops));\n      track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n      this.trigger('processedGopsInfo', gops.map(function (gop) {\n        return {\n          pts: gop.pts,\n          dts: gop.dts,\n          byteLength: gop.byteLength\n        };\n      }));\n      firstGop = gops[0];\n      lastGop = gops[gops.length - 1];\n      this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n      this.trigger('timingInfo', {\n        start: gops[0].pts,\n        end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n      }); // save all the nals in the last GOP into the gop cache\n\n      this.gopCache_.unshift({\n        gop: gops.pop(),\n        pps: track.pps,\n        sps: track.sps\n      }); // Keep a maximum of 6 GOPs in the cache\n\n      this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n      nalUnits = [];\n      this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n      this.trigger('timelineStartInfo', track.timelineStartInfo);\n      moof = mp4Generator.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n      // throwing away hundreds of media segment fragments\n\n      boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n      sequenceNumber++;\n      boxes.set(moof);\n      boxes.set(mdat, moof.byteLength);\n      this.trigger('data', {\n        track: track,\n        boxes: boxes\n      });\n      this.resetStream_(); // Continue with the flush process now\n\n      this.trigger('done', 'VideoSegmentStream');\n    };\n\n    this.reset = function () {\n      this.resetStream_();\n      nalUnits = [];\n      this.gopCache_.length = 0;\n      gopsToAlignWith.length = 0;\n      this.trigger('reset');\n    };\n\n    this.resetStream_ = function () {\n      trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n      // for instance, when we are rendition switching\n\n      config = undefined;\n      pps = undefined;\n    }; // Search for a candidate Gop for gop-fusion from the gop cache and\n    // return it or return null if no good candidate was found\n\n\n    this.getGopForFusion_ = function (nalUnit) {\n      var halfSecond = 45000,\n          // Half-a-second in a 90khz clock\n      allowableOverlap = 10000,\n          // About 3 frames @ 30fps\n      nearestDistance = Infinity,\n          dtsDistance,\n          nearestGopObj,\n          currentGop,\n          currentGopObj,\n          i; // Search for the GOP nearest to the beginning of this nal unit\n\n      for (i = 0; i < this.gopCache_.length; i++) {\n        currentGopObj = this.gopCache_[i];\n        currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n        if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n          continue;\n        } // Reject Gops that would require a negative baseMediaDecodeTime\n\n\n        if (currentGop.dts < track.timelineStartInfo.dts) {\n          continue;\n        } // The distance between the end of the gop and the start of the nalUnit\n\n\n        dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n        // a half-second of the nal unit\n\n        if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n          // Always use the closest GOP we found if there is more than\n          // one candidate\n          if (!nearestGopObj || nearestDistance > dtsDistance) {\n            nearestGopObj = currentGopObj;\n            nearestDistance = dtsDistance;\n          }\n        }\n      }\n\n      if (nearestGopObj) {\n        return nearestGopObj.gop;\n      }\n\n      return null;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the START of the list\n\n\n    this.alignGopsAtStart_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n      byteLength = gops.byteLength;\n      nalCount = gops.nalCount;\n      duration = gops.duration;\n      alignIndex = gopIndex = 0;\n\n      while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n\n        if (align.pts === gop.pts) {\n          break;\n        }\n\n        if (gop.pts > align.pts) {\n          // this current gop starts after the current gop we want to align on, so increment\n          // align index\n          alignIndex++;\n          continue;\n        } // current gop starts before the current gop we want to align on. so increment gop\n        // index\n\n\n        gopIndex++;\n        byteLength -= gop.byteLength;\n        nalCount -= gop.nalCount;\n        duration -= gop.duration;\n      }\n\n      if (gopIndex === 0) {\n        // no gops to trim\n        return gops;\n      }\n\n      if (gopIndex === gops.length) {\n        // all gops trimmed, skip appending all gops\n        return null;\n      }\n\n      alignedGops = gops.slice(gopIndex);\n      alignedGops.byteLength = byteLength;\n      alignedGops.duration = duration;\n      alignedGops.nalCount = nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n    // of gopsToAlignWith starting from the END of the list\n\n\n    this.alignGopsAtEnd_ = function (gops) {\n      var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n      alignIndex = gopsToAlignWith.length - 1;\n      gopIndex = gops.length - 1;\n      alignEndIndex = null;\n      matchFound = false;\n\n      while (alignIndex >= 0 && gopIndex >= 0) {\n        align = gopsToAlignWith[alignIndex];\n        gop = gops[gopIndex];\n\n        if (align.pts === gop.pts) {\n          matchFound = true;\n          break;\n        }\n\n        if (align.pts > gop.pts) {\n          alignIndex--;\n          continue;\n        }\n\n        if (alignIndex === gopsToAlignWith.length - 1) {\n          // gop.pts is greater than the last alignment candidate. If no match is found\n          // by the end of this loop, we still want to append gops that come after this\n          // point\n          alignEndIndex = gopIndex;\n        }\n\n        gopIndex--;\n      }\n\n      if (!matchFound && alignEndIndex === null) {\n        return null;\n      }\n\n      var trimIndex;\n\n      if (matchFound) {\n        trimIndex = gopIndex;\n      } else {\n        trimIndex = alignEndIndex;\n      }\n\n      if (trimIndex === 0) {\n        return gops;\n      }\n\n      var alignedGops = gops.slice(trimIndex);\n      var metadata = alignedGops.reduce(function (total, gop) {\n        total.byteLength += gop.byteLength;\n        total.duration += gop.duration;\n        total.nalCount += gop.nalCount;\n        return total;\n      }, {\n        byteLength: 0,\n        duration: 0,\n        nalCount: 0\n      });\n      alignedGops.byteLength = metadata.byteLength;\n      alignedGops.duration = metadata.duration;\n      alignedGops.nalCount = metadata.nalCount;\n      alignedGops.pts = alignedGops[0].pts;\n      alignedGops.dts = alignedGops[0].dts;\n      return alignedGops;\n    };\n\n    this.alignGopsWith = function (newGopsToAlignWith) {\n      gopsToAlignWith = newGopsToAlignWith;\n    };\n  };\n\n  _VideoSegmentStream.prototype = new stream();\n  /**\n   * A Stream that can combine multiple streams (ie. audio & video)\n   * into a single output segment for MSE. Also supports audio-only\n   * and video-only streams.\n   * @param options {object} transmuxer options object\n   * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n   *        in the source; false to adjust the first segment to start at media timeline start.\n   */\n\n  _CoalesceStream = function CoalesceStream(options, metadataStream) {\n    // Number of Tracks per output segment\n    // If greater than 1, we combine multiple\n    // tracks into a single segment\n    this.numberOfTracks = 0;\n    this.metadataStream = metadataStream;\n    options = options || {};\n\n    if (typeof options.remux !== 'undefined') {\n      this.remuxTracks = !!options.remux;\n    } else {\n      this.remuxTracks = true;\n    }\n\n    if (typeof options.keepOriginalTimestamps === 'boolean') {\n      this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n    } else {\n      this.keepOriginalTimestamps = false;\n    }\n\n    this.pendingTracks = [];\n    this.videoTrack = null;\n    this.pendingBoxes = [];\n    this.pendingCaptions = [];\n    this.pendingMetadata = [];\n    this.pendingBytes = 0;\n    this.emittedTracks = 0;\n\n    _CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n\n    this.push = function (output) {\n      // buffer incoming captions until the associated video segment\n      // finishes\n      if (output.text) {\n        return this.pendingCaptions.push(output);\n      } // buffer incoming id3 tags until the final flush\n\n\n      if (output.frames) {\n        return this.pendingMetadata.push(output);\n      } // Add this track to the list of pending tracks and store\n      // important information required for the construction of\n      // the final segment\n\n\n      this.pendingTracks.push(output.track);\n      this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n      // We unshift audio and push video because\n      // as of Chrome 75 when switching from\n      // one init segment to another if the video\n      // mdat does not appear after the audio mdat\n      // only audio will play for the duration of our transmux.\n\n      if (output.track.type === 'video') {\n        this.videoTrack = output.track;\n        this.pendingBoxes.push(output.boxes);\n      }\n\n      if (output.track.type === 'audio') {\n        this.audioTrack = output.track;\n        this.pendingBoxes.unshift(output.boxes);\n      }\n    };\n  };\n\n  _CoalesceStream.prototype = new stream();\n\n  _CoalesceStream.prototype.flush = function (flushSource) {\n    var offset = 0,\n        event = {\n      captions: [],\n      captionStreams: {},\n      metadata: [],\n      info: {}\n    },\n        caption,\n        id3,\n        initSegment,\n        timelineStartPts = 0,\n        i;\n\n    if (this.pendingTracks.length < this.numberOfTracks) {\n      if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n        // Return because we haven't received a flush from a data-generating\n        // portion of the segment (meaning that we have only recieved meta-data\n        // or captions.)\n        return;\n      } else if (this.remuxTracks) {\n        // Return until we have enough tracks from the pipeline to remux (if we\n        // are remuxing audio and video into a single MP4)\n        return;\n      } else if (this.pendingTracks.length === 0) {\n        // In the case where we receive a flush without any data having been\n        // received we consider it an emitted track for the purposes of coalescing\n        // `done` events.\n        // We do this for the case where there is an audio and video track in the\n        // segment but no audio data. (seen in several playlists with alternate\n        // audio tracks and no audio present in the main TS segments.)\n        this.emittedTracks++;\n\n        if (this.emittedTracks >= this.numberOfTracks) {\n          this.trigger('done');\n          this.emittedTracks = 0;\n        }\n\n        return;\n      }\n    }\n\n    if (this.videoTrack) {\n      timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n      videoProperties.forEach(function (prop) {\n        event.info[prop] = this.videoTrack[prop];\n      }, this);\n    } else if (this.audioTrack) {\n      timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n      audioProperties.forEach(function (prop) {\n        event.info[prop] = this.audioTrack[prop];\n      }, this);\n    }\n\n    if (this.videoTrack || this.audioTrack) {\n      if (this.pendingTracks.length === 1) {\n        event.type = this.pendingTracks[0].type;\n      } else {\n        event.type = 'combined';\n      }\n\n      this.emittedTracks += this.pendingTracks.length;\n      initSegment = mp4Generator.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n      event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n      // and track definitions\n\n      event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n      event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n      for (i = 0; i < this.pendingBoxes.length; i++) {\n        event.data.set(this.pendingBoxes[i], offset);\n        offset += this.pendingBoxes[i].byteLength;\n      } // Translate caption PTS times into second offsets to match the\n      // video timeline for the segment, and add track info\n\n\n      for (i = 0; i < this.pendingCaptions.length; i++) {\n        caption = this.pendingCaptions[i];\n        caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n        caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n        event.captionStreams[caption.stream] = true;\n        event.captions.push(caption);\n      } // Translate ID3 frame PTS times into second offsets to match the\n      // video timeline for the segment\n\n\n      for (i = 0; i < this.pendingMetadata.length; i++) {\n        id3 = this.pendingMetadata[i];\n        id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n        event.metadata.push(id3);\n      } // We add this to every single emitted segment even though we only need\n      // it for the first\n\n\n      event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n      this.pendingTracks.length = 0;\n      this.videoTrack = null;\n      this.pendingBoxes.length = 0;\n      this.pendingCaptions.length = 0;\n      this.pendingBytes = 0;\n      this.pendingMetadata.length = 0; // Emit the built segment\n      // We include captions and ID3 tags for backwards compatibility,\n      // ideally we should send only video and audio in the data event\n\n      this.trigger('data', event); // Emit each caption to the outside world\n      // Ideally, this would happen immediately on parsing captions,\n      // but we need to ensure that video data is sent back first\n      // so that caption timing can be adjusted to match video timing\n\n      for (i = 0; i < event.captions.length; i++) {\n        caption = event.captions[i];\n        this.trigger('caption', caption);\n      } // Emit each id3 tag to the outside world\n      // Ideally, this would happen immediately on parsing the tag,\n      // but we need to ensure that video data is sent back first\n      // so that ID3 frame timing can be adjusted to match video timing\n\n\n      for (i = 0; i < event.metadata.length; i++) {\n        id3 = event.metadata[i];\n        this.trigger('id3Frame', id3);\n      }\n    } // Only emit `done` if all tracks have been flushed and emitted\n\n\n    if (this.emittedTracks >= this.numberOfTracks) {\n      this.trigger('done');\n      this.emittedTracks = 0;\n    }\n  };\n\n  _CoalesceStream.prototype.setRemux = function (val) {\n    this.remuxTracks = val;\n  };\n  /**\n   * A Stream that expects MP2T binary data as input and produces\n   * corresponding media segments, suitable for use with Media Source\n   * Extension (MSE) implementations that support the ISO BMFF byte\n   * stream format, like Chrome.\n   */\n\n\n  _Transmuxer = function Transmuxer(options) {\n    var self = this,\n        hasFlushed = true,\n        videoTrack,\n        audioTrack;\n\n    _Transmuxer.prototype.init.call(this);\n\n    options = options || {};\n    this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n    this.transmuxPipeline_ = {};\n\n    this.setupAacPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'aac';\n      pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.aacStream = new aac();\n      pipeline.audioTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('audio');\n      pipeline.timedMetadataTimestampRolloverStream = new m2ts_1.TimestampRolloverStream('timed-metadata');\n      pipeline.adtsStream = new adts();\n      pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.aacStream;\n      pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n      pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n      pipeline.metadataStream.on('timestamp', function (frame) {\n        pipeline.aacStream.setTimestamp(frame.timeStamp);\n      });\n      pipeline.aacStream.on('data', function (data) {\n        if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n          return;\n        }\n\n        audioTrack = audioTrack || {\n          timelineStartInfo: {\n            baseMediaDecodeTime: self.baseMediaDecodeTime\n          },\n          codec: 'adts',\n          type: 'audio'\n        }; // hook up the audio segment stream to the first track with aac data\n\n        pipeline.coalesceStream.numberOfTracks++;\n        pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n        pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n        pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n        pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n        self.trigger('trackinfo', {\n          hasAudio: !!audioTrack,\n          hasVideo: !!videoTrack\n        });\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    };\n\n    this.setupTsPipeline = function () {\n      var pipeline = {};\n      this.transmuxPipeline_ = pipeline;\n      pipeline.type = 'ts';\n      pipeline.metadataStream = new m2ts_1.MetadataStream(); // set up the parsing pipeline\n\n      pipeline.packetStream = new m2ts_1.TransportPacketStream();\n      pipeline.parseStream = new m2ts_1.TransportParseStream();\n      pipeline.elementaryStream = new m2ts_1.ElementaryStream();\n      pipeline.timestampRolloverStream = new m2ts_1.TimestampRolloverStream();\n      pipeline.adtsStream = new adts();\n      pipeline.h264Stream = new H264Stream();\n      pipeline.captionStream = new m2ts_1.CaptionStream(options);\n      pipeline.coalesceStream = new _CoalesceStream(options, pipeline.metadataStream);\n      pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n      pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n      // demux the streams\n\n      pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n      pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n      pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n      pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n      pipeline.elementaryStream.on('data', function (data) {\n        var i;\n\n        if (data.type === 'metadata') {\n          i = data.tracks.length; // scan the tracks listed in the metadata\n\n          while (i--) {\n            if (!videoTrack && data.tracks[i].type === 'video') {\n              videoTrack = data.tracks[i];\n              videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            } else if (!audioTrack && data.tracks[i].type === 'audio') {\n              audioTrack = data.tracks[i];\n              audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n            }\n          } // hook up the video segment stream to the first track with h264 data\n\n\n          if (videoTrack && !pipeline.videoSegmentStream) {\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.videoSegmentStream = new _VideoSegmentStream(videoTrack, options);\n            pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n            pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n              // When video emits timelineStartInfo data after a flush, we forward that\n              // info to the AudioSegmentStream, if it exists, because video timeline\n              // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n              // because this is a particularly subtle form of timestamp alteration.\n              if (audioTrack && !options.keepOriginalTimestamps) {\n                audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                // very earliest DTS we have seen in video because Chrome will\n                // interpret any video track with a baseMediaDecodeTime that is\n                // non-zero as a gap.\n\n                pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n            pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n            pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n              if (audioTrack) {\n                pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n              }\n            });\n            pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n            pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n          }\n\n          if (audioTrack && !pipeline.audioSegmentStream) {\n            // hook up the audio segment stream to the first track with aac data\n            pipeline.coalesceStream.numberOfTracks++;\n            pipeline.audioSegmentStream = new _AudioSegmentStream(audioTrack, options);\n            pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n            pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n            pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n            pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n          } // emit pmt info\n\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }\n      }); // Re-emit any data coming from the coalesce stream to the outside world\n\n      pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n      pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n        id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n        self.trigger('id3Frame', id3Frame);\n      });\n      pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n      pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n      addPipelineLogRetriggers(this, pipeline);\n    }; // hook up the segment streams once track metadata is delivered\n\n\n    this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n      var pipeline = this.transmuxPipeline_;\n\n      if (!options.keepOriginalTimestamps) {\n        this.baseMediaDecodeTime = baseMediaDecodeTime;\n      }\n\n      if (audioTrack) {\n        audioTrack.timelineStartInfo.dts = undefined;\n        audioTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(audioTrack);\n\n        if (pipeline.audioTimestampRolloverStream) {\n          pipeline.audioTimestampRolloverStream.discontinuity();\n        }\n      }\n\n      if (videoTrack) {\n        if (pipeline.videoSegmentStream) {\n          pipeline.videoSegmentStream.gopCache_ = [];\n        }\n\n        videoTrack.timelineStartInfo.dts = undefined;\n        videoTrack.timelineStartInfo.pts = undefined;\n        trackDecodeInfo.clearDtsInfo(videoTrack);\n        pipeline.captionStream.reset();\n      }\n\n      if (pipeline.timestampRolloverStream) {\n        pipeline.timestampRolloverStream.discontinuity();\n      }\n    };\n\n    this.setAudioAppendStart = function (timestamp) {\n      if (audioTrack) {\n        this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n      }\n    };\n\n    this.setRemux = function (val) {\n      var pipeline = this.transmuxPipeline_;\n      options.remux = val;\n\n      if (pipeline && pipeline.coalesceStream) {\n        pipeline.coalesceStream.setRemux(val);\n      }\n    };\n\n    this.alignGopsWith = function (gopsToAlignWith) {\n      if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n        this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n      }\n    };\n\n    this.getLogTrigger_ = function (key) {\n      var self = this;\n      return function (event) {\n        event.stream = key;\n        self.trigger('log', event);\n      };\n    }; // feed incoming data to the front of the parsing pipeline\n\n\n    this.push = function (data) {\n      if (hasFlushed) {\n        var isAac = isLikelyAacData(data);\n\n        if (isAac && this.transmuxPipeline_.type !== 'aac') {\n          this.setupAacPipeline();\n        } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n          this.setupTsPipeline();\n        }\n\n        hasFlushed = false;\n      }\n\n      this.transmuxPipeline_.headOfPipeline.push(data);\n    }; // flush any buffered data\n\n\n    this.flush = function () {\n      hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n      this.transmuxPipeline_.headOfPipeline.flush();\n    };\n\n    this.endTimeline = function () {\n      this.transmuxPipeline_.headOfPipeline.endTimeline();\n    };\n\n    this.reset = function () {\n      if (this.transmuxPipeline_.headOfPipeline) {\n        this.transmuxPipeline_.headOfPipeline.reset();\n      }\n    }; // Caption data has to be reset when seeking outside buffered range\n\n\n    this.resetCaptions = function () {\n      if (this.transmuxPipeline_.captionStream) {\n        this.transmuxPipeline_.captionStream.reset();\n      }\n    };\n  };\n\n  _Transmuxer.prototype = new stream();\n  var transmuxer = {\n    Transmuxer: _Transmuxer,\n    VideoSegmentStream: _VideoSegmentStream,\n    AudioSegmentStream: _AudioSegmentStream,\n    AUDIO_PROPERTIES: audioProperties,\n    VIDEO_PROPERTIES: videoProperties,\n    // exported for testing\n    generateSegmentTimingInfo: generateSegmentTimingInfo\n  };\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n\n  var toUnsigned$3 = function toUnsigned(value) {\n    return value >>> 0;\n  };\n\n  var toHexString$1 = function toHexString(value) {\n    return ('00' + value.toString(16)).slice(-2);\n  };\n\n  var bin = {\n    toUnsigned: toUnsigned$3,\n    toHexString: toHexString$1\n  };\n\n  var parseType$1 = function parseType(buffer) {\n    var result = '';\n    result += String.fromCharCode(buffer[0]);\n    result += String.fromCharCode(buffer[1]);\n    result += String.fromCharCode(buffer[2]);\n    result += String.fromCharCode(buffer[3]);\n    return result;\n  };\n\n  var parseType_1 = parseType$1;\n  var toUnsigned$2 = bin.toUnsigned;\n\n  var findBox = function findBox(data, path) {\n    var results = [],\n        i,\n        size,\n        type,\n        end,\n        subresults;\n\n    if (!path.length) {\n      // short-circuit the search for empty paths\n      return null;\n    }\n\n    for (i = 0; i < data.byteLength;) {\n      size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n      type = parseType_1(data.subarray(i + 4, i + 8));\n      end = size > 1 ? i + size : data.byteLength;\n\n      if (type === path[0]) {\n        if (path.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data.subarray(i + 8, end));\n        } else {\n          // recursively search for the next box along the path\n          subresults = findBox(data.subarray(i + 8, end), path.slice(1));\n\n          if (subresults.length) {\n            results = results.concat(subresults);\n          }\n        }\n      }\n\n      i = end;\n    } // we've finished searching all of data\n\n\n    return results;\n  };\n\n  var findBox_1 = findBox;\n  var toUnsigned$1 = bin.toUnsigned;\n  var getUint64$1 = numbers.getUint64;\n\n  var tfdt = function tfdt(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4))\n    };\n\n    if (result.version === 1) {\n      result.baseMediaDecodeTime = getUint64$1(data.subarray(4));\n    } else {\n      result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n    }\n\n    return result;\n  };\n\n  var parseTfdt = tfdt;\n\n  var parseSampleFlags = function parseSampleFlags(flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: flags[2] << 8 | flags[3]\n    };\n  };\n\n  var parseSampleFlags_1 = parseSampleFlags;\n\n  var trun = function trun(data) {\n    var result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      samples: []\n    },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n    dataOffsetPresent = result.flags[2] & 0x01,\n        // compare with 2nd byte of 0x1\n    firstSampleFlagsPresent = result.flags[2] & 0x04,\n        // compare with 2nd byte of 0x4\n    sampleDurationPresent = result.flags[1] & 0x01,\n        // compare with 2nd byte of 0x100\n    sampleSizePresent = result.flags[1] & 0x02,\n        // compare with 2nd byte of 0x200\n    sampleFlagsPresent = result.flags[1] & 0x04,\n        // compare with 2nd byte of 0x400\n    sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n        // compare with 2nd byte of 0x800\n    sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n\n    if (dataOffsetPresent) {\n      // 32 bit signed integer\n      result.dataOffset = view.getInt32(offset);\n      offset += 4;\n    } // Overrides the flags for the first sample only. The order of\n    // optional values will be: duration, size, compositionTimeOffset\n\n\n    if (firstSampleFlagsPresent && sampleCount) {\n      sample = {\n        flags: parseSampleFlags_1(data.subarray(offset, offset + 4))\n      };\n      offset += 4;\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n      sampleCount--;\n    }\n\n    while (sampleCount--) {\n      sample = {};\n\n      if (sampleDurationPresent) {\n        sample.duration = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleSizePresent) {\n        sample.size = view.getUint32(offset);\n        offset += 4;\n      }\n\n      if (sampleFlagsPresent) {\n        sample.flags = parseSampleFlags_1(data.subarray(offset, offset + 4));\n        offset += 4;\n      }\n\n      if (sampleCompositionTimeOffsetPresent) {\n        if (result.version === 1) {\n          sample.compositionTimeOffset = view.getInt32(offset);\n        } else {\n          sample.compositionTimeOffset = view.getUint32(offset);\n        }\n\n        offset += 4;\n      }\n\n      result.samples.push(sample);\n    }\n\n    return result;\n  };\n\n  var parseTrun = trun;\n\n  var tfhd = function tfhd(data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n      version: data[0],\n      flags: new Uint8Array(data.subarray(1, 4)),\n      trackId: view.getUint32(4)\n    },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof = result.flags[0] & 0x020000,\n        i;\n    i = 8;\n\n    if (baseDataOffsetPresent) {\n      i += 4; // truncate top 4 bytes\n      // FIXME: should we read the full 64 bits?\n\n      result.baseDataOffset = view.getUint32(12);\n      i += 4;\n    }\n\n    if (sampleDescriptionIndexPresent) {\n      result.sampleDescriptionIndex = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleDurationPresent) {\n      result.defaultSampleDuration = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleSizePresent) {\n      result.defaultSampleSize = view.getUint32(i);\n      i += 4;\n    }\n\n    if (defaultSampleFlagsPresent) {\n      result.defaultSampleFlags = view.getUint32(i);\n    }\n\n    if (durationIsEmpty) {\n      result.durationIsEmpty = true;\n    }\n\n    if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n      result.baseDataOffsetIsMoof = true;\n    }\n\n    return result;\n  };\n\n  var parseTfhd = tfhd;\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n  var win;\n\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n\n  var window_1 = win;\n  var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n  var CaptionStream = captionStream.CaptionStream;\n  /**\n    * Maps an offset in the mdat to a sample based on the the size of the samples.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Number} offset - The offset into the mdat\n    * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n    * @return {?Object} The matching sample, or null if no match was found.\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n  var mapToSample = function mapToSample(offset, samples) {\n    var approximateOffset = offset;\n\n    for (var i = 0; i < samples.length; i++) {\n      var sample = samples[i];\n\n      if (approximateOffset < sample.size) {\n        return sample;\n      }\n\n      approximateOffset -= sample.size;\n    }\n\n    return null;\n  };\n  /**\n    * Finds SEI nal units contained in a Media Data Box.\n    * Assumes that `parseSamples` has been called first.\n    *\n    * @param {Uint8Array} avcStream - The bytes of the mdat\n    * @param {Object[]} samples - The samples parsed out by `parseSamples`\n    * @param {Number} trackId - The trackId of this video track\n    * @return {Object[]} seiNals - the parsed SEI NALUs found.\n    *   The contents of the seiNal should match what is expected by\n    *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n    *\n    * @see ISO-BMFF-12/2015, Section 8.1.1\n    * @see Rec. ITU-T H.264, 7.3.2.3.1\n   **/\n\n\n  var findSeiNals = function findSeiNals(avcStream, samples, trackId) {\n    var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n        result = {\n      logs: [],\n      seiNals: []\n    },\n        seiNal,\n        i,\n        length,\n        lastMatchedSample;\n\n    for (i = 0; i + 4 < avcStream.length; i += length) {\n      length = avcView.getUint32(i);\n      i += 4; // Bail if this doesn't appear to be an H264 stream\n\n      if (length <= 0) {\n        continue;\n      }\n\n      switch (avcStream[i] & 0x1F) {\n        case 0x06:\n          var data = avcStream.subarray(i + 1, i + 1 + length);\n          var matchingSample = mapToSample(i, samples);\n          seiNal = {\n            nalUnitType: 'sei_rbsp',\n            size: length,\n            data: data,\n            escapedRBSP: discardEmulationPreventionBytes(data),\n            trackId: trackId\n          };\n\n          if (matchingSample) {\n            seiNal.pts = matchingSample.pts;\n            seiNal.dts = matchingSample.dts;\n            lastMatchedSample = matchingSample;\n          } else if (lastMatchedSample) {\n            // If a matching sample cannot be found, use the last\n            // sample's values as they should be as close as possible\n            seiNal.pts = lastMatchedSample.pts;\n            seiNal.dts = lastMatchedSample.dts;\n          } else {\n            result.logs.push({\n              level: 'warn',\n              message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n            });\n            break;\n          }\n\n          result.seiNals.push(seiNal);\n          break;\n      }\n    }\n\n    return result;\n  };\n  /**\n    * Parses sample information out of Track Run Boxes and calculates\n    * the absolute presentation and decode timestamps of each sample.\n    *\n    * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n    * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n        @see ISO-BMFF-12/2015, Section 8.8.12\n    * @param {Object} tfhd - The parsed Track Fragment Header\n    *   @see inspect.parseTfhd\n    * @return {Object[]} the parsed samples\n    *\n    * @see ISO-BMFF-12/2015, Section 8.8.8\n   **/\n\n\n  var parseSamples = function parseSamples(truns, baseMediaDecodeTime, tfhd) {\n    var currentDts = baseMediaDecodeTime;\n    var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n    var defaultSampleSize = tfhd.defaultSampleSize || 0;\n    var trackId = tfhd.trackId;\n    var allSamples = [];\n    truns.forEach(function (trun) {\n      // Note: We currently do not parse the sample table as well\n      // as the trun. It's possible some sources will require this.\n      // moov > trak > mdia > minf > stbl\n      var trackRun = parseTrun(trun);\n      var samples = trackRun.samples;\n      samples.forEach(function (sample) {\n        if (sample.duration === undefined) {\n          sample.duration = defaultSampleDuration;\n        }\n\n        if (sample.size === undefined) {\n          sample.size = defaultSampleSize;\n        }\n\n        sample.trackId = trackId;\n        sample.dts = currentDts;\n\n        if (sample.compositionTimeOffset === undefined) {\n          sample.compositionTimeOffset = 0;\n        }\n\n        if (typeof currentDts === 'bigint') {\n          sample.pts = currentDts + window_1.BigInt(sample.compositionTimeOffset);\n          currentDts += window_1.BigInt(sample.duration);\n        } else {\n          sample.pts = currentDts + sample.compositionTimeOffset;\n          currentDts += sample.duration;\n        }\n      });\n      allSamples = allSamples.concat(samples);\n    });\n    return allSamples;\n  };\n  /**\n    * Parses out caption nals from an FMP4 segment's video tracks.\n    *\n    * @param {Uint8Array} segment - The bytes of a single segment\n    * @param {Number} videoTrackId - The trackId of a video track in the segment\n    * @return {Object.<Number, Object[]>} A mapping of video trackId to\n    *   a list of seiNals found in that track\n   **/\n\n\n  var parseCaptionNals = function parseCaptionNals(segment, videoTrackId) {\n    // To get the samples\n    var trafs = findBox_1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n    var mdats = findBox_1(segment, ['mdat']);\n    var captionNals = {};\n    var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n    mdats.forEach(function (mdat, index) {\n      var matchingTraf = trafs[index];\n      mdatTrafPairs.push({\n        mdat: mdat,\n        traf: matchingTraf\n      });\n    });\n    mdatTrafPairs.forEach(function (pair) {\n      var mdat = pair.mdat;\n      var traf = pair.traf;\n      var tfhd = findBox_1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n      var headerInfo = parseTfhd(tfhd[0]);\n      var trackId = headerInfo.trackId;\n      var tfdt = findBox_1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n      var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt(tfdt[0]).baseMediaDecodeTime : 0;\n      var truns = findBox_1(traf, ['trun']);\n      var samples;\n      var result; // Only parse video data for the chosen video track\n\n      if (videoTrackId === trackId && truns.length > 0) {\n        samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n        result = findSeiNals(mdat, samples, trackId);\n\n        if (!captionNals[trackId]) {\n          captionNals[trackId] = {\n            seiNals: [],\n            logs: []\n          };\n        }\n\n        captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n        captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n      }\n    });\n    return captionNals;\n  };\n  /**\n    * Parses out inband captions from an MP4 container and returns\n    * caption objects that can be used by WebVTT and the TextTrack API.\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n    * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n    * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n    *\n    * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n    * @param {Number} trackId - The id of the video track to parse\n    * @param {Number} timescale - The timescale for the video track from the init segment\n    *\n    * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n    * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n    * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n    * @return {String} parsedCaptions[].text - The visible content of the caption\n   **/\n\n\n  var parseEmbeddedCaptions = function parseEmbeddedCaptions(segment, trackId, timescale) {\n    var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n    if (trackId === null) {\n      return null;\n    }\n\n    captionNals = parseCaptionNals(segment, trackId);\n    var trackNals = captionNals[trackId] || {};\n    return {\n      seiNals: trackNals.seiNals,\n      logs: trackNals.logs,\n      timescale: timescale\n    };\n  };\n  /**\n    * Converts SEI NALUs into captions that can be used by video.js\n   **/\n\n\n  var CaptionParser = function CaptionParser() {\n    var isInitialized = false;\n    var captionStream; // Stores segments seen before trackId and timescale are set\n\n    var segmentCache; // Stores video track ID of the track being parsed\n\n    var trackId; // Stores the timescale of the track being parsed\n\n    var timescale; // Stores captions parsed so far\n\n    var parsedCaptions; // Stores whether we are receiving partial data or not\n\n    var parsingPartial;\n    /**\n      * A method to indicate whether a CaptionParser has been initalized\n      * @returns {Boolean}\n     **/\n\n    this.isInitialized = function () {\n      return isInitialized;\n    };\n    /**\n      * Initializes the underlying CaptionStream, SEI NAL parsing\n      * and management, and caption collection\n     **/\n\n\n    this.init = function (options) {\n      captionStream = new CaptionStream();\n      isInitialized = true;\n      parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n      captionStream.on('data', function (event) {\n        // Convert to seconds in the source's timescale\n        event.startTime = event.startPts / timescale;\n        event.endTime = event.endPts / timescale;\n        parsedCaptions.captions.push(event);\n        parsedCaptions.captionStreams[event.stream] = true;\n      });\n      captionStream.on('log', function (log) {\n        parsedCaptions.logs.push(log);\n      });\n    };\n    /**\n      * Determines if a new video track will be selected\n      * or if the timescale changed\n      * @return {Boolean}\n     **/\n\n\n    this.isNewInit = function (videoTrackIds, timescales) {\n      if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n        return false;\n      }\n\n      return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n    };\n    /**\n      * Parses out SEI captions and interacts with underlying\n      * CaptionStream to return dispatched captions\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n      * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n      * @see parseEmbeddedCaptions\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.parse = function (segment, videoTrackIds, timescales) {\n      var parsedData;\n\n      if (!this.isInitialized()) {\n        return null; // This is not likely to be a video segment\n      } else if (!videoTrackIds || !timescales) {\n        return null;\n      } else if (this.isNewInit(videoTrackIds, timescales)) {\n        // Use the first video track only as there is no\n        // mechanism to switch to other video tracks\n        trackId = videoTrackIds[0];\n        timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n        // data until we have one.\n        // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n      } else if (trackId === null || !timescale) {\n        segmentCache.push(segment);\n        return null;\n      } // Now that a timescale and trackId is set, parse cached segments\n\n\n      while (segmentCache.length > 0) {\n        var cachedSegment = segmentCache.shift();\n        this.parse(cachedSegment, videoTrackIds, timescales);\n      }\n\n      parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n\n      if (parsedData && parsedData.logs) {\n        parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n      }\n\n      if (parsedData === null || !parsedData.seiNals) {\n        if (parsedCaptions.logs.length) {\n          return {\n            logs: parsedCaptions.logs,\n            captions: [],\n            captionStreams: []\n          };\n        }\n\n        return null;\n      }\n\n      this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n      this.flushStream();\n      return parsedCaptions;\n    };\n    /**\n      * Pushes SEI NALUs onto CaptionStream\n      * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n      * Assumes that `parseCaptionNals` has been called first\n      * @see m2ts/caption-stream.js\n      **/\n\n\n    this.pushNals = function (nals) {\n      if (!this.isInitialized() || !nals || nals.length === 0) {\n        return null;\n      }\n\n      nals.forEach(function (nal) {\n        captionStream.push(nal);\n      });\n    };\n    /**\n      * Flushes underlying CaptionStream to dispatch processed, displayable captions\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.flushStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n\n      if (!parsingPartial) {\n        captionStream.flush();\n      } else {\n        captionStream.partialFlush();\n      }\n    };\n    /**\n      * Reset caption buckets for new data\n     **/\n\n\n    this.clearParsedCaptions = function () {\n      parsedCaptions.captions = [];\n      parsedCaptions.captionStreams = {};\n      parsedCaptions.logs = [];\n    };\n    /**\n      * Resets underlying CaptionStream\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.resetCaptionStream = function () {\n      if (!this.isInitialized()) {\n        return null;\n      }\n\n      captionStream.reset();\n    };\n    /**\n      * Convenience method to clear all captions flushed from the\n      * CaptionStream and still being parsed\n      * @see m2ts/caption-stream.js\n     **/\n\n\n    this.clearAllCaptions = function () {\n      this.clearParsedCaptions();\n      this.resetCaptionStream();\n    };\n    /**\n      * Reset caption parser\n     **/\n\n\n    this.reset = function () {\n      segmentCache = [];\n      trackId = null;\n      timescale = null;\n\n      if (!parsedCaptions) {\n        parsedCaptions = {\n          captions: [],\n          // CC1, CC2, CC3, CC4\n          captionStreams: {},\n          logs: []\n        };\n      } else {\n        this.clearParsedCaptions();\n      }\n\n      this.resetCaptionStream();\n    };\n\n    this.reset();\n  };\n\n  var captionParser = CaptionParser;\n  var toUnsigned = bin.toUnsigned;\n  var toHexString = bin.toHexString;\n  var getUint64 = numbers.getUint64;\n  var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader;\n  /**\n   * Parses an MP4 initialization segment and extracts the timescale\n   * values for any declared tracks. Timescale values indicate the\n   * number of clock ticks per second to assume for time-based values\n   * elsewhere in the MP4.\n   *\n   * To determine the start time of an MP4, you need two pieces of\n   * information: the timescale unit and the earliest base media decode\n   * time. Multiple timescales can be specified within an MP4 but the\n   * base media decode time is always expressed in the timescale from\n   * the media header box for the track:\n   * ```\n   * moov > trak > mdia > mdhd.timescale\n   * ```\n   * @param init {Uint8Array} the bytes of the init segment\n   * @return {object} a hash of track ids to timescale values or null if\n   * the init segment is malformed.\n   */\n\n  timescale = function timescale(init) {\n    var result = {},\n        traks = findBox_1(init, ['moov', 'trak']); // mdhd timescale\n\n    return traks.reduce(function (result, trak) {\n      var tkhd, version, index, id, mdhd;\n      tkhd = findBox_1(trak, ['tkhd'])[0];\n\n      if (!tkhd) {\n        return null;\n      }\n\n      version = tkhd[0];\n      index = version === 0 ? 12 : 20;\n      id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n      mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\n\n      if (!mdhd) {\n        return null;\n      }\n\n      version = mdhd[0];\n      index = version === 0 ? 12 : 20;\n      result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n      return result;\n    }, result);\n  };\n  /**\n   * Determine the base media decode start time, in seconds, for an MP4\n   * fragment. If multiple fragments are specified, the earliest time is\n   * returned.\n   *\n   * The base media decode time can be parsed from track fragment\n   * metadata:\n   * ```\n   * moof > traf > tfdt.baseMediaDecodeTime\n   * ```\n   * It requires the timescale value from the mdhd to interpret.\n   *\n   * @param timescale {object} a hash of track ids to timescale values.\n   * @return {number} the earliest base media decode start time for the\n   * fragment, in seconds\n   */\n\n\n  startTime = function startTime(timescale, fragment) {\n    var trafs; // we need info from two childrend of each track fragment box\n\n    trafs = findBox_1(fragment, ['moof', 'traf']); // determine the start times for each track\n\n    var lowestTime = trafs.reduce(function (acc, traf) {\n      var tfhd = findBox_1(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n      var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n      var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n      var tfdt = findBox_1(traf, ['tfdt'])[0];\n      var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n      var baseTime; // version 1 is 64 bit\n\n      if (tfdt[0] === 1) {\n        baseTime = getUint64(tfdt.subarray(4, 12));\n      } else {\n        baseTime = dv.getUint32(4);\n      } // convert base time to seconds if it is a valid number.\n\n\n      var seconds;\n\n      if (typeof baseTime === 'bigint') {\n        seconds = baseTime / window_1.BigInt(scale);\n      } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n        seconds = baseTime / scale;\n      }\n\n      if (seconds < Number.MAX_SAFE_INTEGER) {\n        seconds = Number(seconds);\n      }\n\n      if (seconds < acc) {\n        acc = seconds;\n      }\n\n      return acc;\n    }, Infinity);\n    return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n  };\n  /**\n   * Determine the composition start, in seconds, for an MP4\n   * fragment.\n   *\n   * The composition start time of a fragment can be calculated using the base\n   * media decode time, composition time offset, and timescale, as follows:\n   *\n   * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n   *\n   * All of the aforementioned information is contained within a media fragment's\n   * `traf` box, except for timescale info, which comes from the initialization\n   * segment, so a track id (also contained within a `traf`) is also necessary to\n   * associate it with a timescale\n   *\n   *\n   * @param timescales {object} - a hash of track ids to timescale values.\n   * @param fragment {Unit8Array} - the bytes of a media segment\n   * @return {number} the composition start time for the fragment, in seconds\n   **/\n\n\n  compositionStartTime = function compositionStartTime(timescales, fragment) {\n    var trafBoxes = findBox_1(fragment, ['moof', 'traf']);\n    var baseMediaDecodeTime = 0;\n    var compositionTimeOffset = 0;\n    var trackId;\n\n    if (trafBoxes && trafBoxes.length) {\n      // The spec states that track run samples contained within a `traf` box are contiguous, but\n      // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n      // We will assume that they are, so we only need the first to calculate start time.\n      var tfhd = findBox_1(trafBoxes[0], ['tfhd'])[0];\n      var trun = findBox_1(trafBoxes[0], ['trun'])[0];\n      var tfdt = findBox_1(trafBoxes[0], ['tfdt'])[0];\n\n      if (tfhd) {\n        var parsedTfhd = parseTfhd(tfhd);\n        trackId = parsedTfhd.trackId;\n      }\n\n      if (tfdt) {\n        var parsedTfdt = parseTfdt(tfdt);\n        baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n      }\n\n      if (trun) {\n        var parsedTrun = parseTrun(trun);\n\n        if (parsedTrun.samples && parsedTrun.samples.length) {\n          compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n        }\n      }\n    } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n    // specified.\n\n\n    var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n    if (typeof baseMediaDecodeTime === 'bigint') {\n      compositionTimeOffset = window_1.BigInt(compositionTimeOffset);\n      timescale = window_1.BigInt(timescale);\n    }\n\n    var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n\n    if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n      result = Number(result);\n    }\n\n    return result;\n  };\n  /**\n    * Find the trackIds of the video tracks in this source.\n    * Found by parsing the Handler Reference and Track Header Boxes:\n    *   moov > trak > mdia > hdlr\n    *   moov > trak > tkhd\n    *\n    * @param {Uint8Array} init - The bytes of the init segment for this source\n    * @return {Number[]} A list of trackIds\n    *\n    * @see ISO-BMFF-12/2015, Section 8.4.3\n   **/\n\n\n  getVideoTrackIds = function getVideoTrackIds(init) {\n    var traks = findBox_1(init, ['moov', 'trak']);\n    var videoTrackIds = [];\n    traks.forEach(function (trak) {\n      var hdlrs = findBox_1(trak, ['mdia', 'hdlr']);\n      var tkhds = findBox_1(trak, ['tkhd']);\n      hdlrs.forEach(function (hdlr, index) {\n        var handlerType = parseType_1(hdlr.subarray(8, 12));\n        var tkhd = tkhds[index];\n        var view;\n        var version;\n        var trackId;\n\n        if (handlerType === 'vide') {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          version = view.getUint8(0);\n          trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n          videoTrackIds.push(trackId);\n        }\n      });\n    });\n    return videoTrackIds;\n  };\n\n  getTimescaleFromMediaHeader = function getTimescaleFromMediaHeader(mdhd) {\n    // mdhd is a FullBox, meaning it will have its own version as the first byte\n    var version = mdhd[0];\n    var index = version === 0 ? 12 : 20;\n    return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n  };\n  /**\n   * Get all the video, audio, and hint tracks from a non fragmented\n   * mp4 segment\n   */\n\n\n  getTracks = function getTracks(init) {\n    var traks = findBox_1(init, ['moov', 'trak']);\n    var tracks = [];\n    traks.forEach(function (trak) {\n      var track = {};\n      var tkhd = findBox_1(trak, ['tkhd'])[0];\n      var view, tkhdVersion; // id\n\n      if (tkhd) {\n        view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n        tkhdVersion = view.getUint8(0);\n        track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n      }\n\n      var hdlr = findBox_1(trak, ['mdia', 'hdlr'])[0]; // type\n\n      if (hdlr) {\n        var type = parseType_1(hdlr.subarray(8, 12));\n\n        if (type === 'vide') {\n          track.type = 'video';\n        } else if (type === 'soun') {\n          track.type = 'audio';\n        } else {\n          track.type = type;\n        }\n      } // codec\n\n\n      var stsd = findBox_1(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n\n      if (stsd) {\n        var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n        track.codec = parseType_1(sampleDescriptions.subarray(4, 8));\n        var codecBox = findBox_1(sampleDescriptions, [track.codec])[0];\n        var codecConfig, codecConfigType;\n\n        if (codecBox) {\n          // https://tools.ietf.org/html/rfc6381#section-3.3\n          if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n            // we don't need anything but the \"config\" parameter of the\n            // avc1 codecBox\n            codecConfig = codecBox.subarray(78);\n            codecConfigType = parseType_1(codecConfig.subarray(4, 8));\n\n            if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n              track.codec += '.'; // left padded with zeroes for single digit hex\n              // profile idc\n\n              track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n              track.codec += toHexString(codecConfig[10]); // level idc\n\n              track.codec += toHexString(codecConfig[11]);\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'avc1.4d400d';\n            }\n          } else if (/^mp4[a,v]$/i.test(track.codec)) {\n            // we do not need anything but the streamDescriptor of the mp4a codecBox\n            codecConfig = codecBox.subarray(28);\n            codecConfigType = parseType_1(codecConfig.subarray(4, 8));\n\n            if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n              track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n              track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n            } else {\n              // TODO: show a warning that we couldn't parse the codec\n              // and are using the default\n              track.codec = 'mp4a.40.2';\n            }\n          } else {\n            // flac, opus, etc\n            track.codec = track.codec.toLowerCase();\n          }\n        }\n      }\n\n      var mdhd = findBox_1(trak, ['mdia', 'mdhd'])[0];\n\n      if (mdhd) {\n        track.timescale = getTimescaleFromMediaHeader(mdhd);\n      }\n\n      tracks.push(track);\n    });\n    return tracks;\n  };\n\n  var probe$2 = {\n    // export mp4 inspector's findBox and parseType for backwards compatibility\n    findBox: findBox_1,\n    parseType: parseType_1,\n    timescale: timescale,\n    startTime: startTime,\n    compositionStartTime: compositionStartTime,\n    videoTrackIds: getVideoTrackIds,\n    tracks: getTracks,\n    getTimescaleFromMediaHeader: getTimescaleFromMediaHeader\n  };\n\n  var parsePid = function parsePid(packet) {\n    var pid = packet[1] & 0x1f;\n    pid <<= 8;\n    pid |= packet[2];\n    return pid;\n  };\n\n  var parsePayloadUnitStartIndicator = function parsePayloadUnitStartIndicator(packet) {\n    return !!(packet[1] & 0x40);\n  };\n\n  var parseAdaptionField = function parseAdaptionField(packet) {\n    var offset = 0; // if an adaption field is present, its length is specified by the\n    // fifth byte of the TS packet header. The adaptation field is\n    // used to add stuffing to PES packets that don't fill a complete\n    // TS packet, and to specify some forms of timing and control data\n    // that we do not currently use.\n\n    if ((packet[3] & 0x30) >>> 4 > 0x01) {\n      offset += packet[4] + 1;\n    }\n\n    return offset;\n  };\n\n  var parseType = function parseType(packet, pmtPid) {\n    var pid = parsePid(packet);\n\n    if (pid === 0) {\n      return 'pat';\n    } else if (pid === pmtPid) {\n      return 'pmt';\n    } else if (pmtPid) {\n      return 'pes';\n    }\n\n    return null;\n  };\n\n  var parsePat = function parsePat(packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var offset = 4 + parseAdaptionField(packet);\n\n    if (pusi) {\n      offset += packet[offset] + 1;\n    }\n\n    return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n  };\n\n  var parsePmt = function parsePmt(packet) {\n    var programMapTable = {};\n    var pusi = parsePayloadUnitStartIndicator(packet);\n    var payloadOffset = 4 + parseAdaptionField(packet);\n\n    if (pusi) {\n      payloadOffset += packet[payloadOffset] + 1;\n    } // PMTs can be sent ahead of the time when they should actually\n    // take effect. We don't believe this should ever be the case\n    // for HLS but we'll ignore \"forward\" PMT declarations if we see\n    // them. Future PMT declarations have the current_next_indicator\n    // set to zero.\n\n\n    if (!(packet[payloadOffset + 5] & 0x01)) {\n      return;\n    }\n\n    var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n    sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n    tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n    // long the program info descriptors are\n\n    programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n    var offset = 12 + programInfoLength;\n\n    while (offset < tableEnd) {\n      var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n      programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n      // skip past the elementary stream descriptors, if present\n\n      offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n    }\n\n    return programMapTable;\n  };\n\n  var parsePesType = function parsePesType(packet, programMapTable) {\n    var pid = parsePid(packet);\n    var type = programMapTable[pid];\n\n    switch (type) {\n      case streamTypes.H264_STREAM_TYPE:\n        return 'video';\n\n      case streamTypes.ADTS_STREAM_TYPE:\n        return 'audio';\n\n      case streamTypes.METADATA_STREAM_TYPE:\n        return 'timed-metadata';\n\n      default:\n        return null;\n    }\n  };\n\n  var parsePesTime = function parsePesTime(packet) {\n    var pusi = parsePayloadUnitStartIndicator(packet);\n\n    if (!pusi) {\n      return null;\n    }\n\n    var offset = 4 + parseAdaptionField(packet);\n\n    if (offset >= packet.byteLength) {\n      // From the H 222.0 MPEG-TS spec\n      // \"For transport stream packets carrying PES packets, stuffing is needed when there\n      //  is insufficient PES packet data to completely fill the transport stream packet\n      //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n      //  the sum of the lengths of the data elements in it, so that the payload bytes\n      //  remaining after the adaptation field exactly accommodates the available PES packet\n      //  data.\"\n      //\n      // If the offset is >= the length of the packet, then the packet contains no data\n      // and instead is just adaption field stuffing bytes\n      return null;\n    }\n\n    var pes = null;\n    var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n    // and a DTS value. Determine what combination of values is\n    // available to work with.\n\n    ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n    // performs all bitwise operations on 32-bit integers but javascript\n    // supports a much greater range (52-bits) of integer using standard\n    // mathematical operations.\n    // We construct a 31-bit value using bitwise operators over the 31\n    // most significant bits and then multiply by 4 (equal to a left-shift\n    // of 2) before we add the final 2 least significant bits of the\n    // timestamp (equal to an OR.)\n\n    if (ptsDtsFlags & 0xC0) {\n      pes = {}; // the PTS and DTS are not written out directly. For information\n      // on how they are encoded, see\n      // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n      pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n      pes.pts *= 4; // Left shift by 2\n\n      pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n      pes.dts = pes.pts;\n\n      if (ptsDtsFlags & 0x40) {\n        pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n        pes.dts *= 4; // Left shift by 2\n\n        pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n      }\n    }\n\n    return pes;\n  };\n\n  var parseNalUnitType = function parseNalUnitType(type) {\n    switch (type) {\n      case 0x05:\n        return 'slice_layer_without_partitioning_rbsp_idr';\n\n      case 0x06:\n        return 'sei_rbsp';\n\n      case 0x07:\n        return 'seq_parameter_set_rbsp';\n\n      case 0x08:\n        return 'pic_parameter_set_rbsp';\n\n      case 0x09:\n        return 'access_unit_delimiter_rbsp';\n\n      default:\n        return null;\n    }\n  };\n\n  var videoPacketContainsKeyFrame = function videoPacketContainsKeyFrame(packet) {\n    var offset = 4 + parseAdaptionField(packet);\n    var frameBuffer = packet.subarray(offset);\n    var frameI = 0;\n    var frameSyncPoint = 0;\n    var foundKeyFrame = false;\n    var nalType; // advance the sync point to a NAL start, if necessary\n\n    for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n      if (frameBuffer[frameSyncPoint + 2] === 1) {\n        // the sync point is properly aligned\n        frameI = frameSyncPoint + 5;\n        break;\n      }\n    }\n\n    while (frameI < frameBuffer.byteLength) {\n      // look at the current byte to determine if we've hit the end of\n      // a NAL unit boundary\n      switch (frameBuffer[frameI]) {\n        case 0:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0) {\n            frameI += 2;\n            break;\n          } else if (frameBuffer[frameI - 2] !== 0) {\n            frameI++;\n            break;\n          }\n\n          if (frameSyncPoint + 3 !== frameI - 2) {\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n          } // drop trailing zeroes\n\n\n          do {\n            frameI++;\n          } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n\n        case 1:\n          // skip past non-sync sequences\n          if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n            frameI += 3;\n            break;\n          }\n\n          nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n          if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n            foundKeyFrame = true;\n          }\n\n          frameSyncPoint = frameI - 2;\n          frameI += 3;\n          break;\n\n        default:\n          // the current byte isn't a one or zero, so it cannot be part\n          // of a sync sequence\n          frameI += 3;\n          break;\n      }\n    }\n\n    frameBuffer = frameBuffer.subarray(frameSyncPoint);\n    frameI -= frameSyncPoint;\n    frameSyncPoint = 0; // parse the final nal\n\n    if (frameBuffer && frameBuffer.byteLength > 3) {\n      nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n\n      if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n        foundKeyFrame = true;\n      }\n    }\n\n    return foundKeyFrame;\n  };\n\n  var probe$1 = {\n    parseType: parseType,\n    parsePat: parsePat,\n    parsePmt: parsePmt,\n    parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n    parsePesType: parsePesType,\n    parsePesTime: parsePesTime,\n    videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n  };\n  var handleRollover = timestampRolloverStream.handleRollover;\n  var probe = {};\n  probe.ts = probe$1;\n  probe.aac = utils;\n  var ONE_SECOND_IN_TS = clock.ONE_SECOND_IN_TS;\n  var MP2T_PACKET_LENGTH = 188,\n      // bytes\n  SYNC_BYTE = 0x47;\n  /**\n   * walks through segment data looking for pat and pmt packets to parse out\n   * program map table information\n   */\n\n  var parsePsi_ = function parsePsi_(bytes, pmt) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type;\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pat':\n            pmt.pid = probe.ts.parsePat(packet);\n            break;\n\n          case 'pmt':\n            var table = probe.ts.parsePmt(packet);\n            pmt.table = pmt.table || {};\n            Object.keys(table).forEach(function (key) {\n              pmt.table[key] = table[key];\n            });\n            break;\n        }\n\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last audio pes packets\n   */\n\n\n  var parseAudioPes_ = function parseAudioPes_(bytes, pmt, result) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type,\n        pesType,\n        pusi,\n        parsed;\n    var endLoop = false; // Start walking from start of segment to get first audio packet\n\n    while (endIndex <= bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            break;\n        }\n\n        if (endLoop) {\n          break;\n        }\n\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last audio packet\n\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'audio' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'audio';\n                result.audio.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            break;\n        }\n\n        if (endLoop) {\n          break;\n        }\n\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * walks through the segment data from the start and end to get timing information\n   * for the first and last video pes packets as well as timing information for the first\n   * key frame.\n   */\n\n\n  var parseVideoPes_ = function parseVideoPes_(bytes, pmt, result) {\n    var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type,\n        pesType,\n        pusi,\n        parsed,\n        frame,\n        i,\n        pes;\n    var endLoop = false;\n    var currentFrame = {\n      data: [],\n      size: 0\n    }; // Start walking from start of segment to get first video packet\n\n    while (endIndex < bytes.byteLength) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'video') {\n              if (pusi && !endLoop) {\n                parsed = probe.ts.parsePesTime(packet);\n\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n\n              if (!result.firstKeyFrame) {\n                if (pusi) {\n                  if (currentFrame.size !== 0) {\n                    frame = new Uint8Array(currentFrame.size);\n                    i = 0;\n\n                    while (currentFrame.data.length) {\n                      pes = currentFrame.data.shift();\n                      frame.set(pes, i);\n                      i += pes.byteLength;\n                    }\n\n                    if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                      var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                      // the keyframe seems to work fine with HLS playback\n                      // and definitely preferable to a crash with TypeError...\n\n                      if (firstKeyFrame) {\n                        result.firstKeyFrame = firstKeyFrame;\n                        result.firstKeyFrame.type = 'video';\n                      } else {\n                        // eslint-disable-next-line\n                        console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                      }\n                    }\n\n                    currentFrame.size = 0;\n                  }\n                }\n\n                currentFrame.data.push(packet);\n                currentFrame.size += packet.byteLength;\n              }\n            }\n\n            break;\n        }\n\n        if (endLoop && result.firstKeyFrame) {\n          break;\n        }\n\n        startIndex += MP2T_PACKET_LENGTH;\n        endIndex += MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex++;\n      endIndex++;\n    } // Start walking from end of segment to get last video packet\n\n\n    endIndex = bytes.byteLength;\n    startIndex = endIndex - MP2T_PACKET_LENGTH;\n    endLoop = false;\n\n    while (startIndex >= 0) {\n      // Look for a pair of start and end sync bytes in the data..\n      if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n        // We found a packet\n        packet = bytes.subarray(startIndex, endIndex);\n        type = probe.ts.parseType(packet, pmt.pid);\n\n        switch (type) {\n          case 'pes':\n            pesType = probe.ts.parsePesType(packet, pmt.table);\n            pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n\n            if (pesType === 'video' && pusi) {\n              parsed = probe.ts.parsePesTime(packet);\n\n              if (parsed) {\n                parsed.type = 'video';\n                result.video.push(parsed);\n                endLoop = true;\n              }\n            }\n\n            break;\n        }\n\n        if (endLoop) {\n          break;\n        }\n\n        startIndex -= MP2T_PACKET_LENGTH;\n        endIndex -= MP2T_PACKET_LENGTH;\n        continue;\n      } // If we get here, we have somehow become de-synchronized and we need to step\n      // forward one byte at a time until we find a pair of sync bytes that denote\n      // a packet\n\n\n      startIndex--;\n      endIndex--;\n    }\n  };\n  /**\n   * Adjusts the timestamp information for the segment to account for\n   * rollover and convert to seconds based on pes packet timescale (90khz clock)\n   */\n\n\n  var adjustTimestamp_ = function adjustTimestamp_(segmentInfo, baseTimestamp) {\n    if (segmentInfo.audio && segmentInfo.audio.length) {\n      var audioBaseTimestamp = baseTimestamp;\n\n      if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n        audioBaseTimestamp = segmentInfo.audio[0].dts;\n      }\n\n      segmentInfo.audio.forEach(function (info) {\n        info.dts = handleRollover(info.dts, audioBaseTimestamp);\n        info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n    }\n\n    if (segmentInfo.video && segmentInfo.video.length) {\n      var videoBaseTimestamp = baseTimestamp;\n\n      if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n        videoBaseTimestamp = segmentInfo.video[0].dts;\n      }\n\n      segmentInfo.video.forEach(function (info) {\n        info.dts = handleRollover(info.dts, videoBaseTimestamp);\n        info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n        info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n        info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n      });\n\n      if (segmentInfo.firstKeyFrame) {\n        var frame = segmentInfo.firstKeyFrame;\n        frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n        frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n        frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n        frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n      }\n    }\n  };\n  /**\n   * inspects the aac data stream for start and end time information\n   */\n\n\n  var inspectAac_ = function inspectAac_(bytes) {\n    var endLoop = false,\n        audioCount = 0,\n        sampleRate = null,\n        timestamp = null,\n        frameSize = 0,\n        byteIndex = 0,\n        packet;\n\n    while (bytes.length - byteIndex >= 3) {\n      var type = probe.aac.parseType(bytes, byteIndex);\n\n      switch (type) {\n        case 'timed-metadata':\n          // Exit early because we don't have enough to parse\n          // the ID3 tag header\n          if (bytes.length - byteIndex < 10) {\n            endLoop = true;\n            break;\n          }\n\n          frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n\n          if (timestamp === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            timestamp = probe.aac.parseAacTimestamp(packet);\n          }\n\n          byteIndex += frameSize;\n          break;\n\n        case 'audio':\n          // Exit early because we don't have enough to parse\n          // the ADTS frame header\n          if (bytes.length - byteIndex < 7) {\n            endLoop = true;\n            break;\n          }\n\n          frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n          // to emit a full packet\n\n          if (frameSize > bytes.length) {\n            endLoop = true;\n            break;\n          }\n\n          if (sampleRate === null) {\n            packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n            sampleRate = probe.aac.parseSampleRate(packet);\n          }\n\n          audioCount++;\n          byteIndex += frameSize;\n          break;\n\n        default:\n          byteIndex++;\n          break;\n      }\n\n      if (endLoop) {\n        return null;\n      }\n    }\n\n    if (sampleRate === null || timestamp === null) {\n      return null;\n    }\n\n    var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n    var result = {\n      audio: [{\n        type: 'audio',\n        dts: timestamp,\n        pts: timestamp\n      }, {\n        type: 'audio',\n        dts: timestamp + audioCount * 1024 * audioTimescale,\n        pts: timestamp + audioCount * 1024 * audioTimescale\n      }]\n    };\n    return result;\n  };\n  /**\n   * inspects the transport stream segment data for start and end time information\n   * of the audio and video tracks (when present) as well as the first key frame's\n   * start time.\n   */\n\n\n  var inspectTs_ = function inspectTs_(bytes) {\n    var pmt = {\n      pid: null,\n      table: null\n    };\n    var result = {};\n    parsePsi_(bytes, pmt);\n\n    for (var pid in pmt.table) {\n      if (pmt.table.hasOwnProperty(pid)) {\n        var type = pmt.table[pid];\n\n        switch (type) {\n          case streamTypes.H264_STREAM_TYPE:\n            result.video = [];\n            parseVideoPes_(bytes, pmt, result);\n\n            if (result.video.length === 0) {\n              delete result.video;\n            }\n\n            break;\n\n          case streamTypes.ADTS_STREAM_TYPE:\n            result.audio = [];\n            parseAudioPes_(bytes, pmt, result);\n\n            if (result.audio.length === 0) {\n              delete result.audio;\n            }\n\n            break;\n        }\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Inspects segment byte data and returns an object with start and end timing information\n   *\n   * @param {Uint8Array} bytes The segment byte data\n   * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n   *  timestamps for rollover. This value must be in 90khz clock.\n   * @return {Object} Object containing start and end frame timing info of segment.\n   */\n\n\n  var inspect = function inspect(bytes, baseTimestamp) {\n    var isAacData = probe.aac.isLikelyAacData(bytes);\n    var result;\n\n    if (isAacData) {\n      result = inspectAac_(bytes);\n    } else {\n      result = inspectTs_(bytes);\n    }\n\n    if (!result || !result.audio && !result.video) {\n      return null;\n    }\n\n    adjustTimestamp_(result, baseTimestamp);\n    return result;\n  };\n\n  var tsInspector = {\n    inspect: inspect,\n    parseAudioPes_: parseAudioPes_\n  };\n  /* global self */\n\n  /**\n   * Re-emits transmuxer events by converting them into messages to the\n   * world outside the worker.\n   *\n   * @param {Object} transmuxer the transmuxer to wire events on\n   * @private\n   */\n\n  var wireTransmuxerEvents = function wireTransmuxerEvents(self, transmuxer) {\n    transmuxer.on('data', function (segment) {\n      // transfer ownership of the underlying ArrayBuffer\n      // instead of doing a copy to save memory\n      // ArrayBuffers are transferable but generic TypedArrays are not\n      // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n      var initArray = segment.initSegment;\n      segment.initSegment = {\n        data: initArray.buffer,\n        byteOffset: initArray.byteOffset,\n        byteLength: initArray.byteLength\n      };\n      var typedArray = segment.data;\n      segment.data = typedArray.buffer;\n      self.postMessage({\n        action: 'data',\n        segment: segment,\n        byteOffset: typedArray.byteOffset,\n        byteLength: typedArray.byteLength\n      }, [segment.data]);\n    });\n    transmuxer.on('done', function (data) {\n      self.postMessage({\n        action: 'done'\n      });\n    });\n    transmuxer.on('gopInfo', function (gopInfo) {\n      self.postMessage({\n        action: 'gopInfo',\n        gopInfo: gopInfo\n      });\n    });\n    transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n      var videoSegmentTimingInfo = {\n        start: {\n          decode: clock.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        videoSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n\n      self.postMessage({\n        action: 'videoSegmentTimingInfo',\n        videoSegmentTimingInfo: videoSegmentTimingInfo\n      });\n    });\n    transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n      // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n      var audioSegmentTimingInfo = {\n        start: {\n          decode: clock.videoTsToSeconds(timingInfo.start.dts),\n          presentation: clock.videoTsToSeconds(timingInfo.start.pts)\n        },\n        end: {\n          decode: clock.videoTsToSeconds(timingInfo.end.dts),\n          presentation: clock.videoTsToSeconds(timingInfo.end.pts)\n        },\n        baseMediaDecodeTime: clock.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n      };\n\n      if (timingInfo.prependedContentDuration) {\n        audioSegmentTimingInfo.prependedContentDuration = clock.videoTsToSeconds(timingInfo.prependedContentDuration);\n      }\n\n      self.postMessage({\n        action: 'audioSegmentTimingInfo',\n        audioSegmentTimingInfo: audioSegmentTimingInfo\n      });\n    });\n    transmuxer.on('id3Frame', function (id3Frame) {\n      self.postMessage({\n        action: 'id3Frame',\n        id3Frame: id3Frame\n      });\n    });\n    transmuxer.on('caption', function (caption) {\n      self.postMessage({\n        action: 'caption',\n        caption: caption\n      });\n    });\n    transmuxer.on('trackinfo', function (trackInfo) {\n      self.postMessage({\n        action: 'trackinfo',\n        trackInfo: trackInfo\n      });\n    });\n    transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n      // convert to video TS since we prioritize video time over audio\n      self.postMessage({\n        action: 'audioTimingInfo',\n        audioTimingInfo: {\n          start: clock.videoTsToSeconds(audioTimingInfo.start),\n          end: clock.videoTsToSeconds(audioTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n      self.postMessage({\n        action: 'videoTimingInfo',\n        videoTimingInfo: {\n          start: clock.videoTsToSeconds(videoTimingInfo.start),\n          end: clock.videoTsToSeconds(videoTimingInfo.end)\n        }\n      });\n    });\n    transmuxer.on('log', function (log) {\n      self.postMessage({\n        action: 'log',\n        log: log\n      });\n    });\n  };\n  /**\n   * All incoming messages route through this hash. If no function exists\n   * to handle an incoming message, then we ignore the message.\n   *\n   * @class MessageHandlers\n   * @param {Object} options the options to initialize with\n   */\n\n\n  var MessageHandlers = /*#__PURE__*/function () {\n    function MessageHandlers(self, options) {\n      this.options = options || {};\n      this.self = self;\n      this.init();\n    }\n    /**\n     * initialize our web worker and wire all the events.\n     */\n\n\n    var _proto = MessageHandlers.prototype;\n\n    _proto.init = function init() {\n      if (this.transmuxer) {\n        this.transmuxer.dispose();\n      }\n\n      this.transmuxer = new transmuxer.Transmuxer(this.options);\n      wireTransmuxerEvents(this.self, this.transmuxer);\n    };\n\n    _proto.pushMp4Captions = function pushMp4Captions(data) {\n      if (!this.captionParser) {\n        this.captionParser = new captionParser();\n        this.captionParser.init();\n      }\n\n      var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      var parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n      this.self.postMessage({\n        action: 'mp4Captions',\n        captions: parsed && parsed.captions || [],\n        logs: parsed && parsed.logs || [],\n        data: segment.buffer\n      }, [segment.buffer]);\n    };\n\n    _proto.probeMp4StartTime = function probeMp4StartTime(_ref) {\n      var timescales = _ref.timescales,\n          data = _ref.data;\n      var startTime = probe$2.startTime(timescales, data);\n      this.self.postMessage({\n        action: 'probeMp4StartTime',\n        startTime: startTime,\n        data: data\n      }, [data.buffer]);\n    };\n\n    _proto.probeMp4Tracks = function probeMp4Tracks(_ref2) {\n      var data = _ref2.data;\n      var tracks = probe$2.tracks(data);\n      this.self.postMessage({\n        action: 'probeMp4Tracks',\n        tracks: tracks,\n        data: data\n      }, [data.buffer]);\n    }\n    /**\n     * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n     * internal \"media time,\" as well as whether it contains video and/or audio.\n     *\n     * @private\n     * @param {Uint8Array} bytes - segment bytes\n     * @param {number} baseStartTime\n     *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n     *        This value should be in seconds, as it's converted to a 90khz clock within the\n     *        function body.\n     * @return {Object} The start time of the current segment in \"media time\" as well as\n     *                  whether it contains video and/or audio\n     */\n    ;\n\n    _proto.probeTs = function probeTs(_ref3) {\n      var data = _ref3.data,\n          baseStartTime = _ref3.baseStartTime;\n      var tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock.ONE_SECOND_IN_TS : void 0;\n      var timeInfo = tsInspector.inspect(data, tsStartTime);\n      var result = null;\n\n      if (timeInfo) {\n        result = {\n          // each type's time info comes back as an array of 2 times, start and end\n          hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n          hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n        };\n\n        if (result.hasVideo) {\n          result.videoStart = timeInfo.video[0].ptsTime;\n        }\n\n        if (result.hasAudio) {\n          result.audioStart = timeInfo.audio[0].ptsTime;\n        }\n      }\n\n      this.self.postMessage({\n        action: 'probeTs',\n        result: result,\n        data: data\n      }, [data.buffer]);\n    };\n\n    _proto.clearAllMp4Captions = function clearAllMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearAllCaptions();\n      }\n    };\n\n    _proto.clearParsedMp4Captions = function clearParsedMp4Captions() {\n      if (this.captionParser) {\n        this.captionParser.clearParsedCaptions();\n      }\n    }\n    /**\n     * Adds data (a ts segment) to the start of the transmuxer pipeline for\n     * processing.\n     *\n     * @param {ArrayBuffer} data data to push into the muxer\n     */\n    ;\n\n    _proto.push = function push(data) {\n      // Cast array buffer to correct type for transmuxer\n      var segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n      this.transmuxer.push(segment);\n    }\n    /**\n     * Recreate the transmuxer so that the next segment added via `push`\n     * start with a fresh transmuxer.\n     */\n    ;\n\n    _proto.reset = function reset() {\n      this.transmuxer.reset();\n    }\n    /**\n     * Set the value that will be used as the `baseMediaDecodeTime` time for the\n     * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n     * set relative to the first based on the PTS values.\n     *\n     * @param {Object} data used to set the timestamp offset in the muxer\n     */\n    ;\n\n    _proto.setTimestampOffset = function setTimestampOffset(data) {\n      var timestampOffset = data.timestampOffset || 0;\n      this.transmuxer.setBaseMediaDecodeTime(Math.round(clock.secondsToVideoTs(timestampOffset)));\n    };\n\n    _proto.setAudioAppendStart = function setAudioAppendStart(data) {\n      this.transmuxer.setAudioAppendStart(Math.ceil(clock.secondsToVideoTs(data.appendStart)));\n    };\n\n    _proto.setRemux = function setRemux(data) {\n      this.transmuxer.setRemux(data.remux);\n    }\n    /**\n     * Forces the pipeline to finish processing the last segment and emit it's\n     * results.\n     *\n     * @param {Object} data event data, not really used\n     */\n    ;\n\n    _proto.flush = function flush(data) {\n      this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n      self.postMessage({\n        action: 'done',\n        type: 'transmuxed'\n      });\n    };\n\n    _proto.endTimeline = function endTimeline() {\n      this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n      // timelines\n\n      self.postMessage({\n        action: 'endedtimeline',\n        type: 'transmuxed'\n      });\n    };\n\n    _proto.alignGopsWith = function alignGopsWith(data) {\n      this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n    };\n\n    return MessageHandlers;\n  }();\n  /**\n   * Our web worker interface so that things can talk to mux.js\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   *\n   * @param {Object} self the scope for the web worker\n   */\n\n\n  self.onmessage = function (event) {\n    if (event.data.action === 'init' && event.data.options) {\n      this.messageHandlers = new MessageHandlers(self, event.data.options);\n      return;\n    }\n\n    if (!this.messageHandlers) {\n      this.messageHandlers = new MessageHandlers(self);\n    }\n\n    if (event.data && event.data.action && event.data.action !== 'init') {\n      if (this.messageHandlers[event.data.action]) {\n        this.messageHandlers[event.data.action](event.data);\n      }\n    }\n  };\n}));\nvar TransmuxWorker = factory(workerCode$1);\n/* rollup-plugin-worker-factory end for worker!/Users/abarstow/videojs/http-streaming/src/transmuxer-worker.js */\n\nvar handleData_ = function handleData_(event, transmuxedData, callback) {\n  var _event$data$segment = event.data.segment,\n      type = _event$data$segment.type,\n      initSegment = _event$data$segment.initSegment,\n      captions = _event$data$segment.captions,\n      captionStreams = _event$data$segment.captionStreams,\n      metadata = _event$data$segment.metadata,\n      videoFrameDtsTime = _event$data$segment.videoFrameDtsTime,\n      videoFramePtsTime = _event$data$segment.videoFramePtsTime;\n  transmuxedData.buffer.push({\n    captions: captions,\n    captionStreams: captionStreams,\n    metadata: metadata\n  });\n  var boxes = event.data.segment.boxes || {\n    data: event.data.segment.data\n  };\n  var result = {\n    type: type,\n    // cast ArrayBuffer to TypedArray\n    data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n    initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n  };\n\n  if (typeof videoFrameDtsTime !== 'undefined') {\n    result.videoFrameDtsTime = videoFrameDtsTime;\n  }\n\n  if (typeof videoFramePtsTime !== 'undefined') {\n    result.videoFramePtsTime = videoFramePtsTime;\n  }\n\n  callback(result);\n};\n\nvar handleDone_ = function handleDone_(_ref) {\n  var transmuxedData = _ref.transmuxedData,\n      callback = _ref.callback; // Previously we only returned data on data events,\n  // not on done events. Clear out the buffer to keep that consistent.\n\n  transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n  // have received\n\n  callback(transmuxedData);\n};\n\nvar handleGopInfo_ = function handleGopInfo_(event, transmuxedData) {\n  transmuxedData.gopInfo = event.data.gopInfo;\n};\n\nvar processTransmux = function processTransmux(options) {\n  var transmuxer = options.transmuxer,\n      bytes = options.bytes,\n      audioAppendStart = options.audioAppendStart,\n      gopsToAlignWith = options.gopsToAlignWith,\n      remux = options.remux,\n      onData = options.onData,\n      onTrackInfo = options.onTrackInfo,\n      onAudioTimingInfo = options.onAudioTimingInfo,\n      onVideoTimingInfo = options.onVideoTimingInfo,\n      onVideoSegmentTimingInfo = options.onVideoSegmentTimingInfo,\n      onAudioSegmentTimingInfo = options.onAudioSegmentTimingInfo,\n      onId3 = options.onId3,\n      onCaptions = options.onCaptions,\n      onDone = options.onDone,\n      onEndedTimeline = options.onEndedTimeline,\n      onTransmuxerLog = options.onTransmuxerLog,\n      isEndOfTimeline = options.isEndOfTimeline;\n  var transmuxedData = {\n    buffer: []\n  };\n  var waitForEndedTimelineEvent = isEndOfTimeline;\n\n  var handleMessage = function handleMessage(event) {\n    if (transmuxer.currentTransmux !== options) {\n      // disposed\n      return;\n    }\n\n    if (event.data.action === 'data') {\n      handleData_(event, transmuxedData, onData);\n    }\n\n    if (event.data.action === 'trackinfo') {\n      onTrackInfo(event.data.trackInfo);\n    }\n\n    if (event.data.action === 'gopInfo') {\n      handleGopInfo_(event, transmuxedData);\n    }\n\n    if (event.data.action === 'audioTimingInfo') {\n      onAudioTimingInfo(event.data.audioTimingInfo);\n    }\n\n    if (event.data.action === 'videoTimingInfo') {\n      onVideoTimingInfo(event.data.videoTimingInfo);\n    }\n\n    if (event.data.action === 'videoSegmentTimingInfo') {\n      onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n    }\n\n    if (event.data.action === 'audioSegmentTimingInfo') {\n      onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n    }\n\n    if (event.data.action === 'id3Frame') {\n      onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n    }\n\n    if (event.data.action === 'caption') {\n      onCaptions(event.data.caption);\n    }\n\n    if (event.data.action === 'endedtimeline') {\n      waitForEndedTimelineEvent = false;\n      onEndedTimeline();\n    }\n\n    if (event.data.action === 'log') {\n      onTransmuxerLog(event.data.log);\n    } // wait for the transmuxed event since we may have audio and video\n\n\n    if (event.data.type !== 'transmuxed') {\n      return;\n    } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n    // of a timeline, that means there may still be data events before the segment\n    // processing can be considerred complete. In that case, the final event should be\n    // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n\n    if (waitForEndedTimelineEvent) {\n      return;\n    }\n\n    transmuxer.onmessage = null;\n    handleDone_({\n      transmuxedData: transmuxedData,\n      callback: onDone\n    });\n    /* eslint-disable no-use-before-define */\n\n    dequeue(transmuxer);\n    /* eslint-enable */\n  };\n\n  transmuxer.onmessage = handleMessage;\n\n  if (audioAppendStart) {\n    transmuxer.postMessage({\n      action: 'setAudioAppendStart',\n      appendStart: audioAppendStart\n    });\n  } // allow empty arrays to be passed to clear out GOPs\n\n\n  if (Array.isArray(gopsToAlignWith)) {\n    transmuxer.postMessage({\n      action: 'alignGopsWith',\n      gopsToAlignWith: gopsToAlignWith\n    });\n  }\n\n  if (typeof remux !== 'undefined') {\n    transmuxer.postMessage({\n      action: 'setRemux',\n      remux: remux\n    });\n  }\n\n  if (bytes.byteLength) {\n    var buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n    var byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n    transmuxer.postMessage({\n      action: 'push',\n      // Send the typed-array of data as an ArrayBuffer so that\n      // it can be sent as a \"Transferable\" and avoid the costly\n      // memory copy\n      data: buffer,\n      // To recreate the original typed-array, we need information\n      // about what portion of the ArrayBuffer it was a view into\n      byteOffset: byteOffset,\n      byteLength: bytes.byteLength\n    }, [buffer]);\n  }\n\n  if (isEndOfTimeline) {\n    transmuxer.postMessage({\n      action: 'endTimeline'\n    });\n  } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n  // the end of the segment\n\n\n  transmuxer.postMessage({\n    action: 'flush'\n  });\n};\n\nvar dequeue = function dequeue(transmuxer) {\n  transmuxer.currentTransmux = null;\n\n  if (transmuxer.transmuxQueue.length) {\n    transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n\n    if (typeof transmuxer.currentTransmux === 'function') {\n      transmuxer.currentTransmux();\n    } else {\n      processTransmux(transmuxer.currentTransmux);\n    }\n  }\n};\n\nvar processAction = function processAction(transmuxer, action) {\n  transmuxer.postMessage({\n    action: action\n  });\n  dequeue(transmuxer);\n};\n\nvar enqueueAction = function enqueueAction(action, transmuxer) {\n  if (!transmuxer.currentTransmux) {\n    transmuxer.currentTransmux = action;\n    processAction(transmuxer, action);\n    return;\n  }\n\n  transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n};\n\nvar reset = function reset(transmuxer) {\n  enqueueAction('reset', transmuxer);\n};\n\nvar endTimeline = function endTimeline(transmuxer) {\n  enqueueAction('endTimeline', transmuxer);\n};\n\nvar transmux = function transmux(options) {\n  if (!options.transmuxer.currentTransmux) {\n    options.transmuxer.currentTransmux = options;\n    processTransmux(options);\n    return;\n  }\n\n  options.transmuxer.transmuxQueue.push(options);\n};\n\nvar createTransmuxer = function createTransmuxer(options) {\n  var transmuxer = new TransmuxWorker();\n  transmuxer.currentTransmux = null;\n  transmuxer.transmuxQueue = [];\n  var term = transmuxer.terminate;\n\n  transmuxer.terminate = function () {\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue.length = 0;\n    return term.call(transmuxer);\n  };\n\n  transmuxer.postMessage({\n    action: 'init',\n    options: options\n  });\n  return transmuxer;\n};\n\nvar segmentTransmuxer = {\n  reset: reset,\n  endTimeline: endTimeline,\n  transmux: transmux,\n  createTransmuxer: createTransmuxer\n};\n\nvar workerCallback = function workerCallback(options) {\n  var transmuxer = options.transmuxer;\n  var endAction = options.endAction || options.action;\n  var callback = options.callback;\n\n  var message = _extends({}, options, {\n    endAction: null,\n    transmuxer: null,\n    callback: null\n  });\n\n  var listenForEndEvent = function listenForEndEvent(event) {\n    if (event.data.action !== endAction) {\n      return;\n    }\n\n    transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n    if (event.data.data) {\n      event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n\n      if (options.data) {\n        options.data = event.data.data;\n      }\n    }\n\n    callback(event.data);\n  };\n\n  transmuxer.addEventListener('message', listenForEndEvent);\n\n  if (options.data) {\n    var isArrayBuffer = options.data instanceof ArrayBuffer;\n    message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n    message.byteLength = options.data.byteLength;\n    var transfers = [isArrayBuffer ? options.data : options.data.buffer];\n    transmuxer.postMessage(message, transfers);\n  } else {\n    transmuxer.postMessage(message);\n  }\n};\n\nvar REQUEST_ERRORS = {\n  FAILURE: 2,\n  TIMEOUT: -101,\n  ABORTED: -102\n};\n/**\n * Abort all requests\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n */\n\nvar abortAll = function abortAll(activeXhrs) {\n  activeXhrs.forEach(function (xhr) {\n    xhr.abort();\n  });\n};\n/**\n * Gather important bandwidth stats once a request has completed\n *\n * @param {Object} request - the XHR request from which to gather stats\n */\n\n\nvar getRequestStats = function getRequestStats(request) {\n  return {\n    bandwidth: request.bandwidth,\n    bytesReceived: request.bytesReceived || 0,\n    roundTripTime: request.roundTripTime || 0\n  };\n};\n/**\n * If possible gather bandwidth stats as a request is in\n * progress\n *\n * @param {Event} progressEvent - an event object from an XHR's progress event\n */\n\n\nvar getProgressStats = function getProgressStats(progressEvent) {\n  var request = progressEvent.target;\n  var roundTripTime = Date.now() - request.requestTime;\n  var stats = {\n    bandwidth: Infinity,\n    bytesReceived: 0,\n    roundTripTime: roundTripTime || 0\n  };\n  stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n  // because we should only use bandwidth stats on progress to determine when\n  // abort a request early due to insufficient bandwidth\n\n  stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n  return stats;\n};\n/**\n * Handle all error conditions in one place and return an object\n * with all the information\n *\n * @param {Error|null} error - if non-null signals an error occured with the XHR\n * @param {Object} request -  the XHR request that possibly generated the error\n */\n\n\nvar handleErrors = function handleErrors(error, request) {\n  if (request.timedout) {\n    return {\n      status: request.status,\n      message: 'HLS request timed-out at URL: ' + request.uri,\n      code: REQUEST_ERRORS.TIMEOUT,\n      xhr: request\n    };\n  }\n\n  if (request.aborted) {\n    return {\n      status: request.status,\n      message: 'HLS request aborted at URL: ' + request.uri,\n      code: REQUEST_ERRORS.ABORTED,\n      xhr: request\n    };\n  }\n\n  if (error) {\n    return {\n      status: request.status,\n      message: 'HLS request errored at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n    return {\n      status: request.status,\n      message: 'Empty HLS response at URL: ' + request.uri,\n      code: REQUEST_ERRORS.FAILURE,\n      xhr: request\n    };\n  }\n\n  return null;\n};\n/**\n * Handle responses for key data and convert the key data to the correct format\n * for the decryption step later\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Array} objects - objects to add the key bytes to.\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleKeyResponse = function handleKeyResponse(segment, objects, finishProcessingFn) {\n  return function (error, request) {\n    var response = request.response;\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n\n    var view = new DataView(response);\n    var bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n\n    for (var i = 0; i < objects.length; i++) {\n      objects[i].bytes = bytes;\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\nvar parseInitSegment = function parseInitSegment(segment, _callback) {\n  var type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n  // only know how to parse mp4 init segments at the moment\n\n  if (type !== 'mp4') {\n    var uri = segment.map.resolvedUri || segment.map.uri;\n    return _callback({\n      internal: true,\n      message: \"Found unsupported \" + (type || 'unknown') + \" container for initialization segment at URL: \" + uri,\n      code: REQUEST_ERRORS.FAILURE\n    });\n  }\n\n  workerCallback({\n    action: 'probeMp4Tracks',\n    data: segment.map.bytes,\n    transmuxer: segment.transmuxer,\n    callback: function callback(_ref) {\n      var tracks = _ref.tracks,\n          data = _ref.data; // transfer bytes back to us\n\n      segment.map.bytes = data;\n      tracks.forEach(function (track) {\n        segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n        if (segment.map.tracks[track.type]) {\n          return;\n        }\n\n        segment.map.tracks[track.type] = track;\n\n        if (typeof track.id === 'number' && track.timescale) {\n          segment.map.timescales = segment.map.timescales || {};\n          segment.map.timescales[track.id] = track.timescale;\n        }\n      });\n      return _callback(null);\n    }\n  });\n};\n/**\n * Handle init-segment responses\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleInitSegmentResponse = function handleInitSegmentResponse(_ref2) {\n  var segment = _ref2.segment,\n      finishProcessingFn = _ref2.finishProcessingFn;\n  return function (error, request) {\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    var bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n    // until the key request is done to decrypt.\n\n    if (segment.map.key) {\n      segment.map.encryptedBytes = bytes;\n      return finishProcessingFn(null, segment);\n    }\n\n    segment.map.bytes = bytes;\n    parseInitSegment(segment, function (parseError) {\n      if (parseError) {\n        parseError.xhr = request;\n        parseError.status = request.status;\n        return finishProcessingFn(parseError, segment);\n      }\n\n      finishProcessingFn(null, segment);\n    });\n  };\n};\n/**\n * Response handler for segment-requests being sure to set the correct\n * property depending on whether the segment is encryped or not\n * Also records and keeps track of stats that are used for ABR purposes\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} finishProcessingFn - a callback to execute to continue processing\n *                                        this request\n */\n\n\nvar handleSegmentResponse = function handleSegmentResponse(_ref3) {\n  var segment = _ref3.segment,\n      finishProcessingFn = _ref3.finishProcessingFn,\n      responseType = _ref3.responseType;\n  return function (error, request) {\n    var errorObj = handleErrors(error, request);\n\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n\n    var newBytes = // although responseText \"should\" exist, this guard serves to prevent an error being\n    // thrown for two primary cases:\n    // 1. the mime type override stops working, or is not implemented for a specific\n    //    browser\n    // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n    responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n    segment.stats = getRequestStats(request);\n\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(newBytes);\n    } else {\n      segment.bytes = new Uint8Array(newBytes);\n    }\n\n    return finishProcessingFn(null, segment);\n  };\n};\n\nvar transmuxAndNotify = function transmuxAndNotify(_ref4) {\n  var segment = _ref4.segment,\n      bytes = _ref4.bytes,\n      trackInfoFn = _ref4.trackInfoFn,\n      timingInfoFn = _ref4.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref4.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref4.audioSegmentTimingInfoFn,\n      id3Fn = _ref4.id3Fn,\n      captionsFn = _ref4.captionsFn,\n      isEndOfTimeline = _ref4.isEndOfTimeline,\n      endedTimelineFn = _ref4.endedTimelineFn,\n      dataFn = _ref4.dataFn,\n      doneFn = _ref4.doneFn,\n      onTransmuxerLog = _ref4.onTransmuxerLog;\n  var fmp4Tracks = segment.map && segment.map.tracks || {};\n  var isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n  // One reason for this is that in the case of full segments, we want to trust start\n  // times from the probe, rather than the transmuxer.\n\n  var audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n  var audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n  var videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n  var videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n\n  var finish = function finish() {\n    return transmux({\n      bytes: bytes,\n      transmuxer: segment.transmuxer,\n      audioAppendStart: segment.audioAppendStart,\n      gopsToAlignWith: segment.gopsToAlignWith,\n      remux: isMuxed,\n      onData: function onData(result) {\n        result.type = result.type === 'combined' ? 'video' : result.type;\n        dataFn(segment, result);\n      },\n      onTrackInfo: function onTrackInfo(trackInfo) {\n        if (trackInfoFn) {\n          if (isMuxed) {\n            trackInfo.isMuxed = true;\n          }\n\n          trackInfoFn(segment, trackInfo);\n        }\n      },\n      onAudioTimingInfo: function onAudioTimingInfo(audioTimingInfo) {\n        // we only want the first start value we encounter\n        if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n          audioStartFn(audioTimingInfo.start);\n          audioStartFn = null;\n        } // we want to continually update the end time\n\n\n        if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n          audioEndFn(audioTimingInfo.end);\n        }\n      },\n      onVideoTimingInfo: function onVideoTimingInfo(videoTimingInfo) {\n        // we only want the first start value we encounter\n        if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n          videoStartFn(videoTimingInfo.start);\n          videoStartFn = null;\n        } // we want to continually update the end time\n\n\n        if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n          videoEndFn(videoTimingInfo.end);\n        }\n      },\n      onVideoSegmentTimingInfo: function onVideoSegmentTimingInfo(videoSegmentTimingInfo) {\n        videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n      },\n      onAudioSegmentTimingInfo: function onAudioSegmentTimingInfo(audioSegmentTimingInfo) {\n        audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n      },\n      onId3: function onId3(id3Frames, dispatchType) {\n        id3Fn(segment, id3Frames, dispatchType);\n      },\n      onCaptions: function onCaptions(captions) {\n        captionsFn(segment, [captions]);\n      },\n      isEndOfTimeline: isEndOfTimeline,\n      onEndedTimeline: function onEndedTimeline() {\n        endedTimelineFn();\n      },\n      onTransmuxerLog: onTransmuxerLog,\n      onDone: function onDone(result) {\n        if (!doneFn) {\n          return;\n        }\n\n        result.type = result.type === 'combined' ? 'video' : result.type;\n        doneFn(null, segment, result);\n      }\n    });\n  }; // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n  // Meaning cached frame data may corrupt our notion of where this segment\n  // really starts. To get around this, probe for the info needed.\n\n\n  workerCallback({\n    action: 'probeTs',\n    transmuxer: segment.transmuxer,\n    data: bytes,\n    baseStartTime: segment.baseStartTime,\n    callback: function callback(data) {\n      segment.bytes = bytes = data.data;\n      var probeResult = data.result;\n\n      if (probeResult) {\n        trackInfoFn(segment, {\n          hasAudio: probeResult.hasAudio,\n          hasVideo: probeResult.hasVideo,\n          isMuxed: isMuxed\n        });\n        trackInfoFn = null;\n\n        if (probeResult.hasAudio && !isMuxed) {\n          audioStartFn(probeResult.audioStart);\n        }\n\n        if (probeResult.hasVideo) {\n          videoStartFn(probeResult.videoStart);\n        }\n\n        audioStartFn = null;\n        videoStartFn = null;\n      }\n\n      finish();\n    }\n  });\n};\n\nvar handleSegmentBytes = function handleSegmentBytes(_ref5) {\n  var segment = _ref5.segment,\n      bytes = _ref5.bytes,\n      trackInfoFn = _ref5.trackInfoFn,\n      timingInfoFn = _ref5.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref5.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref5.audioSegmentTimingInfoFn,\n      id3Fn = _ref5.id3Fn,\n      captionsFn = _ref5.captionsFn,\n      isEndOfTimeline = _ref5.isEndOfTimeline,\n      endedTimelineFn = _ref5.endedTimelineFn,\n      dataFn = _ref5.dataFn,\n      doneFn = _ref5.doneFn,\n      onTransmuxerLog = _ref5.onTransmuxerLog;\n  var bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n  // We should have a handler that fetches the number of bytes required\n  // to check if something is fmp4. This will allow us to save bandwidth\n  // because we can only blacklist a playlist and abort requests\n  // by codec after trackinfo triggers.\n\n  if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n    segment.isFmp4 = true;\n    var tracks = segment.map.tracks;\n    var trackInfo = {\n      isFmp4: true,\n      hasVideo: !!tracks.video,\n      hasAudio: !!tracks.audio\n    }; // if we have a audio track, with a codec that is not set to\n    // encrypted audio\n\n    if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n      trackInfo.audioCodec = tracks.audio.codec;\n    } // if we have a video track, with a codec that is not set to\n    // encrypted video\n\n\n    if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n      trackInfo.videoCodec = tracks.video.codec;\n    }\n\n    if (tracks.video && tracks.audio) {\n      trackInfo.isMuxed = true;\n    } // since we don't support appending fmp4 data on progress, we know we have the full\n    // segment here\n\n\n    trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n    // time. The end time can be roughly calculated by the receiver using the duration.\n    //\n    // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n    // that is the true start of the segment (where the playback engine should begin\n    // decoding).\n\n    var finishLoading = function finishLoading(captions) {\n      // if the track still has audio at this point it is only possible\n      // for it to be audio only. See `tracks.video && tracks.audio` if statement\n      // above.\n      // we make sure to use segment.bytes here as that\n      dataFn(segment, {\n        data: bytesAsUint8Array,\n        type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n      });\n\n      if (captions && captions.length) {\n        captionsFn(segment, captions);\n      }\n\n      doneFn(null, segment, {});\n    };\n\n    workerCallback({\n      action: 'probeMp4StartTime',\n      timescales: segment.map.timescales,\n      data: bytesAsUint8Array,\n      transmuxer: segment.transmuxer,\n      callback: function callback(_ref6) {\n        var data = _ref6.data,\n            startTime = _ref6.startTime; // transfer bytes back to us\n\n        bytes = data.buffer;\n        segment.bytes = bytesAsUint8Array = data;\n\n        if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n          timingInfoFn(segment, 'audio', 'start', startTime);\n        }\n\n        if (trackInfo.hasVideo) {\n          timingInfoFn(segment, 'video', 'start', startTime);\n        } // Run through the CaptionParser in case there are captions.\n        // Initialize CaptionParser if it hasn't been yet\n\n\n        if (!tracks.video || !data.byteLength || !segment.transmuxer) {\n          finishLoading();\n          return;\n        }\n\n        workerCallback({\n          action: 'pushMp4Captions',\n          endAction: 'mp4Captions',\n          transmuxer: segment.transmuxer,\n          data: bytesAsUint8Array,\n          timescales: segment.map.timescales,\n          trackIds: [tracks.video.id],\n          callback: function callback(message) {\n            // transfer bytes back to us\n            bytes = message.data.buffer;\n            segment.bytes = bytesAsUint8Array = message.data;\n            message.logs.forEach(function (log) {\n              onTransmuxerLog(videojs.mergeOptions(log, {\n                stream: 'mp4CaptionParser'\n              }));\n            });\n            finishLoading(message.captions);\n          }\n        });\n      }\n    });\n    return;\n  } // VTT or other segments that don't need processing\n\n\n  if (!segment.transmuxer) {\n    doneFn(null, segment, {});\n    return;\n  }\n\n  if (typeof segment.container === 'undefined') {\n    segment.container = detectContainerForBytes(bytesAsUint8Array);\n  }\n\n  if (segment.container !== 'ts' && segment.container !== 'aac') {\n    trackInfoFn(segment, {\n      hasAudio: false,\n      hasVideo: false\n    });\n    doneFn(null, segment, {});\n    return;\n  } // ts or aac\n\n\n  transmuxAndNotify({\n    segment: segment,\n    bytes: bytes,\n    trackInfoFn: trackInfoFn,\n    timingInfoFn: timingInfoFn,\n    videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n    id3Fn: id3Fn,\n    captionsFn: captionsFn,\n    isEndOfTimeline: isEndOfTimeline,\n    endedTimelineFn: endedTimelineFn,\n    dataFn: dataFn,\n    doneFn: doneFn,\n    onTransmuxerLog: onTransmuxerLog\n  });\n};\n\nvar decrypt = function decrypt(_ref7, callback) {\n  var id = _ref7.id,\n      key = _ref7.key,\n      encryptedBytes = _ref7.encryptedBytes,\n      decryptionWorker = _ref7.decryptionWorker;\n\n  var decryptionHandler = function decryptionHandler(event) {\n    if (event.data.source === id) {\n      decryptionWorker.removeEventListener('message', decryptionHandler);\n      var decrypted = event.data.decrypted;\n      callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n    }\n  };\n\n  decryptionWorker.addEventListener('message', decryptionHandler);\n  var keyBytes;\n\n  if (key.bytes.slice) {\n    keyBytes = key.bytes.slice();\n  } else {\n    keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n  } // incrementally decrypt the bytes\n\n\n  decryptionWorker.postMessage(createTransferableMessage({\n    source: id,\n    encrypted: encryptedBytes,\n    key: keyBytes,\n    iv: key.iv\n  }), [encryptedBytes.buffer, keyBytes.buffer]);\n};\n/**\n * Decrypt the segment via the decryption web worker\n *\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after decryption has completed\n */\n\n\nvar decryptSegment = function decryptSegment(_ref8) {\n  var decryptionWorker = _ref8.decryptionWorker,\n      segment = _ref8.segment,\n      trackInfoFn = _ref8.trackInfoFn,\n      timingInfoFn = _ref8.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref8.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref8.audioSegmentTimingInfoFn,\n      id3Fn = _ref8.id3Fn,\n      captionsFn = _ref8.captionsFn,\n      isEndOfTimeline = _ref8.isEndOfTimeline,\n      endedTimelineFn = _ref8.endedTimelineFn,\n      dataFn = _ref8.dataFn,\n      doneFn = _ref8.doneFn,\n      onTransmuxerLog = _ref8.onTransmuxerLog;\n  decrypt({\n    id: segment.requestId,\n    key: segment.key,\n    encryptedBytes: segment.encryptedBytes,\n    decryptionWorker: decryptionWorker\n  }, function (decryptedBytes) {\n    segment.bytes = decryptedBytes;\n    handleSegmentBytes({\n      segment: segment,\n      bytes: segment.bytes,\n      trackInfoFn: trackInfoFn,\n      timingInfoFn: timingInfoFn,\n      videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n      id3Fn: id3Fn,\n      captionsFn: captionsFn,\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: endedTimelineFn,\n      dataFn: dataFn,\n      doneFn: doneFn,\n      onTransmuxerLog: onTransmuxerLog\n    });\n  });\n};\n/**\n * This function waits for all XHRs to finish (with either success or failure)\n * before continueing processing via it's callback. The function gathers errors\n * from each request into a single errors array so that the error status for\n * each request can be examined later.\n *\n * @param {Object} activeXhrs - an object that tracks all XHR requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n *                                       routines\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Function} doneFn - a callback that is executed after all resources have been\n *                            downloaded and any decryption completed\n */\n\n\nvar waitForCompletion = function waitForCompletion(_ref9) {\n  var activeXhrs = _ref9.activeXhrs,\n      decryptionWorker = _ref9.decryptionWorker,\n      trackInfoFn = _ref9.trackInfoFn,\n      timingInfoFn = _ref9.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref9.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref9.audioSegmentTimingInfoFn,\n      id3Fn = _ref9.id3Fn,\n      captionsFn = _ref9.captionsFn,\n      isEndOfTimeline = _ref9.isEndOfTimeline,\n      endedTimelineFn = _ref9.endedTimelineFn,\n      dataFn = _ref9.dataFn,\n      doneFn = _ref9.doneFn,\n      onTransmuxerLog = _ref9.onTransmuxerLog;\n  var count = 0;\n  var didError = false;\n  return function (error, segment) {\n    if (didError) {\n      return;\n    }\n\n    if (error) {\n      didError = true; // If there are errors, we have to abort any outstanding requests\n\n      abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n      // handle the aborted events from those requests, there are some cases where we may\n      // never get an aborted event. For instance, if the network connection is lost and\n      // there were two requests, the first may have triggered an error immediately, while\n      // the second request remains unsent. In that case, the aborted algorithm will not\n      // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n      //\n      // We also can't rely on the ready state of the XHR, since the request that\n      // triggered the connection error may also show as a ready state of 0 (unsent).\n      // Therefore, we have to finish this group of requests immediately after the first\n      // seen error.\n\n      return doneFn(error, segment);\n    }\n\n    count += 1;\n\n    if (count === activeXhrs.length) {\n      var segmentFinish = function segmentFinish() {\n        if (segment.encryptedBytes) {\n          return decryptSegment({\n            decryptionWorker: decryptionWorker,\n            segment: segment,\n            trackInfoFn: trackInfoFn,\n            timingInfoFn: timingInfoFn,\n            videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n            id3Fn: id3Fn,\n            captionsFn: captionsFn,\n            isEndOfTimeline: isEndOfTimeline,\n            endedTimelineFn: endedTimelineFn,\n            dataFn: dataFn,\n            doneFn: doneFn,\n            onTransmuxerLog: onTransmuxerLog\n          });\n        } // Otherwise, everything is ready just continue\n\n\n        handleSegmentBytes({\n          segment: segment,\n          bytes: segment.bytes,\n          trackInfoFn: trackInfoFn,\n          timingInfoFn: timingInfoFn,\n          videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n          audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n          id3Fn: id3Fn,\n          captionsFn: captionsFn,\n          isEndOfTimeline: isEndOfTimeline,\n          endedTimelineFn: endedTimelineFn,\n          dataFn: dataFn,\n          doneFn: doneFn,\n          onTransmuxerLog: onTransmuxerLog\n        });\n      }; // Keep track of when *all* of the requests have completed\n\n\n      segment.endOfAllRequests = Date.now();\n\n      if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n        return decrypt({\n          decryptionWorker: decryptionWorker,\n          // add -init to the \"id\" to differentiate between segment\n          // and init segment decryption, just in case they happen\n          // at the same time at some point in the future.\n          id: segment.requestId + '-init',\n          encryptedBytes: segment.map.encryptedBytes,\n          key: segment.map.key\n        }, function (decryptedBytes) {\n          segment.map.bytes = decryptedBytes;\n          parseInitSegment(segment, function (parseError) {\n            if (parseError) {\n              abortAll(activeXhrs);\n              return doneFn(parseError, segment);\n            }\n\n            segmentFinish();\n          });\n        });\n      }\n\n      segmentFinish();\n    }\n  };\n};\n/**\n * Calls the abort callback if any request within the batch was aborted. Will only call\n * the callback once per batch of requests, even if multiple were aborted.\n *\n * @param {Object} loadendState - state to check to see if the abort function was called\n * @param {Function} abortFn - callback to call for abort\n */\n\n\nvar handleLoadEnd = function handleLoadEnd(_ref10) {\n  var loadendState = _ref10.loadendState,\n      abortFn = _ref10.abortFn;\n  return function (event) {\n    var request = event.target;\n\n    if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n      abortFn();\n      loadendState.calledAbortFn = true;\n    }\n  };\n};\n/**\n * Simple progress event callback handler that gathers some stats before\n * executing a provided callback with the `segment` object\n *\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} progressFn - a callback that is executed each time a progress event\n *                                is received\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that is executed when segment bytes are available\n *                            and ready to use\n * @param {Event} event - the progress event object from XMLHttpRequest\n */\n\n\nvar handleProgress = function handleProgress(_ref11) {\n  var segment = _ref11.segment,\n      progressFn = _ref11.progressFn;\n  _ref11.trackInfoFn;\n  _ref11.timingInfoFn;\n  _ref11.videoSegmentTimingInfoFn;\n  _ref11.audioSegmentTimingInfoFn;\n  _ref11.id3Fn;\n  _ref11.captionsFn;\n  _ref11.isEndOfTimeline;\n  _ref11.endedTimelineFn;\n  _ref11.dataFn;\n  return function (event) {\n    var request = event.target;\n\n    if (request.aborted) {\n      return;\n    }\n\n    segment.stats = videojs.mergeOptions(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n\n    return progressFn(event, segment);\n  };\n};\n/**\n * Load all resources and does any processing necessary for a media-segment\n *\n * Features:\n *   decrypts the media-segment if it has a key uri and an iv\n *   aborts *all* requests if *any* one request fails\n *\n * The segment object, at minimum, has the following format:\n * {\n *   resolvedUri: String,\n *   [transmuxer]: Object,\n *   [byterange]: {\n *     offset: Number,\n *     length: Number\n *   },\n *   [key]: {\n *     resolvedUri: String\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     iv: {\n *       bytes: Uint32Array\n *     }\n *   },\n *   [map]: {\n *     resolvedUri: String,\n *     [byterange]: {\n *       offset: Number,\n *       length: Number\n *     },\n *     [bytes]: Uint8Array\n *   }\n * }\n * ...where [name] denotes optional properties\n *\n * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n * @param {Object} xhrOptions - the base options to provide to all xhr requests\n * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n *                                       decryption routines\n * @param {Object} segment - a simplified copy of the segmentInfo object\n *                           from SegmentLoader\n * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n *                             aborted\n * @param {Function} progressFn - a callback that receives progress events from the main\n *                                segment's xhr request\n * @param {Function} trackInfoFn - a callback that receives track info\n * @param {Function} timingInfoFn - a callback that receives timing info\n * @param {Function} videoSegmentTimingInfoFn\n *                   a callback that receives video timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} audioSegmentTimingInfoFn\n *                   a callback that receives audio timing info based on media times and\n *                   any adjustments made by the transmuxer\n * @param {Function} id3Fn - a callback that receives ID3 metadata\n * @param {Function} captionsFn - a callback that receives captions\n * @param {boolean}  isEndOfTimeline\n *                   true if this segment represents the last segment in a timeline\n * @param {Function} endedTimelineFn\n *                   a callback made when a timeline is ended, will only be called if\n *                   isEndOfTimeline is true\n * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n *                            request, transmuxed if needed\n * @param {Function} doneFn - a callback that is executed only once all requests have\n *                            succeeded or failed\n * @return {Function} a function that, when invoked, immediately aborts all\n *                     outstanding requests\n */\n\n\nvar mediaSegmentRequest = function mediaSegmentRequest(_ref12) {\n  var xhr = _ref12.xhr,\n      xhrOptions = _ref12.xhrOptions,\n      decryptionWorker = _ref12.decryptionWorker,\n      segment = _ref12.segment,\n      abortFn = _ref12.abortFn,\n      progressFn = _ref12.progressFn,\n      trackInfoFn = _ref12.trackInfoFn,\n      timingInfoFn = _ref12.timingInfoFn,\n      videoSegmentTimingInfoFn = _ref12.videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn = _ref12.audioSegmentTimingInfoFn,\n      id3Fn = _ref12.id3Fn,\n      captionsFn = _ref12.captionsFn,\n      isEndOfTimeline = _ref12.isEndOfTimeline,\n      endedTimelineFn = _ref12.endedTimelineFn,\n      dataFn = _ref12.dataFn,\n      doneFn = _ref12.doneFn,\n      onTransmuxerLog = _ref12.onTransmuxerLog;\n  var activeXhrs = [];\n  var finishProcessingFn = waitForCompletion({\n    activeXhrs: activeXhrs,\n    decryptionWorker: decryptionWorker,\n    trackInfoFn: trackInfoFn,\n    timingInfoFn: timingInfoFn,\n    videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n    id3Fn: id3Fn,\n    captionsFn: captionsFn,\n    isEndOfTimeline: isEndOfTimeline,\n    endedTimelineFn: endedTimelineFn,\n    dataFn: dataFn,\n    doneFn: doneFn,\n    onTransmuxerLog: onTransmuxerLog\n  }); // optionally, request the decryption key\n\n  if (segment.key && !segment.key.bytes) {\n    var objects = [segment.key];\n\n    if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n      objects.push(segment.map.key);\n    }\n\n    var keyRequestOptions = videojs.mergeOptions(xhrOptions, {\n      uri: segment.key.resolvedUri,\n      responseType: 'arraybuffer'\n    });\n    var keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n    var keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n    activeXhrs.push(keyXhr);\n  } // optionally, request the associated media init segment\n\n\n  if (segment.map && !segment.map.bytes) {\n    var differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n\n    if (differentMapKey) {\n      var mapKeyRequestOptions = videojs.mergeOptions(xhrOptions, {\n        uri: segment.map.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      var mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n      var mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n      activeXhrs.push(mapKeyXhr);\n    }\n\n    var initSegmentOptions = videojs.mergeOptions(xhrOptions, {\n      uri: segment.map.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment.map)\n    });\n    var initSegmentRequestCallback = handleInitSegmentResponse({\n      segment: segment,\n      finishProcessingFn: finishProcessingFn\n    });\n    var initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n    activeXhrs.push(initSegmentXhr);\n  }\n\n  var segmentRequestOptions = videojs.mergeOptions(xhrOptions, {\n    uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n    responseType: 'arraybuffer',\n    headers: segmentXhrHeaders(segment)\n  });\n  var segmentRequestCallback = handleSegmentResponse({\n    segment: segment,\n    finishProcessingFn: finishProcessingFn,\n    responseType: segmentRequestOptions.responseType\n  });\n  var segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n  segmentXhr.addEventListener('progress', handleProgress({\n    segment: segment,\n    progressFn: progressFn,\n    trackInfoFn: trackInfoFn,\n    timingInfoFn: timingInfoFn,\n    videoSegmentTimingInfoFn: videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn: audioSegmentTimingInfoFn,\n    id3Fn: id3Fn,\n    captionsFn: captionsFn,\n    isEndOfTimeline: isEndOfTimeline,\n    endedTimelineFn: endedTimelineFn,\n    dataFn: dataFn\n  }));\n  activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n  // multiple times, provide a shared state object\n\n  var loadendState = {};\n  activeXhrs.forEach(function (activeXhr) {\n    activeXhr.addEventListener('loadend', handleLoadEnd({\n      loadendState: loadendState,\n      abortFn: abortFn\n    }));\n  });\n  return function () {\n    return abortAll(activeXhrs);\n  };\n};\n/**\n * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n * codec strings, or translating codec strings into objects that can be examined.\n */\n\n\nvar logFn$1 = logger('CodecUtils');\n/**\n * Returns a set of codec strings parsed from the playlist or the default\n * codec strings if no codecs were specified in the playlist\n *\n * @param {Playlist} media the current media playlist\n * @return {Object} an object with the video and audio codecs\n */\n\nvar getCodecs = function getCodecs(media) {\n  // if the codecs were explicitly specified, use them instead of the\n  // defaults\n  var mediaAttributes = media.attributes || {};\n\n  if (mediaAttributes.CODECS) {\n    return parseCodecs(mediaAttributes.CODECS);\n  }\n};\n\nvar isMaat = function isMaat(master, media) {\n  var mediaAttributes = media.attributes || {};\n  return master && master.mediaGroups && master.mediaGroups.AUDIO && mediaAttributes.AUDIO && master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n};\n\nvar isMuxed = function isMuxed(master, media) {\n  if (!isMaat(master, media)) {\n    return true;\n  }\n\n  var mediaAttributes = media.attributes || {};\n  var audioGroup = master.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n\n  for (var groupId in audioGroup) {\n    // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n    // or there are listed playlists (the case for DASH, as the manifest will have already\n    // provided all of the details necessary to generate the audio playlist, as opposed to\n    // HLS' externally requested playlists), then the content is demuxed.\n    if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar unwrapCodecList = function unwrapCodecList(codecList) {\n  var codecs = {};\n  codecList.forEach(function (_ref) {\n    var mediaType = _ref.mediaType,\n        type = _ref.type,\n        details = _ref.details;\n    codecs[mediaType] = codecs[mediaType] || [];\n    codecs[mediaType].push(translateLegacyCodec(\"\" + type + details));\n  });\n  Object.keys(codecs).forEach(function (mediaType) {\n    if (codecs[mediaType].length > 1) {\n      logFn$1(\"multiple \" + mediaType + \" codecs found as attributes: \" + codecs[mediaType].join(', ') + \". Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.\");\n      codecs[mediaType] = null;\n      return;\n    }\n\n    codecs[mediaType] = codecs[mediaType][0];\n  });\n  return codecs;\n};\n\nvar codecCount = function codecCount(codecObj) {\n  var count = 0;\n\n  if (codecObj.audio) {\n    count++;\n  }\n\n  if (codecObj.video) {\n    count++;\n  }\n\n  return count;\n};\n/**\n * Calculates the codec strings for a working configuration of\n * SourceBuffers to play variant streams in a master playlist. If\n * there is no possible working configuration, an empty object will be\n * returned.\n *\n * @param master {Object} the m3u8 object for the master playlist\n * @param media {Object} the m3u8 object for the variant playlist\n * @return {Object} the codec strings.\n *\n * @private\n */\n\n\nvar codecsForPlaylist = function codecsForPlaylist(master, media) {\n  var mediaAttributes = media.attributes || {};\n  var codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n  // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n  if (isMaat(master, media) && !codecInfo.audio) {\n    if (!isMuxed(master, media)) {\n      // It is possible for codecs to be specified on the audio media group playlist but\n      // not on the rendition playlist. This is mostly the case for DASH, where audio and\n      // video are always separate (and separately specified).\n      var defaultCodecs = unwrapCodecList(codecsFromDefault(master, mediaAttributes.AUDIO) || []);\n\n      if (defaultCodecs.audio) {\n        codecInfo.audio = defaultCodecs.audio;\n      }\n    }\n  }\n\n  return codecInfo;\n};\n\nvar logFn = logger('PlaylistSelector');\n\nvar representationToString = function representationToString(representation) {\n  if (!representation || !representation.playlist) {\n    return;\n  }\n\n  var playlist = representation.playlist;\n  return JSON.stringify({\n    id: playlist.id,\n    bandwidth: representation.bandwidth,\n    width: representation.width,\n    height: representation.height,\n    codecs: playlist.attributes && playlist.attributes.CODECS || ''\n  });\n}; // Utilities\n\n/**\n * Returns the CSS value for the specified property on an element\n * using `getComputedStyle`. Firefox has a long-standing issue where\n * getComputedStyle() may return null when running in an iframe with\n * `display: none`.\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n * @param {HTMLElement} el the htmlelement to work on\n * @param {string} the proprety to get the style for\n */\n\n\nvar safeGetComputedStyle = function safeGetComputedStyle(el, property) {\n  if (!el) {\n    return '';\n  }\n\n  var result = window$1.getComputedStyle(el);\n\n  if (!result) {\n    return '';\n  }\n\n  return result[property];\n};\n/**\n * Resuable stable sort function\n *\n * @param {Playlists} array\n * @param {Function} sortFn Different comparators\n * @function stableSort\n */\n\n\nvar stableSort = function stableSort(array, sortFn) {\n  var newArray = array.slice();\n  array.sort(function (left, right) {\n    var cmp = sortFn(left, right);\n\n    if (cmp === 0) {\n      return newArray.indexOf(left) - newArray.indexOf(right);\n    }\n\n    return cmp;\n  });\n};\n/**\n * A comparator function to sort two playlist object by bandwidth.\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the bandwidth attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the bandwidth of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistBandwidth = function comparePlaylistBandwidth(left, right) {\n  var leftBandwidth;\n  var rightBandwidth;\n\n  if (left.attributes.BANDWIDTH) {\n    leftBandwidth = left.attributes.BANDWIDTH;\n  }\n\n  leftBandwidth = leftBandwidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.BANDWIDTH) {\n    rightBandwidth = right.attributes.BANDWIDTH;\n  }\n\n  rightBandwidth = rightBandwidth || window$1.Number.MAX_VALUE;\n  return leftBandwidth - rightBandwidth;\n};\n/**\n * A comparator function to sort two playlist object by resolution (width).\n *\n * @param {Object} left a media playlist object\n * @param {Object} right a media playlist object\n * @return {number} Greater than zero if the resolution.width attribute of\n * left is greater than the corresponding attribute of right. Less\n * than zero if the resolution.width of right is greater than left and\n * exactly zero if the two are equal.\n */\n\n\nvar comparePlaylistResolution = function comparePlaylistResolution(left, right) {\n  var leftWidth;\n  var rightWidth;\n\n  if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n    leftWidth = left.attributes.RESOLUTION.width;\n  }\n\n  leftWidth = leftWidth || window$1.Number.MAX_VALUE;\n\n  if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n    rightWidth = right.attributes.RESOLUTION.width;\n  }\n\n  rightWidth = rightWidth || window$1.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n  // have the same media dimensions/ resolution\n\n  if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n    return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n  }\n\n  return leftWidth - rightWidth;\n};\n/**\n * Chooses the appropriate media playlist based on bandwidth and player size\n *\n * @param {Object} master\n *        Object representation of the master manifest\n * @param {number} playerBandwidth\n *        Current calculated bandwidth of the player\n * @param {number} playerWidth\n *        Current width of the player element (should account for the device pixel ratio)\n * @param {number} playerHeight\n *        Current height of the player element (should account for the device pixel ratio)\n * @param {boolean} limitRenditionByPlayerDimensions\n *        True if the player width and height should be used during the selection, false otherwise\n * @param {Object} masterPlaylistController\n *        the current masterPlaylistController object\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar simpleSelector = function simpleSelector(master, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, masterPlaylistController) {\n  // If we end up getting called before `master` is available, exit early\n  if (!master) {\n    return;\n  }\n\n  var options = {\n    bandwidth: playerBandwidth,\n    width: playerWidth,\n    height: playerHeight,\n    limitRenditionByPlayerDimensions: limitRenditionByPlayerDimensions\n  };\n  var playlists = master.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n  if (Playlist.isAudioOnly(master)) {\n    playlists = masterPlaylistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n    // at the buttom of this function for debugging.\n\n    options.audioOnly = true;\n  } // convert the playlists to an intermediary representation to make comparisons easier\n\n\n  var sortedPlaylistReps = playlists.map(function (playlist) {\n    var bandwidth;\n    var width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n    var height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n    bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n    bandwidth = bandwidth || window$1.Number.MAX_VALUE;\n    return {\n      bandwidth: bandwidth,\n      width: width,\n      height: height,\n      playlist: playlist\n    };\n  });\n  stableSort(sortedPlaylistReps, function (left, right) {\n    return left.bandwidth - right.bandwidth;\n  }); // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  sortedPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return !Playlist.isIncompatible(rep.playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n    return Playlist.isEnabled(rep.playlist);\n  });\n\n  if (!enabledPlaylistReps.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylistReps = sortedPlaylistReps.filter(function (rep) {\n      return !Playlist.isDisabled(rep.playlist);\n    });\n  } // filter out any variant that has greater effective bitrate\n  // than the current estimated bandwidth\n\n\n  var bandwidthPlaylistReps = enabledPlaylistReps.filter(function (rep) {\n    return rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth;\n  });\n  var highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n  // and then taking the very first element\n\n  var bandwidthBestRep = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n  if (limitRenditionByPlayerDimensions === false) {\n    var _chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n    if (_chosenRep && _chosenRep.playlist) {\n      var type = 'sortedPlaylistReps';\n\n      if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      }\n\n      if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n\n      logFn(\"choosing \" + representationToString(_chosenRep) + \" using \" + type + \" with options\", options);\n      return _chosenRep.playlist;\n    }\n\n    logFn('could not choose a playlist with options', options);\n    return null;\n  } // filter out playlists without resolution information\n\n\n  var haveResolution = bandwidthPlaylistReps.filter(function (rep) {\n    return rep.width && rep.height;\n  }); // sort variants by resolution\n\n  stableSort(haveResolution, function (left, right) {\n    return left.width - right.width;\n  }); // if we have the exact resolution as the player use it\n\n  var resolutionBestRepList = haveResolution.filter(function (rep) {\n    return rep.width === playerWidth && rep.height === playerHeight;\n  });\n  highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n  var resolutionBestRep = resolutionBestRepList.filter(function (rep) {\n    return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n  })[0];\n  var resolutionPlusOneList;\n  var resolutionPlusOneSmallest;\n  var resolutionPlusOneRep; // find the smallest variant that is larger than the player\n  // if there is no match of exact resolution\n\n  if (!resolutionBestRep) {\n    resolutionPlusOneList = haveResolution.filter(function (rep) {\n      return rep.width > playerWidth || rep.height > playerHeight;\n    }); // find all the variants have the same smallest resolution\n\n    resolutionPlusOneSmallest = resolutionPlusOneList.filter(function (rep) {\n      return rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height;\n    }); // ensure that we also pick the highest bandwidth variant that\n    // is just-larger-than the video player\n\n    highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n    resolutionPlusOneRep = resolutionPlusOneSmallest.filter(function (rep) {\n      return rep.bandwidth === highestRemainingBandwidthRep.bandwidth;\n    })[0];\n  }\n\n  var leastPixelDiffRep; // If this selector proves to be better than others,\n  // resolutionPlusOneRep and resolutionBestRep and all\n  // the code involving them should be removed.\n\n  if (masterPlaylistController.experimentalLeastPixelDiffSelector) {\n    // find the variant that is closest to the player's pixel size\n    var leastPixelDiffList = haveResolution.map(function (rep) {\n      rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n      return rep;\n    }); // get the highest bandwidth, closest resolution playlist\n\n    stableSort(leastPixelDiffList, function (left, right) {\n      // sort by highest bandwidth if pixelDiff is the same\n      if (left.pixelDiff === right.pixelDiff) {\n        return right.bandwidth - left.bandwidth;\n      }\n\n      return left.pixelDiff - right.pixelDiff;\n    });\n    leastPixelDiffRep = leastPixelDiffList[0];\n  } // fallback chain of variants\n\n\n  var chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n\n  if (chosenRep && chosenRep.playlist) {\n    var _type = 'sortedPlaylistReps';\n\n    if (leastPixelDiffRep) {\n      _type = 'leastPixelDiffRep';\n    } else if (resolutionPlusOneRep) {\n      _type = 'resolutionPlusOneRep';\n    } else if (resolutionBestRep) {\n      _type = 'resolutionBestRep';\n    } else if (bandwidthBestRep) {\n      _type = 'bandwidthBestRep';\n    } else if (enabledPlaylistReps[0]) {\n      _type = 'enabledPlaylistReps';\n    }\n\n    logFn(\"choosing \" + representationToString(chosenRep) + \" using \" + _type + \" with options\", options);\n    return chosenRep.playlist;\n  }\n\n  logFn('could not choose a playlist with options', options);\n  return null;\n};\n/**\n * Chooses the appropriate media playlist based on the most recent\n * bandwidth estimate and the player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Playlist} the highest bitrate playlist less than the\n * currently detected bandwidth, accounting for some amount of\n * bandwidth variance\n */\n\n\nvar lastBandwidthSelector = function lastBandwidthSelector() {\n  var pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n  return simpleSelector(this.playlists.master, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\n};\n/**\n * Chooses the appropriate media playlist based on an\n * exponential-weighted moving average of the bandwidth after\n * filtering for player size.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @param {number} decay - a number between 0 and 1. Higher values of\n * this parameter will cause previous bandwidth estimates to lose\n * significance more quickly.\n * @return {Function} a function which can be invoked to create a new\n * playlist selector function.\n * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n */\n\n\nvar movingAverageBandwidthSelector = function movingAverageBandwidthSelector(decay) {\n  var average = -1;\n  var lastSystemBandwidth = -1;\n\n  if (decay < 0 || decay > 1) {\n    throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n  }\n\n  return function () {\n    var pixelRatio = this.useDevicePixelRatio ? window$1.devicePixelRatio || 1 : 1;\n\n    if (average < 0) {\n      average = this.systemBandwidth;\n      lastSystemBandwidth = this.systemBandwidth;\n    } // stop the average value from decaying for every 250ms\n    // when the systemBandwidth is constant\n    // and\n    // stop average from setting to a very low value when the\n    // systemBandwidth becomes 0 in case of chunk cancellation\n\n\n    if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n      average = decay * this.systemBandwidth + (1 - decay) * average;\n      lastSystemBandwidth = this.systemBandwidth;\n    }\n\n    return simpleSelector(this.playlists.master, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.masterPlaylistController_);\n  };\n};\n/**\n * Chooses the appropriate media playlist based on the potential to rebuffer\n *\n * @param {Object} settings\n *        Object of information required to use this selector\n * @param {Object} settings.master\n *        Object representation of the master manifest\n * @param {number} settings.currentTime\n *        The current time of the player\n * @param {number} settings.bandwidth\n *        Current measured bandwidth\n * @param {number} settings.duration\n *        Duration of the media\n * @param {number} settings.segmentDuration\n *        Segment duration to be used in round trip time calculations\n * @param {number} settings.timeUntilRebuffer\n *        Time left in seconds until the player has to rebuffer\n * @param {number} settings.currentTimeline\n *        The current timeline segments are being loaded from\n * @param {SyncController} settings.syncController\n *        SyncController for determining if we have a sync point for a given playlist\n * @return {Object|null}\n *         {Object} return.playlist\n *         The highest bandwidth playlist with the least amount of rebuffering\n *         {Number} return.rebufferingImpact\n *         The amount of time in seconds switching to this playlist will rebuffer. A\n *         negative value means that switching will cause zero rebuffering.\n */\n\n\nvar minRebufferMaxBandwidthSelector = function minRebufferMaxBandwidthSelector(settings) {\n  var master = settings.master,\n      currentTime = settings.currentTime,\n      bandwidth = settings.bandwidth,\n      duration = settings.duration,\n      segmentDuration = settings.segmentDuration,\n      timeUntilRebuffer = settings.timeUntilRebuffer,\n      currentTimeline = settings.currentTimeline,\n      syncController = settings.syncController; // filter out any playlists that have been excluded due to\n  // incompatible configurations\n\n  var compatiblePlaylists = master.playlists.filter(function (playlist) {\n    return !Playlist.isIncompatible(playlist);\n  }); // filter out any playlists that have been disabled manually through the representations\n  // api or blacklisted temporarily due to playback errors.\n\n  var enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n\n  if (!enabledPlaylists.length) {\n    // if there are no enabled playlists, then they have all been blacklisted or disabled\n    // by the user through the representations api. In this case, ignore blacklisting and\n    // fallback to what the user wants by using playlists the user has not disabled.\n    enabledPlaylists = compatiblePlaylists.filter(function (playlist) {\n      return !Playlist.isDisabled(playlist);\n    });\n  }\n\n  var bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n  var rebufferingEstimates = bandwidthPlaylists.map(function (playlist) {\n    var syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n    // sync request first. This will double the request time\n\n    var numRequests = syncPoint ? 1 : 2;\n    var requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n    var rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n    return {\n      playlist: playlist,\n      rebufferingImpact: rebufferingImpact\n    };\n  });\n  var noRebufferingPlaylists = rebufferingEstimates.filter(function (estimate) {\n    return estimate.rebufferingImpact <= 0;\n  }); // Sort by bandwidth DESC\n\n  stableSort(noRebufferingPlaylists, function (a, b) {\n    return comparePlaylistBandwidth(b.playlist, a.playlist);\n  });\n\n  if (noRebufferingPlaylists.length) {\n    return noRebufferingPlaylists[0];\n  }\n\n  stableSort(rebufferingEstimates, function (a, b) {\n    return a.rebufferingImpact - b.rebufferingImpact;\n  });\n  return rebufferingEstimates[0] || null;\n};\n/**\n * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n * one with video.  If no renditions with video exist, return the lowest audio rendition.\n *\n * Expects to be called within the context of an instance of VhsHandler\n *\n * @return {Object|null}\n *         {Object} return.playlist\n *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n *         exists pick the lowest audio rendition.\n */\n\n\nvar lowestBitrateCompatibleVariantSelector = function lowestBitrateCompatibleVariantSelector() {\n  var _this = this; // filter out any playlists that have been excluded due to\n  // incompatible configurations or playback errors\n\n\n  var playlists = this.playlists.master.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n  stableSort(playlists, function (a, b) {\n    return comparePlaylistBandwidth(a, b);\n  }); // Parse and assume that playlists with no video codec have no video\n  // (this is not necessarily true, although it is generally true).\n  //\n  // If an entire manifest has no valid videos everything will get filtered\n  // out.\n\n  var playlistsWithVideo = playlists.filter(function (playlist) {\n    return !!codecsForPlaylist(_this.playlists.master, playlist).video;\n  });\n  return playlistsWithVideo[0] || null;\n};\n/**\n * Combine all segments into a single Uint8Array\n *\n * @param {Object} segmentObj\n * @return {Uint8Array} concatenated bytes\n * @private\n */\n\n\nvar concatSegments = function concatSegments(segmentObj) {\n  var offset = 0;\n  var tempBuffer;\n\n  if (segmentObj.bytes) {\n    tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n    segmentObj.segments.forEach(function (segment) {\n      tempBuffer.set(segment, offset);\n      offset += segment.byteLength;\n    });\n  }\n\n  return tempBuffer;\n};\n/**\n * @file text-tracks.js\n */\n\n/**\n * Create captions text tracks on video.js if they do not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {Object} tech the video.js tech\n * @param {Object} captionStream the caption stream to create\n * @private\n */\n\n\nvar createCaptionsTrackIfNotExists = function createCaptionsTrackIfNotExists(inbandTextTracks, tech, captionStream) {\n  if (!inbandTextTracks[captionStream]) {\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-608'\n    });\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-608'\n    });\n    var instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n    if (/^cc708_/.test(captionStream)) {\n      instreamId = 'SERVICE' + captionStream.split('_')[1];\n    }\n\n    var track = tech.textTracks().getTrackById(instreamId);\n\n    if (track) {\n      // Resuse an existing track with a CC# id because this was\n      // very likely created by videojs-contrib-hls from information\n      // in the m3u8 for us to use\n      inbandTextTracks[captionStream] = track;\n    } else {\n      // This section gets called when we have caption services that aren't specified in the manifest.\n      // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n      var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n      var label = captionStream;\n      var language = captionStream;\n      var def = false;\n      var captionService = captionServices[instreamId];\n\n      if (captionService) {\n        label = captionService.label;\n        language = captionService.language;\n        def = captionService[\"default\"];\n      } // Otherwise, create a track with the default `CC#` label and\n      // without a language\n\n\n      inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n        kind: 'captions',\n        id: instreamId,\n        // TODO: investigate why this doesn't seem to turn the caption on by default\n        \"default\": def,\n        label: label,\n        language: language\n      }, false).track;\n    }\n  }\n};\n/**\n * Add caption text track data to a source handler given an array of captions\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {Array} captionArray an array of caption data\n * @private\n */\n\n\nvar addCaptionData = function addCaptionData(_ref) {\n  var inbandTextTracks = _ref.inbandTextTracks,\n      captionArray = _ref.captionArray,\n      timestampOffset = _ref.timestampOffset;\n\n  if (!captionArray) {\n    return;\n  }\n\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  captionArray.forEach(function (caption) {\n    var track = caption.stream;\n    inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n  });\n};\n/**\n * Define properties on a cue for backwards compatability,\n * but warn the user that the way that they are using it\n * is depricated and will be removed at a later date.\n *\n * @param {Cue} cue the cue to add the properties on\n * @private\n */\n\n\nvar deprecateOldCue = function deprecateOldCue(cue) {\n  Object.defineProperties(cue.frame, {\n    id: {\n      get: function get() {\n        videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n        return cue.value.key;\n      }\n    },\n    value: {\n      get: function get() {\n        videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    },\n    privateData: {\n      get: function get() {\n        videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n        return cue.value.data;\n      }\n    }\n  });\n};\n/**\n * Add metadata text track data to a source handler given an array of metadata\n *\n * @param {Object}\n *   @param {Object} inbandTextTracks the inband text tracks\n *   @param {Array} metadataArray an array of meta data\n *   @param {number} timestampOffset the timestamp offset of the source buffer\n *   @param {number} videoDuration the duration of the video\n * @private\n */\n\n\nvar addMetadata = function addMetadata(_ref2) {\n  var inbandTextTracks = _ref2.inbandTextTracks,\n      metadataArray = _ref2.metadataArray,\n      timestampOffset = _ref2.timestampOffset,\n      videoDuration = _ref2.videoDuration;\n\n  if (!metadataArray) {\n    return;\n  }\n\n  var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n  var metadataTrack = inbandTextTracks.metadataTrack_;\n\n  if (!metadataTrack) {\n    return;\n  }\n\n  metadataArray.forEach(function (metadata) {\n    var time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n    // ignore this bit of metadata.\n    // This likely occurs when you have an non-timed ID3 tag like TIT2,\n    // which is the \"Title/Songname/Content description\" frame\n\n    if (typeof time !== 'number' || window$1.isNaN(time) || time < 0 || !(time < Infinity)) {\n      return;\n    }\n\n    metadata.frames.forEach(function (frame) {\n      var cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n      cue.frame = frame;\n      cue.value = frame;\n      deprecateOldCue(cue);\n      metadataTrack.addCue(cue);\n    });\n  });\n\n  if (!metadataTrack.cues || !metadataTrack.cues.length) {\n    return;\n  } // Updating the metadeta cues so that\n  // the endTime of each cue is the startTime of the next cue\n  // the endTime of last cue is the duration of the video\n\n\n  var cues = metadataTrack.cues;\n  var cuesArray = []; // Create a copy of the TextTrackCueList...\n  // ...disregarding cues with a falsey value\n\n  for (var i = 0; i < cues.length; i++) {\n    if (cues[i]) {\n      cuesArray.push(cues[i]);\n    }\n  } // Group cues by their startTime value\n\n\n  var cuesGroupedByStartTime = cuesArray.reduce(function (obj, cue) {\n    var timeSlot = obj[cue.startTime] || [];\n    timeSlot.push(cue);\n    obj[cue.startTime] = timeSlot;\n    return obj;\n  }, {}); // Sort startTimes by ascending order\n\n  var sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort(function (a, b) {\n    return Number(a) - Number(b);\n  }); // Map each cue group's endTime to the next group's startTime\n\n  sortedStartTimes.forEach(function (startTime, idx) {\n    var cueGroup = cuesGroupedByStartTime[startTime];\n    var nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n    cueGroup.forEach(function (cue) {\n      cue.endTime = nextTime;\n    });\n  });\n};\n/**\n * Create metadata text track on video.js if it does not exist\n *\n * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n * @param {string} dispatchType the inband metadata track dispatch type\n * @param {Object} tech the video.js tech\n * @private\n */\n\n\nvar createMetadataTrackIfNotExists = function createMetadataTrackIfNotExists(inbandTextTracks, dispatchType, tech) {\n  if (inbandTextTracks.metadataTrack_) {\n    return;\n  }\n\n  inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n    kind: 'metadata',\n    label: 'Timed Metadata'\n  }, false).track;\n  inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n};\n/**\n * Remove cues from a track on video.js.\n *\n * @param {Double} start start of where we should remove the cue\n * @param {Double} end end of where the we should remove the cue\n * @param {Object} track the text track to remove the cues from\n * @private\n */\n\n\nvar removeCuesFromTrack = function removeCuesFromTrack(start, end, track) {\n  var i;\n  var cue;\n\n  if (!track) {\n    return;\n  }\n\n  if (!track.cues) {\n    return;\n  }\n\n  i = track.cues.length;\n\n  while (i--) {\n    cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n    if (cue.startTime >= start && cue.endTime <= end) {\n      track.removeCue(cue);\n    }\n  }\n};\n/**\n * Remove duplicate cues from a track on video.js (a cue is considered a\n * duplicate if it has the same time interval and text as another)\n *\n * @param {Object} track the text track to remove the duplicate cues from\n * @private\n */\n\n\nvar removeDuplicateCuesFromTrack = function removeDuplicateCuesFromTrack(track) {\n  var cues = track.cues;\n\n  if (!cues) {\n    return;\n  }\n\n  for (var i = 0; i < cues.length; i++) {\n    var duplicates = [];\n    var occurrences = 0;\n\n    for (var j = 0; j < cues.length; j++) {\n      if (cues[i].startTime === cues[j].startTime && cues[i].endTime === cues[j].endTime && cues[i].text === cues[j].text) {\n        occurrences++;\n\n        if (occurrences > 1) {\n          duplicates.push(cues[j]);\n        }\n      }\n    }\n\n    if (duplicates.length) {\n      duplicates.forEach(function (dupe) {\n        return track.removeCue(dupe);\n      });\n    }\n  }\n};\n/**\n * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n * front of current time.\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {number} currentTime\n *        The current time\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n * @return {Array}\n *         List of gops considered safe to append over\n */\n\n\nvar gopsSafeToAlignWith = function gopsSafeToAlignWith(buffer, currentTime, mapping) {\n  if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n    return [];\n  } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n\n  var currentTimePts = Math.ceil((currentTime - mapping + 3) * ONE_SECOND_IN_TS);\n  var i;\n\n  for (i = 0; i < buffer.length; i++) {\n    if (buffer[i].pts > currentTimePts) {\n      break;\n    }\n  }\n\n  return buffer.slice(i);\n};\n/**\n * Appends gop information (timing and byteLength) received by the transmuxer for the\n * gops appended in the last call to appendBuffer\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Array} gops\n *        List of new gop information\n * @param {boolean} replace\n *        If true, replace the buffer with the new gop information. If false, append the\n *        new gop information to the buffer in the right location of time.\n * @return {Array}\n *         Updated list of gop information\n */\n\n\nvar updateGopBuffer = function updateGopBuffer(buffer, gops, replace) {\n  if (!gops.length) {\n    return buffer;\n  }\n\n  if (replace) {\n    // If we are in safe append mode, then completely overwrite the gop buffer\n    // with the most recent appeneded data. This will make sure that when appending\n    // future segments, we only try to align with gops that are both ahead of current\n    // time and in the last segment appended.\n    return gops.slice();\n  }\n\n  var start = gops[0].pts;\n  var i = 0;\n\n  for (i; i < buffer.length; i++) {\n    if (buffer[i].pts >= start) {\n      break;\n    }\n  }\n\n  return buffer.slice(0, i).concat(gops);\n};\n/**\n * Removes gop information in buffer that overlaps with provided start and end\n *\n * @param {Array} buffer\n *        The current buffer of gop information\n * @param {Double} start\n *        position to start the remove at\n * @param {Double} end\n *        position to end the remove at\n * @param {Double} mapping\n *        Offset to map display time to stream presentation time\n */\n\n\nvar removeGopBuffer = function removeGopBuffer(buffer, start, end, mapping) {\n  var startPts = Math.ceil((start - mapping) * ONE_SECOND_IN_TS);\n  var endPts = Math.ceil((end - mapping) * ONE_SECOND_IN_TS);\n  var updatedBuffer = buffer.slice();\n  var i = buffer.length;\n\n  while (i--) {\n    if (buffer[i].pts <= endPts) {\n      break;\n    }\n  }\n\n  if (i === -1) {\n    // no removal because end of remove range is before start of buffer\n    return updatedBuffer;\n  }\n\n  var j = i + 1;\n\n  while (j--) {\n    if (buffer[j].pts <= startPts) {\n      break;\n    }\n  } // clamp remove range start to 0 index\n\n\n  j = Math.max(j, 0);\n  updatedBuffer.splice(j, i - j + 1);\n  return updatedBuffer;\n};\n\nvar shallowEqual = function shallowEqual(a, b) {\n  // if both are undefined\n  // or one or the other is undefined\n  // they are not equal\n  if (!a && !b || !a && b || a && !b) {\n    return false;\n  } // they are the same object and thus, equal\n\n\n  if (a === b) {\n    return true;\n  } // sort keys so we can make sure they have\n  // all the same keys later.\n\n\n  var akeys = Object.keys(a).sort();\n  var bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n  if (akeys.length !== bkeys.length) {\n    return false;\n  }\n\n  for (var i = 0; i < akeys.length; i++) {\n    var key = akeys[i]; // different sorted keys, not equal\n\n    if (key !== bkeys[i]) {\n      return false;\n    } // different values, not equal\n\n\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}; // https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\n\n\nvar QUOTA_EXCEEDED_ERR = 22;\n/**\n * The segment loader has no recourse except to fetch a segment in the\n * current playlist and use the internal timestamps in that segment to\n * generate a syncPoint. This function returns a good candidate index\n * for that process.\n *\n * @param {Array} segments - the segments array from a playlist.\n * @return {number} An index of a segment from the playlist to load\n */\n\nvar getSyncSegmentCandidate = function getSyncSegmentCandidate(currentTimeline, segments, targetTime) {\n  segments = segments || [];\n  var timelineSegments = [];\n  var time = 0;\n\n  for (var i = 0; i < segments.length; i++) {\n    var segment = segments[i];\n\n    if (currentTimeline === segment.timeline) {\n      timelineSegments.push(i);\n      time += segment.duration;\n\n      if (time > targetTime) {\n        return i;\n      }\n    }\n  }\n\n  if (timelineSegments.length === 0) {\n    return 0;\n  } // default to the last timeline segment\n\n\n  return timelineSegments[timelineSegments.length - 1];\n}; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n// number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n// as a start to prevent any potential issues with removing content too close to the\n// playhead.\n\n\nvar MIN_BACK_BUFFER = 1; // in ms\n\nvar CHECK_BUFFER_DELAY = 500;\n\nvar finite = function finite(num) {\n  return typeof num === 'number' && isFinite(num);\n}; // With most content hovering around 30fps, if a segment has a duration less than a half\n// frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n// not accurately reflect the rest of the content.\n\n\nvar MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\n\nvar illegalMediaSwitch = function illegalMediaSwitch(loaderType, startingMedia, trackInfo) {\n  // Although these checks should most likely cover non 'main' types, for now it narrows\n  // the scope of our checks.\n  if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n    return null;\n  }\n\n  if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n    return 'Neither audio nor video found in segment.';\n  }\n\n  if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n    return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n    return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n  }\n\n  return null;\n};\n/**\n * Calculates a time value that is safe to remove from the back buffer without interrupting\n * playback.\n *\n * @param {TimeRange} seekable\n *        The current seekable range\n * @param {number} currentTime\n *        The current time of the player\n * @param {number} targetDuration\n *        The target duration of the current playlist\n * @return {number}\n *         Time that is safe to remove from the back buffer without interrupting playback\n */\n\n\nvar safeBackBufferTrimTime = function safeBackBufferTrimTime(seekable, currentTime, targetDuration) {\n  // 30 seconds before the playhead provides a safe default for trimming.\n  //\n  // Choosing a reasonable default is particularly important for high bitrate content and\n  // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n  // throw an APPEND_BUFFER_ERR.\n  var trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n\n  if (seekable.length) {\n    // Some live playlists may have a shorter window of content than the full allowed back\n    // buffer. For these playlists, don't save content that's no longer within the window.\n    trimTime = Math.max(trimTime, seekable.start(0));\n  } // Don't remove within target duration of the current time to avoid the possibility of\n  // removing the GOP currently being played, as removing it can cause playback stalls.\n\n\n  var maxTrimTime = currentTime - targetDuration;\n  return Math.min(maxTrimTime, trimTime);\n};\n\nvar segmentInfoString = function segmentInfoString(segmentInfo) {\n  var startOfSegment = segmentInfo.startOfSegment,\n      duration = segmentInfo.duration,\n      segment = segmentInfo.segment,\n      part = segmentInfo.part,\n      _segmentInfo$playlist = segmentInfo.playlist,\n      seq = _segmentInfo$playlist.mediaSequence,\n      id = _segmentInfo$playlist.id,\n      _segmentInfo$playlist2 = _segmentInfo$playlist.segments,\n      segments = _segmentInfo$playlist2 === void 0 ? [] : _segmentInfo$playlist2,\n      index = segmentInfo.mediaIndex,\n      partIndex = segmentInfo.partIndex,\n      timeline = segmentInfo.timeline;\n  var segmentLen = segments.length - 1;\n  var selection = 'mediaIndex/partIndex increment';\n\n  if (segmentInfo.getMediaInfoForTime) {\n    selection = \"getMediaInfoForTime (\" + segmentInfo.getMediaInfoForTime + \")\";\n  } else if (segmentInfo.isSyncRequest) {\n    selection = 'getSyncSegmentCandidate (isSyncRequest)';\n  }\n\n  if (segmentInfo.independent) {\n    selection += \" with independent \" + segmentInfo.independent;\n  }\n\n  var hasPartIndex = typeof partIndex === 'number';\n  var name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n  var zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n    preloadSegment: segment\n  }) - 1 : 0;\n  return name + \" [\" + (seq + index) + \"/\" + (seq + segmentLen) + \"]\" + (hasPartIndex ? \" part [\" + partIndex + \"/\" + zeroBasedPartCount + \"]\" : '') + (\" segment start/end [\" + segment.start + \" => \" + segment.end + \"]\") + (hasPartIndex ? \" part start/end [\" + part.start + \" => \" + part.end + \"]\" : '') + (\" startOfSegment [\" + startOfSegment + \"]\") + (\" duration [\" + duration + \"]\") + (\" timeline [\" + timeline + \"]\") + (\" selected by [\" + selection + \"]\") + (\" playlist [\" + id + \"]\");\n};\n\nvar timingInfoPropertyForMedia = function timingInfoPropertyForMedia(mediaType) {\n  return mediaType + \"TimingInfo\";\n};\n/**\n * Returns the timestamp offset to use for the segment.\n *\n * @param {number} segmentTimeline\n *        The timeline of the segment\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} startOfSegment\n *        The estimated segment start\n * @param {TimeRange[]} buffered\n *        The loader's buffer\n * @param {boolean} overrideCheck\n *        If true, no checks are made to see if the timestamp offset value should be set,\n *        but sets it directly to a value.\n *\n * @return {number|null}\n *         Either a number representing a new timestamp offset, or null if the segment is\n *         part of the same timeline\n */\n\n\nvar timestampOffsetForSegment = function timestampOffsetForSegment(_ref) {\n  var segmentTimeline = _ref.segmentTimeline,\n      currentTimeline = _ref.currentTimeline,\n      startOfSegment = _ref.startOfSegment,\n      buffered = _ref.buffered,\n      overrideCheck = _ref.overrideCheck; // Check to see if we are crossing a discontinuity to see if we need to set the\n  // timestamp offset on the transmuxer and source buffer.\n  //\n  // Previously, we changed the timestampOffset if the start of this segment was less than\n  // the currently set timestampOffset, but this isn't desirable as it can produce bad\n  // behavior, especially around long running live streams.\n\n  if (!overrideCheck && segmentTimeline === currentTimeline) {\n    return null;\n  } // When changing renditions, it's possible to request a segment on an older timeline. For\n  // instance, given two renditions with the following:\n  //\n  // #EXTINF:10\n  // segment1\n  // #EXT-X-DISCONTINUITY\n  // #EXTINF:10\n  // segment2\n  // #EXTINF:10\n  // segment3\n  //\n  // And the current player state:\n  //\n  // current time: 8\n  // buffer: 0 => 20\n  //\n  // The next segment on the current rendition would be segment3, filling the buffer from\n  // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n  // then the next segment to be requested will be segment1 from the new rendition in\n  // order to fill time 8 and onwards. Using the buffered end would result in repeated\n  // content (since it would position segment1 of the new rendition starting at 20s). This\n  // case can be identified when the new segment's timeline is a prior value. Instead of\n  // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n  // more accurate to the actual start time of the segment.\n\n\n  if (segmentTimeline < currentTimeline) {\n    return startOfSegment;\n  } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n  // value uses the end of the last segment if it is available. While this value\n  // should often be correct, it's better to rely on the buffered end, as the new\n  // content post discontinuity should line up with the buffered end as if it were\n  // time 0 for the new content.\n\n\n  return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n};\n/**\n * Returns whether or not the loader should wait for a timeline change from the timeline\n * change controller before processing the segment.\n *\n * Primary timing in VHS goes by video. This is different from most media players, as\n * audio is more often used as the primary timing source. For the foreseeable future, VHS\n * will continue to use video as the primary timing source, due to the current logic and\n * expectations built around it.\n\n * Since the timing follows video, in order to maintain sync, the video loader is\n * responsible for setting both audio and video source buffer timestamp offsets.\n *\n * Setting different values for audio and video source buffers could lead to\n * desyncing. The following examples demonstrate some of the situations where this\n * distinction is important. Note that all of these cases involve demuxed content. When\n * content is muxed, the audio and video are packaged together, therefore syncing\n * separate media playlists is not an issue.\n *\n * CASE 1: Audio prepares to load a new timeline before video:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:                     ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader              ^\n *\n * In the above example, the audio loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the video loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the audio loader goes ahead and loads and appends the 6th segment before the video\n * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n * the audio loader must provide the audioAppendStart value to trim the content in the\n * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n * segment until that value is provided.\n *\n * CASE 2: Video prepares to load a new timeline before audio:\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:             ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader                      ^\n *\n * In the above example, the video loader is preparing to load the 6th segment, the first\n * after a discontinuity, while the audio loader is still loading the 5th segment, before\n * the discontinuity.\n *\n * If the video loader goes ahead and loads and appends the 6th segment, then once the\n * segment is loaded and processed, both the video and audio timestamp offsets will be\n * set, since video is used as the primary timing source. This is to ensure content lines\n * up appropriately, as any modifications to the video timing are reflected by audio when\n * the video loader sets the audio and video timestamp offsets to the same value. However,\n * setting the timestamp offset for audio before audio has had a chance to change\n * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n *\n * CASE 3: When seeking, audio prepares to load a new timeline before video\n *\n * Timeline:       0                 1\n * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Audio Loader:           ^\n * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n * Video Loader            ^\n *\n * In the above example, both audio and video loaders are loading segments from timeline\n * 0, but imagine that the seek originated from timeline 1.\n *\n * When seeking to a new timeline, the timestamp offset will be set based on the expected\n * segment start of the loaded video segment. In order to maintain sync, the audio loader\n * must wait for the video loader to load its segment and update both the audio and video\n * timestamp offsets before it may load and append its own segment. This is the case\n * whether the seek results in a mismatched segment request (e.g., the audio loader\n * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n * loaders choose to load the same segment index from each playlist, as the segments may\n * not be aligned perfectly, even for matching segment indexes.\n *\n * @param {Object} timelinechangeController\n * @param {number} currentTimeline\n *        The timeline currently being followed by the loader\n * @param {number} segmentTimeline\n *        The timeline of the segment being loaded\n * @param {('main'|'audio')} loaderType\n *        The loader type\n * @param {boolean} audioDisabled\n *        Whether the audio is disabled for the loader. This should only be true when the\n *        loader may have muxed audio in its segment, but should not append it, e.g., for\n *        the main loader when an alternate audio playlist is active.\n *\n * @return {boolean}\n *         Whether the loader should wait for a timeline change from the timeline change\n *         controller before processing the segment\n */\n\n\nvar shouldWaitForTimelineChange = function shouldWaitForTimelineChange(_ref2) {\n  var timelineChangeController = _ref2.timelineChangeController,\n      currentTimeline = _ref2.currentTimeline,\n      segmentTimeline = _ref2.segmentTimeline,\n      loaderType = _ref2.loaderType,\n      audioDisabled = _ref2.audioDisabled;\n\n  if (currentTimeline === segmentTimeline) {\n    return false;\n  }\n\n  if (loaderType === 'audio') {\n    var lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n      type: 'main'\n    }); // Audio loader should wait if:\n    //\n    // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n    // * main hasn't yet changed to the timeline audio is looking to load\n\n    return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n  } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n  // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n  // loader's segments (or the content is audio/video only and handled by the main\n  // loader).\n\n\n  if (loaderType === 'main' && audioDisabled) {\n    var pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n      type: 'audio'\n    }); // Main loader should wait for the audio loader if audio is not pending a timeline\n    // change to the current timeline.\n    //\n    // Since the main loader is responsible for setting the timestamp offset for both\n    // audio and video, the main loader must wait for audio to be about to change to its\n    // timeline before setting the offset, otherwise, if audio is behind in loading,\n    // segments from the previous timeline would be adjusted by the new timestamp offset.\n    //\n    // This requirement means that video will not cross a timeline until the audio is\n    // about to cross to it, so that way audio and video will always cross the timeline\n    // together.\n    //\n    // In addition to normal timeline changes, these rules also apply to the start of a\n    // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n    // that these rules apply to the first timeline change because if they did not, it's\n    // possible that the main loader will cross two timelines before the audio loader has\n    // crossed one. Logic may be implemented to handle the startup as a special case, but\n    // it's easier to simply treat all timeline changes the same.\n\n    if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n};\n\nvar mediaDuration = function mediaDuration(timingInfos) {\n  var maxDuration = 0;\n  ['video', 'audio'].forEach(function (type) {\n    var typeTimingInfo = timingInfos[type + \"TimingInfo\"];\n\n    if (!typeTimingInfo) {\n      return;\n    }\n\n    var start = typeTimingInfo.start,\n        end = typeTimingInfo.end;\n    var duration;\n\n    if (typeof start === 'bigint' || typeof end === 'bigint') {\n      duration = window$1.BigInt(end) - window$1.BigInt(start);\n    } else if (typeof start === 'number' && typeof end === 'number') {\n      duration = end - start;\n    }\n\n    if (typeof duration !== 'undefined' && duration > maxDuration) {\n      maxDuration = duration;\n    }\n  }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n  // as we only need BigInt when we are above that.\n\n  if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n    maxDuration = Number(maxDuration);\n  }\n\n  return maxDuration;\n};\n\nvar segmentTooLong = function segmentTooLong(_ref3) {\n  var segmentDuration = _ref3.segmentDuration,\n      maxDuration = _ref3.maxDuration; // 0 duration segments are most likely due to metadata only segments or a lack of\n  // information.\n\n  if (!segmentDuration) {\n    return false;\n  } // For HLS:\n  //\n  // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n  // The EXTINF duration of each Media Segment in the Playlist\n  // file, when rounded to the nearest integer, MUST be less than or equal\n  // to the target duration; longer segments can trigger playback stalls\n  // or other errors.\n  //\n  // For DASH, the mpd-parser uses the largest reported segment duration as the target\n  // duration. Although that reported duration is occasionally approximate (i.e., not\n  // exact), a strict check may report that a segment is too long more often in DASH.\n\n\n  return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n};\n\nvar getTroublesomeSegmentDurationMessage = function getTroublesomeSegmentDurationMessage(segmentInfo, sourceType) {\n  // Right now we aren't following DASH's timing model exactly, so only perform\n  // this check for HLS content.\n  if (sourceType !== 'hls') {\n    return null;\n  }\n\n  var segmentDuration = mediaDuration({\n    audioTimingInfo: segmentInfo.audioTimingInfo,\n    videoTimingInfo: segmentInfo.videoTimingInfo\n  }); // Don't report if we lack information.\n  //\n  // If the segment has a duration of 0 it is either a lack of information or a\n  // metadata only segment and shouldn't be reported here.\n\n  if (!segmentDuration) {\n    return null;\n  }\n\n  var targetDuration = segmentInfo.playlist.targetDuration;\n  var isSegmentWayTooLong = segmentTooLong({\n    segmentDuration: segmentDuration,\n    maxDuration: targetDuration * 2\n  });\n  var isSegmentSlightlyTooLong = segmentTooLong({\n    segmentDuration: segmentDuration,\n    maxDuration: targetDuration\n  });\n  var segmentTooLongMessage = \"Segment with index \" + segmentInfo.mediaIndex + \" \" + (\"from playlist \" + segmentInfo.playlist.id + \" \") + (\"has a duration of \" + segmentDuration + \" \") + (\"when the reported duration is \" + segmentInfo.duration + \" \") + (\"and the target duration is \" + targetDuration + \". \") + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n\n  if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n    return {\n      severity: isSegmentWayTooLong ? 'warn' : 'info',\n      message: segmentTooLongMessage\n    };\n  }\n\n  return null;\n};\n/**\n * An object that manages segment loading and appending.\n *\n * @class SegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\n\nvar SegmentLoader = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(SegmentLoader, _videojs$EventTarget);\n\n  function SegmentLoader(settings, options) {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this; // check pre-conditions\n\n    if (!settings) {\n      throw new TypeError('Initialization settings are required');\n    }\n\n    if (typeof settings.currentTime !== 'function') {\n      throw new TypeError('No currentTime getter specified');\n    }\n\n    if (!settings.mediaSource) {\n      throw new TypeError('No MediaSource specified');\n    } // public properties\n\n\n    _this.bandwidth = settings.bandwidth;\n    _this.throughput = {\n      rate: 0,\n      count: 0\n    };\n    _this.roundTrip = NaN;\n\n    _this.resetStats_();\n\n    _this.mediaIndex = null;\n    _this.partIndex = null; // private settings\n\n    _this.hasPlayed_ = settings.hasPlayed;\n    _this.currentTime_ = settings.currentTime;\n    _this.seekable_ = settings.seekable;\n    _this.seeking_ = settings.seeking;\n    _this.duration_ = settings.duration;\n    _this.mediaSource_ = settings.mediaSource;\n    _this.vhs_ = settings.vhs;\n    _this.loaderType_ = settings.loaderType;\n    _this.currentMediaInfo_ = void 0;\n    _this.startingMediaInfo_ = void 0;\n    _this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n    _this.goalBufferLength_ = settings.goalBufferLength;\n    _this.sourceType_ = settings.sourceType;\n    _this.sourceUpdater_ = settings.sourceUpdater;\n    _this.inbandTextTracks_ = settings.inbandTextTracks;\n    _this.state_ = 'INIT';\n    _this.timelineChangeController_ = settings.timelineChangeController;\n    _this.shouldSaveSegmentTimingInfo_ = true;\n    _this.parse708captions_ = settings.parse708captions;\n    _this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n    _this.captionServices_ = settings.captionServices;\n    _this.experimentalExactManifestTimings = settings.experimentalExactManifestTimings; // private instance variables\n\n    _this.checkBufferTimeout_ = null;\n    _this.error_ = void 0;\n    _this.currentTimeline_ = -1;\n    _this.pendingSegment_ = null;\n    _this.xhrOptions_ = null;\n    _this.pendingSegments_ = [];\n    _this.audioDisabled_ = false;\n    _this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n    _this.gopBuffer_ = [];\n    _this.timeMapping_ = 0;\n    _this.safeAppend_ = videojs.browser.IE_VERSION >= 11;\n    _this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    _this.playlistOfLastInitSegment_ = {\n      audio: null,\n      video: null\n    };\n    _this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n    // information yet to start the loading process (e.g., if the audio loader wants to\n    // load a segment from the next timeline but the main loader hasn't yet crossed that\n    // timeline), then the load call will be added to the queue until it is ready to be\n    // processed.\n\n    _this.loadQueue_ = [];\n    _this.metadataQueue_ = {\n      id3: [],\n      caption: []\n    };\n    _this.waitingOnRemove_ = false;\n    _this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n    _this.activeInitSegmentId_ = null;\n    _this.initSegments_ = {}; // HLSe playback\n\n    _this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n    _this.keyCache_ = {};\n    _this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n    // between a time in the display time and a segment index within\n    // a playlist\n\n    _this.syncController_ = settings.syncController;\n    _this.syncPoint_ = {\n      segmentIndex: 0,\n      time: 0\n    };\n    _this.transmuxer_ = _this.createTransmuxer_();\n\n    _this.triggerSyncInfoUpdate_ = function () {\n      return _this.trigger('syncinfoupdate');\n    };\n\n    _this.syncController_.on('syncinfoupdate', _this.triggerSyncInfoUpdate_);\n\n    _this.mediaSource_.addEventListener('sourceopen', function () {\n      if (!_this.isEndOfStream_()) {\n        _this.ended_ = false;\n      }\n    }); // ...for determining the fetch location\n\n\n    _this.fetchAtBuffer_ = false;\n    _this.logger_ = logger(\"SegmentLoader[\" + _this.loaderType_ + \"]\");\n    Object.defineProperty(_assertThisInitialized(_this), 'state', {\n      get: function get() {\n        return this.state_;\n      },\n      set: function set(newState) {\n        if (newState !== this.state_) {\n          this.logger_(this.state_ + \" -> \" + newState);\n          this.state_ = newState;\n          this.trigger('statechange');\n        }\n      }\n    });\n\n    _this.sourceUpdater_.on('ready', function () {\n      if (_this.hasEnoughInfoToAppend_()) {\n        _this.processCallQueue_();\n      }\n    }); // Only the main loader needs to listen for pending timeline changes, as the main\n    // loader should wait for audio to be ready to change its timeline so that both main\n    // and audio timelines change together. For more details, see the\n    // shouldWaitForTimelineChange function.\n\n\n    if (_this.loaderType_ === 'main') {\n      _this.timelineChangeController_.on('pendingtimelinechange', function () {\n        if (_this.hasEnoughInfoToAppend_()) {\n          _this.processCallQueue_();\n        }\n      });\n    } // The main loader only listens on pending timeline changes, but the audio loader,\n    // since its loads follow main, needs to listen on timeline changes. For more details,\n    // see the shouldWaitForTimelineChange function.\n\n\n    if (_this.loaderType_ === 'audio') {\n      _this.timelineChangeController_.on('timelinechange', function () {\n        if (_this.hasEnoughInfoToLoad_()) {\n          _this.processLoadQueue_();\n        }\n\n        if (_this.hasEnoughInfoToAppend_()) {\n          _this.processCallQueue_();\n        }\n      });\n    }\n\n    return _this;\n  }\n\n  var _proto = SegmentLoader.prototype;\n\n  _proto.createTransmuxer_ = function createTransmuxer_() {\n    return segmentTransmuxer.createTransmuxer({\n      remux: false,\n      alignGopsAtEnd: this.safeAppend_,\n      keepOriginalTimestamps: true,\n      parse708captions: this.parse708captions_,\n      captionServices: this.captionServices_\n    });\n  }\n  /**\n   * reset all of our media stats\n   *\n   * @private\n   */\n  ;\n\n  _proto.resetStats_ = function resetStats_() {\n    this.mediaBytesTransferred = 0;\n    this.mediaRequests = 0;\n    this.mediaRequestsAborted = 0;\n    this.mediaRequestsTimedout = 0;\n    this.mediaRequestsErrored = 0;\n    this.mediaTransferDuration = 0;\n    this.mediaSecondsLoaded = 0;\n    this.mediaAppends = 0;\n  }\n  /**\n   * dispose of the SegmentLoader and reset to the default state\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.state = 'DISPOSED';\n    this.pause();\n    this.abort_();\n\n    if (this.transmuxer_) {\n      this.transmuxer_.terminate();\n    }\n\n    this.resetStats_();\n\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n      this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n    }\n\n    this.off();\n  };\n\n  _proto.setAudio = function setAudio(enable) {\n    this.audioDisabled_ = !enable;\n\n    if (enable) {\n      this.appendInitSegment_.audio = true;\n    } else {\n      // remove current track audio if it gets disabled\n      this.sourceUpdater_.removeAudio(0, this.duration_());\n    }\n  }\n  /**\n   * abort anything that is currently doing on with the SegmentLoader\n   * and reset to a default state\n   */\n  ;\n\n  _proto.abort = function abort() {\n    if (this.state !== 'WAITING') {\n      if (this.pendingSegment_) {\n        this.pendingSegment_ = null;\n      }\n\n      return;\n    }\n\n    this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n    // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n    // when the request is aborted. This will prevent the loader from being stuck in the\n    // WAITING state indefinitely.\n\n    this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n    // next segment\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * abort all pending xhr requests and null any pending segements\n   *\n   * @private\n   */\n  ;\n\n  _proto.abort_ = function abort_() {\n    if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n      this.pendingSegment_.abortRequests();\n    } // clear out the segment being processed\n\n\n    this.pendingSegment_ = null;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n    this.waitingOnRemove_ = false;\n    window$1.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n    this.quotaExceededErrorRetryTimeout_ = null;\n  };\n\n  _proto.checkForAbort_ = function checkForAbort_(requestId) {\n    // If the state is APPENDING, then aborts will not modify the state, meaning the first\n    // callback that happens should reset the state to READY so that loading can continue.\n    if (this.state === 'APPENDING' && !this.pendingSegment_) {\n      this.state = 'READY';\n      return true;\n    }\n\n    if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * set an error on the segment loader and null out any pending segements\n   *\n   * @param {Error} error the error to set on the SegmentLoader\n   * @return {Error} the error that was set or that is currently set\n   */\n  ;\n\n  _proto.error = function error(_error) {\n    if (typeof _error !== 'undefined') {\n      this.logger_('error occurred:', _error);\n      this.error_ = _error;\n    }\n\n    this.pendingSegment_ = null;\n    return this.error_;\n  };\n\n  _proto.endOfStream = function endOfStream() {\n    this.ended_ = true;\n\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n\n    this.gopBuffer_.length = 0;\n    this.pause();\n    this.trigger('ended');\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n  ;\n\n  _proto.buffered_ = function buffered_() {\n    var trackInfo = this.getMediaInfo_();\n\n    if (!this.sourceUpdater_ || !trackInfo) {\n      return videojs.createTimeRanges();\n    }\n\n    if (this.loaderType_ === 'main') {\n      var hasAudio = trackInfo.hasAudio,\n          hasVideo = trackInfo.hasVideo,\n          isMuxed = trackInfo.isMuxed;\n\n      if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n        return this.sourceUpdater_.buffered();\n      }\n\n      if (hasVideo) {\n        return this.sourceUpdater_.videoBuffered();\n      }\n    } // One case that can be ignored for now is audio only with alt audio,\n    // as we don't yet have proper support for that.\n\n\n    return this.sourceUpdater_.audioBuffered();\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n  ;\n\n  _proto.initSegmentForMap = function initSegmentForMap(map, set) {\n    if (set === void 0) {\n      set = false;\n    }\n\n    if (!map) {\n      return null;\n    }\n\n    var id = initSegmentId(map);\n    var storedMap = this.initSegments_[id];\n\n    if (set && !storedMap && map.bytes) {\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: map.bytes,\n        tracks: map.tracks,\n        timescales: map.timescales\n      };\n    }\n\n    return storedMap || map;\n  }\n  /**\n   * Gets and sets key for the provided key\n   *\n   * @param {Object} key\n   *        The key object representing the key to get or set\n   * @param {boolean=} set\n   *        If true, the key for the provided key should be saved\n   * @return {Object}\n   *         Key object for desired key\n   */\n  ;\n\n  _proto.segmentKey = function segmentKey(key, set) {\n    if (set === void 0) {\n      set = false;\n    }\n\n    if (!key) {\n      return null;\n    }\n\n    var id = segmentKeyId(key);\n    var storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n    if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n      this.keyCache_[id] = storedKey = {\n        resolvedUri: key.resolvedUri,\n        bytes: key.bytes\n      };\n    }\n\n    var result = {\n      resolvedUri: (storedKey || key).resolvedUri\n    };\n\n    if (storedKey) {\n      result.bytes = storedKey.bytes;\n    }\n\n    return result;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n  ;\n\n  _proto.couldBeginLoading_ = function couldBeginLoading_() {\n    return this.playlist_ && !this.paused();\n  }\n  /**\n   * load a playlist and start to fill the buffer\n   */\n  ;\n\n  _proto.load = function load() {\n    // un-pause\n    this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n    // specified\n\n    if (!this.playlist_) {\n      return;\n    } // if all the configuration is ready, initialize and begin loading\n\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    } // if we're in the middle of processing a segment already, don't\n    // kick off an additional segment request\n\n\n    if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n      return;\n    }\n\n    this.state = 'READY';\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n  ;\n\n  _proto.init_ = function init_() {\n    this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n    // audio data from the muxed content should be removed\n\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * set a playlist on the segment loader\n   *\n   * @param {PlaylistLoader} media the playlist to set on the segment loader\n   */\n  ;\n\n  _proto.playlist = function playlist(newPlaylist, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    if (!newPlaylist) {\n      return;\n    }\n\n    var oldPlaylist = this.playlist_;\n    var segmentInfo = this.pendingSegment_;\n    this.playlist_ = newPlaylist;\n    this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n    // is always our zero-time so force a sync update each time the playlist\n    // is refreshed from the server\n    //\n    // Use the INIT state to determine if playback has started, as the playlist sync info\n    // should be fixed once requests begin (as sync points are generated based on sync\n    // info), but not before then.\n\n    if (this.state === 'INIT') {\n      newPlaylist.syncInfo = {\n        mediaSequence: newPlaylist.mediaSequence,\n        time: 0\n      }; // Setting the date time mapping means mapping the program date time (if available)\n      // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n      // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n      // be updated as the playlist is refreshed before the loader starts loading, the\n      // program date time mapping needs to be updated as well.\n      //\n      // This mapping is only done for the main loader because a program date time should\n      // map equivalently between playlists.\n\n      if (this.loaderType_ === 'main') {\n        this.syncController_.setDateTimeMappingForStart(newPlaylist);\n      }\n    }\n\n    var oldId = null;\n\n    if (oldPlaylist) {\n      if (oldPlaylist.id) {\n        oldId = oldPlaylist.id;\n      } else if (oldPlaylist.uri) {\n        oldId = oldPlaylist.uri;\n      }\n    }\n\n    this.logger_(\"playlist update [\" + oldId + \" => \" + (newPlaylist.id || newPlaylist.uri) + \"]\"); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n    // in LIVE, we always want to update with new playlists (including refreshes)\n\n    this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      return this.init_();\n    }\n\n    if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n      if (this.mediaIndex !== null) {\n        // we must reset/resync the segment loader when we switch renditions and\n        // the segment loader is already synced to the previous rendition\n        // on playlist changes we want it to be possible to fetch\n        // at the buffer for vod but not for live. So we use resetLoader\n        // for live and resyncLoader for vod. We want this because\n        // if a playlist uses independent and non-independent segments/parts the\n        // buffer may not accurately reflect the next segment that we should try\n        // downloading.\n        if (!newPlaylist.endList) {\n          this.resetLoader();\n        } else {\n          this.resyncLoader();\n        }\n      }\n\n      this.currentMediaInfo_ = void 0;\n      this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n      return;\n    } // we reloaded the same playlist so we are in a live scenario\n    // and we will likely need to adjust the mediaIndex\n\n\n    var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n    this.logger_(\"live window shift [\" + mediaSequenceDiff + \"]\"); // update the mediaIndex on the SegmentLoader\n    // this is important because we can abort a request and this value must be\n    // equal to the last appended mediaIndex\n\n    if (this.mediaIndex !== null) {\n      this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n      // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n      // new playlist was incremented by 1.\n\n      if (this.mediaIndex < 0) {\n        this.mediaIndex = null;\n        this.partIndex = null;\n      } else {\n        var segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n        // unless parts fell off of the playlist for this segment.\n        // In that case we need to reset partIndex and resync\n\n        if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n          var mediaIndex = this.mediaIndex;\n          this.logger_(\"currently processing part (index \" + this.partIndex + \") no longer exists.\");\n          this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n          // as the part was dropped from our current playlists segment.\n          // The mediaIndex will still be valid so keep that around.\n\n          this.mediaIndex = mediaIndex;\n        }\n      }\n    } // update the mediaIndex on the SegmentInfo object\n    // this is important because we will update this.mediaIndex with this value\n    // in `handleAppendsDone_` after the segment has been successfully appended\n\n\n    if (segmentInfo) {\n      segmentInfo.mediaIndex -= mediaSequenceDiff;\n\n      if (segmentInfo.mediaIndex < 0) {\n        segmentInfo.mediaIndex = null;\n        segmentInfo.partIndex = null;\n      } else {\n        // we need to update the referenced segment so that timing information is\n        // saved for the new playlist's segment, however, if the segment fell off the\n        // playlist, we can leave the old reference and just lose the timing info\n        if (segmentInfo.mediaIndex >= 0) {\n          segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n        }\n\n        if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n          segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n        }\n      }\n    }\n\n    this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n  }\n  /**\n   * Prevent the loader from fetching additional segments. If there\n   * is a segment request outstanding, it will finish processing\n   * before the loader halts. A segment loader can be unpaused by\n   * calling load().\n   */\n  ;\n\n  _proto.pause = function pause() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n      this.checkBufferTimeout_ = null;\n    }\n  }\n  /**\n   * Returns whether the segment loader is fetching additional\n   * segments when given the opportunity. This property can be\n   * modified through calls to pause() and load().\n   */\n  ;\n\n  _proto.paused = function paused() {\n    return this.checkBufferTimeout_ === null;\n  }\n  /**\n   * Delete all the buffered data and reset the SegmentLoader\n   *\n   * @param {Function} [done] an optional callback to be executed when the remove\n   * operation is complete\n   */\n  ;\n\n  _proto.resetEverything = function resetEverything(done) {\n    this.ended_ = false;\n    this.appendInitSegment_ = {\n      audio: true,\n      video: true\n    };\n    this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n    // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n    // we then clamp the value to duration if necessary.\n\n    this.remove(0, Infinity, done); // clears fmp4 captions\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearAllMp4Captions'\n      }); // reset the cache in the transmuxer\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n    }\n  }\n  /**\n   * Force the SegmentLoader to resync and start loading around the currentTime instead\n   * of starting at the end of the buffer\n   *\n   * Useful for fast quality changes\n   */\n  ;\n\n  _proto.resetLoader = function resetLoader() {\n    this.fetchAtBuffer_ = false;\n    this.resyncLoader();\n  }\n  /**\n   * Force the SegmentLoader to restart synchronization and make a conservative guess\n   * before returning to the simple walk-forward method\n   */\n  ;\n\n  _proto.resyncLoader = function resyncLoader() {\n    if (this.transmuxer_) {\n      // need to clear out any cached data to prepare for the new segment\n      segmentTransmuxer.reset(this.transmuxer_);\n    }\n\n    this.mediaIndex = null;\n    this.partIndex = null;\n    this.syncPoint_ = null;\n    this.isPendingTimestampOffset_ = false;\n    this.callQueue_ = [];\n    this.loadQueue_ = [];\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n    this.abort();\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   * @param {Function} [done] - an optional callback to be executed when the remove\n   * @param {boolean} force - force all remove operations to happen\n   * operation is complete\n   */\n  ;\n\n  _proto.remove = function remove(start, end, done, force) {\n    if (done === void 0) {\n      done = function done() {};\n    }\n\n    if (force === void 0) {\n      force = false;\n    } // clamp end to duration if we need to remove everything.\n    // This is due to a browser bug that causes issues if we remove to Infinity.\n    // videojs/videojs-contrib-hls#1225\n\n\n    if (end === Infinity) {\n      end = this.duration_();\n    } // skip removes that would throw an error\n    // commonly happens during a rendition switch at the start of a video\n    // from start 0 to end 0\n\n\n    if (end <= start) {\n      this.logger_('skipping remove because end ${end} is <= start ${start}');\n      return;\n    }\n\n    if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n      this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n      return;\n    } // set it to one to complete this function's removes\n\n\n    var removesRemaining = 1;\n\n    var removeFinished = function removeFinished() {\n      removesRemaining--;\n\n      if (removesRemaining === 0) {\n        done();\n      }\n    };\n\n    if (force || !this.audioDisabled_) {\n      removesRemaining++;\n      this.sourceUpdater_.removeAudio(start, end, removeFinished);\n    } // While it would be better to only remove video if the main loader has video, this\n    // should be safe with audio only as removeVideo will call back even if there's no\n    // video buffer.\n    //\n    // In theory we can check to see if there's video before calling the remove, but in\n    // the event that we're switching between renditions and from video to audio only\n    // (when we add support for that), we may need to clear the video contents despite\n    // what the new media will contain.\n\n\n    if (force || this.loaderType_ === 'main') {\n      this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n      removesRemaining++;\n      this.sourceUpdater_.removeVideo(start, end, removeFinished);\n    } // remove any captions and ID3 tags\n\n\n    for (var track in this.inbandTextTracks_) {\n      removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n    }\n\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n    removeFinished();\n  }\n  /**\n   * (re-)schedule monitorBufferTick_ to run as soon as possible\n   *\n   * @private\n   */\n  ;\n\n  _proto.monitorBuffer_ = function monitorBuffer_() {\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), 1);\n  }\n  /**\n   * As long as the SegmentLoader is in the READY state, periodically\n   * invoke fillBuffer_().\n   *\n   * @private\n   */\n  ;\n\n  _proto.monitorBufferTick_ = function monitorBufferTick_() {\n    if (this.state === 'READY') {\n      this.fillBuffer_();\n    }\n\n    if (this.checkBufferTimeout_) {\n      window$1.clearTimeout(this.checkBufferTimeout_);\n    }\n\n    this.checkBufferTimeout_ = window$1.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n  ;\n\n  _proto.fillBuffer_ = function fillBuffer_() {\n    // TODO since the source buffer maintains a queue, and we shouldn't call this function\n    // except when we're ready for the next segment, this check can most likely be removed\n    if (this.sourceUpdater_.updating()) {\n      return;\n    } // see if we need to begin loading immediately\n\n\n    var segmentInfo = this.chooseNextRequest_();\n\n    if (!segmentInfo) {\n      return;\n    }\n\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      this.isPendingTimestampOffset_ = false;\n      this.timelineChangeController_.pendingTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      });\n    }\n\n    this.loadSegment_(segmentInfo);\n  }\n  /**\n   * Determines if we should call endOfStream on the media source based\n   * on the state of the buffer or if appened segment was the final\n   * segment in the playlist.\n   *\n   * @param {number} [mediaIndex] the media index of segment we last appended\n   * @param {Object} [playlist] a media playlist object\n   * @return {boolean} do we need to call endOfStream on the MediaSource\n   */\n  ;\n\n  _proto.isEndOfStream_ = function isEndOfStream_(mediaIndex, playlist, partIndex) {\n    if (mediaIndex === void 0) {\n      mediaIndex = this.mediaIndex;\n    }\n\n    if (playlist === void 0) {\n      playlist = this.playlist_;\n    }\n\n    if (partIndex === void 0) {\n      partIndex = this.partIndex;\n    }\n\n    if (!playlist || !this.mediaSource_) {\n      return false;\n    }\n\n    var segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n    var appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n    var appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n    // so that MediaSources can trigger the `ended` event when it runs out of\n    // buffered data instead of waiting for me\n\n    return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n  }\n  /**\n   * Determines what request should be made given current segment loader state.\n   *\n   * @return {Object} a request object that describes the segment/part to load\n   */\n  ;\n\n  _proto.chooseNextRequest_ = function chooseNextRequest_() {\n    var buffered = this.buffered_();\n    var bufferedEnd = lastBufferedEnd(buffered) || 0;\n    var bufferedTime = timeAheadOf(buffered, this.currentTime_());\n    var preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n    var haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n    var segments = this.playlist_.segments; // return no segment if:\n    // 1. we don't have segments\n    // 2. The video has not yet played and we already downloaded a segment\n    // 3. we already have enough buffered time\n\n    if (!segments.length || preloaded || haveEnoughBuffer) {\n      return null;\n    }\n\n    this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n    var next = {\n      partIndex: null,\n      mediaIndex: null,\n      startOfSegment: null,\n      playlist: this.playlist_,\n      isSyncRequest: Boolean(!this.syncPoint_)\n    };\n\n    if (next.isSyncRequest) {\n      next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n    } else if (this.mediaIndex !== null) {\n      var segment = segments[this.mediaIndex];\n      var partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n      next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n\n      if (segment.parts && segment.parts[partIndex + 1]) {\n        next.mediaIndex = this.mediaIndex;\n        next.partIndex = partIndex + 1;\n      } else {\n        next.mediaIndex = this.mediaIndex + 1;\n      }\n    } else {\n      // Find the segment containing the end of the buffer or current time.\n      var _Playlist$getMediaInf = Playlist.getMediaInfoForTime({\n        experimentalExactManifestTimings: this.experimentalExactManifestTimings,\n        playlist: this.playlist_,\n        currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n        startingPartIndex: this.syncPoint_.partIndex,\n        startingSegmentIndex: this.syncPoint_.segmentIndex,\n        startTime: this.syncPoint_.time\n      }),\n          segmentIndex = _Playlist$getMediaInf.segmentIndex,\n          startTime = _Playlist$getMediaInf.startTime,\n          _partIndex = _Playlist$getMediaInf.partIndex;\n\n      next.getMediaInfoForTime = this.fetchAtBuffer_ ? \"bufferedEnd \" + bufferedEnd : \"currentTime \" + this.currentTime_();\n      next.mediaIndex = segmentIndex;\n      next.startOfSegment = startTime;\n      next.partIndex = _partIndex;\n    }\n\n    var nextSegment = segments[next.mediaIndex];\n    var nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n    // the next partIndex is invalid do not choose a next segment.\n\n    if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n      return null;\n    } // if the next segment has parts, and we don't have a partIndex.\n    // Set partIndex to 0\n\n\n    if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n      next.partIndex = 0;\n      nextPart = nextSegment.parts[0];\n    } // if we have no buffered data then we need to make sure\n    // that the next part we append is \"independent\" if possible.\n    // So we check if the previous part is independent, and request\n    // it if it is.\n\n\n    if (!bufferedTime && nextPart && !nextPart.independent) {\n      if (next.partIndex === 0) {\n        var lastSegment = segments[next.mediaIndex - 1];\n        var lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n\n        if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n          next.mediaIndex -= 1;\n          next.partIndex = lastSegment.parts.length - 1;\n          next.independent = 'previous segment';\n        }\n      } else if (nextSegment.parts[next.partIndex - 1].independent) {\n        next.partIndex -= 1;\n        next.independent = 'previous part';\n      }\n    }\n\n    var ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n    // 1. this is the last segment in the playlist\n    // 2. end of stream has been called on the media source already\n    // 3. the player is not seeking\n\n    if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n      return null;\n    }\n\n    return this.generateSegmentInfo_(next);\n  };\n\n  _proto.generateSegmentInfo_ = function generateSegmentInfo_(options) {\n    var independent = options.independent,\n        playlist = options.playlist,\n        mediaIndex = options.mediaIndex,\n        startOfSegment = options.startOfSegment,\n        isSyncRequest = options.isSyncRequest,\n        partIndex = options.partIndex,\n        forceTimestampOffset = options.forceTimestampOffset,\n        getMediaInfoForTime = options.getMediaInfoForTime;\n    var segment = playlist.segments[mediaIndex];\n    var part = typeof partIndex === 'number' && segment.parts[partIndex];\n    var segmentInfo = {\n      requestId: 'segment-loader-' + Math.random(),\n      // resolve the segment URL relative to the playlist\n      uri: part && part.resolvedUri || segment.resolvedUri,\n      // the segment's mediaIndex at the time it was requested\n      mediaIndex: mediaIndex,\n      partIndex: part ? partIndex : null,\n      // whether or not to update the SegmentLoader's state with this\n      // segment's mediaIndex\n      isSyncRequest: isSyncRequest,\n      startOfSegment: startOfSegment,\n      // the segment's playlist\n      playlist: playlist,\n      // unencrypted bytes of the segment\n      bytes: null,\n      // when a key is defined for this segment, the encrypted bytes\n      encryptedBytes: null,\n      // The target timestampOffset for this segment when we append it\n      // to the source buffer\n      timestampOffset: null,\n      // The timeline that the segment is in\n      timeline: segment.timeline,\n      // The expected duration of the segment in seconds\n      duration: part && part.duration || segment.duration,\n      // retain the segment in case the playlist updates while doing an async process\n      segment: segment,\n      part: part,\n      byteLength: 0,\n      transmuxer: this.transmuxer_,\n      // type of getMediaInfoForTime that was used to get this segment\n      getMediaInfoForTime: getMediaInfoForTime,\n      independent: independent\n    };\n    var overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n    segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n      segmentTimeline: segment.timeline,\n      currentTimeline: this.currentTimeline_,\n      startOfSegment: startOfSegment,\n      buffered: this.buffered_(),\n      overrideCheck: overrideCheck\n    });\n    var audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n\n    if (typeof audioBufferedEnd === 'number') {\n      // since the transmuxer is using the actual timing values, but the buffer is\n      // adjusted by the timestamp offset, we must adjust the value here\n      segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n    }\n\n    if (this.sourceUpdater_.videoBuffered().length) {\n      segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_, // since the transmuxer is using the actual timing values, but the time is\n      // adjusted by the timestmap offset, we must adjust the value here\n      this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n    }\n\n    return segmentInfo;\n  } // get the timestampoffset for a segment,\n  // added so that vtt segment loader can override and prevent\n  // adding timestamp offsets.\n  ;\n\n  _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_(options) {\n    return timestampOffsetForSegment(options);\n  }\n  /**\n   * Determines if the network has enough bandwidth to complete the current segment\n   * request in a timely manner. If not, the request will be aborted early and bandwidth\n   * updated to trigger a playlist switch.\n   *\n   * @param {Object} stats\n   *        Object containing stats about the request timing and size\n   * @private\n   */\n  ;\n\n  _proto.earlyAbortWhenNeeded_ = function earlyAbortWhenNeeded_(stats) {\n    if (this.vhs_.tech_.paused() || // Don't abort if the current playlist is on the lowestEnabledRendition\n    // TODO: Replace using timeout with a boolean indicating whether this playlist is\n    //       the lowestEnabledRendition.\n    !this.xhrOptions_.timeout || // Don't abort if we have no bandwidth information to estimate segment sizes\n    !this.playlist_.attributes.BANDWIDTH) {\n      return;\n    } // Wait at least 1 second since the first byte of data has been received before\n    // using the calculated bandwidth from the progress event to allow the bitrate\n    // to stabilize\n\n\n    if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n      return;\n    }\n\n    var currentTime = this.currentTime_();\n    var measuredBandwidth = stats.bandwidth;\n    var segmentDuration = this.pendingSegment_.duration;\n    var requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n    // if we are only left with less than 1 second when the request completes.\n    // A negative timeUntilRebuffering indicates we are already rebuffering\n\n    var timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n    // is larger than the estimated time until the player runs out of forward buffer\n\n    if (requestTimeRemaining <= timeUntilRebuffer$1) {\n      return;\n    }\n\n    var switchCandidate = minRebufferMaxBandwidthSelector({\n      master: this.vhs_.playlists.master,\n      currentTime: currentTime,\n      bandwidth: measuredBandwidth,\n      duration: this.duration_(),\n      segmentDuration: segmentDuration,\n      timeUntilRebuffer: timeUntilRebuffer$1,\n      currentTimeline: this.currentTimeline_,\n      syncController: this.syncController_\n    });\n\n    if (!switchCandidate) {\n      return;\n    }\n\n    var rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n    var timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n    var minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n    // potential round trip time of the new request so that we are not too aggressive\n    // with switching to a playlist that might save us a fraction of a second.\n\n    if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n      minimumTimeSaving = 1;\n    }\n\n    if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n      return;\n    } // set the bandwidth to that of the desired playlist being sure to scale by\n    // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n    // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n\n    this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n    this.trigger('earlyabort');\n  };\n\n  _proto.handleAbort_ = function handleAbort_(segmentInfo) {\n    this.logger_(\"Aborting \" + segmentInfoString(segmentInfo));\n    this.mediaRequestsAborted += 1;\n  }\n  /**\n   * XHR `progress` event handler\n   *\n   * @param {Event}\n   *        The XHR `progress` event\n   * @param {Object} simpleSegment\n   *        A simplified segment object copy\n   * @private\n   */\n  ;\n\n  _proto.handleProgress_ = function handleProgress_(event, simpleSegment) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n\n    this.trigger('progress');\n  };\n\n  _proto.handleTrackInfo_ = function handleTrackInfo_(simpleSegment, trackInfo) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n\n    if (this.checkForIllegalMediaSwitch(trackInfo)) {\n      return;\n    }\n\n    trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n    // Guard against cases where we're not getting track info at all until we are\n    // certain that all streams will provide it.\n\n    if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.startingMediaInfo_ = trackInfo;\n      this.currentMediaInfo_ = trackInfo;\n      this.logger_('trackinfo update', trackInfo);\n      this.trigger('trackinfo');\n    } // trackinfo may cause an abort if the trackinfo\n    // causes a codec change to an unsupported codec.\n\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // set trackinfo on the pending segment so that\n    // it can append.\n\n\n    this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  };\n\n  _proto.handleTimingInfo_ = function handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_;\n    var timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n    segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n    segmentInfo[timingInfoProperty][timeType] = time;\n    this.logger_(\"timinginfo: \" + mediaType + \" - \" + timeType + \" - \" + time); // check if any calls were waiting on the timing info\n\n    if (this.hasEnoughInfoToAppend_()) {\n      this.processCallQueue_();\n    }\n  };\n\n  _proto.handleCaptions_ = function handleCaptions_(simpleSegment, captionData) {\n    var _this2 = this;\n\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // This could only happen with fmp4 segments, but\n    // should still not happen in general\n\n\n    if (captionData.length === 0) {\n      this.logger_('SegmentLoader received no captions from a caption event');\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n    // can be adjusted by the timestamp offset\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n      return;\n    }\n\n    var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n    var captionTracks = {}; // get total start/end and captions for each track/stream\n\n    captionData.forEach(function (caption) {\n      // caption.stream is actually a track name...\n      // set to the existing values in tracks or default values\n      captionTracks[caption.stream] = captionTracks[caption.stream] || {\n        // Infinity, as any other value will be less than this\n        startTime: Infinity,\n        captions: [],\n        // 0 as an other value will be more than this\n        endTime: 0\n      };\n      var captionTrack = captionTracks[caption.stream];\n      captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n      captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n      captionTrack.captions.push(caption);\n    });\n    Object.keys(captionTracks).forEach(function (trackName) {\n      var _captionTracks$trackN = captionTracks[trackName],\n          startTime = _captionTracks$trackN.startTime,\n          endTime = _captionTracks$trackN.endTime,\n          captions = _captionTracks$trackN.captions;\n      var inbandTextTracks = _this2.inbandTextTracks_;\n\n      _this2.logger_(\"adding cues from \" + startTime + \" -> \" + endTime + \" for \" + trackName);\n\n      createCaptionsTrackIfNotExists(inbandTextTracks, _this2.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n      // We do this because a rendition change that also changes the timescale for captions\n      // will result in captions being re-parsed for certain segments. If we add them again\n      // without clearing we will have two of the same captions visible.\n\n      removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n      addCaptionData({\n        captionArray: captions,\n        inbandTextTracks: inbandTextTracks,\n        timestampOffset: timestampOffset\n      });\n    }); // Reset stored captions since we added parsed\n    // captions to a text track at this point\n\n    if (this.transmuxer_) {\n      this.transmuxer_.postMessage({\n        action: 'clearParsedMp4Captions'\n      });\n    }\n  };\n\n  _proto.handleId3_ = function handleId3_(simpleSegment, id3Frames, dispatchType) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n    if (!segmentInfo.hasAppendedData_) {\n      this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n      return;\n    }\n\n    var timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n    // audio/video source with a metadata track, and an alt audio with a metadata track.\n    // However, this probably won't happen, and if it does it can be handled then.\n\n    createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.vhs_.tech_);\n    addMetadata({\n      inbandTextTracks: this.inbandTextTracks_,\n      metadataArray: id3Frames,\n      timestampOffset: timestampOffset,\n      videoDuration: this.duration_()\n    });\n  };\n\n  _proto.processMetadataQueue_ = function processMetadataQueue_() {\n    this.metadataQueue_.id3.forEach(function (fn) {\n      return fn();\n    });\n    this.metadataQueue_.caption.forEach(function (fn) {\n      return fn();\n    });\n    this.metadataQueue_.id3 = [];\n    this.metadataQueue_.caption = [];\n  };\n\n  _proto.processCallQueue_ = function processCallQueue_() {\n    var callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.callQueue_ = [];\n    callQueue.forEach(function (fun) {\n      return fun();\n    });\n  };\n\n  _proto.processLoadQueue_ = function processLoadQueue_() {\n    var loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n    // functions may check the length of the load queue and default to pushing themselves\n    // back onto the queue.\n\n    this.loadQueue_ = [];\n    loadQueue.forEach(function (fun) {\n      return fun();\n    });\n  }\n  /**\n   * Determines whether the loader has enough info to load the next segment.\n   *\n   * @return {boolean}\n   *         Whether or not the loader has enough info to load the next segment\n   */\n  ;\n\n  _proto.hasEnoughInfoToLoad_ = function hasEnoughInfoToLoad_() {\n    // Since primary timing goes by video, only the audio loader potentially needs to wait\n    // to load.\n    if (this.loaderType_ !== 'audio') {\n      return true;\n    }\n\n    var segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n    // enough info to load.\n\n    if (!segmentInfo) {\n      return false;\n    } // The first segment can and should be loaded immediately so that source buffers are\n    // created together (before appending). Source buffer creation uses the presence of\n    // audio and video data to determine whether to create audio/video source buffers, and\n    // uses processed (transmuxed or parsed) media to determine the types required.\n\n\n    if (!this.getCurrentMediaInfo_()) {\n      return true;\n    }\n\n    if ( // Technically, instead of waiting to load a segment on timeline changes, a segment\n    // can be requested and downloaded and only wait before it is transmuxed or parsed.\n    // But in practice, there are a few reasons why it is better to wait until a loader\n    // is ready to append that segment before requesting and downloading:\n    //\n    // 1. Because audio and main loaders cross discontinuities together, if this loader\n    //    is waiting for the other to catch up, then instead of requesting another\n    //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n    //    allotted to the loader currently behind.\n    // 2. media-segment-request doesn't have to have logic to consider whether a segment\n    // is ready to be processed or not, isolating the queueing behavior to the loader.\n    // 3. The audio loader bases some of its segment properties on timing information\n    //    provided by the main loader, meaning that, if the logic for waiting on\n    //    processing was in media-segment-request, then it would also need to know how\n    //    to re-generate the segment information after the main loader caught up.\n    shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto.getCurrentMediaInfo_ = function getCurrentMediaInfo_(segmentInfo) {\n    if (segmentInfo === void 0) {\n      segmentInfo = this.pendingSegment_;\n    }\n\n    return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n  };\n\n  _proto.getMediaInfo_ = function getMediaInfo_(segmentInfo) {\n    if (segmentInfo === void 0) {\n      segmentInfo = this.pendingSegment_;\n    }\n\n    return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n  };\n\n  _proto.hasEnoughInfoToAppend_ = function hasEnoughInfoToAppend_() {\n    if (!this.sourceUpdater_.ready()) {\n      return false;\n    } // If content needs to be removed or the loader is waiting on an append reattempt,\n    // then no additional content should be appended until the prior append is resolved.\n\n\n    if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n      return false;\n    }\n\n    var segmentInfo = this.pendingSegment_;\n    var trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n    // we do not have information on this specific\n    // segment yet\n\n    if (!segmentInfo || !trackInfo) {\n      return false;\n    }\n\n    var hasAudio = trackInfo.hasAudio,\n        hasVideo = trackInfo.hasVideo,\n        isMuxed = trackInfo.isMuxed;\n\n    if (hasVideo && !segmentInfo.videoTimingInfo) {\n      return false;\n    } // muxed content only relies on video timing information for now.\n\n\n    if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n      return false;\n    }\n\n    if (shouldWaitForTimelineChange({\n      timelineChangeController: this.timelineChangeController_,\n      currentTimeline: this.currentTimeline_,\n      segmentTimeline: segmentInfo.timeline,\n      loaderType: this.loaderType_,\n      audioDisabled: this.audioDisabled_\n    })) {\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto.handleData_ = function handleData_(simpleSegment, result) {\n    this.earlyAbortWhenNeeded_(simpleSegment.stats);\n\n    if (this.checkForAbort_(simpleSegment.requestId)) {\n      return;\n    } // If there's anything in the call queue, then this data came later and should be\n    // executed after the calls currently queued.\n\n\n    if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n      this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n    this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n    this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n    // logic may change behavior depending on the state, and changing state too early may\n    // inflate our estimates of bandwidth. In the future this should be re-examined to\n    // note more granular states.\n    // don't process and append data if the mediaSource is closed\n\n    if (this.mediaSource_.readyState === 'closed') {\n      return;\n    } // if this request included an initialization segment, save that data\n    // to the initSegment cache\n\n\n    if (simpleSegment.map) {\n      simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n      segmentInfo.segment.map = simpleSegment.map;\n    } // if this request included a segment key, save that data in the cache\n\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n\n    segmentInfo.isFmp4 = simpleSegment.isFmp4;\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n\n    if (segmentInfo.isFmp4) {\n      this.trigger('fmp4');\n      segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n    } else {\n      var trackInfo = this.getCurrentMediaInfo_();\n      var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      var firstVideoFrameTimeForData;\n\n      if (useVideoTimingInfo) {\n        firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n      } // Segment loader knows more about segment timing than the transmuxer (in certain\n      // aspects), so make any changes required for a more accurate start time.\n      // Don't set the end time yet, as the segment may not be finished processing.\n\n\n      segmentInfo.timingInfo.start = this.trueSegmentStart_({\n        currentStart: segmentInfo.timingInfo.start,\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex,\n        currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n        useVideoTimingInfo: useVideoTimingInfo,\n        firstVideoFrameTimeForData: firstVideoFrameTimeForData,\n        videoTimingInfo: segmentInfo.videoTimingInfo,\n        audioTimingInfo: segmentInfo.audioTimingInfo\n      });\n    } // Init segments for audio and video only need to be appended in certain cases. Now\n    // that data is about to be appended, we can check the final cases to determine\n    // whether we should append an init segment.\n\n\n    this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n    // as we use the start of the segment to offset the best guess (playlist provided)\n    // timestamp offset.\n\n    this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n    // be appended or not.\n\n    if (segmentInfo.isSyncRequest) {\n      // first save/update our timing info for this segment.\n      // this is what allows us to choose an accurate segment\n      // and the main reason we make a sync request.\n      this.updateTimingInfoEnd_(segmentInfo);\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo: segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n      var next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n      // after taking into account its timing info, do not append it.\n\n      if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n        this.logger_('sync segment was incorrect, not appending');\n        return;\n      } // otherwise append it like any other segment as our guess was correct.\n\n\n      this.logger_('sync segment was correct, appending');\n    } // Save some state so that in the future anything waiting on first append (and/or\n    // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n    // we need some notion of whether the timestamp offset or other relevant information\n    // has had a chance to be set.\n\n\n    segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n    this.processMetadataQueue_();\n    this.appendData_(segmentInfo, result);\n  };\n\n  _proto.updateAppendInitSegmentStatus = function updateAppendInitSegmentStatus(segmentInfo, type) {\n    // alt audio doesn't manage timestamp offset\n    if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' && // in the case that we're handling partial data, we don't want to append an init\n    // segment for each chunk\n    !segmentInfo.changedTimestampOffset) {\n      // if the timestamp offset changed, the timeline may have changed, so we have to re-\n      // append init segments\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n    }\n\n    if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n      // make sure we append init segment on playlist changes, in case the media config\n      // changed\n      this.appendInitSegment_[type] = true;\n    }\n  };\n\n  _proto.getInitSegmentAndUpdateState_ = function getInitSegmentAndUpdateState_(_ref4) {\n    var type = _ref4.type,\n        initSegment = _ref4.initSegment,\n        map = _ref4.map,\n        playlist = _ref4.playlist; // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n    // (Section 3) required to parse the applicable Media Segments.  It applies to every\n    // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n    // or until the end of the playlist.\"\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n\n    if (map) {\n      var id = initSegmentId(map);\n\n      if (this.activeInitSegmentId_ === id) {\n        // don't need to re-append the init segment if the ID matches\n        return null;\n      } // a map-specified init segment takes priority over any transmuxed (or otherwise\n      // obtained) init segment\n      //\n      // this also caches the init segment for later use\n\n\n      initSegment = this.initSegmentForMap(map, true).bytes;\n      this.activeInitSegmentId_ = id;\n    } // We used to always prepend init segments for video, however, that shouldn't be\n    // necessary. Instead, we should only append on changes, similar to what we've always\n    // done for audio. This is more important (though may not be that important) for\n    // frame-by-frame appending for LHLS, simply because of the increased quantity of\n    // appends.\n\n\n    if (initSegment && this.appendInitSegment_[type]) {\n      // Make sure we track the playlist that we last used for the init segment, so that\n      // we can re-append the init segment in the event that we get data from a new\n      // playlist. Discontinuities and track changes are handled in other sections.\n      this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n      this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n      // we are appending the muxer init segment\n\n      this.activeInitSegmentId_ = null;\n      return initSegment;\n    }\n\n    return null;\n  };\n\n  _proto.handleQuotaExceededError_ = function handleQuotaExceededError_(_ref5, error) {\n    var _this3 = this;\n\n    var segmentInfo = _ref5.segmentInfo,\n        type = _ref5.type,\n        bytes = _ref5.bytes;\n    var audioBuffered = this.sourceUpdater_.audioBuffered();\n    var videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n    // should be cleared out during the buffer removals. However, log in case it helps\n    // debug.\n\n    if (audioBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n    }\n\n    if (videoBuffered.length > 1) {\n      this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n    }\n\n    var audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n    var audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n    var videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n    var videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n\n    if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n      // Can't remove enough buffer to make room for new segment (or the browser doesn't\n      // allow for appends of segments this size). In the future, it may be possible to\n      // split up the segment and append in pieces, but for now, error out this playlist\n      // in an attempt to switch to a more manageable rendition.\n      this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + (\"Appended byte length: \" + bytes.byteLength + \", \") + (\"audio buffer: \" + timeRangesToArray(audioBuffered).join(', ') + \", \") + (\"video buffer: \" + timeRangesToArray(videoBuffered).join(', ') + \", \"));\n      this.error({\n        message: 'Quota exceeded error with append of a single segment of content',\n        excludeUntil: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n    // that the segment-loader should block on future events until this one is handled, so\n    // that it doesn't keep moving onto further segments. Adding the call to the call\n    // queue will prevent further appends until waitingOnRemove_ and\n    // quotaExceededErrorRetryTimeout_ are cleared.\n    //\n    // Note that this will only block the current loader. In the case of demuxed content,\n    // the other load may keep filling as fast as possible. In practice, this should be\n    // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n    // source buffer, or video fills without enough room for audio to append (and without\n    // the availability of clearing out seconds of back buffer to make room for audio).\n    // But it might still be good to handle this case in the future as a TODO.\n\n\n    this.waitingOnRemove_ = true;\n    this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n      segmentInfo: segmentInfo,\n      type: type,\n      bytes: bytes\n    }));\n    var currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n    // before retrying.\n\n    var timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n    this.logger_(\"On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to \" + timeToRemoveUntil);\n    this.remove(0, timeToRemoveUntil, function () {\n      _this3.logger_(\"On QUOTA_EXCEEDED_ERR, retrying append in \" + MIN_BACK_BUFFER + \"s\");\n\n      _this3.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n      // attempts (since we can't clear less than the minimum)\n\n      _this3.quotaExceededErrorRetryTimeout_ = window$1.setTimeout(function () {\n        _this3.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n\n        _this3.quotaExceededErrorRetryTimeout_ = null;\n\n        _this3.processCallQueue_();\n      }, MIN_BACK_BUFFER * 1000);\n    }, true);\n  };\n\n  _proto.handleAppendError_ = function handleAppendError_(_ref6, error) {\n    var segmentInfo = _ref6.segmentInfo,\n        type = _ref6.type,\n        bytes = _ref6.bytes; // if there's no error, nothing to do\n\n    if (!error) {\n      return;\n    }\n\n    if (error.code === QUOTA_EXCEEDED_ERR) {\n      this.handleQuotaExceededError_({\n        segmentInfo: segmentInfo,\n        type: type,\n        bytes: bytes\n      }); // A quota exceeded error should be recoverable with a future re-append, so no need\n      // to trigger an append error.\n\n      return;\n    }\n\n    this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n    this.error(type + \" append of \" + bytes.length + \"b failed for segment \" + (\"#\" + segmentInfo.mediaIndex + \" in playlist \" + segmentInfo.playlist.id)); // If an append errors, we often can't recover.\n    // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n    //\n    // Trigger a special error so that it can be handled separately from normal,\n    // recoverable errors.\n\n    this.trigger('appenderror');\n  };\n\n  _proto.appendToSourceBuffer_ = function appendToSourceBuffer_(_ref7) {\n    var segmentInfo = _ref7.segmentInfo,\n        type = _ref7.type,\n        initSegment = _ref7.initSegment,\n        data = _ref7.data,\n        bytes = _ref7.bytes; // If this is a re-append, bytes were already created and don't need to be recreated\n\n    if (!bytes) {\n      var segments = [data];\n      var byteLength = data.byteLength;\n\n      if (initSegment) {\n        // if the media initialization segment is changing, append it before the content\n        // segment\n        segments.unshift(initSegment);\n        byteLength += initSegment.byteLength;\n      } // Technically we should be OK appending the init segment separately, however, we\n      // haven't yet tested that, and prepending is how we have always done things.\n\n\n      bytes = concatSegments({\n        bytes: byteLength,\n        segments: segments\n      });\n    }\n\n    this.sourceUpdater_.appendBuffer({\n      segmentInfo: segmentInfo,\n      type: type,\n      bytes: bytes\n    }, this.handleAppendError_.bind(this, {\n      segmentInfo: segmentInfo,\n      type: type,\n      bytes: bytes\n    }));\n  };\n\n  _proto.handleSegmentTimingInfo_ = function handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n    if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n      return;\n    }\n\n    var segment = this.pendingSegment_.segment;\n    var timingInfoProperty = type + \"TimingInfo\";\n\n    if (!segment[timingInfoProperty]) {\n      segment[timingInfoProperty] = {};\n    }\n\n    segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n    segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n    segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n    segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n    segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n    segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n  };\n\n  _proto.appendData_ = function appendData_(segmentInfo, result) {\n    var type = result.type,\n        data = result.data;\n\n    if (!data || !data.byteLength) {\n      return;\n    }\n\n    if (type === 'audio' && this.audioDisabled_) {\n      return;\n    }\n\n    var initSegment = this.getInitSegmentAndUpdateState_({\n      type: type,\n      initSegment: result.initSegment,\n      playlist: segmentInfo.playlist,\n      map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n    });\n    this.appendToSourceBuffer_({\n      segmentInfo: segmentInfo,\n      type: type,\n      initSegment: initSegment,\n      data: data\n    });\n  }\n  /**\n   * load a specific segment from a request into the buffer\n   *\n   * @private\n   */\n  ;\n\n  _proto.loadSegment_ = function loadSegment_(segmentInfo) {\n    var _this4 = this;\n\n    this.state = 'WAITING';\n    this.pendingSegment_ = segmentInfo;\n    this.trimBackBuffer_(segmentInfo);\n\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        });\n      }\n    }\n\n    if (!this.hasEnoughInfoToLoad_()) {\n      this.loadQueue_.push(function () {\n        // regenerate the audioAppendStart, timestampOffset, etc as they\n        // may have changed since this function was added to the queue.\n        var options = _extends({}, segmentInfo, {\n          forceTimestampOffset: true\n        });\n\n        _extends(segmentInfo, _this4.generateSegmentInfo_(options));\n\n        _this4.isPendingTimestampOffset_ = false;\n\n        _this4.updateTransmuxerAndRequestSegment_(segmentInfo);\n      });\n      return;\n    }\n\n    this.updateTransmuxerAndRequestSegment_(segmentInfo);\n  };\n\n  _proto.updateTransmuxerAndRequestSegment_ = function updateTransmuxerAndRequestSegment_(segmentInfo) {\n    var _this5 = this; // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n    // the transmuxer still needs to be updated before then.\n    //\n    // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n    // offset must be passed to the transmuxer for stream correcting adjustments.\n\n\n    if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n      this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n      segmentInfo.gopsToAlignWith = [];\n      this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n      this.transmuxer_.postMessage({\n        action: 'reset'\n      });\n      this.transmuxer_.postMessage({\n        action: 'setTimestampOffset',\n        timestampOffset: segmentInfo.timestampOffset\n      });\n    }\n\n    var simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n    var isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n    var isWalkingForward = this.mediaIndex !== null;\n    var isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ && // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n    // the first timeline\n    segmentInfo.timeline > 0;\n    var isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n    this.logger_(\"Requesting \" + segmentInfoString(segmentInfo)); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n    // then this init segment has never been seen before and should be appended.\n    //\n    // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n    // both to true and leave the decision of whether to append the init segment to append time.\n\n    if (simpleSegment.map && !simpleSegment.map.bytes) {\n      this.logger_('going to request init segment.');\n      this.appendInitSegment_ = {\n        video: true,\n        audio: true\n      };\n    }\n\n    segmentInfo.abortRequests = mediaSegmentRequest({\n      xhr: this.vhs_.xhr,\n      xhrOptions: this.xhrOptions_,\n      decryptionWorker: this.decrypter_,\n      segment: simpleSegment,\n      abortFn: this.handleAbort_.bind(this, segmentInfo),\n      progressFn: this.handleProgress_.bind(this),\n      trackInfoFn: this.handleTrackInfo_.bind(this),\n      timingInfoFn: this.handleTimingInfo_.bind(this),\n      videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n      audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n      captionsFn: this.handleCaptions_.bind(this),\n      isEndOfTimeline: isEndOfTimeline,\n      endedTimelineFn: function endedTimelineFn() {\n        _this5.logger_('received endedtimeline callback');\n      },\n      id3Fn: this.handleId3_.bind(this),\n      dataFn: this.handleData_.bind(this),\n      doneFn: this.segmentRequestFinished_.bind(this),\n      onTransmuxerLog: function onTransmuxerLog(_ref8) {\n        var message = _ref8.message,\n            level = _ref8.level,\n            stream = _ref8.stream;\n\n        _this5.logger_(segmentInfoString(segmentInfo) + \" logged from transmuxer stream \" + stream + \" as a \" + level + \": \" + message);\n      }\n    });\n  }\n  /**\n   * trim the back buffer so that we don't have too much data\n   * in the source buffer\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   */\n  ;\n\n  _proto.trimBackBuffer_ = function trimBackBuffer_(segmentInfo) {\n    var removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n    // buffer and a very conservative \"garbage collector\"\n    // We manually clear out the old buffer to ensure\n    // we don't trigger the QuotaExceeded error\n    // on the source buffer during subsequent appends\n\n    if (removeToTime > 0) {\n      this.remove(0, removeToTime);\n    }\n  }\n  /**\n   * created a simplified copy of the segment object with just the\n   * information necessary to perform the XHR and decryption\n   *\n   * @private\n   *\n   * @param {Object} segmentInfo - the current segment\n   * @return {Object} a simplified segment object copy\n   */\n  ;\n\n  _proto.createSimplifiedSegmentObj_ = function createSimplifiedSegmentObj_(segmentInfo) {\n    var segment = segmentInfo.segment;\n    var part = segmentInfo.part;\n    var simpleSegment = {\n      resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n      byterange: part ? part.byterange : segment.byterange,\n      requestId: segmentInfo.requestId,\n      transmuxer: segmentInfo.transmuxer,\n      audioAppendStart: segmentInfo.audioAppendStart,\n      gopsToAlignWith: segmentInfo.gopsToAlignWith,\n      part: segmentInfo.part\n    };\n    var previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n\n    if (previousSegment && previousSegment.timeline === segment.timeline) {\n      // The baseStartTime of a segment is used to handle rollover when probing the TS\n      // segment to retrieve timing information. Since the probe only looks at the media's\n      // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n      // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n      // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n      // seconds of media time, so should be used here. The previous segment is used since\n      // the end of the previous segment should represent the beginning of the current\n      // segment, so long as they are on the same timeline.\n      if (previousSegment.videoTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n      } else if (previousSegment.audioTimingInfo) {\n        simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n      }\n    }\n\n    if (segment.key) {\n      // if the media sequence is greater than 2^32, the IV will be incorrect\n      // assuming 10s segments, that would be about 1300 years\n      var iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n      simpleSegment.key = this.segmentKey(segment.key);\n      simpleSegment.key.iv = iv;\n    }\n\n    if (segment.map) {\n      simpleSegment.map = this.initSegmentForMap(segment.map);\n    }\n\n    return simpleSegment;\n  };\n\n  _proto.saveTransferStats_ = function saveTransferStats_(stats) {\n    // every request counts as a media request even if it has been aborted\n    // or canceled due to a timeout\n    this.mediaRequests += 1;\n\n    if (stats) {\n      this.mediaBytesTransferred += stats.bytesReceived;\n      this.mediaTransferDuration += stats.roundTripTime;\n    }\n  };\n\n  _proto.saveBandwidthRelatedStats_ = function saveBandwidthRelatedStats_(duration, stats) {\n    // byteLength will be used for throughput, and should be based on bytes receieved,\n    // which we only know at the end of the request and should reflect total bytes\n    // downloaded rather than just bytes processed from components of the segment\n    this.pendingSegment_.byteLength = stats.bytesReceived;\n\n    if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(\"Ignoring segment's bandwidth because its duration of \" + duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\n      return;\n    }\n\n    this.bandwidth = stats.bandwidth;\n    this.roundTrip = stats.roundTripTime;\n  };\n\n  _proto.handleTimeout_ = function handleTimeout_() {\n    // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functinality between segment loaders\n    this.mediaRequestsTimedout += 1;\n    this.bandwidth = 1;\n    this.roundTrip = NaN;\n    this.trigger('bandwidthupdate');\n  }\n  /**\n   * Handle the callback from the segmentRequest function and set the\n   * associated SegmentLoader state and errors if necessary\n   *\n   * @private\n   */\n  ;\n\n  _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\n    // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n    // check the call queue directly since this function doesn't need to deal with any\n    // data, and can continue even if the source buffers are not set up and we didn't get\n    // any data from the segment\n    if (this.callQueue_.length) {\n      this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n      return;\n    }\n\n    this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n    if (!this.pendingSegment_) {\n      return;\n    } // the request was aborted and the SegmentLoader has already started\n    // another request. this can happen when the timeout for an aborted\n    // request triggers due to a limitation in the XHR library\n    // do not count this as any sort of request or we risk double-counting\n\n\n    if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n      return;\n    } // an error occurred from the active pendingSegment_ so reset everything\n\n\n    if (error) {\n      this.pendingSegment_ = null;\n      this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        return;\n      }\n\n      this.pause(); // the error is really just that at least one of the requests timed-out\n      // set the bandwidth to a very low value and trigger an ABR switch to\n      // take emergency action\n\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n        return;\n      } // if control-flow has arrived here, then the error is real\n      // emit an error event to blacklist the current playlist\n\n\n      this.mediaRequestsErrored += 1;\n      this.error(error);\n      this.trigger('error');\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n    // generated for ABR purposes\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n    segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n\n    if (result.gopInfo) {\n      this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n    } // Although we may have already started appending on progress, we shouldn't switch the\n    // state away from loading until we are officially done loading the segment data.\n\n\n    this.state = 'APPENDING'; // used for testing\n\n    this.trigger('appending');\n    this.waitForAppendsToComplete_(segmentInfo);\n  };\n\n  _proto.setTimeMapping_ = function setTimeMapping_(timeline) {\n    var timelineMapping = this.syncController_.mappingForTimeline(timeline);\n\n    if (timelineMapping !== null) {\n      this.timeMapping_ = timelineMapping;\n    }\n  };\n\n  _proto.updateMediaSecondsLoaded_ = function updateMediaSecondsLoaded_(segment) {\n    if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n      this.mediaSecondsLoaded += segment.end - segment.start;\n    } else {\n      this.mediaSecondsLoaded += segment.duration;\n    }\n  };\n\n  _proto.shouldUpdateTransmuxerTimestampOffset_ = function shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n    if (timestampOffset === null) {\n      return false;\n    } // note that we're potentially using the same timestamp offset for both video and\n    // audio\n\n\n    if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      return true;\n    }\n\n    if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.trueSegmentStart_ = function trueSegmentStart_(_ref9) {\n    var currentStart = _ref9.currentStart,\n        playlist = _ref9.playlist,\n        mediaIndex = _ref9.mediaIndex,\n        firstVideoFrameTimeForData = _ref9.firstVideoFrameTimeForData,\n        currentVideoTimestampOffset = _ref9.currentVideoTimestampOffset,\n        useVideoTimingInfo = _ref9.useVideoTimingInfo,\n        videoTimingInfo = _ref9.videoTimingInfo,\n        audioTimingInfo = _ref9.audioTimingInfo;\n\n    if (typeof currentStart !== 'undefined') {\n      // if start was set once, keep using it\n      return currentStart;\n    }\n\n    if (!useVideoTimingInfo) {\n      return audioTimingInfo.start;\n    }\n\n    var previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n    // within that segment. Since the transmuxer maintains a cache of incomplete data\n    // from and/or the last frame seen, the start time may reflect a frame that starts\n    // in the previous segment. Check for that case and ensure the start time is\n    // accurate for the segment.\n\n    if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n      return firstVideoFrameTimeForData;\n    }\n\n    return videoTimingInfo.start;\n  };\n\n  _proto.waitForAppendsToComplete_ = function waitForAppendsToComplete_(segmentInfo) {\n    var trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n\n    if (!trackInfo) {\n      this.error({\n        message: 'No starting media returned, likely due to an unsupported media format.',\n        blacklistDuration: Infinity\n      });\n      this.trigger('error');\n      return;\n    } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n    // on each queue this loader is responsible for to ensure that the appends are\n    // complete.\n\n\n    var hasAudio = trackInfo.hasAudio,\n        hasVideo = trackInfo.hasVideo,\n        isMuxed = trackInfo.isMuxed;\n    var waitForVideo = this.loaderType_ === 'main' && hasVideo;\n    var waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n    segmentInfo.waitingOnAppends = 0; // segments with no data\n\n    if (!segmentInfo.hasAppendedData_) {\n      if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n        // When there's no audio or video data in the segment, there's no audio or video\n        // timing information.\n        //\n        // If there's no audio or video timing information, then the timestamp offset\n        // can't be adjusted to the appropriate value for the transmuxer and source\n        // buffers.\n        //\n        // Therefore, the next segment should be used to set the timestamp offset.\n        this.isPendingTimestampOffset_ = true;\n      } // override settings for metadata only segments\n\n\n      segmentInfo.timingInfo = {\n        start: 0\n      };\n      segmentInfo.waitingOnAppends++;\n\n      if (!this.isPendingTimestampOffset_) {\n        // update the timestampoffset\n        this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n        // no video/audio data.\n\n        this.processMetadataQueue_();\n      } // append is \"done\" instantly with no data.\n\n\n      this.checkAppendsDone_(segmentInfo);\n      return;\n    } // Since source updater could call back synchronously, do the increments first.\n\n\n    if (waitForVideo) {\n      segmentInfo.waitingOnAppends++;\n    }\n\n    if (waitForAudio) {\n      segmentInfo.waitingOnAppends++;\n    }\n\n    if (waitForVideo) {\n      this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n\n    if (waitForAudio) {\n      this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n    }\n  };\n\n  _proto.checkAppendsDone_ = function checkAppendsDone_(segmentInfo) {\n    if (this.checkForAbort_(segmentInfo.requestId)) {\n      return;\n    }\n\n    segmentInfo.waitingOnAppends--;\n\n    if (segmentInfo.waitingOnAppends === 0) {\n      this.handleAppendsDone_();\n    }\n  };\n\n  _proto.checkForIllegalMediaSwitch = function checkForIllegalMediaSwitch(trackInfo) {\n    var illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n\n    if (illegalMediaSwitchError) {\n      this.error({\n        message: illegalMediaSwitchError,\n        blacklistDuration: Infinity\n      });\n      this.trigger('error');\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.updateSourceBufferTimestampOffset_ = function updateSourceBufferTimestampOffset_(segmentInfo) {\n    if (segmentInfo.timestampOffset === null || // we don't yet have the start for whatever media type (video or audio) has\n    // priority, timing-wise, so we must wait\n    typeof segmentInfo.timingInfo.start !== 'number' || // already updated the timestamp offset for this segment\n    segmentInfo.changedTimestampOffset || // the alt audio loader should not be responsible for setting the timestamp offset\n    this.loaderType_ !== 'main') {\n      return;\n    }\n\n    var didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n    // the timing info here comes from video. In the event that the audio is longer than\n    // the video, this will trim the start of the audio.\n    // This also trims any offset from 0 at the beginning of the media\n\n    segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n      audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n      timingInfo: segmentInfo.timingInfo\n    }); // In the event that there are part segment downloads, each will try to update the\n    // timestamp offset. Retaining this bit of state prevents us from updating in the\n    // future (within the same segment), however, there may be a better way to handle it.\n\n    segmentInfo.changedTimestampOffset = true;\n\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n      this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n\n    if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n      this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n      didChange = true;\n    }\n\n    if (didChange) {\n      this.trigger('timestampoffset');\n    }\n  };\n\n  _proto.getSegmentStartTimeForTimestampOffsetCalculation_ = function getSegmentStartTimeForTimestampOffsetCalculation_(_ref10) {\n    var videoTimingInfo = _ref10.videoTimingInfo,\n        audioTimingInfo = _ref10.audioTimingInfo,\n        timingInfo = _ref10.timingInfo;\n\n    if (!this.useDtsForTimestampOffset_) {\n      return timingInfo.start;\n    }\n\n    if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n      return videoTimingInfo.transmuxedDecodeStart;\n    } // handle audio only\n\n\n    if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n      return audioTimingInfo.transmuxedDecodeStart;\n    } // handle content not transmuxed (e.g., MP4)\n\n\n    return timingInfo.start;\n  };\n\n  _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_(segmentInfo) {\n    segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n    var trackInfo = this.getMediaInfo_();\n    var useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n    var prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n\n    if (!prioritizedTimingInfo) {\n      return;\n    }\n\n    segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ? // End time may not exist in a case where we aren't parsing the full segment (one\n    // current example is the case of fmp4), so use the rough duration to calculate an\n    // end time.\n    prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n  }\n  /**\n   * callback to run when appendBuffer is finished. detects if we are\n   * in a good state to do things with the data we got, or if we need\n   * to wait for more\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleAppendsDone_ = function handleAppendsDone_() {\n    // appendsdone can cause an abort\n    if (this.pendingSegment_) {\n      this.trigger('appendsdone');\n    }\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n      // all appending cases?\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n    // best to wait until all appends are done so we're sure that the primary media is\n    // finished (and we have its end time).\n\n    this.updateTimingInfoEnd_(segmentInfo);\n\n    if (this.shouldSaveSegmentTimingInfo_) {\n      // Timeline mappings should only be saved for the main loader. This is for multiple\n      // reasons:\n      //\n      // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n      //    and the main loader try to save the timeline mapping, whichever comes later\n      //    will overwrite the first. In theory this is OK, as the mappings should be the\n      //    same, however, it breaks for (2)\n      // 2) In the event of a live stream, the initial live point will make for a somewhat\n      //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n      //    the mapping will be off for one of the streams, dependent on which one was\n      //    first saved (see (1)).\n      // 3) Primary timing goes by video in VHS, so the mapping should be video.\n      //\n      // Since the audio loader will wait for the main loader to load the first segment,\n      // the main loader will save the first timeline mapping, and ensure that there won't\n      // be a case where audio loads two segments without saving a mapping (thus leading\n      // to missing segment timing info).\n      this.syncController_.saveSegmentTimingInfo({\n        segmentInfo: segmentInfo,\n        shouldSaveTimelineMapping: this.loaderType_ === 'main'\n      });\n    }\n\n    var segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n\n    if (segmentDurationMessage) {\n      if (segmentDurationMessage.severity === 'warn') {\n        videojs.log.warn(segmentDurationMessage.message);\n      } else {\n        this.logger_(segmentDurationMessage.message);\n      }\n    }\n\n    this.recordThroughput_(segmentInfo);\n    this.pendingSegment_ = null;\n    this.state = 'READY';\n\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate'); // if the sync request was not appended\n      // then it was not the correct segment.\n      // throw it away and use the data it gave us\n      // to get the correct one.\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.logger_(\"Throwing away un-appended sync request \" + segmentInfoString(segmentInfo));\n        return;\n      }\n    }\n\n    this.logger_(\"Appended \" + segmentInfoString(segmentInfo));\n    this.addSegmentMetadataCue_(segmentInfo);\n    this.fetchAtBuffer_ = true;\n\n    if (this.currentTimeline_ !== segmentInfo.timeline) {\n      this.timelineChangeController_.lastTimelineChange({\n        type: this.loaderType_,\n        from: this.currentTimeline_,\n        to: segmentInfo.timeline\n      }); // If audio is not disabled, the main segment loader is responsible for updating\n      // the audio timeline as well. If the content is video only, this won't have any\n      // impact.\n\n      if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: 'audio',\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n    }\n\n    this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n    // the following conditional otherwise it may consider this a bad \"guess\"\n    // and attempt to resync when the post-update seekable window and live\n    // point would mean that this was the perfect segment to fetch\n\n    this.trigger('syncinfoupdate');\n    var segment = segmentInfo.segment;\n    var part = segmentInfo.part;\n    var badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n    var badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n    // the currentTime_ that means that our conservative guess was too conservative.\n    // In that case, reset the loader state so that we try to use any information gained\n    // from the previous request to create a new, more accurate, sync-point.\n\n    if (badSegmentGuess || badPartGuess) {\n      this.logger_(\"bad \" + (badSegmentGuess ? 'segment' : 'part') + \" \" + segmentInfoString(segmentInfo));\n      this.resetEverything();\n      return;\n    }\n\n    var isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n    // and conservatively guess\n\n    if (isWalkingForward) {\n      this.trigger('bandwidthupdate');\n    }\n\n    this.trigger('progress');\n    this.mediaIndex = segmentInfo.mediaIndex;\n    this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n    // buffer, end the stream. this ensures the \"ended\" event will\n    // fire if playback reaches that point.\n\n    if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n      this.endOfStream();\n    } // used for testing\n\n\n    this.trigger('appended');\n\n    if (segmentInfo.hasAppendedData_) {\n      this.mediaAppends++;\n    }\n\n    if (!this.paused()) {\n      this.monitorBuffer_();\n    }\n  }\n  /**\n   * Records the current throughput of the decrypt, transmux, and append\n   * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n   * moving average of the throughput. `throughput.count` is the number of\n   * data points in the average.\n   *\n   * @private\n   * @param {Object} segmentInfo the object returned by loadSegment\n   */\n  ;\n\n  _proto.recordThroughput_ = function recordThroughput_(segmentInfo) {\n    if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n      this.logger_(\"Ignoring segment's throughput because its duration of \" + segmentInfo.duration + (\" is less than the min to record \" + MIN_SEGMENT_DURATION_TO_SAVE_STATS));\n      return;\n    }\n\n    var rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n    // by zero in the case where the throughput is ridiculously high\n\n    var segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n    var segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n    //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n    this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n  }\n  /**\n   * Adds a cue to the segment-metadata track with some metadata information about the\n   * segment\n   *\n   * @private\n   * @param {Object} segmentInfo\n   *        the object returned by loadSegment\n   * @method addSegmentMetadataCue_\n   */\n  ;\n\n  _proto.addSegmentMetadataCue_ = function addSegmentMetadataCue_(segmentInfo) {\n    if (!this.segmentMetadataTrack_) {\n      return;\n    }\n\n    var segment = segmentInfo.segment;\n    var start = segment.start;\n    var end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n    if (!finite(start) || !finite(end)) {\n      return;\n    }\n\n    removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n    var Cue = window$1.WebKitDataCue || window$1.VTTCue;\n    var value = {\n      custom: segment.custom,\n      dateTimeObject: segment.dateTimeObject,\n      dateTimeString: segment.dateTimeString,\n      bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n      resolution: segmentInfo.playlist.attributes.RESOLUTION,\n      codecs: segmentInfo.playlist.attributes.CODECS,\n      byteLength: segmentInfo.byteLength,\n      uri: segmentInfo.uri,\n      timeline: segmentInfo.timeline,\n      playlist: segmentInfo.playlist.id,\n      start: start,\n      end: end\n    };\n    var data = JSON.stringify(value);\n    var cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n    // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n    cue.value = value;\n    this.segmentMetadataTrack_.addCue(cue);\n  };\n\n  return SegmentLoader;\n}(videojs.EventTarget);\n\nfunction noop() {}\n\nvar toTitleCase = function toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.replace(/./, function (w) {\n    return w.toUpperCase();\n  });\n};\n\nvar bufferTypes = ['video', 'audio'];\n\nvar _updating = function updating(type, sourceUpdater) {\n  var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n  return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n};\n\nvar nextQueueIndexOfType = function nextQueueIndexOfType(type, queue) {\n  for (var i = 0; i < queue.length; i++) {\n    var queueEntry = queue[i];\n\n    if (queueEntry.type === 'mediaSource') {\n      // If the next entry is a media source entry (uses multiple source buffers), block\n      // processing to allow it to go through first.\n      return null;\n    }\n\n    if (queueEntry.type === type) {\n      return i;\n    }\n  }\n\n  return null;\n};\n\nvar shiftQueue = function shiftQueue(type, sourceUpdater) {\n  if (sourceUpdater.queue.length === 0) {\n    return;\n  }\n\n  var queueIndex = 0;\n  var queueEntry = sourceUpdater.queue[queueIndex];\n\n  if (queueEntry.type === 'mediaSource') {\n    if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n      sourceUpdater.queue.shift();\n      queueEntry.action(sourceUpdater);\n\n      if (queueEntry.doneFn) {\n        queueEntry.doneFn();\n      } // Only specific source buffer actions must wait for async updateend events. Media\n      // Source actions process synchronously. Therefore, both audio and video source\n      // buffers are now clear to process the next queue entries.\n\n\n      shiftQueue('audio', sourceUpdater);\n      shiftQueue('video', sourceUpdater);\n    } // Media Source actions require both source buffers, so if the media source action\n    // couldn't process yet (because one or both source buffers are busy), block other\n    // queue actions until both are available and the media source action can process.\n\n\n    return;\n  }\n\n  if (type === 'mediaSource') {\n    // If the queue was shifted by a media source action (this happens when pushing a\n    // media source action onto the queue), then it wasn't from an updateend event from an\n    // audio or video source buffer, so there's no change from previous state, and no\n    // processing should be done.\n    return;\n  } // Media source queue entries don't need to consider whether the source updater is\n  // started (i.e., source buffers are created) as they don't need the source buffers, but\n  // source buffer queue entries do.\n\n\n  if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || _updating(type, sourceUpdater)) {\n    return;\n  }\n\n  if (queueEntry.type !== type) {\n    queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n\n    if (queueIndex === null) {\n      // Either there's no queue entry that uses this source buffer type in the queue, or\n      // there's a media source queue entry before the next entry of this type, in which\n      // case wait for that action to process first.\n      return;\n    }\n\n    queueEntry = sourceUpdater.queue[queueIndex];\n  }\n\n  sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n  //\n  // The queue pending operation must be set before the action is performed in the event\n  // that the action results in a synchronous event that is acted upon. For instance, if\n  // an exception is thrown that can be handled, it's possible that new actions will be\n  // appended to an empty queue and immediately executed, but would not have the correct\n  // pending information if this property was set after the action was performed.\n\n  sourceUpdater.queuePending[type] = queueEntry;\n  queueEntry.action(type, sourceUpdater);\n\n  if (!queueEntry.doneFn) {\n    // synchronous operation, process next entry\n    sourceUpdater.queuePending[type] = null;\n    shiftQueue(type, sourceUpdater);\n    return;\n  }\n};\n\nvar cleanupBuffer = function cleanupBuffer(type, sourceUpdater) {\n  var buffer = sourceUpdater[type + \"Buffer\"];\n  var titleType = toTitleCase(type);\n\n  if (!buffer) {\n    return;\n  }\n\n  buffer.removeEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\n  buffer.removeEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\n  sourceUpdater.codecs[type] = null;\n  sourceUpdater[type + \"Buffer\"] = null;\n};\n\nvar inSourceBuffers = function inSourceBuffers(mediaSource, sourceBuffer) {\n  return mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\n};\n\nvar actions = {\n  appendBuffer: function appendBuffer(bytes, segmentInfo, onError) {\n    return function (type, sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Appending segment \" + segmentInfo.mediaIndex + \"'s \" + bytes.length + \" bytes to \" + type + \"Buffer\");\n\n      try {\n        sourceBuffer.appendBuffer(bytes);\n      } catch (e) {\n        sourceUpdater.logger_(\"Error with code \" + e.code + \" \" + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + (\"when appending segment \" + segmentInfo.mediaIndex + \" to \" + type + \"Buffer\"));\n        sourceUpdater.queuePending[type] = null;\n        onError(e);\n      }\n    };\n  },\n  remove: function remove(start, end) {\n    return function (type, sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Removing \" + start + \" to \" + end + \" from \" + type + \"Buffer\");\n\n      try {\n        sourceBuffer.remove(start, end);\n      } catch (e) {\n        sourceUpdater.logger_(\"Remove \" + start + \" to \" + end + \" from \" + type + \"Buffer failed\");\n      }\n    };\n  },\n  timestampOffset: function timestampOffset(offset) {\n    return function (type, sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Setting \" + type + \"timestampOffset to \" + offset);\n      sourceBuffer.timestampOffset = offset;\n    };\n  },\n  callback: function callback(_callback) {\n    return function (type, sourceUpdater) {\n      _callback();\n    };\n  },\n  endOfStream: function endOfStream(error) {\n    return function (sourceUpdater) {\n      if (sourceUpdater.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Calling mediaSource endOfStream(\" + (error || '') + \")\");\n\n      try {\n        sourceUpdater.mediaSource.endOfStream(error);\n      } catch (e) {\n        videojs.log.warn('Failed to call media source endOfStream', e);\n      }\n    };\n  },\n  duration: function duration(_duration) {\n    return function (sourceUpdater) {\n      sourceUpdater.logger_(\"Setting mediaSource duration to \" + _duration);\n\n      try {\n        sourceUpdater.mediaSource.duration = _duration;\n      } catch (e) {\n        videojs.log.warn('Failed to set media source duration', e);\n      }\n    };\n  },\n  abort: function abort() {\n    return function (type, sourceUpdater) {\n      if (sourceUpdater.mediaSource.readyState !== 'open') {\n        return;\n      }\n\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"calling abort on \" + type + \"Buffer\");\n\n      try {\n        sourceBuffer.abort();\n      } catch (e) {\n        videojs.log.warn(\"Failed to abort on \" + type + \"Buffer\", e);\n      }\n    };\n  },\n  addSourceBuffer: function addSourceBuffer(type, codec) {\n    return function (sourceUpdater) {\n      var titleType = toTitleCase(type);\n      var mime = getMimeForCodec(codec);\n      sourceUpdater.logger_(\"Adding \" + type + \"Buffer with codec \" + codec + \" to mediaSource\");\n      var sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n      sourceBuffer.addEventListener('updateend', sourceUpdater[\"on\" + titleType + \"UpdateEnd_\"]);\n      sourceBuffer.addEventListener('error', sourceUpdater[\"on\" + titleType + \"Error_\"]);\n      sourceUpdater.codecs[type] = codec;\n      sourceUpdater[type + \"Buffer\"] = sourceBuffer;\n    };\n  },\n  removeSourceBuffer: function removeSourceBuffer(type) {\n    return function (sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n      cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"Removing \" + type + \"Buffer with codec \" + sourceUpdater.codecs[type] + \" from mediaSource\");\n\n      try {\n        sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n      } catch (e) {\n        videojs.log.warn(\"Failed to removeSourceBuffer \" + type + \"Buffer\", e);\n      }\n    };\n  },\n  changeType: function changeType(codec) {\n    return function (type, sourceUpdater) {\n      var sourceBuffer = sourceUpdater[type + \"Buffer\"];\n      var mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      } // do not update codec if we don't need to.\n\n\n      if (sourceUpdater.codecs[type] === codec) {\n        return;\n      }\n\n      sourceUpdater.logger_(\"changing \" + type + \"Buffer codec from \" + sourceUpdater.codecs[type] + \" to \" + codec);\n      sourceBuffer.changeType(mime);\n      sourceUpdater.codecs[type] = codec;\n    };\n  }\n};\n\nvar pushQueue = function pushQueue(_ref) {\n  var type = _ref.type,\n      sourceUpdater = _ref.sourceUpdater,\n      action = _ref.action,\n      doneFn = _ref.doneFn,\n      name = _ref.name;\n  sourceUpdater.queue.push({\n    type: type,\n    action: action,\n    doneFn: doneFn,\n    name: name\n  });\n  shiftQueue(type, sourceUpdater);\n};\n\nvar onUpdateend = function onUpdateend(type, sourceUpdater) {\n  return function (e) {\n    // Although there should, in theory, be a pending action for any updateend receieved,\n    // there are some actions that may trigger updateend events without set definitions in\n    // the w3c spec. For instance, setting the duration on the media source may trigger\n    // updateend events on source buffers. This does not appear to be in the spec. As such,\n    // if we encounter an updateend without a corresponding pending action from our queue\n    // for that source buffer type, process the next action.\n    if (sourceUpdater.queuePending[type]) {\n      var doneFn = sourceUpdater.queuePending[type].doneFn;\n      sourceUpdater.queuePending[type] = null;\n\n      if (doneFn) {\n        // if there's an error, report it\n        doneFn(sourceUpdater[type + \"Error_\"]);\n      }\n    }\n\n    shiftQueue(type, sourceUpdater);\n  };\n};\n/**\n * A queue of callbacks to be serialized and applied when a\n * MediaSource and its associated SourceBuffers are not in the\n * updating state. It is used by the segment loader to update the\n * underlying SourceBuffers when new data is loaded, for instance.\n *\n * @class SourceUpdater\n * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n */\n\n\nvar SourceUpdater = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(SourceUpdater, _videojs$EventTarget);\n\n  function SourceUpdater(mediaSource) {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this;\n    _this.mediaSource = mediaSource;\n\n    _this.sourceopenListener_ = function () {\n      return shiftQueue('mediaSource', _assertThisInitialized(_this));\n    };\n\n    _this.mediaSource.addEventListener('sourceopen', _this.sourceopenListener_);\n\n    _this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n    _this.audioTimestampOffset_ = 0;\n    _this.videoTimestampOffset_ = 0;\n    _this.queue = [];\n    _this.queuePending = {\n      audio: null,\n      video: null\n    };\n    _this.delayedAudioAppendQueue_ = [];\n    _this.videoAppendQueued_ = false;\n    _this.codecs = {};\n    _this.onVideoUpdateEnd_ = onUpdateend('video', _assertThisInitialized(_this));\n    _this.onAudioUpdateEnd_ = onUpdateend('audio', _assertThisInitialized(_this));\n\n    _this.onVideoError_ = function (e) {\n      // used for debugging\n      _this.videoError_ = e;\n    };\n\n    _this.onAudioError_ = function (e) {\n      // used for debugging\n      _this.audioError_ = e;\n    };\n\n    _this.createdSourceBuffers_ = false;\n    _this.initializedEme_ = false;\n    _this.triggeredReady_ = false;\n    return _this;\n  }\n\n  var _proto = SourceUpdater.prototype;\n\n  _proto.initializedEme = function initializedEme() {\n    this.initializedEme_ = true;\n    this.triggerReady();\n  };\n\n  _proto.hasCreatedSourceBuffers = function hasCreatedSourceBuffers() {\n    // if false, likely waiting on one of the segment loaders to get enough data to create\n    // source buffers\n    return this.createdSourceBuffers_;\n  };\n\n  _proto.hasInitializedAnyEme = function hasInitializedAnyEme() {\n    return this.initializedEme_;\n  };\n\n  _proto.ready = function ready() {\n    return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n  };\n\n  _proto.createSourceBuffers = function createSourceBuffers(codecs) {\n    if (this.hasCreatedSourceBuffers()) {\n      // already created them before\n      return;\n    } // the intial addOrChangeSourceBuffers will always be\n    // two add buffers.\n\n\n    this.addOrChangeSourceBuffers(codecs);\n    this.createdSourceBuffers_ = true;\n    this.trigger('createdsourcebuffers');\n    this.triggerReady();\n  };\n\n  _proto.triggerReady = function triggerReady() {\n    // only allow ready to be triggered once, this prevents the case\n    // where:\n    // 1. we trigger createdsourcebuffers\n    // 2. ie 11 synchronously initializates eme\n    // 3. the synchronous initialization causes us to trigger ready\n    // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n    if (this.ready() && !this.triggeredReady_) {\n      this.triggeredReady_ = true;\n      this.trigger('ready');\n    }\n  }\n  /**\n   * Add a type of source buffer to the media source.\n   *\n   * @param {string} type\n   *        The type of source buffer to add.\n   *\n   * @param {string} codec\n   *        The codec to add the source buffer with.\n   */\n  ;\n\n  _proto.addSourceBuffer = function addSourceBuffer(type, codec) {\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.addSourceBuffer(type, codec),\n      name: 'addSourceBuffer'\n    });\n  }\n  /**\n   * call abort on a source buffer.\n   *\n   * @param {string} type\n   *        The type of source buffer to call abort on.\n   */\n  ;\n\n  _proto.abort = function abort(type) {\n    pushQueue({\n      type: type,\n      sourceUpdater: this,\n      action: actions.abort(type),\n      name: 'abort'\n    });\n  }\n  /**\n   * Call removeSourceBuffer and remove a specific type\n   * of source buffer on the mediaSource.\n   *\n   * @param {string} type\n   *        The type of source buffer to remove.\n   */\n  ;\n\n  _proto.removeSourceBuffer = function removeSourceBuffer(type) {\n    if (!this.canRemoveSourceBuffer()) {\n      videojs.log.error('removeSourceBuffer is not supported!');\n      return;\n    }\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.removeSourceBuffer(type),\n      name: 'removeSourceBuffer'\n    });\n  }\n  /**\n   * Whether or not the removeSourceBuffer function is supported\n   * on the mediaSource.\n   *\n   * @return {boolean}\n   *          if removeSourceBuffer can be called.\n   */\n  ;\n\n  _proto.canRemoveSourceBuffer = function canRemoveSourceBuffer() {\n    // IE reports that it supports removeSourceBuffer, but often throws\n    // errors when attempting to use the function. So we report that it\n    // does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\n    // throws errors, so we report that it does not support this as well.\n    return !videojs.browser.IE_VERSION && !videojs.browser.IS_FIREFOX && window$1.MediaSource && window$1.MediaSource.prototype && typeof window$1.MediaSource.prototype.removeSourceBuffer === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n  ;\n\n  SourceUpdater.canChangeType = function canChangeType() {\n    return window$1.SourceBuffer && window$1.SourceBuffer.prototype && typeof window$1.SourceBuffer.prototype.changeType === 'function';\n  }\n  /**\n   * Whether or not the changeType function is supported\n   * on our SourceBuffers.\n   *\n   * @return {boolean}\n   *         if changeType can be called.\n   */\n  ;\n\n  _proto.canChangeType = function canChangeType() {\n    return this.constructor.canChangeType();\n  }\n  /**\n   * Call the changeType function on a source buffer, given the code and type.\n   *\n   * @param {string} type\n   *        The type of source buffer to call changeType on.\n   *\n   * @param {string} codec\n   *        The codec string to change type with on the source buffer.\n   */\n  ;\n\n  _proto.changeType = function changeType(type, codec) {\n    if (!this.canChangeType()) {\n      videojs.log.error('changeType is not supported!');\n      return;\n    }\n\n    pushQueue({\n      type: type,\n      sourceUpdater: this,\n      action: actions.changeType(codec),\n      name: 'changeType'\n    });\n  }\n  /**\n   * Add source buffers with a codec or, if they are already created,\n   * call changeType on source buffers using changeType.\n   *\n   * @param {Object} codecs\n   *        Codecs to switch to\n   */\n  ;\n\n  _proto.addOrChangeSourceBuffers = function addOrChangeSourceBuffers(codecs) {\n    var _this2 = this;\n\n    if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n      throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n    }\n\n    Object.keys(codecs).forEach(function (type) {\n      var codec = codecs[type];\n\n      if (!_this2.hasCreatedSourceBuffers()) {\n        return _this2.addSourceBuffer(type, codec);\n      }\n\n      if (_this2.canChangeType()) {\n        _this2.changeType(type, codec);\n      }\n    });\n  }\n  /**\n   * Queue an update to append an ArrayBuffer.\n   *\n   * @param {MediaObject} object containing audioBytes and/or videoBytes\n   * @param {Function} done the function to call when done\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n   */\n  ;\n\n  _proto.appendBuffer = function appendBuffer(options, doneFn) {\n    var _this3 = this;\n\n    var segmentInfo = options.segmentInfo,\n        type = options.type,\n        bytes = options.bytes;\n    this.processedAppend_ = true;\n\n    if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n      this.delayedAudioAppendQueue_.push([options, doneFn]);\n      this.logger_(\"delayed audio append of \" + bytes.length + \" until video append\");\n      return;\n    } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n    // not be fired. This means that the queue will be blocked until the next action\n    // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n    // these errors by calling the doneFn with the specific error.\n\n\n    var onError = doneFn;\n    pushQueue({\n      type: type,\n      sourceUpdater: this,\n      action: actions.appendBuffer(bytes, segmentInfo || {\n        mediaIndex: -1\n      }, onError),\n      doneFn: doneFn,\n      name: 'appendBuffer'\n    });\n\n    if (type === 'video') {\n      this.videoAppendQueued_ = true;\n\n      if (!this.delayedAudioAppendQueue_.length) {\n        return;\n      }\n\n      var queue = this.delayedAudioAppendQueue_.slice();\n      this.logger_(\"queuing delayed audio \" + queue.length + \" appendBuffers\");\n      this.delayedAudioAppendQueue_.length = 0;\n      queue.forEach(function (que) {\n        _this3.appendBuffer.apply(_this3, que);\n      });\n    }\n  }\n  /**\n   * Get the audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The audio buffer's buffered time range\n   */\n  ;\n\n  _proto.audioBuffered = function audioBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n      return videojs.createTimeRange();\n    }\n\n    return this.audioBuffer.buffered ? this.audioBuffer.buffered : videojs.createTimeRange();\n  }\n  /**\n   * Get the video buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         The video buffer's buffered time range\n   */\n  ;\n\n  _proto.videoBuffered = function videoBuffered() {\n    // no media source/source buffer or it isn't in the media sources\n    // source buffer list\n    if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n      return videojs.createTimeRange();\n    }\n\n    return this.videoBuffer.buffered ? this.videoBuffer.buffered : videojs.createTimeRange();\n  }\n  /**\n   * Get a combined video/audio buffer's buffered timerange.\n   *\n   * @return {TimeRange}\n   *         the combined time range\n   */\n  ;\n\n  _proto.buffered = function buffered() {\n    var video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n    var audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n\n    if (audio && !video) {\n      return this.audioBuffered();\n    }\n\n    if (video && !audio) {\n      return this.videoBuffered();\n    }\n\n    return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n  }\n  /**\n   * Add a callback to the queue that will set duration on the mediaSource.\n   *\n   * @param {number} duration\n   *        The duration to set\n   *\n   * @param {Function} [doneFn]\n   *        function to run after duration has been set.\n   */\n  ;\n\n  _proto.setDuration = function setDuration(duration, doneFn) {\n    if (doneFn === void 0) {\n      doneFn = noop;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.duration(duration),\n      name: 'duration',\n      doneFn: doneFn\n    });\n  }\n  /**\n   * Add a mediaSource endOfStream call to the queue\n   *\n   * @param {Error} [error]\n   *        Call endOfStream with an error\n   *\n   * @param {Function} [doneFn]\n   *        A function that should be called when the\n   *        endOfStream call has finished.\n   */\n  ;\n\n  _proto.endOfStream = function endOfStream(error, doneFn) {\n    if (error === void 0) {\n      error = null;\n    }\n\n    if (doneFn === void 0) {\n      doneFn = noop;\n    }\n\n    if (typeof error !== 'string') {\n      error = undefined;\n    } // In order to set the duration on the media source, it's necessary to wait for all\n    // source buffers to no longer be updating. \"If the updating attribute equals true on\n    // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n    // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n\n    pushQueue({\n      type: 'mediaSource',\n      sourceUpdater: this,\n      action: actions.endOfStream(error),\n      name: 'endOfStream',\n      doneFn: doneFn\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n  ;\n\n  _proto.removeAudio = function removeAudio(start, end, done) {\n    if (done === void 0) {\n      done = noop;\n    }\n\n    if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Queue an update to remove a time range from the buffer.\n   *\n   * @param {number} start where to start the removal\n   * @param {number} end where to end the removal\n   * @param {Function} [done=noop] optional callback to be executed when the remove\n   * operation is complete\n   * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n   */\n  ;\n\n  _proto.removeVideo = function removeVideo(start, end, done) {\n    if (done === void 0) {\n      done = noop;\n    }\n\n    if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n      done();\n      return;\n    }\n\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.remove(start, end),\n      doneFn: done,\n      name: 'remove'\n    });\n  }\n  /**\n   * Whether the underlying sourceBuffer is updating or not\n   *\n   * @return {boolean} the updating status of the SourceBuffer\n   */\n  ;\n\n  _proto.updating = function updating() {\n    // the audio/video source buffer is updating\n    if (_updating('audio', this) || _updating('video', this)) {\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Set/get the timestampoffset on the audio SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n  ;\n\n  _proto.audioTimestampOffset = function audioTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.audioBuffer && // no point in updating if it's the same\n    this.audioTimestampOffset_ !== offset) {\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.audioTimestampOffset_ = offset;\n    }\n\n    return this.audioTimestampOffset_;\n  }\n  /**\n   * Set/get the timestampoffset on the video SourceBuffer\n   *\n   * @return {number} the timestamp offset\n   */\n  ;\n\n  _proto.videoTimestampOffset = function videoTimestampOffset(offset) {\n    if (typeof offset !== 'undefined' && this.videoBuffer && // no point in updating if it's the same\n    this.videoTimestampOffset !== offset) {\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.timestampOffset(offset),\n        name: 'timestampOffset'\n      });\n      this.videoTimestampOffset_ = offset;\n    }\n\n    return this.videoTimestampOffset_;\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the audio queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n  ;\n\n  _proto.audioQueueCallback = function audioQueueCallback(callback) {\n    if (!this.audioBuffer) {\n      return;\n    }\n\n    pushQueue({\n      type: 'audio',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * Add a function to the queue that will be called\n   * when it is its turn to run in the video queue.\n   *\n   * @param {Function} callback\n   *        The callback to queue.\n   */\n  ;\n\n  _proto.videoQueueCallback = function videoQueueCallback(callback) {\n    if (!this.videoBuffer) {\n      return;\n    }\n\n    pushQueue({\n      type: 'video',\n      sourceUpdater: this,\n      action: actions.callback(callback),\n      name: 'callback'\n    });\n  }\n  /**\n   * dispose of the source updater and the underlying sourceBuffer\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var _this4 = this;\n\n    this.trigger('dispose');\n    bufferTypes.forEach(function (type) {\n      _this4.abort(type);\n\n      if (_this4.canRemoveSourceBuffer()) {\n        _this4.removeSourceBuffer(type);\n      } else {\n        _this4[type + \"QueueCallback\"](function () {\n          return cleanupBuffer(type, _this4);\n        });\n      }\n    });\n    this.videoAppendQueued_ = false;\n    this.delayedAudioAppendQueue_.length = 0;\n\n    if (this.sourceopenListener_) {\n      this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n    }\n\n    this.off();\n  };\n\n  return SourceUpdater;\n}(videojs.EventTarget);\n\nvar uint8ToUtf8 = function uint8ToUtf8(uintArray) {\n  return decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n};\n\nvar VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(function (_char3) {\n  return _char3.charCodeAt(0);\n}));\n/**\n * An object that manages segment loading and appending.\n *\n * @class VTTSegmentLoader\n * @param {Object} options required and optional options\n * @extends videojs.EventTarget\n */\n\nvar VTTSegmentLoader = /*#__PURE__*/function (_SegmentLoader) {\n  _inheritsLoose(VTTSegmentLoader, _SegmentLoader);\n\n  function VTTSegmentLoader(settings, options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _SegmentLoader.call(this, settings, options) || this; // SegmentLoader requires a MediaSource be specified or it will throw an error;\n    // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n    _this.mediaSource_ = null;\n    _this.subtitlesTrack_ = null;\n    _this.loaderType_ = 'subtitle';\n    _this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n    // the sync controller leads to improper behavior.\n\n    _this.shouldSaveSegmentTimingInfo_ = false;\n    return _this;\n  }\n\n  var _proto = VTTSegmentLoader.prototype;\n\n  _proto.createTransmuxer_ = function createTransmuxer_() {\n    // don't need to transmux any subtitles\n    return null;\n  }\n  /**\n   * Indicates which time ranges are buffered\n   *\n   * @return {TimeRange}\n   *         TimeRange object representing the current buffered ranges\n   */\n  ;\n\n  _proto.buffered_ = function buffered_() {\n    if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n      return videojs.createTimeRanges();\n    }\n\n    var cues = this.subtitlesTrack_.cues;\n    var start = cues[0].startTime;\n    var end = cues[cues.length - 1].startTime;\n    return videojs.createTimeRanges([[start, end]]);\n  }\n  /**\n   * Gets and sets init segment for the provided map\n   *\n   * @param {Object} map\n   *        The map object representing the init segment to get or set\n   * @param {boolean=} set\n   *        If true, the init segment for the provided map should be saved\n   * @return {Object}\n   *         map object for desired init segment\n   */\n  ;\n\n  _proto.initSegmentForMap = function initSegmentForMap(map, set) {\n    if (set === void 0) {\n      set = false;\n    }\n\n    if (!map) {\n      return null;\n    }\n\n    var id = initSegmentId(map);\n    var storedMap = this.initSegments_[id];\n\n    if (set && !storedMap && map.bytes) {\n      // append WebVTT line terminators to the media initialization segment if it exists\n      // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n      // requires two or more WebVTT line terminators between the WebVTT header and the\n      // rest of the file\n      var combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n      var combinedSegment = new Uint8Array(combinedByteLength);\n      combinedSegment.set(map.bytes);\n      combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n      this.initSegments_[id] = storedMap = {\n        resolvedUri: map.resolvedUri,\n        byterange: map.byterange,\n        bytes: combinedSegment\n      };\n    }\n\n    return storedMap || map;\n  }\n  /**\n   * Returns true if all configuration required for loading is present, otherwise false.\n   *\n   * @return {boolean} True if the all configuration is ready for loading\n   * @private\n   */\n  ;\n\n  _proto.couldBeginLoading_ = function couldBeginLoading_() {\n    return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n  }\n  /**\n   * Once all the starting parameters have been specified, begin\n   * operation. This method should only be invoked from the INIT\n   * state.\n   *\n   * @private\n   */\n  ;\n\n  _proto.init_ = function init_() {\n    this.state = 'READY';\n    this.resetEverything();\n    return this.monitorBuffer_();\n  }\n  /**\n   * Set a subtitle track on the segment loader to add subtitles to\n   *\n   * @param {TextTrack=} track\n   *        The text track to add loaded subtitles to\n   * @return {TextTrack}\n   *        Returns the subtitles track\n   */\n  ;\n\n  _proto.track = function track(_track) {\n    if (typeof _track === 'undefined') {\n      return this.subtitlesTrack_;\n    }\n\n    this.subtitlesTrack_ = _track; // if we were unpaused but waiting for a sourceUpdater, start\n    // buffering now\n\n    if (this.state === 'INIT' && this.couldBeginLoading_()) {\n      this.init_();\n    }\n\n    return this.subtitlesTrack_;\n  }\n  /**\n   * Remove any data in the source buffer between start and end times\n   *\n   * @param {number} start - the start time of the region to remove from the buffer\n   * @param {number} end - the end time of the region to remove from the buffer\n   */\n  ;\n\n  _proto.remove = function remove(start, end) {\n    removeCuesFromTrack(start, end, this.subtitlesTrack_);\n  }\n  /**\n   * fill the buffer with segements unless the sourceBuffers are\n   * currently updating\n   *\n   * Note: this function should only ever be called by monitorBuffer_\n   * and never directly\n   *\n   * @private\n   */\n  ;\n\n  _proto.fillBuffer_ = function fillBuffer_() {\n    var _this2 = this; // see if we need to begin loading immediately\n\n\n    var segmentInfo = this.chooseNextRequest_();\n\n    if (!segmentInfo) {\n      return;\n    }\n\n    if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n      // We don't have the timestamp offset that we need to sync subtitles.\n      // Rerun on a timestamp offset or user interaction.\n      var checkTimestampOffset = function checkTimestampOffset() {\n        _this2.state = 'READY';\n\n        if (!_this2.paused()) {\n          // if not paused, queue a buffer check as soon as possible\n          _this2.monitorBuffer_();\n        }\n      };\n\n      this.syncController_.one('timestampoffset', checkTimestampOffset);\n      this.state = 'WAITING_ON_TIMELINE';\n      return;\n    }\n\n    this.loadSegment_(segmentInfo);\n  } // never set a timestamp offset for vtt segments.\n  ;\n\n  _proto.timestampOffsetForSegment_ = function timestampOffsetForSegment_() {\n    return null;\n  };\n\n  _proto.chooseNextRequest_ = function chooseNextRequest_() {\n    return this.skipEmptySegments_(_SegmentLoader.prototype.chooseNextRequest_.call(this));\n  }\n  /**\n   * Prevents the segment loader from requesting segments we know contain no subtitles\n   * by walking forward until we find the next segment that we don't know whether it is\n   * empty or not.\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @return {Object}\n   *         a segment info object that describes the current segment\n   */\n  ;\n\n  _proto.skipEmptySegments_ = function skipEmptySegments_(segmentInfo) {\n    while (segmentInfo && segmentInfo.segment.empty) {\n      // stop at the last possible segmentInfo\n      if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n        segmentInfo = null;\n        break;\n      }\n\n      segmentInfo = this.generateSegmentInfo_({\n        playlist: segmentInfo.playlist,\n        mediaIndex: segmentInfo.mediaIndex + 1,\n        startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n        isSyncRequest: segmentInfo.isSyncRequest\n      });\n    }\n\n    return segmentInfo;\n  };\n\n  _proto.stopForError = function stopForError(error) {\n    this.error(error);\n    this.state = 'READY';\n    this.pause();\n    this.trigger('error');\n  }\n  /**\n   * append a decrypted segement to the SourceBuffer through a SourceUpdater\n   *\n   * @private\n   */\n  ;\n\n  _proto.segmentRequestFinished_ = function segmentRequestFinished_(error, simpleSegment, result) {\n    var _this3 = this;\n\n    if (!this.subtitlesTrack_) {\n      this.state = 'READY';\n      return;\n    }\n\n    this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n    if (!this.pendingSegment_) {\n      this.state = 'READY';\n      this.mediaRequestsAborted += 1;\n      return;\n    }\n\n    if (error) {\n      if (error.code === REQUEST_ERRORS.TIMEOUT) {\n        this.handleTimeout_();\n      }\n\n      if (error.code === REQUEST_ERRORS.ABORTED) {\n        this.mediaRequestsAborted += 1;\n      } else {\n        this.mediaRequestsErrored += 1;\n      }\n\n      this.stopForError(error);\n      return;\n    }\n\n    var segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n    // maintain functionality between segment loaders\n\n    this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n    if (simpleSegment.key) {\n      this.segmentKey(simpleSegment.key, true);\n    }\n\n    this.state = 'APPENDING'; // used for tests\n\n    this.trigger('appending');\n    var segment = segmentInfo.segment;\n\n    if (segment.map) {\n      segment.map.bytes = simpleSegment.map.bytes;\n    }\n\n    segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n    if (typeof window$1.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n      var loadHandler;\n\n      var errorHandler = function errorHandler() {\n        _this3.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n\n        _this3.stopForError({\n          message: 'Error loading vtt.js'\n        });\n\n        return;\n      };\n\n      loadHandler = function loadHandler() {\n        _this3.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n\n        _this3.segmentRequestFinished_(error, simpleSegment, result);\n      };\n\n      this.state = 'WAITING_ON_VTTJS';\n      this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n      this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n      return;\n    }\n\n    segment.requested = true;\n\n    try {\n      this.parseVTTCues_(segmentInfo);\n    } catch (e) {\n      this.stopForError({\n        message: e.message\n      });\n      return;\n    }\n\n    this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n\n    if (segmentInfo.cues.length) {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.cues[0].startTime,\n        end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n      };\n    } else {\n      segmentInfo.timingInfo = {\n        start: segmentInfo.startOfSegment,\n        end: segmentInfo.startOfSegment + segmentInfo.duration\n      };\n    }\n\n    if (segmentInfo.isSyncRequest) {\n      this.trigger('syncinfoupdate');\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      return;\n    }\n\n    segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n    this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n    // the subtitle track\n\n    segmentInfo.cues.forEach(function (cue) {\n      _this3.subtitlesTrack_.addCue(_this3.featuresNativeTextTracks_ ? new window$1.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n    }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n    // cues to have identical time-intervals, but if the text is also identical\n    // we can safely assume it is a duplicate that can be removed (ex. when a cue\n    // \"overlaps\" VTT segments)\n\n    removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n    this.handleAppendsDone_();\n  };\n\n  _proto.handleData_ = function handleData_() {// noop as we shouldn't be getting video/audio data captions\n    // that we do not support here.\n  };\n\n  _proto.updateTimingInfoEnd_ = function updateTimingInfoEnd_() {// noop\n  }\n  /**\n   * Uses the WebVTT parser to parse the segment response\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @private\n   */\n  ;\n\n  _proto.parseVTTCues_ = function parseVTTCues_(segmentInfo) {\n    var decoder;\n    var decodeBytesToString = false;\n\n    if (typeof window$1.TextDecoder === 'function') {\n      decoder = new window$1.TextDecoder('utf8');\n    } else {\n      decoder = window$1.WebVTT.StringDecoder();\n      decodeBytesToString = true;\n    }\n\n    var parser = new window$1.WebVTT.Parser(window$1, window$1.vttjs, decoder);\n    segmentInfo.cues = [];\n    segmentInfo.timestampmap = {\n      MPEGTS: 0,\n      LOCAL: 0\n    };\n    parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n\n    parser.ontimestampmap = function (map) {\n      segmentInfo.timestampmap = map;\n    };\n\n    parser.onparsingerror = function (error) {\n      videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n    };\n\n    if (segmentInfo.segment.map) {\n      var mapData = segmentInfo.segment.map.bytes;\n\n      if (decodeBytesToString) {\n        mapData = uint8ToUtf8(mapData);\n      }\n\n      parser.parse(mapData);\n    }\n\n    var segmentData = segmentInfo.bytes;\n\n    if (decodeBytesToString) {\n      segmentData = uint8ToUtf8(segmentData);\n    }\n\n    parser.parse(segmentData);\n    parser.flush();\n  }\n  /**\n   * Updates the start and end times of any cues parsed by the WebVTT parser using\n   * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n   * from the SyncController\n   *\n   * @param {Object} segmentInfo\n   *        a segment info object that describes the current segment\n   * @param {Object} mappingObj\n   *        object containing a mapping from TS to media time\n   * @param {Object} playlist\n   *        the playlist object containing the segment\n   * @private\n   */\n  ;\n\n  _proto.updateTimeMapping_ = function updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n    var segment = segmentInfo.segment;\n\n    if (!mappingObj) {\n      // If the sync controller does not have a mapping of TS to Media Time for the\n      // timeline, then we don't have enough information to update the cue\n      // start/end times\n      return;\n    }\n\n    if (!segmentInfo.cues.length) {\n      // If there are no cues, we also do not have enough information to figure out\n      // segment timing. Mark that the segment contains no cues so we don't re-request\n      // an empty segment.\n      segment.empty = true;\n      return;\n    }\n\n    var timestampmap = segmentInfo.timestampmap;\n    var diff = timestampmap.MPEGTS / ONE_SECOND_IN_TS - timestampmap.LOCAL + mappingObj.mapping;\n    segmentInfo.cues.forEach(function (cue) {\n      // First convert cue time to TS time using the timestamp-map provided within the vtt\n      cue.startTime += diff;\n      cue.endTime += diff;\n    });\n\n    if (!playlist.syncInfo) {\n      var firstStart = segmentInfo.cues[0].startTime;\n      var lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n      playlist.syncInfo = {\n        mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n        time: Math.min(firstStart, lastStart - segment.duration)\n      };\n    }\n  };\n\n  return VTTSegmentLoader;\n}(SegmentLoader);\n/**\n * @file ad-cue-tags.js\n */\n\n/**\n * Searches for an ad cue that overlaps with the given mediaTime\n *\n * @param {Object} track\n *        the track to find the cue for\n *\n * @param {number} mediaTime\n *        the time to find the cue at\n *\n * @return {Object|null}\n *         the found cue or null\n */\n\n\nvar findAdCue = function findAdCue(track, mediaTime) {\n  var cues = track.cues;\n\n  for (var i = 0; i < cues.length; i++) {\n    var cue = cues[i];\n\n    if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n      return cue;\n    }\n  }\n\n  return null;\n};\n\nvar updateAdCues = function updateAdCues(media, track, offset) {\n  if (offset === void 0) {\n    offset = 0;\n  }\n\n  if (!media.segments) {\n    return;\n  }\n\n  var mediaTime = offset;\n  var cue;\n\n  for (var i = 0; i < media.segments.length; i++) {\n    var segment = media.segments[i];\n\n    if (!cue) {\n      // Since the cues will span for at least the segment duration, adding a fudge\n      // factor of half segment duration will prevent duplicate cues from being\n      // created when timing info is not exact (e.g. cue start time initialized\n      // at 10.006677, but next call mediaTime is 10.003332 )\n      cue = findAdCue(track, mediaTime + segment.duration / 2);\n    }\n\n    if (cue) {\n      if ('cueIn' in segment) {\n        // Found a CUE-IN so end the cue\n        cue.endTime = mediaTime;\n        cue.adEndTime = mediaTime;\n        mediaTime += segment.duration;\n        cue = null;\n        continue;\n      }\n\n      if (mediaTime < cue.endTime) {\n        // Already processed this mediaTime for this cue\n        mediaTime += segment.duration;\n        continue;\n      } // otherwise extend cue until a CUE-IN is found\n\n\n      cue.endTime += segment.duration;\n    } else {\n      if ('cueOut' in segment) {\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n        cue.adStartTime = mediaTime; // Assumes tag format to be\n        // #EXT-X-CUE-OUT:30\n\n        cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n        track.addCue(cue);\n      }\n\n      if ('cueOutCont' in segment) {\n        // Entered into the middle of an ad cue\n        // Assumes tag formate to be\n        // #EXT-X-CUE-OUT-CONT:10/30\n        var _segment$cueOutCont$s = segment.cueOutCont.split('/').map(parseFloat),\n            adOffset = _segment$cueOutCont$s[0],\n            adTotal = _segment$cueOutCont$s[1];\n\n        cue = new window$1.VTTCue(mediaTime, mediaTime + segment.duration, '');\n        cue.adStartTime = mediaTime - adOffset;\n        cue.adEndTime = cue.adStartTime + adTotal;\n        track.addCue(cue);\n      }\n    }\n\n    mediaTime += segment.duration;\n  }\n}; // synchronize expired playlist segments.\n// the max media sequence diff is 48 hours of live stream\n// content with two second segments. Anything larger than that\n// will likely be invalid.\n\n\nvar MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\nvar syncPointStrategies = [// Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n//                the equivalence display-time 0 === segment-index 0\n{\n  name: 'VOD',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    if (duration !== Infinity) {\n      var syncPoint = {\n        time: 0,\n        segmentIndex: 0,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}, // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n{\n  name: 'ProgramDateTime',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n      return null;\n    }\n\n    var syncPoint = null;\n    var lastDistance = null;\n    var partsAndSegments = getPartsAndSegments(playlist);\n    currentTime = currentTime || 0;\n\n    for (var i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      var partAndSegment = partsAndSegments[index];\n      var segment = partAndSegment.segment;\n      var datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n\n      if (!datetimeMapping || !segment.dateTimeObject) {\n        continue;\n      }\n\n      var segmentTime = segment.dateTimeObject.getTime() / 1000;\n      var start = segmentTime + datetimeMapping; // take part duration into account.\n\n      if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n        for (var z = 0; z < partAndSegment.partIndex; z++) {\n          start += segment.parts[z].duration;\n        }\n      }\n\n      var distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n      // currentTime and can stop looking for better candidates\n\n      if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n        break;\n      }\n\n      lastDistance = distance;\n      syncPoint = {\n        time: start,\n        segmentIndex: partAndSegment.segmentIndex,\n        partIndex: partAndSegment.partIndex\n      };\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Segment\": We have a known time mapping for a timeline and a\n//                    segment in the current timeline with timing data\n{\n  name: 'Segment',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    var syncPoint = null;\n    var lastDistance = null;\n    currentTime = currentTime || 0;\n    var partsAndSegments = getPartsAndSegments(playlist);\n\n    for (var i = 0; i < partsAndSegments.length; i++) {\n      // start from the end and loop backwards for live\n      // or start from the front and loop forwards for non-live\n      var index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n      var partAndSegment = partsAndSegments[index];\n      var segment = partAndSegment.segment;\n      var start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n\n      if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n        var distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && lastDistance < distance) {\n          break;\n        }\n\n        if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n          lastDistance = distance;\n          syncPoint = {\n            time: start,\n            segmentIndex: partAndSegment.segmentIndex,\n            partIndex: partAndSegment.partIndex\n          };\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Discontinuity\": We have a discontinuity with a known\n//                          display-time\n{\n  name: 'Discontinuity',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    var syncPoint = null;\n    currentTime = currentTime || 0;\n\n    if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      var lastDistance = null;\n\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var discontinuitySync = syncController.discontinuities[discontinuity];\n\n        if (discontinuitySync) {\n          var distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: discontinuitySync.time,\n              segmentIndex: segmentIndex,\n              partIndex: null\n            };\n          }\n        }\n      }\n    }\n\n    return syncPoint;\n  }\n}, // Stategy \"Playlist\": We have a playlist with a known mapping of\n//                     segment index to display time\n{\n  name: 'Playlist',\n  run: function run(syncController, playlist, duration, currentTimeline, currentTime) {\n    if (playlist.syncInfo) {\n      var syncPoint = {\n        time: playlist.syncInfo.time,\n        segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n        partIndex: null\n      };\n      return syncPoint;\n    }\n\n    return null;\n  }\n}];\n\nvar SyncController = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(SyncController, _videojs$EventTarget);\n\n  function SyncController(options) {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this; // ...for synching across variants\n\n    _this.timelines = [];\n    _this.discontinuities = [];\n    _this.timelineToDatetimeMappings = {};\n    _this.logger_ = logger('SyncController');\n    return _this;\n  }\n  /**\n   * Find a sync-point for the playlist specified\n   *\n   * A sync-point is defined as a known mapping from display-time to\n   * a segment-index in the current playlist.\n   *\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinite if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Object}\n   *          A sync-point object\n   */\n\n\n  var _proto = SyncController.prototype;\n\n  _proto.getSyncPoint = function getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n    var syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n\n    if (!syncPoints.length) {\n      // Signal that we need to attempt to get a sync-point manually\n      // by fetching a segment in the playlist and constructing\n      // a sync-point from that information\n      return null;\n    } // Now find the sync-point that is closest to the currentTime because\n    // that should result in the most accurate guess about which segment\n    // to fetch\n\n\n    return this.selectSyncPoint_(syncPoints, {\n      key: 'time',\n      value: currentTime\n    });\n  }\n  /**\n   * Calculate the amount of time that has expired off the playlist during playback\n   *\n   * @param {Playlist} playlist\n   *        Playlist object to calculate expired from\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playling a live source)\n   * @return {number|null}\n   *          The amount of time that has expired off the playlist during playback. Null\n   *          if no sync-points for the playlist can be found.\n   */\n  ;\n\n  _proto.getExpiredTime = function getExpiredTime(playlist, duration) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n\n    var syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n    if (!syncPoints.length) {\n      return null;\n    }\n\n    var syncPoint = this.selectSyncPoint_(syncPoints, {\n      key: 'segmentIndex',\n      value: 0\n    }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n    // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n    if (syncPoint.segmentIndex > 0) {\n      syncPoint.time *= -1;\n    }\n\n    return Math.abs(syncPoint.time + sumDurations({\n      defaultDuration: playlist.targetDuration,\n      durationList: playlist.segments,\n      startIndex: syncPoint.segmentIndex,\n      endIndex: 0\n    }));\n  }\n  /**\n   * Runs each sync-point strategy and returns a list of sync-points returned by the\n   * strategies\n   *\n   * @private\n   * @param {Playlist} playlist\n   *        The playlist that needs a sync-point\n   * @param {number} duration\n   *        Duration of the MediaSource (Infinity if playing a live source)\n   * @param {number} currentTimeline\n   *        The last timeline from which a segment was loaded\n   * @return {Array}\n   *          A list of sync-point objects\n   */\n  ;\n\n  _proto.runStrategies_ = function runStrategies_(playlist, duration, currentTimeline, currentTime) {\n    var syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n    for (var i = 0; i < syncPointStrategies.length; i++) {\n      var strategy = syncPointStrategies[i];\n      var syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n\n      if (syncPoint) {\n        syncPoint.strategy = strategy.name;\n        syncPoints.push({\n          strategy: strategy.name,\n          syncPoint: syncPoint\n        });\n      }\n    }\n\n    return syncPoints;\n  }\n  /**\n   * Selects the sync-point nearest the specified target\n   *\n   * @private\n   * @param {Array} syncPoints\n   *        List of sync-points to select from\n   * @param {Object} target\n   *        Object specifying the property and value we are targeting\n   * @param {string} target.key\n   *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n   * @param {number} target.value\n   *        The value to target for the specified key.\n   * @return {Object}\n   *          The sync-point nearest the target\n   */\n  ;\n\n  _proto.selectSyncPoint_ = function selectSyncPoint_(syncPoints, target) {\n    var bestSyncPoint = syncPoints[0].syncPoint;\n    var bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n    var bestStrategy = syncPoints[0].strategy;\n\n    for (var i = 1; i < syncPoints.length; i++) {\n      var newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n\n      if (newDistance < bestDistance) {\n        bestDistance = newDistance;\n        bestSyncPoint = syncPoints[i].syncPoint;\n        bestStrategy = syncPoints[i].strategy;\n      }\n    }\n\n    this.logger_(\"syncPoint for [\" + target.key + \": \" + target.value + \"] chosen with strategy\" + (\" [\" + bestStrategy + \"]: [time:\" + bestSyncPoint.time + \",\") + (\" segmentIndex:\" + bestSyncPoint.segmentIndex) + (typeof bestSyncPoint.partIndex === 'number' ? \",partIndex:\" + bestSyncPoint.partIndex : '') + ']');\n    return bestSyncPoint;\n  }\n  /**\n   * Save any meta-data present on the segments when segments leave\n   * the live window to the playlist to allow for synchronization at the\n   * playlist level later.\n   *\n   * @param {Playlist} oldPlaylist - The previous active playlist\n   * @param {Playlist} newPlaylist - The updated and most current playlist\n   */\n  ;\n\n  _proto.saveExpiredSegmentInfo = function saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n    var mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n    if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n      videojs.log.warn(\"Not saving expired segment info. Media sequence gap \" + mediaSequenceDiff + \" is too large.\");\n      return;\n    } // When a segment expires from the playlist and it has a start time\n    // save that information as a possible sync-point reference in future\n\n\n    for (var i = mediaSequenceDiff - 1; i >= 0; i--) {\n      var lastRemovedSegment = oldPlaylist.segments[i];\n\n      if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n        newPlaylist.syncInfo = {\n          mediaSequence: oldPlaylist.mediaSequence + i,\n          time: lastRemovedSegment.start\n        };\n        this.logger_(\"playlist refresh sync: [time:\" + newPlaylist.syncInfo.time + \",\" + (\" mediaSequence: \" + newPlaylist.syncInfo.mediaSequence + \"]\"));\n        this.trigger('syncinfoupdate');\n        break;\n      }\n    }\n  }\n  /**\n   * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n   * before segments start to load.\n   *\n   * @param {Playlist} playlist - The currently active playlist\n   */\n  ;\n\n  _proto.setDateTimeMappingForStart = function setDateTimeMappingForStart(playlist) {\n    // It's possible for the playlist to be updated before playback starts, meaning time\n    // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n    // crossed, then the old time zero mapping (for the prior timeline) would be retained\n    // unless the mappings are cleared.\n    this.timelineToDatetimeMappings = {};\n\n    if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n      var firstSegment = playlist.segments[0];\n      var playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n      this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n    }\n  }\n  /**\n   * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n   * based on the latest timing information.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {SegmentInfo} options.segmentInfo\n   *        The current active request information\n   * @param {boolean} options.shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved for timeline mapping and program date time mappings.\n   */\n  ;\n\n  _proto.saveSegmentTimingInfo = function saveSegmentTimingInfo(_ref) {\n    var segmentInfo = _ref.segmentInfo,\n        shouldSaveTimelineMapping = _ref.shouldSaveTimelineMapping;\n    var didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n    var segment = segmentInfo.segment;\n\n    if (didCalculateSegmentTimeMapping) {\n      this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n      // now with segment timing information\n\n      if (!segmentInfo.playlist.syncInfo) {\n        segmentInfo.playlist.syncInfo = {\n          mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: segment.start\n        };\n      }\n    }\n\n    var dateTime = segment.dateTimeObject;\n\n    if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n      this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n    }\n  };\n\n  _proto.timestampOffsetForTimeline = function timestampOffsetForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n\n    return this.timelines[timeline].time;\n  };\n\n  _proto.mappingForTimeline = function mappingForTimeline(timeline) {\n    if (typeof this.timelines[timeline] === 'undefined') {\n      return null;\n    }\n\n    return this.timelines[timeline].mapping;\n  }\n  /**\n   * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n   * save that display time to the segment.\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo\n   *        The current active request information\n   * @param {Object} timingInfo\n   *        The start and end time of the current segment in \"media time\"\n   * @param {boolean} shouldSaveTimelineMapping\n   *        If there's a timeline change, determines if the timeline mapping should be\n   *        saved in timelines.\n   * @return {boolean}\n   *          Returns false if segment time mapping could not be calculated\n   */\n  ;\n\n  _proto.calculateSegmentTimeMapping_ = function calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n    // TODO: remove side effects\n    var segment = segmentInfo.segment;\n    var part = segmentInfo.part;\n    var mappingObj = this.timelines[segmentInfo.timeline];\n    var start;\n    var end;\n\n    if (typeof segmentInfo.timestampOffset === 'number') {\n      mappingObj = {\n        time: segmentInfo.startOfSegment,\n        mapping: segmentInfo.startOfSegment - timingInfo.start\n      };\n\n      if (shouldSaveTimelineMapping) {\n        this.timelines[segmentInfo.timeline] = mappingObj;\n        this.trigger('timestampoffset');\n        this.logger_(\"time mapping for timeline \" + segmentInfo.timeline + \": \" + (\"[time: \" + mappingObj.time + \"] [mapping: \" + mappingObj.mapping + \"]\"));\n      }\n\n      start = segmentInfo.startOfSegment;\n      end = timingInfo.end + mappingObj.mapping;\n    } else if (mappingObj) {\n      start = timingInfo.start + mappingObj.mapping;\n      end = timingInfo.end + mappingObj.mapping;\n    } else {\n      return false;\n    }\n\n    if (part) {\n      part.start = start;\n      part.end = end;\n    } // If we don't have a segment start yet or the start value we got\n    // is less than our current segment.start value, save a new start value.\n    // We have to do this because parts will have segment timing info saved\n    // multiple times and we want segment start to be the earliest part start\n    // value for that segment.\n\n\n    if (!segment.start || start < segment.start) {\n      segment.start = start;\n    }\n\n    segment.end = end;\n    return true;\n  }\n  /**\n   * Each time we have discontinuity in the playlist, attempt to calculate the location\n   * in display of the start of the discontinuity and save that. We also save an accuracy\n   * value so that we save values with the most accuracy (closest to 0.)\n   *\n   * @private\n   * @param {SegmentInfo} segmentInfo - The current active request information\n   */\n  ;\n\n  _proto.saveDiscontinuitySyncInfo_ = function saveDiscontinuitySyncInfo_(segmentInfo) {\n    var playlist = segmentInfo.playlist;\n    var segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n    // the start of the range and it's accuracy is 0 (greater accuracy values\n    // mean more approximation)\n\n    if (segment.discontinuity) {\n      this.discontinuities[segment.timeline] = {\n        time: segment.start,\n        accuracy: 0\n      };\n    } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n      // Search for future discontinuities that we can provide better timing\n      // information for and save that information for sync purposes\n      for (var i = 0; i < playlist.discontinuityStarts.length; i++) {\n        var segmentIndex = playlist.discontinuityStarts[i];\n        var discontinuity = playlist.discontinuitySequence + i + 1;\n        var mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n        var accuracy = Math.abs(mediaIndexDiff);\n\n        if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n          var time = void 0;\n\n          if (mediaIndexDiff < 0) {\n            time = segment.start - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex,\n              endIndex: segmentIndex\n            });\n          } else {\n            time = segment.end + sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: playlist.segments,\n              startIndex: segmentInfo.mediaIndex + 1,\n              endIndex: segmentIndex\n            });\n          }\n\n          this.discontinuities[discontinuity] = {\n            time: time,\n            accuracy: accuracy\n          };\n        }\n      }\n    }\n  };\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.off();\n  };\n\n  return SyncController;\n}(videojs.EventTarget);\n/**\n * The TimelineChangeController acts as a source for segment loaders to listen for and\n * keep track of latest and pending timeline changes. This is useful to ensure proper\n * sync, as each loader may need to make a consideration for what timeline the other\n * loader is on before making changes which could impact the other loader's media.\n *\n * @class TimelineChangeController\n * @extends videojs.EventTarget\n */\n\n\nvar TimelineChangeController = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(TimelineChangeController, _videojs$EventTarget);\n\n  function TimelineChangeController() {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this;\n    _this.pendingTimelineChanges_ = {};\n    _this.lastTimelineChanges_ = {};\n    return _this;\n  }\n\n  var _proto = TimelineChangeController.prototype;\n\n  _proto.clearPendingTimelineChange = function clearPendingTimelineChange(type) {\n    this.pendingTimelineChanges_[type] = null;\n    this.trigger('pendingtimelinechange');\n  };\n\n  _proto.pendingTimelineChange = function pendingTimelineChange(_ref) {\n    var type = _ref.type,\n        from = _ref.from,\n        to = _ref.to;\n\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.pendingTimelineChanges_[type] = {\n        type: type,\n        from: from,\n        to: to\n      };\n      this.trigger('pendingtimelinechange');\n    }\n\n    return this.pendingTimelineChanges_[type];\n  };\n\n  _proto.lastTimelineChange = function lastTimelineChange(_ref2) {\n    var type = _ref2.type,\n        from = _ref2.from,\n        to = _ref2.to;\n\n    if (typeof from === 'number' && typeof to === 'number') {\n      this.lastTimelineChanges_[type] = {\n        type: type,\n        from: from,\n        to: to\n      };\n      delete this.pendingTimelineChanges_[type];\n      this.trigger('timelinechange');\n    }\n\n    return this.lastTimelineChanges_[type];\n  };\n\n  _proto.dispose = function dispose() {\n    this.trigger('dispose');\n    this.pendingTimelineChanges_ = {};\n    this.lastTimelineChanges_ = {};\n    this.off();\n  };\n\n  return TimelineChangeController;\n}(videojs.EventTarget);\n/* rollup-plugin-worker-factory start for worker!/Users/abarstow/videojs/http-streaming/src/decrypter-worker.js */\n\n\nvar workerCode = transform(getWorkerString(function () {\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, basedir, module) {\n    return module = {\n      path: basedir,\n      exports: {},\n      require: function require(path, base) {\n        return commonjsRequire(path, base === undefined || base === null ? module.path : base);\n      }\n    }, fn(module, module.exports), module.exports;\n  }\n\n  function commonjsRequire() {\n    throw new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n  }\n\n  var createClass = createCommonjsModule(function (module) {\n    function _defineProperties(target, props) {\n      for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n      }\n    }\n\n    function _createClass(Constructor, protoProps, staticProps) {\n      if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n      if (staticProps) _defineProperties(Constructor, staticProps);\n      return Constructor;\n    }\n\n    module.exports = _createClass;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  });\n  var setPrototypeOf = createCommonjsModule(function (module) {\n    function _setPrototypeOf(o, p) {\n      module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n        o.__proto__ = p;\n        return o;\n      };\n\n      module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n      return _setPrototypeOf(o, p);\n    }\n\n    module.exports = _setPrototypeOf;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  });\n  var inheritsLoose = createCommonjsModule(function (module) {\n    function _inheritsLoose(subClass, superClass) {\n      subClass.prototype = Object.create(superClass.prototype);\n      subClass.prototype.constructor = subClass;\n      setPrototypeOf(subClass, superClass);\n    }\n\n    module.exports = _inheritsLoose;\n    module.exports[\"default\"] = module.exports, module.exports.__esModule = true;\n  });\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n\n    var _proto = Stream.prototype;\n\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */\n    ;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */\n    ;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */\n    ;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n    ;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n\n    return Stream;\n  }();\n  /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n  /**\n   * Returns the subarray of a Uint8Array without PKCS#7 padding.\n   *\n   * @param padded {Uint8Array} unencrypted bytes that have been padded\n   * @return {Uint8Array} the unpadded bytes\n   * @see http://tools.ietf.org/html/rfc5652\n   */\n\n\n  function unpad(padded) {\n    return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n  }\n  /*! @name aes-decrypter @version 3.1.3 @license Apache-2.0 */\n\n  /**\n   * @file aes.js\n   *\n   * This file contains an adaptation of the AES decryption algorithm\n   * from the Standford Javascript Cryptography Library. That work is\n   * covered by the following copyright and permissions notice:\n   *\n   * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n   * All rights reserved.\n   *\n   * Redistribution and use in source and binary forms, with or without\n   * modification, are permitted provided that the following conditions are\n   * met:\n   *\n   * 1. Redistributions of source code must retain the above copyright\n   *    notice, this list of conditions and the following disclaimer.\n   *\n   * 2. Redistributions in binary form must reproduce the above\n   *    copyright notice, this list of conditions and the following\n   *    disclaimer in the documentation and/or other materials provided\n   *    with the distribution.\n   *\n   * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n   * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n   * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n   * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n   * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n   * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n   * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n   * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n   * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n   * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n   * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n   *\n   * The views and conclusions contained in the software and documentation\n   * are those of the authors and should not be interpreted as representing\n   * official policies, either expressed or implied, of the authors.\n   */\n\n  /**\n   * Expand the S-box tables.\n   *\n   * @private\n   */\n\n\n  var precompute = function precompute() {\n    var tables = [[[], [], [], [], []], [[], [], [], [], []]];\n    var encTable = tables[0];\n    var decTable = tables[1];\n    var sbox = encTable[4];\n    var sboxInv = decTable[4];\n    var i;\n    var x;\n    var xInv;\n    var d = [];\n    var th = [];\n    var x2;\n    var x4;\n    var x8;\n    var s;\n    var tEnc;\n    var tDec; // Compute double and third tables\n\n    for (i = 0; i < 256; i++) {\n      th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n    }\n\n    for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n      // Compute sbox\n      s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n      s = s >> 8 ^ s & 255 ^ 99;\n      sbox[x] = s;\n      sboxInv[s] = x; // Compute MixColumns\n\n      x8 = d[x4 = d[x2 = d[x]]];\n      tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n      tEnc = d[s] * 0x101 ^ s * 0x1010100;\n\n      for (i = 0; i < 4; i++) {\n        encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n        decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n      }\n    } // Compactify. Considerable speedup on Firefox.\n\n\n    for (i = 0; i < 5; i++) {\n      encTable[i] = encTable[i].slice(0);\n      decTable[i] = decTable[i].slice(0);\n    }\n\n    return tables;\n  };\n\n  var aesTables = null;\n  /**\n   * Schedule out an AES key for both encryption and decryption. This\n   * is a low-level class. Use a cipher mode to do bulk encryption.\n   *\n   * @class AES\n   * @param key {Array} The key as an array of 4, 6 or 8 words.\n   */\n\n  var AES = /*#__PURE__*/function () {\n    function AES(key) {\n      /**\n      * The expanded S-box and inverse S-box tables. These will be computed\n      * on the client so that we don't have to send them down the wire.\n      *\n      * There are two tables, _tables[0] is for encryption and\n      * _tables[1] is for decryption.\n      *\n      * The first 4 sub-tables are the expanded S-box with MixColumns. The\n      * last (_tables[01][4]) is the S-box itself.\n      *\n      * @private\n      */\n      // if we have yet to precompute the S-box tables\n      // do so now\n      if (!aesTables) {\n        aesTables = precompute();\n      } // then make a copy of that object for use\n\n\n      this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n      var i;\n      var j;\n      var tmp;\n      var sbox = this._tables[0][4];\n      var decTable = this._tables[1];\n      var keyLen = key.length;\n      var rcon = 1;\n\n      if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n        throw new Error('Invalid aes key size');\n      }\n\n      var encKey = key.slice(0);\n      var decKey = [];\n      this._key = [encKey, decKey]; // schedule encryption keys\n\n      for (i = keyLen; i < 4 * keyLen + 28; i++) {\n        tmp = encKey[i - 1]; // apply sbox\n\n        if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n          tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n          if (i % keyLen === 0) {\n            tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n            rcon = rcon << 1 ^ (rcon >> 7) * 283;\n          }\n        }\n\n        encKey[i] = encKey[i - keyLen] ^ tmp;\n      } // schedule decryption keys\n\n\n      for (j = 0; i; j++, i--) {\n        tmp = encKey[j & 3 ? i : i - 4];\n\n        if (i <= 4 || j < 4) {\n          decKey[j] = tmp;\n        } else {\n          decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n        }\n      }\n    }\n    /**\n     * Decrypt 16 bytes, specified as four 32-bit words.\n     *\n     * @param {number} encrypted0 the first word to decrypt\n     * @param {number} encrypted1 the second word to decrypt\n     * @param {number} encrypted2 the third word to decrypt\n     * @param {number} encrypted3 the fourth word to decrypt\n     * @param {Int32Array} out the array to write the decrypted words\n     * into\n     * @param {number} offset the offset into the output array to start\n     * writing results\n     * @return {Array} The plaintext.\n     */\n\n\n    var _proto = AES.prototype;\n\n    _proto.decrypt = function decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n      var key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n      var a = encrypted0 ^ key[0];\n      var b = encrypted3 ^ key[1];\n      var c = encrypted2 ^ key[2];\n      var d = encrypted1 ^ key[3];\n      var a2;\n      var b2;\n      var c2; // key.length === 2 ?\n\n      var nInnerRounds = key.length / 4 - 2;\n      var i;\n      var kIndex = 4;\n      var table = this._tables[1]; // load up the tables\n\n      var table0 = table[0];\n      var table1 = table[1];\n      var table2 = table[2];\n      var table3 = table[3];\n      var sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n      for (i = 0; i < nInnerRounds; i++) {\n        a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n        b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n        c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n        d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n        kIndex += 4;\n        a = a2;\n        b = b2;\n        c = c2;\n      } // Last round.\n\n\n      for (i = 0; i < 4; i++) {\n        out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n        a2 = a;\n        a = b;\n        b = c;\n        c = d;\n        d = a2;\n      }\n    };\n\n    return AES;\n  }();\n  /**\n   * A wrapper around the Stream class to use setTimeout\n   * and run stream \"jobs\" Asynchronously\n   *\n   * @class AsyncStream\n   * @extends Stream\n   */\n\n\n  var AsyncStream = /*#__PURE__*/function (_Stream) {\n    inheritsLoose(AsyncStream, _Stream);\n\n    function AsyncStream() {\n      var _this;\n\n      _this = _Stream.call(this, Stream) || this;\n      _this.jobs = [];\n      _this.delay = 1;\n      _this.timeout_ = null;\n      return _this;\n    }\n    /**\n     * process an async job\n     *\n     * @private\n     */\n\n\n    var _proto = AsyncStream.prototype;\n\n    _proto.processJob_ = function processJob_() {\n      this.jobs.shift()();\n\n      if (this.jobs.length) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      } else {\n        this.timeout_ = null;\n      }\n    }\n    /**\n     * push a job into the stream\n     *\n     * @param {Function} job the job to push into the stream\n     */\n    ;\n\n    _proto.push = function push(job) {\n      this.jobs.push(job);\n\n      if (!this.timeout_) {\n        this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n      }\n    };\n\n    return AsyncStream;\n  }(Stream);\n  /**\n   * Convert network-order (big-endian) bytes into their little-endian\n   * representation.\n   */\n\n\n  var ntoh = function ntoh(word) {\n    return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n  };\n  /**\n   * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * use for the first round of CBC.\n   * @return {Uint8Array} the decrypted bytes\n   *\n   * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n   * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n   * @see https://tools.ietf.org/html/rfc2315\n   */\n\n\n  var decrypt = function decrypt(encrypted, key, initVector) {\n    // word-level access to the encrypted bytes\n    var encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n    var decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n    var decrypted = new Uint8Array(encrypted.byteLength);\n    var decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n    // decrypted data\n\n    var init0;\n    var init1;\n    var init2;\n    var init3;\n    var encrypted0;\n    var encrypted1;\n    var encrypted2;\n    var encrypted3; // iteration variable\n\n    var wordIx; // pull out the words of the IV to ensure we don't modify the\n    // passed-in reference and easier access\n\n    init0 = initVector[0];\n    init1 = initVector[1];\n    init2 = initVector[2];\n    init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n    // to each decrypted block\n\n    for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n      // convert big-endian (network order) words into little-endian\n      // (javascript order)\n      encrypted0 = ntoh(encrypted32[wordIx]);\n      encrypted1 = ntoh(encrypted32[wordIx + 1]);\n      encrypted2 = ntoh(encrypted32[wordIx + 2]);\n      encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n      decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n      // plaintext\n\n      decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n      decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n      decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n      decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n      init0 = encrypted0;\n      init1 = encrypted1;\n      init2 = encrypted2;\n      init3 = encrypted3;\n    }\n\n    return decrypted;\n  };\n  /**\n   * The `Decrypter` class that manages decryption of AES\n   * data through `AsyncStream` objects and the `decrypt`\n   * function\n   *\n   * @param {Uint8Array} encrypted the encrypted bytes\n   * @param {Uint32Array} key the bytes of the decryption key\n   * @param {Uint32Array} initVector the initialization vector (IV) to\n   * @param {Function} done the function to run when done\n   * @class Decrypter\n   */\n\n\n  var Decrypter = /*#__PURE__*/function () {\n    function Decrypter(encrypted, key, initVector, done) {\n      var step = Decrypter.STEP;\n      var encrypted32 = new Int32Array(encrypted.buffer);\n      var decrypted = new Uint8Array(encrypted.byteLength);\n      var i = 0;\n      this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n      this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n\n      for (i = step; i < encrypted32.length; i += step) {\n        initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n      } // invoke the done() callback when everything is finished\n\n\n      this.asyncStream_.push(function () {\n        // remove pkcs#7 padding from the decrypted bytes\n        done(null, unpad(decrypted));\n      });\n    }\n    /**\n     * a getter for step the maximum number of bytes to process at one time\n     *\n     * @return {number} the value of step 32000\n     */\n\n\n    var _proto = Decrypter.prototype;\n    /**\n     * @private\n     */\n\n    _proto.decryptChunk_ = function decryptChunk_(encrypted, key, initVector, decrypted) {\n      return function () {\n        var bytes = decrypt(encrypted, key, initVector);\n        decrypted.set(bytes, encrypted.byteOffset);\n      };\n    };\n\n    createClass(Decrypter, null, [{\n      key: \"STEP\",\n      get: function get() {\n        // 4 * 8000;\n        return 32000;\n      }\n    }]);\n    return Decrypter;\n  }();\n\n  var win;\n\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n\n  var window_1 = win;\n\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n\n  var BigInt = window_1.BigInt || Number;\n  [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n\n  var createTransferableMessage = function createTransferableMessage(message) {\n    var transferable = {};\n    Object.keys(message).forEach(function (key) {\n      var value = message[key];\n\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /* global self */\n\n  /**\n   * Our web worker interface so that things can talk to aes-decrypter\n   * that will be running in a web worker. the scope is passed to this by\n   * webworkify.\n   */\n\n\n  self.onmessage = function (event) {\n    var data = event.data;\n    var encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n    var key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n    var iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n    /* eslint-disable no-new, handle-callback-err */\n\n    new Decrypter(encrypted, key, iv, function (err, bytes) {\n      self.postMessage(createTransferableMessage({\n        source: data.source,\n        decrypted: bytes\n      }), [bytes.buffer]);\n    });\n    /* eslint-enable */\n  };\n}));\nvar Decrypter = factory(workerCode);\n/* rollup-plugin-worker-factory end for worker!/Users/abarstow/videojs/http-streaming/src/decrypter-worker.js */\n\n/**\n * Convert the properties of an HLS track into an audioTrackKind.\n *\n * @private\n */\n\nvar audioTrackKind_ = function audioTrackKind_(properties) {\n  var kind = properties[\"default\"] ? 'main' : 'alternative';\n\n  if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n    kind = 'main-desc';\n  }\n\n  return kind;\n};\n/**\n * Pause provided segment loader and playlist loader if active\n *\n * @param {SegmentLoader} segmentLoader\n *        SegmentLoader to pause\n * @param {Object} mediaType\n *        Active media type\n * @function stopLoaders\n */\n\n\nvar stopLoaders = function stopLoaders(segmentLoader, mediaType) {\n  segmentLoader.abort();\n  segmentLoader.pause();\n\n  if (mediaType && mediaType.activePlaylistLoader) {\n    mediaType.activePlaylistLoader.pause();\n    mediaType.activePlaylistLoader = null;\n  }\n};\n/**\n * Start loading provided segment loader and playlist loader\n *\n * @param {PlaylistLoader} playlistLoader\n *        PlaylistLoader to start loading\n * @param {Object} mediaType\n *        Active media type\n * @function startLoaders\n */\n\n\nvar startLoaders = function startLoaders(playlistLoader, mediaType) {\n  // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n  // playlist loader\n  mediaType.activePlaylistLoader = playlistLoader;\n  playlistLoader.load();\n};\n/**\n * Returns a function to be called when the media group changes. It performs a\n * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n * change of group is merely a rendition switch of the same content at another encoding,\n * rather than a change of content, such as switching audio from English to Spanish.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a non-destructive resync of SegmentLoader when the active media\n *         group changes.\n * @function onGroupChanged\n */\n\n\nvar onGroupChanged = function onGroupChanged(type, settings) {\n  return function () {\n    var _settings$segmentLoad = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad[type],\n        mainSegmentLoader = _settings$segmentLoad.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.getActiveGroup();\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    var lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n    if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n      return;\n    }\n\n    mediaType.lastGroup_ = activeGroup;\n    mediaType.lastTrack_ = activeTrack;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup || activeGroup.isMasterPlaylist) {\n      // there is no group active or active group is a main playlist and won't change\n      return;\n    }\n\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n\n      return;\n    } // Non-destructive resync\n\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onGroupChanging = function onGroupChanging(type, settings) {\n  return function () {\n    var segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    mediaType.lastGroup_ = null;\n    segmentLoader.abort();\n    segmentLoader.pause();\n  };\n};\n/**\n * Returns a function to be called when the media track changes. It performs a\n * destructive reset of the SegmentLoader to ensure we start loading as close to\n * currentTime as possible.\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Handler for a destructive reset of SegmentLoader when the active media\n *         track changes.\n * @function onTrackChanged\n */\n\n\nvar onTrackChanged = function onTrackChanged(type, settings) {\n  return function () {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        _settings$segmentLoad2 = settings.segmentLoaders,\n        segmentLoader = _settings$segmentLoad2[type],\n        mainSegmentLoader = _settings$segmentLoad2.main,\n        mediaType = settings.mediaTypes[type];\n    var activeTrack = mediaType.activeTrack();\n    var activeGroup = mediaType.getActiveGroup();\n    var previousActiveLoader = mediaType.activePlaylistLoader;\n    var lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n    if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n      return;\n    }\n\n    mediaType.lastGroup_ = activeGroup;\n    mediaType.lastTrack_ = activeTrack;\n    stopLoaders(segmentLoader, mediaType);\n\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n\n    if (activeGroup.isMasterPlaylist) {\n      // track did not change, do nothing\n      if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n        return;\n      }\n\n      var mpc = settings.vhs.masterPlaylistController_;\n      var newPlaylist = mpc.selectPlaylist(); // media will not change do nothing\n\n      if (mpc.media() === newPlaylist) {\n        return;\n      }\n\n      mediaType.logger_(\"track change. Switching master audio from \" + lastTrack.id + \" to \" + activeTrack.id);\n      masterPlaylistLoader.pause();\n      mainSegmentLoader.resetEverything();\n      mpc.fastQualityChange_(newPlaylist);\n      return;\n    }\n\n    if (type === 'AUDIO') {\n      if (!activeGroup.playlistLoader) {\n        // when switching from demuxed audio/video to muxed audio/video (noted by no\n        // playlist loader for the audio group), we want to do a destructive reset of the\n        // main segment loader and not restart the audio loaders\n        mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n        // it should be stopped\n\n        mainSegmentLoader.resetEverything();\n        return;\n      } // although the segment loader is an audio segment loader, call the setAudio\n      // function to ensure it is prepared to re-append the init segment (or handle other\n      // config changes)\n\n\n      segmentLoader.setAudio(true);\n      mainSegmentLoader.setAudio(false);\n    }\n\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n};\n\nvar onError = {\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning (or error if the playlist is blacklisted) to\n   *         console and switches back to default audio track.\n   * @function onError.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type],\n          blacklistCurrentPlaylist = settings.blacklistCurrentPlaylist;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      var activeTrack = mediaType.activeTrack();\n      var activeGroup = mediaType.activeGroup();\n      var id = (activeGroup.filter(function (group) {\n        return group[\"default\"];\n      })[0] || activeGroup[0]).id;\n      var defaultTrack = mediaType.tracks[id];\n\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is blacklist the current\n        // rendition and hope another will switch audio groups\n        blacklistCurrentPlaylist({\n          message: 'Problem encountered loading the default audio track.'\n        });\n        return;\n      }\n\n      videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n\n      for (var trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n\n      mediaType.onTrackChanged();\n    };\n  },\n\n  /**\n   * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n   * an error.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Error handler. Logs warning to console and disables the active subtitle track\n   * @function onError.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var segmentLoader = settings.segmentLoaders[type],\n          mediaType = settings.mediaTypes[type];\n      videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      var track = mediaType.activeTrack();\n\n      if (track) {\n        track.mode = 'disabled';\n      }\n\n      mediaType.onTrackChanged();\n    };\n  }\n};\nvar setupListeners = {\n  /**\n   * Setup event listeners for audio playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.AUDIO\n   */\n  AUDIO: function AUDIO(type, playlistLoader, settings) {\n    if (!playlistLoader) {\n      // no playlist loader means audio will be muxed with the video\n      return;\n    }\n\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup event listeners for subtitle playlist loader\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {PlaylistLoader|null} playlistLoader\n   *        PlaylistLoader to register listeners on\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function setupListeners.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, playlistLoader, settings) {\n    var tech = settings.tech,\n        requestOptions = settings.requestOptions,\n        segmentLoader = settings.segmentLoaders[type],\n        mediaType = settings.mediaTypes[type];\n    playlistLoader.on('loadedmetadata', function () {\n      var media = playlistLoader.media();\n      segmentLoader.playlist(media, requestOptions);\n      segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n      // permits, start downloading segments\n\n      if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('loadedplaylist', function () {\n      segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n      if (!tech.paused()) {\n        segmentLoader.load();\n      }\n    });\n    playlistLoader.on('error', onError[type](type, settings));\n  }\n};\nvar initialize = {\n  /**\n   * Setup PlaylistLoaders and AudioTracks for the audio groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.AUDIO\n   */\n  'AUDIO': function AUDIO(type, settings) {\n    var vhs = settings.vhs,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$ = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$.groups,\n        tracks = _settings$mediaTypes$.tracks,\n        logger_ = _settings$mediaTypes$.logger_,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n    var audioOnlyMaster = isAudioOnly(masterPlaylistLoader.master); // force a default if we have none\n\n    if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n      mediaGroups[type] = {\n        main: {\n          \"default\": {\n            \"default\": true\n          }\n        }\n      };\n\n      if (audioOnlyMaster) {\n        mediaGroups[type].main[\"default\"].playlists = masterPlaylistLoader.master.playlists;\n      }\n    }\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (audioOnlyMaster) {\n          logger_(\"AUDIO group '\" + groupId + \"' label '\" + variantLabel + \"' is a master playlist\");\n          properties.isMasterPlaylist = true;\n          playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n          // use the resolved media playlist object\n        } else if (sourceType === 'vhs-json' && properties.playlists) {\n          playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n        } else if (properties.resolvedUri) {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n          // should we even have properties.playlists in this check.\n        } else if (properties.playlists && sourceType === 'dash') {\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\n        } else {\n          // no resolvedUri means the audio is muxed with the video when using this\n          // audio track\n          playlistLoader = null;\n        }\n\n        properties = videojs.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = new videojs.AudioTrack({\n            id: variantLabel,\n            kind: audioTrackKind_(properties),\n            enabled: false,\n            language: properties.language,\n            \"default\": properties[\"default\"],\n            label: variantLabel\n          });\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup PlaylistLoaders and TextTracks for the subtitle groups\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize.SUBTITLES\n   */\n  'SUBTITLES': function SUBTITLES(type, settings) {\n    var tech = settings.tech,\n        vhs = settings.vhs,\n        sourceType = settings.sourceType,\n        segmentLoader = settings.segmentLoaders[type],\n        requestOptions = settings.requestOptions,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$2 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$2.groups,\n        tracks = _settings$mediaTypes$2.tracks,\n        masterPlaylistLoader = settings.masterPlaylistLoader;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        if (mediaGroups[type][groupId][variantLabel].forced) {\n          // Subtitle playlists with the forced attribute are not selectable in Safari.\n          // According to Apple's HLS Authoring Specification:\n          //   If content has forced subtitles and regular subtitles in a given language,\n          //   the regular subtitles track in that language MUST contain both the forced\n          //   subtitles and the regular subtitles for that language.\n          // Because of this requirement and that Safari does not add forced subtitles,\n          // forced subtitles are skipped here to maintain consistent experience across\n          // all platforms\n          continue;\n        }\n\n        var properties = mediaGroups[type][groupId][variantLabel];\n        var playlistLoader = void 0;\n\n        if (sourceType === 'hls') {\n          playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n        } else if (sourceType === 'dash') {\n          var playlists = properties.playlists.filter(function (p) {\n            return p.excludeUntil !== Infinity;\n          });\n\n          if (!playlists.length) {\n            return;\n          }\n\n          playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, masterPlaylistLoader);\n        } else if (sourceType === 'vhs-json') {\n          playlistLoader = new PlaylistLoader( // if the vhs-json object included the media playlist, use the media playlist\n          // as provided, otherwise use the resolved URI to load the playlist\n          properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n        }\n\n        properties = videojs.mergeOptions({\n          id: variantLabel,\n          playlistLoader: playlistLoader\n        }, properties);\n        setupListeners[type](type, properties.playlistLoader, settings);\n        groups[groupId].push(properties);\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: variantLabel,\n            kind: 'subtitles',\n            \"default\": properties[\"default\"] && properties.autoselect,\n            language: properties.language,\n            label: variantLabel\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    } // setup single error event handler for the segment loader\n\n\n    segmentLoader.on('error', onError[type](type, settings));\n  },\n\n  /**\n   * Setup TextTracks for the closed-caption groups\n   *\n   * @param {String} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @function initialize['CLOSED-CAPTIONS']\n   */\n  'CLOSED-CAPTIONS': function CLOSEDCAPTIONS(type, settings) {\n    var tech = settings.tech,\n        mediaGroups = settings.master.mediaGroups,\n        _settings$mediaTypes$3 = settings.mediaTypes[type],\n        groups = _settings$mediaTypes$3.groups,\n        tracks = _settings$mediaTypes$3.tracks;\n\n    for (var groupId in mediaGroups[type]) {\n      if (!groups[groupId]) {\n        groups[groupId] = [];\n      }\n\n      for (var variantLabel in mediaGroups[type][groupId]) {\n        var properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n        if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n          continue;\n        }\n\n        var captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        var newProps = {\n          label: variantLabel,\n          language: properties.language,\n          instreamId: properties.instreamId,\n          \"default\": properties[\"default\"] && properties.autoselect\n        };\n\n        if (captionServices[newProps.instreamId]) {\n          newProps = videojs.mergeOptions(newProps, captionServices[newProps.instreamId]);\n        }\n\n        if (newProps[\"default\"] === undefined) {\n          delete newProps[\"default\"];\n        } // No PlaylistLoader is required for Closed-Captions because the captions are\n        // embedded within the video stream\n\n\n        groups[groupId].push(videojs.mergeOptions({\n          id: variantLabel\n        }, properties));\n\n        if (typeof tracks[variantLabel] === 'undefined') {\n          var track = tech.addRemoteTextTrack({\n            id: newProps.instreamId,\n            kind: 'captions',\n            \"default\": newProps[\"default\"],\n            language: newProps.language,\n            label: newProps.label\n          }, false).track;\n          tracks[variantLabel] = track;\n        }\n      }\n    }\n  }\n};\n\nvar groupMatch = function groupMatch(list, media) {\n  for (var i = 0; i < list.length; i++) {\n    if (playlistMatch(media, list[i])) {\n      return true;\n    }\n\n    if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n      return true;\n    }\n  }\n\n  return false;\n};\n/**\n * Returns a function used to get the active group of the provided type\n *\n * @param {string} type\n *        MediaGroup type\n * @param {Object} settings\n *        Object containing required information for media groups\n * @return {Function}\n *         Function that returns the active media group for the provided type. Takes an\n *         optional parameter {TextTrack} track. If no track is provided, a list of all\n *         variants in the group, otherwise the variant corresponding to the provided\n *         track is returned.\n * @function activeGroup\n */\n\n\nvar activeGroup = function activeGroup(type, settings) {\n  return function (track) {\n    var masterPlaylistLoader = settings.masterPlaylistLoader,\n        groups = settings.mediaTypes[type].groups;\n    var media = masterPlaylistLoader.media();\n\n    if (!media) {\n      return null;\n    }\n\n    var variants = null; // set to variants to main media active group\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n\n    var groupKeys = Object.keys(groups);\n\n    if (!variants) {\n      // find the masterPlaylistLoader media\n      // that is in a media group if we are dealing\n      // with audio only\n      if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.master)) {\n        for (var i = 0; i < groupKeys.length; i++) {\n          var groupPropertyList = groups[groupKeys[i]];\n\n          if (groupMatch(groupPropertyList, media)) {\n            variants = groupPropertyList;\n            break;\n          }\n        } // use the main group if it exists\n\n      } else if (groups.main) {\n        variants = groups.main; // only one group, use that one\n      } else if (groupKeys.length === 1) {\n        variants = groups[groupKeys[0]];\n      }\n    }\n\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n\n    if (track === null || !variants) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n\n    return variants.filter(function (props) {\n      return props.id === track.id;\n    })[0] || null;\n  };\n};\n\nvar activeTrack = {\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.AUDIO\n   */\n  AUDIO: function AUDIO(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  },\n\n  /**\n   * Returns a function used to get the active track of type provided\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media track for the provided type. Returns\n   *         null if no track is active\n   * @function activeTrack.SUBTITLES\n   */\n  SUBTITLES: function SUBTITLES(type, settings) {\n    return function () {\n      var tracks = settings.mediaTypes[type].tracks;\n\n      for (var id in tracks) {\n        if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n          return tracks[id];\n        }\n      }\n\n      return null;\n    };\n  }\n};\n\nvar getActiveGroup = function getActiveGroup(type, _ref) {\n  var mediaTypes = _ref.mediaTypes;\n  return function () {\n    var activeTrack_ = mediaTypes[type].activeTrack();\n\n    if (!activeTrack_) {\n      return null;\n    }\n\n    return mediaTypes[type].activeGroup(activeTrack_);\n  };\n};\n/**\n * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n * Closed-Captions) specified in the master manifest.\n *\n * @param {Object} settings\n *        Object containing required information for setting up the media groups\n * @param {Tech} settings.tech\n *        The tech of the player\n * @param {Object} settings.requestOptions\n *        XHR request options used by the segment loaders\n * @param {PlaylistLoader} settings.masterPlaylistLoader\n *        PlaylistLoader for the master source\n * @param {VhsHandler} settings.vhs\n *        VHS SourceHandler\n * @param {Object} settings.master\n *        The parsed master manifest\n * @param {Object} settings.mediaTypes\n *        Object to store the loaders, tracks, and utility methods for each media type\n * @param {Function} settings.blacklistCurrentPlaylist\n *        Blacklists the current rendition and forces a rendition switch.\n * @function setupMediaGroups\n */\n\n\nvar setupMediaGroups = function setupMediaGroups(settings) {\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    initialize[type](type, settings);\n  });\n  var mediaTypes = settings.mediaTypes,\n      masterPlaylistLoader = settings.masterPlaylistLoader,\n      tech = settings.tech,\n      vhs = settings.vhs,\n      _settings$segmentLoad3 = settings.segmentLoaders,\n      audioSegmentLoader = _settings$segmentLoad3['AUDIO'],\n      mainSegmentLoader = _settings$segmentLoad3.main; // setup active group and track getters and change event handlers\n\n  ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n    mediaTypes[type].activeGroup = activeGroup(type, settings);\n    mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n    mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n    mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n    mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n    mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n  }); // DO NOT enable the default subtitle or caption track.\n  // DO enable the default audio track\n\n  var audioGroup = mediaTypes.AUDIO.activeGroup();\n\n  if (audioGroup) {\n    var groupId = (audioGroup.filter(function (group) {\n      return group[\"default\"];\n    })[0] || audioGroup[0]).id;\n    mediaTypes.AUDIO.tracks[groupId].enabled = true;\n    mediaTypes.AUDIO.onGroupChanged();\n    mediaTypes.AUDIO.onTrackChanged();\n    var activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n    // track is changed, but needs to be handled here since the track may not be considered\n    // changed on the first call to onTrackChanged\n\n    if (!activeAudioGroup.playlistLoader) {\n      // either audio is muxed with video or the stream is audio only\n      mainSegmentLoader.setAudio(true);\n    } else {\n      // audio is demuxed\n      mainSegmentLoader.setAudio(false);\n      audioSegmentLoader.setAudio(true);\n    }\n  }\n\n  masterPlaylistLoader.on('mediachange', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanged();\n    });\n  });\n  masterPlaylistLoader.on('mediachanging', function () {\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      return mediaTypes[type].onGroupChanging();\n    });\n  }); // custom audio track change event handler for usage event\n\n  var onAudioTrackChanged = function onAudioTrackChanged() {\n    mediaTypes.AUDIO.onTrackChanged();\n    tech.trigger({\n      type: 'usage',\n      name: 'vhs-audio-change'\n    });\n    tech.trigger({\n      type: 'usage',\n      name: 'hls-audio-change'\n    });\n  };\n\n  tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n  tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  vhs.on('dispose', function () {\n    tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n  }); // clear existing audio tracks and add the ones we just created\n\n  tech.clearTracks('audio');\n\n  for (var id in mediaTypes.AUDIO.tracks) {\n    tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n  }\n};\n/**\n * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n * media type\n *\n * @return {Object}\n *         Object to store the loaders, tracks, and utility methods for each media type\n * @function createMediaTypes\n */\n\n\nvar createMediaTypes = function createMediaTypes() {\n  var mediaTypes = {};\n  ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(function (type) {\n    mediaTypes[type] = {\n      groups: {},\n      tracks: {},\n      activePlaylistLoader: null,\n      activeGroup: noop,\n      activeTrack: noop,\n      getActiveGroup: noop,\n      onGroupChanged: noop,\n      onTrackChanged: noop,\n      lastTrack_: null,\n      logger_: logger(\"MediaGroups[\" + type + \"]\")\n    };\n  });\n  return mediaTypes;\n};\n\nvar ABORT_EARLY_BLACKLIST_SECONDS = 60 * 2;\nvar Vhs$1; // SegmentLoader stats that need to have each loader's\n// values summed to calculate the final value\n\nvar loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\n\nvar sumLoaderStat = function sumLoaderStat(stat) {\n  return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n};\n\nvar shouldSwitchToMedia = function shouldSwitchToMedia(_ref) {\n  var currentPlaylist = _ref.currentPlaylist,\n      buffered = _ref.buffered,\n      currentTime = _ref.currentTime,\n      nextPlaylist = _ref.nextPlaylist,\n      bufferLowWaterLine = _ref.bufferLowWaterLine,\n      bufferHighWaterLine = _ref.bufferHighWaterLine,\n      duration = _ref.duration,\n      experimentalBufferBasedABR = _ref.experimentalBufferBasedABR,\n      log = _ref.log; // we have no other playlist to switch to\n\n  if (!nextPlaylist) {\n    videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n    return false;\n  }\n\n  var sharedLogLine = \"allowing switch \" + (currentPlaylist && currentPlaylist.id || 'null') + \" -> \" + nextPlaylist.id;\n\n  if (!currentPlaylist) {\n    log(sharedLogLine + \" as current playlist is not set\");\n    return true;\n  } // no need to switch if playlist is the same\n\n\n  if (nextPlaylist.id === currentPlaylist.id) {\n    return false;\n  } // determine if current time is in a buffered range.\n\n\n  var isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n  // This is because in LIVE, the player plays 3 segments from the end of the\n  // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n  // in those segments, a viewer will never experience a rendition upswitch.\n\n  if (!currentPlaylist.endList) {\n    // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n    // doubles the time to first playback.\n    if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n      log(\"not \" + sharedLogLine + \" as current playlist is live llhls, but currentTime isn't in buffered.\");\n      return false;\n    }\n\n    log(sharedLogLine + \" as current playlist is live\");\n    return true;\n  }\n\n  var forwardBuffer = timeAheadOf(buffered, currentTime);\n  var maxBufferLowWaterLine = experimentalBufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n  // duration is below the max potential low water line\n\n  if (duration < maxBufferLowWaterLine) {\n    log(sharedLogLine + \" as duration < max low water line (\" + duration + \" < \" + maxBufferLowWaterLine + \")\");\n    return true;\n  }\n\n  var nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n  var currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n  // we can switch down\n\n  if (nextBandwidth < currBandwidth && (!experimentalBufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n    var logLine = sharedLogLine + \" as next bandwidth < current bandwidth (\" + nextBandwidth + \" < \" + currBandwidth + \")\";\n\n    if (experimentalBufferBasedABR) {\n      logLine += \" and forwardBuffer < bufferHighWaterLine (\" + forwardBuffer + \" < \" + bufferHighWaterLine + \")\";\n    }\n\n    log(logLine);\n    return true;\n  } // and if our buffer is higher than the low water line,\n  // we can switch up\n\n\n  if ((!experimentalBufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n    var _logLine = sharedLogLine + \" as forwardBuffer >= bufferLowWaterLine (\" + forwardBuffer + \" >= \" + bufferLowWaterLine + \")\";\n\n    if (experimentalBufferBasedABR) {\n      _logLine += \" and next bandwidth > current bandwidth (\" + nextBandwidth + \" > \" + currBandwidth + \")\";\n    }\n\n    log(_logLine);\n    return true;\n  }\n\n  log(\"not \" + sharedLogLine + \" as no switching criteria met\");\n  return false;\n};\n/**\n * the master playlist controller controller all interactons\n * between playlists and segmentloaders. At this time this mainly\n * involves a master playlist and a series of audio playlists\n * if they are available\n *\n * @class MasterPlaylistController\n * @extends videojs.EventTarget\n */\n\n\nvar MasterPlaylistController = /*#__PURE__*/function (_videojs$EventTarget) {\n  _inheritsLoose(MasterPlaylistController, _videojs$EventTarget);\n\n  function MasterPlaylistController(options) {\n    var _this;\n\n    _this = _videojs$EventTarget.call(this) || this;\n    var src = options.src,\n        handleManifestRedirects = options.handleManifestRedirects,\n        withCredentials = options.withCredentials,\n        tech = options.tech,\n        bandwidth = options.bandwidth,\n        externVhs = options.externVhs,\n        useCueTags = options.useCueTags,\n        blacklistDuration = options.blacklistDuration,\n        enableLowInitialPlaylist = options.enableLowInitialPlaylist,\n        sourceType = options.sourceType,\n        cacheEncryptionKeys = options.cacheEncryptionKeys,\n        experimentalBufferBasedABR = options.experimentalBufferBasedABR,\n        experimentalLeastPixelDiffSelector = options.experimentalLeastPixelDiffSelector,\n        captionServices = options.captionServices;\n\n    if (!src) {\n      throw new Error('A non-empty playlist URL or JSON manifest string is required');\n    }\n\n    var maxPlaylistRetries = options.maxPlaylistRetries;\n\n    if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n      maxPlaylistRetries = Infinity;\n    }\n\n    Vhs$1 = externVhs;\n    _this.experimentalBufferBasedABR = Boolean(experimentalBufferBasedABR);\n    _this.experimentalLeastPixelDiffSelector = Boolean(experimentalLeastPixelDiffSelector);\n    _this.withCredentials = withCredentials;\n    _this.tech_ = tech;\n    _this.vhs_ = tech.vhs;\n    _this.sourceType_ = sourceType;\n    _this.useCueTags_ = useCueTags;\n    _this.blacklistDuration = blacklistDuration;\n    _this.maxPlaylistRetries = maxPlaylistRetries;\n    _this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n\n    if (_this.useCueTags_) {\n      _this.cueTagsTrack_ = _this.tech_.addTextTrack('metadata', 'ad-cues');\n      _this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n    }\n\n    _this.requestOptions_ = {\n      withCredentials: withCredentials,\n      handleManifestRedirects: handleManifestRedirects,\n      maxPlaylistRetries: maxPlaylistRetries,\n      timeout: null\n    };\n\n    _this.on('error', _this.pauseLoading);\n\n    _this.mediaTypes_ = createMediaTypes();\n    _this.mediaSource = new window$1.MediaSource();\n    _this.handleDurationChange_ = _this.handleDurationChange_.bind(_assertThisInitialized(_this));\n    _this.handleSourceOpen_ = _this.handleSourceOpen_.bind(_assertThisInitialized(_this));\n    _this.handleSourceEnded_ = _this.handleSourceEnded_.bind(_assertThisInitialized(_this));\n\n    _this.mediaSource.addEventListener('durationchange', _this.handleDurationChange_); // load the media source into the player\n\n\n    _this.mediaSource.addEventListener('sourceopen', _this.handleSourceOpen_);\n\n    _this.mediaSource.addEventListener('sourceended', _this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n    // everything, and the MediaSource should not be detached without a proper disposal\n\n\n    _this.seekable_ = videojs.createTimeRanges();\n    _this.hasPlayed_ = false;\n    _this.syncController_ = new SyncController(options);\n    _this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'segment-metadata'\n    }, false).track;\n    _this.decrypter_ = new Decrypter();\n    _this.sourceUpdater_ = new SourceUpdater(_this.mediaSource);\n    _this.inbandTextTracks_ = {};\n    _this.timelineChangeController_ = new TimelineChangeController();\n    var segmentLoaderSettings = {\n      vhs: _this.vhs_,\n      parse708captions: options.parse708captions,\n      useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n      captionServices: captionServices,\n      mediaSource: _this.mediaSource,\n      currentTime: _this.tech_.currentTime.bind(_this.tech_),\n      seekable: function seekable() {\n        return _this.seekable();\n      },\n      seeking: function seeking() {\n        return _this.tech_.seeking();\n      },\n      duration: function duration() {\n        return _this.duration();\n      },\n      hasPlayed: function hasPlayed() {\n        return _this.hasPlayed_;\n      },\n      goalBufferLength: function goalBufferLength() {\n        return _this.goalBufferLength();\n      },\n      bandwidth: bandwidth,\n      syncController: _this.syncController_,\n      decrypter: _this.decrypter_,\n      sourceType: _this.sourceType_,\n      inbandTextTracks: _this.inbandTextTracks_,\n      cacheEncryptionKeys: cacheEncryptionKeys,\n      sourceUpdater: _this.sourceUpdater_,\n      timelineChangeController: _this.timelineChangeController_,\n      experimentalExactManifestTimings: options.experimentalExactManifestTimings\n    }; // The source type check not only determines whether a special DASH playlist loader\n    // should be used, but also covers the case where the provided src is a vhs-json\n    // manifest object (instead of a URL). In the case of vhs-json, the default\n    // PlaylistLoader should be used.\n\n    _this.masterPlaylistLoader_ = _this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, _this.vhs_, _this.requestOptions_) : new PlaylistLoader(src, _this.vhs_, _this.requestOptions_);\n\n    _this.setupMasterPlaylistLoaderListeners_(); // setup segment loaders\n    // combined audio/video or just video when alternate audio track is selected\n\n\n    _this.mainSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n      segmentMetadataTrack: _this.segmentMetadataTrack_,\n      loaderType: 'main'\n    }), options); // alternate audio track\n\n    _this.audioSegmentLoader_ = new SegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'audio'\n    }), options);\n    _this.subtitleSegmentLoader_ = new VTTSegmentLoader(videojs.mergeOptions(segmentLoaderSettings, {\n      loaderType: 'vtt',\n      featuresNativeTextTracks: _this.tech_.featuresNativeTextTracks\n    }), options);\n\n    _this.setupSegmentLoaderListeners_();\n\n    if (_this.experimentalBufferBasedABR) {\n      _this.masterPlaylistLoader_.one('loadedplaylist', function () {\n        return _this.startABRTimer_();\n      });\n\n      _this.tech_.on('pause', function () {\n        return _this.stopABRTimer_();\n      });\n\n      _this.tech_.on('play', function () {\n        return _this.startABRTimer_();\n      });\n    } // Create SegmentLoader stat-getters\n    // mediaRequests_\n    // mediaRequestsAborted_\n    // mediaRequestsTimedout_\n    // mediaRequestsErrored_\n    // mediaTransferDuration_\n    // mediaBytesTransferred_\n    // mediaAppends_\n\n\n    loaderStats.forEach(function (stat) {\n      _this[stat + '_'] = sumLoaderStat.bind(_assertThisInitialized(_this), stat);\n    });\n    _this.logger_ = logger('MPC');\n    _this.triggeredFmp4Usage = false;\n\n    if (_this.tech_.preload() === 'none') {\n      _this.loadOnPlay_ = function () {\n        _this.loadOnPlay_ = null;\n\n        _this.masterPlaylistLoader_.load();\n      };\n\n      _this.tech_.one('play', _this.loadOnPlay_);\n    } else {\n      _this.masterPlaylistLoader_.load();\n    }\n\n    _this.timeToLoadedData__ = -1;\n    _this.mainAppendsToLoadedData__ = -1;\n    _this.audioAppendsToLoadedData__ = -1;\n    var event = _this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n    _this.tech_.one(event, function () {\n      var timeToLoadedDataStart = Date.now();\n\n      _this.tech_.one('loadeddata', function () {\n        _this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n        _this.mainAppendsToLoadedData__ = _this.mainSegmentLoader_.mediaAppends;\n        _this.audioAppendsToLoadedData__ = _this.audioSegmentLoader_.mediaAppends;\n      });\n    });\n\n    return _this;\n  }\n\n  var _proto = MasterPlaylistController.prototype;\n\n  _proto.mainAppendsToLoadedData_ = function mainAppendsToLoadedData_() {\n    return this.mainAppendsToLoadedData__;\n  };\n\n  _proto.audioAppendsToLoadedData_ = function audioAppendsToLoadedData_() {\n    return this.audioAppendsToLoadedData__;\n  };\n\n  _proto.appendsToLoadedData_ = function appendsToLoadedData_() {\n    var main = this.mainAppendsToLoadedData_();\n    var audio = this.audioAppendsToLoadedData_();\n\n    if (main === -1 || audio === -1) {\n      return -1;\n    }\n\n    return main + audio;\n  };\n\n  _proto.timeToLoadedData_ = function timeToLoadedData_() {\n    return this.timeToLoadedData__;\n  }\n  /**\n   * Run selectPlaylist and switch to the new playlist if we should\n   *\n   * @private\n   *\n   */\n  ;\n\n  _proto.checkABR_ = function checkABR_() {\n    var nextPlaylist = this.selectPlaylist();\n\n    if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n      this.switchMedia_(nextPlaylist, 'abr');\n    }\n  };\n\n  _proto.switchMedia_ = function switchMedia_(playlist, cause, delay) {\n    var oldMedia = this.media();\n    var oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n    var newId = playlist.id || playlist.uri;\n\n    if (oldId && oldId !== newId) {\n      this.logger_(\"switch media \" + oldId + \" -> \" + newId + \" from \" + cause);\n      this.tech_.trigger({\n        type: 'usage',\n        name: \"vhs-rendition-change-\" + cause\n      });\n    }\n\n    this.masterPlaylistLoader_.media(playlist, delay);\n  }\n  /**\n   * Start a timer that periodically calls checkABR_\n   *\n   * @private\n   */\n  ;\n\n  _proto.startABRTimer_ = function startABRTimer_() {\n    var _this2 = this;\n\n    this.stopABRTimer_();\n    this.abrTimer_ = window$1.setInterval(function () {\n      return _this2.checkABR_();\n    }, 250);\n  }\n  /**\n   * Stop the timer that periodically calls checkABR_\n   *\n   * @private\n   */\n  ;\n\n  _proto.stopABRTimer_ = function stopABRTimer_() {\n    // if we're scrubbing, we don't need to pause.\n    // This getter will be added to Video.js in version 7.11.\n    if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n      return;\n    }\n\n    window$1.clearInterval(this.abrTimer_);\n    this.abrTimer_ = null;\n  }\n  /**\n   * Get a list of playlists for the currently selected audio playlist\n   *\n   * @return {Array} the array of audio playlists\n   */\n  ;\n\n  _proto.getAudioTrackPlaylists_ = function getAudioTrackPlaylists_() {\n    var master = this.master();\n    var defaultPlaylists = master && master.playlists || []; // if we don't have any audio groups then we can only\n    // assume that the audio tracks are contained in masters\n    // playlist array, use that or an empty array.\n\n    if (!master || !master.mediaGroups || !master.mediaGroups.AUDIO) {\n      return defaultPlaylists;\n    }\n\n    var AUDIO = master.mediaGroups.AUDIO;\n    var groupKeys = Object.keys(AUDIO);\n    var track; // get the current active track\n\n    if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n      track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from master if mediaTypes_ isn't setup yet\n    } else {\n      // default group is `main` or just the first group.\n      var defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n\n      for (var label in defaultGroup) {\n        if (defaultGroup[label][\"default\"]) {\n          track = {\n            label: label\n          };\n          break;\n        }\n      }\n    } // no active track no playlists.\n\n\n    if (!track) {\n      return defaultPlaylists;\n    }\n\n    var playlists = []; // get all of the playlists that are possible for the\n    // active track.\n\n    for (var group in AUDIO) {\n      if (AUDIO[group][track.label]) {\n        var properties = AUDIO[group][track.label];\n\n        if (properties.playlists && properties.playlists.length) {\n          playlists.push.apply(playlists, properties.playlists);\n        } else if (properties.uri) {\n          playlists.push(properties);\n        } else if (master.playlists.length) {\n          // if an audio group does not have a uri\n          // see if we have main playlists that use it as a group.\n          // if we do then add those to the playlists list.\n          for (var i = 0; i < master.playlists.length; i++) {\n            var playlist = master.playlists[i];\n\n            if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n              playlists.push(playlist);\n            }\n          }\n        }\n      }\n    }\n\n    if (!playlists.length) {\n      return defaultPlaylists;\n    }\n\n    return playlists;\n  }\n  /**\n   * Register event handlers on the master playlist loader. A helper\n   * function for construction time.\n   *\n   * @private\n   */\n  ;\n\n  _proto.setupMasterPlaylistLoaderListeners_ = function setupMasterPlaylistLoaderListeners_() {\n    var _this3 = this;\n\n    this.masterPlaylistLoader_.on('loadedmetadata', function () {\n      var media = _this3.masterPlaylistLoader_.media();\n\n      var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\n        _this3.requestOptions_.timeout = 0;\n      } else {\n        _this3.requestOptions_.timeout = requestTimeout;\n      } // if this isn't a live video and preload permits, start\n      // downloading segments\n\n\n      if (media.endList && _this3.tech_.preload() !== 'none') {\n        _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\n\n        _this3.mainSegmentLoader_.load();\n      }\n\n      setupMediaGroups({\n        sourceType: _this3.sourceType_,\n        segmentLoaders: {\n          AUDIO: _this3.audioSegmentLoader_,\n          SUBTITLES: _this3.subtitleSegmentLoader_,\n          main: _this3.mainSegmentLoader_\n        },\n        tech: _this3.tech_,\n        requestOptions: _this3.requestOptions_,\n        masterPlaylistLoader: _this3.masterPlaylistLoader_,\n        vhs: _this3.vhs_,\n        master: _this3.master(),\n        mediaTypes: _this3.mediaTypes_,\n        blacklistCurrentPlaylist: _this3.blacklistCurrentPlaylist.bind(_this3)\n      });\n\n      _this3.triggerPresenceUsage_(_this3.master(), media);\n\n      _this3.setupFirstPlay();\n\n      if (!_this3.mediaTypes_.AUDIO.activePlaylistLoader || _this3.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n        _this3.trigger('selectedinitialmedia');\n      } else {\n        // We must wait for the active audio playlist loader to\n        // finish setting up before triggering this event so the\n        // representations API and EME setup is correct\n        _this3.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', function () {\n          _this3.trigger('selectedinitialmedia');\n        });\n      }\n    });\n    this.masterPlaylistLoader_.on('loadedplaylist', function () {\n      if (_this3.loadOnPlay_) {\n        _this3.tech_.off('play', _this3.loadOnPlay_);\n      }\n\n      var updatedPlaylist = _this3.masterPlaylistLoader_.media();\n\n      if (!updatedPlaylist) {\n        // exclude any variants that are not supported by the browser before selecting\n        // an initial media as the playlist selectors do not consider browser support\n        _this3.excludeUnsupportedVariants_();\n\n        var selectedMedia;\n\n        if (_this3.enableLowInitialPlaylist) {\n          selectedMedia = _this3.selectInitialPlaylist();\n        }\n\n        if (!selectedMedia) {\n          selectedMedia = _this3.selectPlaylist();\n        }\n\n        if (!selectedMedia || !_this3.shouldSwitchToMedia_(selectedMedia)) {\n          return;\n        }\n\n        _this3.initialMedia_ = selectedMedia;\n\n        _this3.switchMedia_(_this3.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n        // fire again since the playlist will be requested. In the case of vhs-json\n        // (where the manifest object is provided as the source), when the media\n        // playlist's `segments` list is already available, a media playlist won't be\n        // requested, and loadedplaylist won't fire again, so the playlist handler must be\n        // called on its own here.\n\n\n        var haveJsonSource = _this3.sourceType_ === 'vhs-json' && _this3.initialMedia_.segments;\n\n        if (!haveJsonSource) {\n          return;\n        }\n\n        updatedPlaylist = _this3.initialMedia_;\n      }\n\n      _this3.handleUpdatedMediaPlaylist(updatedPlaylist);\n    });\n    this.masterPlaylistLoader_.on('error', function () {\n      _this3.blacklistCurrentPlaylist(_this3.masterPlaylistLoader_.error);\n    });\n    this.masterPlaylistLoader_.on('mediachanging', function () {\n      _this3.mainSegmentLoader_.abort();\n\n      _this3.mainSegmentLoader_.pause();\n    });\n    this.masterPlaylistLoader_.on('mediachange', function () {\n      var media = _this3.masterPlaylistLoader_.media();\n\n      var requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n      // timeout the request.\n\n      if (isLowestEnabledRendition(_this3.masterPlaylistLoader_.master, _this3.masterPlaylistLoader_.media())) {\n        _this3.requestOptions_.timeout = 0;\n      } else {\n        _this3.requestOptions_.timeout = requestTimeout;\n      } // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `loadedplaylist`\n\n\n      _this3.mainSegmentLoader_.playlist(media, _this3.requestOptions_);\n\n      _this3.mainSegmentLoader_.load();\n\n      _this3.tech_.trigger({\n        type: 'mediachange',\n        bubbles: true\n      });\n    });\n    this.masterPlaylistLoader_.on('playlistunchanged', function () {\n      var updatedPlaylist = _this3.masterPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n      // excluded for not-changing. We likely just have a really slowly updating\n      // playlist.\n\n\n      if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n        return;\n      }\n\n      var playlistOutdated = _this3.stuckAtPlaylistEnd_(updatedPlaylist);\n\n      if (playlistOutdated) {\n        // Playlist has stopped updating and we're stuck at its end. Try to\n        // blacklist it and switch to another playlist in the hope that that\n        // one is updating (and give the player a chance to re-adjust to the\n        // safe live point).\n        _this3.blacklistCurrentPlaylist({\n          message: 'Playlist no longer updating.',\n          reason: 'playlist-unchanged'\n        }); // useful for monitoring QoS\n\n\n        _this3.tech_.trigger('playliststuck');\n      }\n    });\n    this.masterPlaylistLoader_.on('renditiondisabled', function () {\n      _this3.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-disabled'\n      });\n\n      _this3.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-disabled'\n      });\n    });\n    this.masterPlaylistLoader_.on('renditionenabled', function () {\n      _this3.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-enabled'\n      });\n\n      _this3.tech_.trigger({\n        type: 'usage',\n        name: 'hls-rendition-enabled'\n      });\n    });\n  }\n  /**\n   * Given an updated media playlist (whether it was loaded for the first time, or\n   * refreshed for live playlists), update any relevant properties and state to reflect\n   * changes in the media that should be accounted for (e.g., cues and duration).\n   *\n   * @param {Object} updatedPlaylist the updated media playlist object\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleUpdatedMediaPlaylist = function handleUpdatedMediaPlaylist(updatedPlaylist) {\n    if (this.useCueTags_) {\n      this.updateAdCues_(updatedPlaylist);\n    } // TODO: Create a new event on the PlaylistLoader that signals\n    // that the segments have changed in some way and use that to\n    // update the SegmentLoader instead of doing it twice here and\n    // on `mediachange`\n\n\n    this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n    this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n    // as it is possible that it was temporarily stopped while waiting for\n    // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n    if (!this.tech_.paused()) {\n      this.mainSegmentLoader_.load();\n\n      if (this.audioSegmentLoader_) {\n        this.audioSegmentLoader_.load();\n      }\n    }\n  }\n  /**\n   * A helper function for triggerring presence usage events once per source\n   *\n   * @private\n   */\n  ;\n\n  _proto.triggerPresenceUsage_ = function triggerPresenceUsage_(master, media) {\n    var mediaGroups = master.mediaGroups || {};\n    var defaultDemuxed = true;\n    var audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n\n    for (var mediaGroup in mediaGroups.AUDIO) {\n      for (var label in mediaGroups.AUDIO[mediaGroup]) {\n        var properties = mediaGroups.AUDIO[mediaGroup][label];\n\n        if (!properties.uri) {\n          defaultDemuxed = false;\n        }\n      }\n    }\n\n    if (defaultDemuxed) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-demuxed'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-demuxed'\n      });\n    }\n\n    if (Object.keys(mediaGroups.SUBTITLES).length) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-webvtt'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-webvtt'\n      });\n    }\n\n    if (Vhs$1.Playlist.isAes(media)) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-aes'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-aes'\n      });\n    }\n\n    if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-alternate-audio'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-alternate-audio'\n      });\n    }\n\n    if (this.useCueTags_) {\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-playlist-cue-tags'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-playlist-cue-tags'\n      });\n    }\n  };\n\n  _proto.shouldSwitchToMedia_ = function shouldSwitchToMedia_(nextPlaylist) {\n    var currentPlaylist = this.masterPlaylistLoader_.media() || this.masterPlaylistLoader_.pendingMedia_;\n    var currentTime = this.tech_.currentTime();\n    var bufferLowWaterLine = this.bufferLowWaterLine();\n    var bufferHighWaterLine = this.bufferHighWaterLine();\n    var buffered = this.tech_.buffered();\n    return shouldSwitchToMedia({\n      buffered: buffered,\n      currentTime: currentTime,\n      currentPlaylist: currentPlaylist,\n      nextPlaylist: nextPlaylist,\n      bufferLowWaterLine: bufferLowWaterLine,\n      bufferHighWaterLine: bufferHighWaterLine,\n      duration: this.duration(),\n      experimentalBufferBasedABR: this.experimentalBufferBasedABR,\n      log: this.logger_\n    });\n  }\n  /**\n   * Register event handlers on the segment loaders. A helper function\n   * for construction time.\n   *\n   * @private\n   */\n  ;\n\n  _proto.setupSegmentLoaderListeners_ = function setupSegmentLoaderListeners_() {\n    var _this4 = this;\n\n    if (!this.experimentalBufferBasedABR) {\n      this.mainSegmentLoader_.on('bandwidthupdate', function () {\n        var nextPlaylist = _this4.selectPlaylist();\n\n        if (_this4.shouldSwitchToMedia_(nextPlaylist)) {\n          _this4.switchMedia_(nextPlaylist, 'bandwidthupdate');\n        }\n\n        _this4.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('progress', function () {\n        _this4.trigger('progress');\n      });\n    }\n\n    this.mainSegmentLoader_.on('error', function () {\n      _this4.blacklistCurrentPlaylist(_this4.mainSegmentLoader_.error());\n    });\n    this.mainSegmentLoader_.on('appenderror', function () {\n      _this4.error = _this4.mainSegmentLoader_.error_;\n\n      _this4.trigger('error');\n    });\n    this.mainSegmentLoader_.on('syncinfoupdate', function () {\n      _this4.onSyncInfoUpdate_();\n    });\n    this.mainSegmentLoader_.on('timestampoffset', function () {\n      _this4.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-timestamp-offset'\n      });\n\n      _this4.tech_.trigger({\n        type: 'usage',\n        name: 'hls-timestamp-offset'\n      });\n    });\n    this.audioSegmentLoader_.on('syncinfoupdate', function () {\n      _this4.onSyncInfoUpdate_();\n    });\n    this.audioSegmentLoader_.on('appenderror', function () {\n      _this4.error = _this4.audioSegmentLoader_.error_;\n\n      _this4.trigger('error');\n    });\n    this.mainSegmentLoader_.on('ended', function () {\n      _this4.logger_('main segment loader ended');\n\n      _this4.onEndOfStream();\n    });\n    this.mainSegmentLoader_.on('earlyabort', function (event) {\n      // never try to early abort with the new ABR algorithm\n      if (_this4.experimentalBufferBasedABR) {\n        return;\n      }\n\n      _this4.delegateLoaders_('all', ['abort']);\n\n      _this4.blacklistCurrentPlaylist({\n        message: 'Aborted early because there isn\\'t enough bandwidth to complete the ' + 'request without rebuffering.'\n      }, ABORT_EARLY_BLACKLIST_SECONDS);\n    });\n\n    var updateCodecs = function updateCodecs() {\n      if (!_this4.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return _this4.tryToCreateSourceBuffers_();\n      }\n\n      var codecs = _this4.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n\n      if (!codecs) {\n        return;\n      }\n\n      _this4.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n    };\n\n    this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n    this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n    this.mainSegmentLoader_.on('fmp4', function () {\n      if (!_this4.triggeredFmp4Usage) {\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n\n        _this4.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('fmp4', function () {\n      if (!_this4.triggeredFmp4Usage) {\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-fmp4'\n        });\n\n        _this4.tech_.trigger({\n          type: 'usage',\n          name: 'hls-fmp4'\n        });\n\n        _this4.triggeredFmp4Usage = true;\n      }\n    });\n    this.audioSegmentLoader_.on('ended', function () {\n      _this4.logger_('audioSegmentLoader ended');\n\n      _this4.onEndOfStream();\n    });\n  };\n\n  _proto.mediaSecondsLoaded_ = function mediaSecondsLoaded_() {\n    return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n  }\n  /**\n   * Call load on our SegmentLoaders\n   */\n  ;\n\n  _proto.load = function load() {\n    this.mainSegmentLoader_.load();\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.load();\n    }\n\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.load();\n    }\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions without performing destructive actions, like\n   * removing already buffered content\n   *\n   * @private\n   * @deprecated\n   */\n  ;\n\n  _proto.smoothQualityChange_ = function smoothQualityChange_(media) {\n    if (media === void 0) {\n      media = this.selectPlaylist();\n    }\n\n    this.fastQualityChange_(media);\n  }\n  /**\n   * Re-tune playback quality level for the current player\n   * conditions. This method will perform destructive actions like removing\n   * already buffered content in order to readjust the currently active\n   * playlist quickly. This is good for manual quality changes\n   *\n   * @private\n   */\n  ;\n\n  _proto.fastQualityChange_ = function fastQualityChange_(media) {\n    var _this5 = this;\n\n    if (media === void 0) {\n      media = this.selectPlaylist();\n    }\n\n    if (media === this.masterPlaylistLoader_.media()) {\n      this.logger_('skipping fastQualityChange because new media is same as old');\n      return;\n    }\n\n    this.switchMedia_(media, 'fast-quality'); // Delete all buffered data to allow an immediate quality switch, then seek to give\n    // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n    // ahead is roughly the minimum that will accomplish this across a variety of content\n    // in IE and Edge, but seeking in place is sufficient on all other browsers)\n    // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n    // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n    this.mainSegmentLoader_.resetEverything(function () {\n      // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n      // from the previously enabled rendition to load before the new playlist has finished loading\n      if (videojs.browser.IE_VERSION || videojs.browser.IS_EDGE) {\n        _this5.tech_.setCurrentTime(_this5.tech_.currentTime() + 0.04);\n      } else {\n        _this5.tech_.setCurrentTime(_this5.tech_.currentTime());\n      }\n    }); // don't need to reset audio as it is reset when media changes\n  }\n  /**\n   * Begin playback.\n   */\n  ;\n\n  _proto.play = function play() {\n    if (this.setupFirstPlay()) {\n      return;\n    }\n\n    if (this.tech_.ended()) {\n      this.tech_.setCurrentTime(0);\n    }\n\n    if (this.hasPlayed_) {\n      this.load();\n    }\n\n    var seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n    // seek forward to the live point\n\n    if (this.tech_.duration() === Infinity) {\n      if (this.tech_.currentTime() < seekable.start(0)) {\n        return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n      }\n    }\n  }\n  /**\n   * Seek to the latest media position if this is a live video and the\n   * player and video are loaded and initialized.\n   */\n  ;\n\n  _proto.setupFirstPlay = function setupFirstPlay() {\n    var _this6 = this;\n\n    var media = this.masterPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n    //  If 1) there is no active media\n    //     2) the player is paused\n    //     3) the first play has already been setup\n    // then exit early\n\n    if (!media || this.tech_.paused() || this.hasPlayed_) {\n      return false;\n    } // when the video is a live stream\n\n\n    if (!media.endList) {\n      var seekable = this.seekable();\n\n      if (!seekable.length) {\n        // without a seekable range, the player cannot seek to begin buffering at the live\n        // point\n        return false;\n      }\n\n      if (videojs.browser.IE_VERSION && this.tech_.readyState() === 0) {\n        // IE11 throws an InvalidStateError if you try to set currentTime while the\n        // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n        this.tech_.one('loadedmetadata', function () {\n          _this6.trigger('firstplay');\n\n          _this6.tech_.setCurrentTime(seekable.end(0));\n\n          _this6.hasPlayed_ = true;\n        });\n        return false;\n      } // trigger firstplay to inform the source handler to ignore the next seek event\n\n\n      this.trigger('firstplay'); // seek to the live point\n\n      this.tech_.setCurrentTime(seekable.end(0));\n    }\n\n    this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n    this.load();\n    return true;\n  }\n  /**\n   * handle the sourceopen event on the MediaSource\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleSourceOpen_ = function handleSourceOpen_() {\n    // Only attempt to create the source buffer if none already exist.\n    // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n    // after `endOfStream` has been called (in response to a seek for instance)\n    this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n    // code in video.js but is required because play() must be invoked\n    // *after* the media source has opened.\n\n    if (this.tech_.autoplay()) {\n      var playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n      // on browsers which return a promise\n\n      if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n        playPromise.then(null, function (e) {});\n      }\n    }\n\n    this.trigger('sourceopen');\n  }\n  /**\n   * handle the sourceended event on the MediaSource\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleSourceEnded_ = function handleSourceEnded_() {\n    if (!this.inbandTextTracks_.metadataTrack_) {\n      return;\n    }\n\n    var cues = this.inbandTextTracks_.metadataTrack_.cues;\n\n    if (!cues || !cues.length) {\n      return;\n    }\n\n    var duration = this.duration();\n    cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n  }\n  /**\n   * handle the durationchange event on the MediaSource\n   *\n   * @private\n   */\n  ;\n\n  _proto.handleDurationChange_ = function handleDurationChange_() {\n    this.tech_.trigger('durationchange');\n  }\n  /**\n   * Calls endOfStream on the media source when all active stream types have called\n   * endOfStream\n   *\n   * @param {string} streamType\n   *        Stream type of the segment loader that called endOfStream\n   * @private\n   */\n  ;\n\n  _proto.onEndOfStream = function onEndOfStream() {\n    var isEndOfStream = this.mainSegmentLoader_.ended_;\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      var mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n      if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n        // if we do not know if the main segment loader contains video yet or if we\n        // definitively know the main segment loader contains video, then we need to wait\n        // for both main and audio segment loaders to call endOfStream\n        isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n      } else {\n        // otherwise just rely on the audio loader\n        isEndOfStream = this.audioSegmentLoader_.ended_;\n      }\n    }\n\n    if (!isEndOfStream) {\n      return;\n    }\n\n    this.stopABRTimer_();\n    this.sourceUpdater_.endOfStream();\n  }\n  /**\n   * Check if a playlist has stopped being updated\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist has stopped being updated or not\n   */\n  ;\n\n  _proto.stuckAtPlaylistEnd_ = function stuckAtPlaylistEnd_(playlist) {\n    var seekable = this.seekable();\n\n    if (!seekable.length) {\n      // playlist doesn't have enough information to determine whether we are stuck\n      return false;\n    }\n\n    var expired = this.syncController_.getExpiredTime(playlist, this.duration());\n\n    if (expired === null) {\n      return false;\n    } // does not use the safe live end to calculate playlist end, since we\n    // don't want to say we are stuck while there is still content\n\n\n    var absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n\n    if (!buffered.length) {\n      // return true if the playhead reached the absolute end of the playlist\n      return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n    }\n\n    var bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n    // end of playlist\n\n    return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n  }\n  /**\n   * Blacklists a playlist when an error occurs for a set amount of time\n   * making it unavailable for selection by the rendition selection algorithm\n   * and then forces a new playlist (rendition) selection.\n   *\n   * @param {Object=} error an optional error that may include the playlist\n   * to blacklist\n   * @param {number=} blacklistDuration an optional number of seconds to blacklist the\n   * playlist\n   */\n  ;\n\n  _proto.blacklistCurrentPlaylist = function blacklistCurrentPlaylist(error, blacklistDuration) {\n    if (error === void 0) {\n      error = {};\n    } // If the `error` was generated by the playlist loader, it will contain\n    // the playlist we were trying to load (but failed) and that should be\n    // blacklisted instead of the currently selected playlist which is likely\n    // out-of-date in this scenario\n\n\n    var currentPlaylist = error.playlist || this.masterPlaylistLoader_.media();\n    blacklistDuration = blacklistDuration || error.blacklistDuration || this.blacklistDuration; // If there is no current playlist, then an error occurred while we were\n    // trying to load the master OR while we were disposing of the tech\n\n    if (!currentPlaylist) {\n      this.error = error;\n\n      if (this.mediaSource.readyState !== 'open') {\n        this.trigger('error');\n      } else {\n        this.sourceUpdater_.endOfStream('network');\n      }\n\n      return;\n    }\n\n    currentPlaylist.playlistErrors_++;\n    var playlists = this.masterPlaylistLoader_.master.playlists;\n    var enabledPlaylists = playlists.filter(isEnabled);\n    var isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === currentPlaylist; // Don't blacklist the only playlist unless it was blacklisted\n    // forever\n\n    if (playlists.length === 1 && blacklistDuration !== Infinity) {\n      videojs.log.warn(\"Problem encountered with playlist \" + currentPlaylist.id + \". \" + 'Trying again since it is the only playlist.');\n      this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n      return this.masterPlaylistLoader_.load(isFinalRendition);\n    }\n\n    if (isFinalRendition) {\n      // Since we're on the final non-blacklisted playlist, and we're about to blacklist\n      // it, instead of erring the player or retrying this playlist, clear out the current\n      // blacklist. This allows other playlists to be attempted in case any have been\n      // fixed.\n      var reincluded = false;\n      playlists.forEach(function (playlist) {\n        // skip current playlist which is about to be blacklisted\n        if (playlist === currentPlaylist) {\n          return;\n        }\n\n        var excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n        if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n          reincluded = true;\n          delete playlist.excludeUntil;\n        }\n      });\n\n      if (reincluded) {\n        videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n        // playlist. This is needed for users relying on the retryplaylist event to catch a\n        // case where the player might be stuck and looping through \"dead\" playlists.\n\n        this.tech_.trigger('retryplaylist');\n      }\n    } // Blacklist this playlist\n\n\n    var excludeUntil;\n\n    if (currentPlaylist.playlistErrors_ > this.maxPlaylistRetries) {\n      excludeUntil = Infinity;\n    } else {\n      excludeUntil = Date.now() + blacklistDuration * 1000;\n    }\n\n    currentPlaylist.excludeUntil = excludeUntil;\n\n    if (error.reason) {\n      currentPlaylist.lastExcludeReason_ = error.reason;\n    }\n\n    this.tech_.trigger('blacklistplaylist');\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-rendition-blacklisted'\n    });\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'hls-rendition-blacklisted'\n    }); // TODO: should we select a new playlist if this blacklist wasn't for the currentPlaylist?\n    // Would be something like media().id !=== currentPlaylist.id and we  would need something\n    // like `pendingMedia` in playlist loaders to check against that too. This will prevent us\n    // from loading a new playlist on any blacklist.\n    // Select a new playlist\n\n    var nextPlaylist = this.selectPlaylist();\n\n    if (!nextPlaylist) {\n      this.error = 'Playback cannot continue. No available working or supported playlists.';\n      this.trigger('error');\n      return;\n    }\n\n    var logFn = error.internal ? this.logger_ : videojs.log.warn;\n    var errorMessage = error.message ? ' ' + error.message : '';\n    logFn((error.internal ? 'Internal problem' : 'Problem') + \" encountered with playlist \" + currentPlaylist.id + \".\" + (errorMessage + \" Switching to playlist \" + nextPlaylist.id + \".\")); // if audio group changed reset audio loaders\n\n    if (nextPlaylist.attributes.AUDIO !== currentPlaylist.attributes.AUDIO) {\n      this.delegateLoaders_('audio', ['abort', 'pause']);\n    } // if subtitle group changed reset subtitle loaders\n\n\n    if (nextPlaylist.attributes.SUBTITLES !== currentPlaylist.attributes.SUBTITLES) {\n      this.delegateLoaders_('subtitle', ['abort', 'pause']);\n    }\n\n    this.delegateLoaders_('main', ['abort', 'pause']);\n    var delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n    var shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n    return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n  }\n  /**\n   * Pause all segment/playlist loaders\n   */\n  ;\n\n  _proto.pauseLoading = function pauseLoading() {\n    this.delegateLoaders_('all', ['abort', 'pause']);\n    this.stopABRTimer_();\n  }\n  /**\n   * Call a set of functions in order on playlist loaders, segment loaders,\n   * or both types of loaders.\n   *\n   * @param {string} filter\n   *        Filter loaders that should call fnNames using a string. Can be:\n   *        * all - run on all loaders\n   *        * audio - run on all audio loaders\n   *        * subtitle - run on all subtitle loaders\n   *        * main - run on the main/master loaders\n   *\n   * @param {Array|string} fnNames\n   *        A string or array of function names to call.\n   */\n  ;\n\n  _proto.delegateLoaders_ = function delegateLoaders_(filter, fnNames) {\n    var _this7 = this;\n\n    var loaders = [];\n    var dontFilterPlaylist = filter === 'all';\n\n    if (dontFilterPlaylist || filter === 'main') {\n      loaders.push(this.masterPlaylistLoader_);\n    }\n\n    var mediaTypes = [];\n\n    if (dontFilterPlaylist || filter === 'audio') {\n      mediaTypes.push('AUDIO');\n    }\n\n    if (dontFilterPlaylist || filter === 'subtitle') {\n      mediaTypes.push('CLOSED-CAPTIONS');\n      mediaTypes.push('SUBTITLES');\n    }\n\n    mediaTypes.forEach(function (mediaType) {\n      var loader = _this7.mediaTypes_[mediaType] && _this7.mediaTypes_[mediaType].activePlaylistLoader;\n\n      if (loader) {\n        loaders.push(loader);\n      }\n    });\n    ['main', 'audio', 'subtitle'].forEach(function (name) {\n      var loader = _this7[name + \"SegmentLoader_\"];\n\n      if (loader && (filter === name || filter === 'all')) {\n        loaders.push(loader);\n      }\n    });\n    loaders.forEach(function (loader) {\n      return fnNames.forEach(function (fnName) {\n        if (typeof loader[fnName] === 'function') {\n          loader[fnName]();\n        }\n      });\n    });\n  }\n  /**\n   * set the current time on all segment loaders\n   *\n   * @param {TimeRange} currentTime the current time to set\n   * @return {TimeRange} the current time\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(currentTime) {\n    var buffered = findRange(this.tech_.buffered(), currentTime);\n\n    if (!(this.masterPlaylistLoader_ && this.masterPlaylistLoader_.media())) {\n      // return immediately if the metadata is not ready yet\n      return 0;\n    } // it's clearly an edge-case but don't thrown an error if asked to\n    // seek within an empty playlist\n\n\n    if (!this.masterPlaylistLoader_.media().segments) {\n      return 0;\n    } // if the seek location is already buffered, continue buffering as usual\n\n\n    if (buffered && buffered.length) {\n      return currentTime;\n    } // cancel outstanding requests so we begin buffering at the new\n    // location\n\n\n    this.mainSegmentLoader_.resetEverything();\n    this.mainSegmentLoader_.abort();\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      this.audioSegmentLoader_.resetEverything();\n      this.audioSegmentLoader_.abort();\n    }\n\n    if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n      this.subtitleSegmentLoader_.resetEverything();\n      this.subtitleSegmentLoader_.abort();\n    } // start segment loader loading in case they are paused\n\n\n    this.load();\n  }\n  /**\n   * get the current duration\n   *\n   * @return {TimeRange} the duration\n   */\n  ;\n\n  _proto.duration = function duration() {\n    if (!this.masterPlaylistLoader_) {\n      return 0;\n    }\n\n    var media = this.masterPlaylistLoader_.media();\n\n    if (!media) {\n      // no playlists loaded yet, so can't determine a duration\n      return 0;\n    } // Don't rely on the media source for duration in the case of a live playlist since\n    // setting the native MediaSource's duration to infinity ends up with consequences to\n    // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n    //\n    // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n    // however, few browsers have support for setLiveSeekableRange()\n    // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n    //\n    // Until a time when the duration of the media source can be set to infinity, and a\n    // seekable range specified across browsers, just return Infinity.\n\n\n    if (!media.endList) {\n      return Infinity;\n    } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n    // available). If it's not available, fall back to a playlist-calculated estimate.\n\n\n    if (this.mediaSource) {\n      return this.mediaSource.duration;\n    }\n\n    return Vhs$1.Playlist.duration(media);\n  }\n  /**\n   * check the seekable range\n   *\n   * @return {TimeRange} the seekable range\n   */\n  ;\n\n  _proto.seekable = function seekable() {\n    return this.seekable_;\n  };\n\n  _proto.onSyncInfoUpdate_ = function onSyncInfoUpdate_() {\n    var audioSeekable; // TODO check for creation of both source buffers before updating seekable\n    //\n    // A fix was made to this function where a check for\n    // this.sourceUpdater_.hasCreatedSourceBuffers\n    // was added to ensure that both source buffers were created before seekable was\n    // updated. However, it originally had a bug where it was checking for a true and\n    // returning early instead of checking for false. Setting it to check for false to\n    // return early though created other issues. A call to play() would check for seekable\n    // end without verifying that a seekable range was present. In addition, even checking\n    // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n    // due to a media update calling load on the segment loaders, skipping a seek to live,\n    // thereby starting live streams at the beginning of the stream rather than at the end.\n    //\n    // This conditional should be fixed to wait for the creation of two source buffers at\n    // the same time as the other sections of code are fixed to properly seek to live and\n    // not throw an error due to checking for a seekable end when no seekable range exists.\n    //\n    // For now, fall back to the older behavior, with the understanding that the seekable\n    // range may not be completely correct, leading to a suboptimal initial live point.\n\n    if (!this.masterPlaylistLoader_) {\n      return;\n    }\n\n    var media = this.masterPlaylistLoader_.media();\n\n    if (!media) {\n      return;\n    }\n\n    var expired = this.syncController_.getExpiredTime(media, this.duration());\n\n    if (expired === null) {\n      // not enough information to update seekable\n      return;\n    }\n\n    var master = this.masterPlaylistLoader_.master;\n    var mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\n\n    if (mainSeekable.length === 0) {\n      return;\n    }\n\n    if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n      media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n      expired = this.syncController_.getExpiredTime(media, this.duration());\n\n      if (expired === null) {\n        return;\n      }\n\n      audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(master, media));\n\n      if (audioSeekable.length === 0) {\n        return;\n      }\n    }\n\n    var oldEnd;\n    var oldStart;\n\n    if (this.seekable_ && this.seekable_.length) {\n      oldEnd = this.seekable_.end(0);\n      oldStart = this.seekable_.start(0);\n    }\n\n    if (!audioSeekable) {\n      // seekable has been calculated based on buffering video data so it\n      // can be returned directly\n      this.seekable_ = mainSeekable;\n    } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n      // seekables are pretty far off, rely on main\n      this.seekable_ = mainSeekable;\n    } else {\n      this.seekable_ = videojs.createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n    } // seekable is the same as last time\n\n\n    if (this.seekable_ && this.seekable_.length) {\n      if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n        return;\n      }\n    }\n\n    this.logger_(\"seekable updated [\" + printableRange(this.seekable_) + \"]\");\n    this.tech_.trigger('seekablechanged');\n  }\n  /**\n   * Update the player duration\n   */\n  ;\n\n  _proto.updateDuration = function updateDuration(isLive) {\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      this.updateDuration_ = null;\n    }\n\n    if (this.mediaSource.readyState !== 'open') {\n      this.updateDuration_ = this.updateDuration.bind(this, isLive);\n      this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n      return;\n    }\n\n    if (isLive) {\n      var seekable = this.seekable();\n\n      if (!seekable.length) {\n        return;\n      } // Even in the case of a live playlist, the native MediaSource's duration should not\n      // be set to Infinity (even though this would be expected for a live playlist), since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, the duration should be greater than or\n      // equal to the last possible seekable value.\n      // MediaSource duration starts as NaN\n      // It is possible (and probable) that this case will never be reached for many\n      // sources, since the MediaSource reports duration as the highest value without\n      // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n      // we buffered times 0 to 100 with real times of 100 to 200, even though current\n      // time will be between 0 and 100, the native media source may report the duration\n      // as 200. However, since we report duration separate from the media source (as\n      // Infinity), and as long as the native media source duration value is greater than\n      // our reported seekable range, seeks will work as expected. The large number as\n      // duration for live is actually a strategy used by some players to work around the\n      // issue of live seekable ranges cited above.\n\n\n      if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n        this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n      }\n\n      return;\n    }\n\n    var buffered = this.tech_.buffered();\n    var duration = Vhs$1.Playlist.duration(this.masterPlaylistLoader_.media());\n\n    if (buffered.length > 0) {\n      duration = Math.max(duration, buffered.end(buffered.length - 1));\n    }\n\n    if (this.mediaSource.duration !== duration) {\n      this.sourceUpdater_.setDuration(duration);\n    }\n  }\n  /**\n   * dispose of the MasterPlaylistController and everything\n   * that it controls\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    var _this8 = this;\n\n    this.trigger('dispose');\n    this.decrypter_.terminate();\n    this.masterPlaylistLoader_.dispose();\n    this.mainSegmentLoader_.dispose();\n\n    if (this.loadOnPlay_) {\n      this.tech_.off('play', this.loadOnPlay_);\n    }\n\n    ['AUDIO', 'SUBTITLES'].forEach(function (type) {\n      var groups = _this8.mediaTypes_[type].groups;\n\n      for (var id in groups) {\n        groups[id].forEach(function (group) {\n          if (group.playlistLoader) {\n            group.playlistLoader.dispose();\n          }\n        });\n      }\n    });\n    this.audioSegmentLoader_.dispose();\n    this.subtitleSegmentLoader_.dispose();\n    this.sourceUpdater_.dispose();\n    this.timelineChangeController_.dispose();\n    this.stopABRTimer_();\n\n    if (this.updateDuration_) {\n      this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n    }\n\n    this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n    this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n    this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n    this.off();\n  }\n  /**\n   * return the master playlist object if we have one\n   *\n   * @return {Object} the master playlist object that we parsed\n   */\n  ;\n\n  _proto.master = function master() {\n    return this.masterPlaylistLoader_.master;\n  }\n  /**\n   * return the currently selected playlist\n   *\n   * @return {Object} the currently selected playlist object that we parsed\n   */\n  ;\n\n  _proto.media = function media() {\n    // playlist loader will not return media if it has not been fully loaded\n    return this.masterPlaylistLoader_.media() || this.initialMedia_;\n  };\n\n  _proto.areMediaTypesKnown_ = function areMediaTypesKnown_() {\n    var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n    var hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n    // otherwise check on the segment loader.\n\n    var hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n    if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n      return false;\n    }\n\n    return true;\n  };\n\n  _proto.getCodecsOrExclude_ = function getCodecsOrExclude_() {\n    var _this9 = this;\n\n    var media = {\n      main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n      audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n    }; // set \"main\" media equal to video\n\n    media.video = media.main;\n    var playlistCodecs = codecsForPlaylist(this.master(), this.media());\n    var codecs = {};\n    var usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n\n    if (media.main.hasVideo) {\n      codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n    }\n\n    if (media.main.isMuxed) {\n      codecs.video += \",\" + (playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC);\n    }\n\n    if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n      codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n      media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n    } // no codecs, no playback.\n\n\n    if (!codecs.audio && !codecs.video) {\n      this.blacklistCurrentPlaylist({\n        playlist: this.media(),\n        message: 'Could not determine codecs for playlist.',\n        blacklistDuration: Infinity\n      });\n      return;\n    } // fmp4 relies on browser support, while ts relies on muxer support\n\n\n    var supportFunction = function supportFunction(isFmp4, codec) {\n      return isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n    };\n\n    var unsupportedCodecs = {};\n    var unsupportedAudio;\n    ['video', 'audio'].forEach(function (type) {\n      if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n        var supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n        unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n        unsupportedCodecs[supporter].push(codecs[type]);\n\n        if (type === 'audio') {\n          unsupportedAudio = supporter;\n        }\n      }\n    });\n\n    if (usingAudioLoader && unsupportedAudio && this.media().attributes.AUDIO) {\n      var audioGroup = this.media().attributes.AUDIO;\n      this.master().playlists.forEach(function (variant) {\n        var variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n\n        if (variantAudioGroup === audioGroup && variant !== _this9.media()) {\n          variant.excludeUntil = Infinity;\n        }\n      });\n      this.logger_(\"excluding audio group \" + audioGroup + \" as \" + unsupportedAudio + \" does not support codec(s): \\\"\" + codecs.audio + \"\\\"\");\n    } // if we have any unsupported codecs blacklist this playlist.\n\n\n    if (Object.keys(unsupportedCodecs).length) {\n      var message = Object.keys(unsupportedCodecs).reduce(function (acc, supporter) {\n        if (acc) {\n          acc += ', ';\n        }\n\n        acc += supporter + \" does not support codec(s): \\\"\" + unsupportedCodecs[supporter].join(',') + \"\\\"\";\n        return acc;\n      }, '') + '.';\n      this.blacklistCurrentPlaylist({\n        playlist: this.media(),\n        internal: true,\n        message: message,\n        blacklistDuration: Infinity\n      });\n      return;\n    } // check if codec switching is happening\n\n\n    if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n      var switchMessages = [];\n      ['video', 'audio'].forEach(function (type) {\n        var newCodec = (parseCodecs(_this9.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n        var oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n\n        if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n          switchMessages.push(\"\\\"\" + _this9.sourceUpdater_.codecs[type] + \"\\\" -> \\\"\" + codecs[type] + \"\\\"\");\n        }\n      });\n\n      if (switchMessages.length) {\n        this.blacklistCurrentPlaylist({\n          playlist: this.media(),\n          message: \"Codec switching not supported: \" + switchMessages.join(', ') + \".\",\n          blacklistDuration: Infinity,\n          internal: true\n        });\n        return;\n      }\n    } // TODO: when using the muxer shouldn't we just return\n    // the codecs that the muxer outputs?\n\n\n    return codecs;\n  }\n  /**\n   * Create source buffers and exlude any incompatible renditions.\n   *\n   * @private\n   */\n  ;\n\n  _proto.tryToCreateSourceBuffers_ = function tryToCreateSourceBuffers_() {\n    // media source is not ready yet or sourceBuffers are already\n    // created.\n    if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n      return;\n    }\n\n    if (!this.areMediaTypesKnown_()) {\n      return;\n    }\n\n    var codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n    if (!codecs) {\n      return;\n    }\n\n    this.sourceUpdater_.createSourceBuffers(codecs);\n    var codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n    this.excludeIncompatibleVariants_(codecString);\n  }\n  /**\n   * Excludes playlists with codecs that are unsupported by the muxer and browser.\n   */\n  ;\n\n  _proto.excludeUnsupportedVariants_ = function excludeUnsupportedVariants_() {\n    var _this10 = this;\n\n    var playlists = this.master().playlists;\n    var ids = []; // TODO: why don't we have a property to loop through all\n    // playlist? Why did we ever mix indexes and keys?\n\n    Object.keys(playlists).forEach(function (key) {\n      var variant = playlists[key]; // check if we already processed this playlist.\n\n      if (ids.indexOf(variant.id) !== -1) {\n        return;\n      }\n\n      ids.push(variant.id);\n      var codecs = codecsForPlaylist(_this10.master, variant);\n      var unsupported = [];\n\n      if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n        unsupported.push(\"audio codec \" + codecs.audio);\n      }\n\n      if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n        unsupported.push(\"video codec \" + codecs.video);\n      }\n\n      if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n        unsupported.push(\"text codec \" + codecs.text);\n      }\n\n      if (unsupported.length) {\n        variant.excludeUntil = Infinity;\n\n        _this10.logger_(\"excluding \" + variant.id + \" for unsupported: \" + unsupported.join(', '));\n      }\n    });\n  }\n  /**\n   * Blacklist playlists that are known to be codec or\n   * stream-incompatible with the SourceBuffer configuration. For\n   * instance, Media Source Extensions would cause the video element to\n   * stall waiting for video data if you switched from a variant with\n   * video and audio to an audio-only one.\n   *\n   * @param {Object} media a media playlist compatible with the current\n   * set of SourceBuffers. Variants in the current master playlist that\n   * do not appear to have compatible codec or stream configurations\n   * will be excluded from the default playlist selection algorithm\n   * indefinitely.\n   * @private\n   */\n  ;\n\n  _proto.excludeIncompatibleVariants_ = function excludeIncompatibleVariants_(codecString) {\n    var _this11 = this;\n\n    var ids = [];\n    var playlists = this.master().playlists;\n    var codecs = unwrapCodecList(parseCodecs(codecString));\n    var codecCount_ = codecCount(codecs);\n    var videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n    var audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n    Object.keys(playlists).forEach(function (key) {\n      var variant = playlists[key]; // check if we already processed this playlist.\n      // or it if it is already excluded forever.\n\n      if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n        return;\n      }\n\n      ids.push(variant.id);\n      var blacklistReasons = []; // get codecs from the playlist for this variant\n\n      var variantCodecs = codecsForPlaylist(_this11.masterPlaylistLoader_.master, variant);\n      var variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n      // variant is incompatible. Wait for mux.js to probe\n\n      if (!variantCodecs.audio && !variantCodecs.video) {\n        return;\n      } // TODO: we can support this by removing the\n      // old media source and creating a new one, but it will take some work.\n      // The number of streams cannot change\n\n\n      if (variantCodecCount !== codecCount_) {\n        blacklistReasons.push(\"codec count \\\"\" + variantCodecCount + \"\\\" !== \\\"\" + codecCount_ + \"\\\"\");\n      } // only exclude playlists by codec change, if codecs cannot switch\n      // during playback.\n\n\n      if (!_this11.sourceUpdater_.canChangeType()) {\n        var variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n        var variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n        if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n          blacklistReasons.push(\"video codec \\\"\" + variantVideoDetails.type + \"\\\" !== \\\"\" + videoDetails.type + \"\\\"\");\n        } // the audio codec cannot change\n\n\n        if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n          blacklistReasons.push(\"audio codec \\\"\" + variantAudioDetails.type + \"\\\" !== \\\"\" + audioDetails.type + \"\\\"\");\n        }\n      }\n\n      if (blacklistReasons.length) {\n        variant.excludeUntil = Infinity;\n\n        _this11.logger_(\"blacklisting \" + variant.id + \": \" + blacklistReasons.join(' && '));\n      }\n    });\n  };\n\n  _proto.updateAdCues_ = function updateAdCues_(media) {\n    var offset = 0;\n    var seekable = this.seekable();\n\n    if (seekable.length) {\n      offset = seekable.start(0);\n    }\n\n    updateAdCues(media, this.cueTagsTrack_, offset);\n  }\n  /**\n   * Calculates the desired forward buffer length based on current time\n   *\n   * @return {number} Desired forward buffer length in seconds\n   */\n  ;\n\n  _proto.goalBufferLength = function goalBufferLength() {\n    var currentTime = this.tech_.currentTime();\n    var initial = Config.GOAL_BUFFER_LENGTH;\n    var rate = Config.GOAL_BUFFER_LENGTH_RATE;\n    var max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n    return Math.min(initial + currentTime * rate, max);\n  }\n  /**\n   * Calculates the desired buffer low water line based on current time\n   *\n   * @return {number} Desired buffer low water line in seconds\n   */\n  ;\n\n  _proto.bufferLowWaterLine = function bufferLowWaterLine() {\n    var currentTime = this.tech_.currentTime();\n    var initial = Config.BUFFER_LOW_WATER_LINE;\n    var rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n    var max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n    var newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n    return Math.min(initial + currentTime * rate, this.experimentalBufferBasedABR ? newMax : max);\n  };\n\n  _proto.bufferHighWaterLine = function bufferHighWaterLine() {\n    return Config.BUFFER_HIGH_WATER_LINE;\n  };\n\n  return MasterPlaylistController;\n}(videojs.EventTarget);\n/**\n * Returns a function that acts as the Enable/disable playlist function.\n *\n * @param {PlaylistLoader} loader - The master playlist loader\n * @param {string} playlistID - id of the playlist\n * @param {Function} changePlaylistFn - A function to be called after a\n * playlist's enabled-state has been changed. Will NOT be called if a\n * playlist's enabled-state is unchanged\n * @param {boolean=} enable - Value to set the playlist enabled-state to\n * or if undefined returns the current enabled-state for the playlist\n * @return {Function} Function for setting/getting enabled\n */\n\n\nvar enableFunction = function enableFunction(loader, playlistID, changePlaylistFn) {\n  return function (enable) {\n    var playlist = loader.master.playlists[playlistID];\n    var incompatible = isIncompatible(playlist);\n    var currentlyEnabled = isEnabled(playlist);\n\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n\n    return enable;\n  };\n};\n/**\n * The representation object encapsulates the publicly visible information\n * in a media playlist along with a setter/getter-type function (enabled)\n * for changing the enabled-state of a particular playlist entry\n *\n * @class Representation\n */\n\n\nvar Representation = function Representation(vhsHandler, playlist, id) {\n  var mpc = vhsHandler.masterPlaylistController_,\n      smoothQualityChange = vhsHandler.options_.smoothQualityChange; // Get a reference to a bound version of the quality change function\n\n  var changeType = smoothQualityChange ? 'smooth' : 'fast';\n  var qualityChangeFunction = mpc[changeType + \"QualityChange_\"].bind(mpc); // some playlist attributes are optional\n\n  if (playlist.attributes) {\n    var resolution = playlist.attributes.RESOLUTION;\n    this.width = resolution && resolution.width;\n    this.height = resolution && resolution.height;\n    this.bandwidth = playlist.attributes.BANDWIDTH;\n  }\n\n  this.codecs = codecsForPlaylist(mpc.master(), playlist);\n  this.playlist = playlist; // The id is simply the ordinality of the media playlist\n  // within the master playlist\n\n  this.id = id; // Partially-apply the enableFunction to create a playlist-\n  // specific variant\n\n  this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n};\n/**\n * A mixin function that adds the `representations` api to an instance\n * of the VhsHandler class\n *\n * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n * representation API into\n */\n\n\nvar renditionSelectionMixin = function renditionSelectionMixin(vhsHandler) {\n  // Add a single API-specific function to the VhsHandler instance\n  vhsHandler.representations = function () {\n    var master = vhsHandler.masterPlaylistController_.master();\n    var playlists = isAudioOnly(master) ? vhsHandler.masterPlaylistController_.getAudioTrackPlaylists_() : master.playlists;\n\n    if (!playlists) {\n      return [];\n    }\n\n    return playlists.filter(function (media) {\n      return !isIncompatible(media);\n    }).map(function (e, i) {\n      return new Representation(vhsHandler, e, e.id);\n    });\n  };\n};\n/**\n * @file playback-watcher.js\n *\n * Playback starts, and now my watch begins. It shall not end until my death. I shall\n * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n * my life and honor to the Playback Watch, for this Player and all the Players to come.\n */\n\n\nvar timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n/**\n * @class PlaybackWatcher\n */\n\nvar PlaybackWatcher = /*#__PURE__*/function () {\n  /**\n   * Represents an PlaybackWatcher object.\n   *\n   * @class\n   * @param {Object} options an object that includes the tech and settings\n   */\n  function PlaybackWatcher(options) {\n    var _this = this;\n\n    this.masterPlaylistController_ = options.masterPlaylistController;\n    this.tech_ = options.tech;\n    this.seekable = options.seekable;\n    this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n    this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n    this.media = options.media;\n    this.consecutiveUpdates = 0;\n    this.lastRecordedTime = null;\n    this.timer_ = null;\n    this.checkCurrentTimeTimeout_ = null;\n    this.logger_ = logger('PlaybackWatcher');\n    this.logger_('initialize');\n\n    var playHandler = function playHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var canPlayHandler = function canPlayHandler() {\n      return _this.monitorCurrentTime_();\n    };\n\n    var waitingHandler = function waitingHandler() {\n      return _this.techWaiting_();\n    };\n\n    var cancelTimerHandler = function cancelTimerHandler() {\n      return _this.cancelTimer_();\n    };\n\n    var mpc = this.masterPlaylistController_;\n    var loaderTypes = ['main', 'subtitle', 'audio'];\n    var loaderChecks = {};\n    loaderTypes.forEach(function (type) {\n      loaderChecks[type] = {\n        reset: function reset() {\n          return _this.resetSegmentDownloads_(type);\n        },\n        updateend: function updateend() {\n          return _this.checkSegmentDownloads_(type);\n        }\n      };\n      mpc[type + \"SegmentLoader_\"].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n      // isn't changing we want to reset. We cannot assume that the new rendition\n      // will also be stalled, until after new appends.\n\n      mpc[type + \"SegmentLoader_\"].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n      // This prevents one segment playlists (single vtt or single segment content)\n      // from being detected as stalling. As the buffer will not change in those cases, since\n      // the buffer is the entire video duration.\n\n      _this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n    });\n    /**\n     * We check if a seek was into a gap through the following steps:\n     * 1. We get a seeking event and we do not get a seeked event. This means that\n     *    a seek was attempted but not completed.\n     * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n     *    removed everything from our buffer and appended a segment, and should be ready\n     *    to check for gaps.\n     */\n\n    var setSeekingHandlers = function setSeekingHandlers(fn) {\n      ['main', 'audio'].forEach(function (type) {\n        mpc[type + \"SegmentLoader_\"][fn]('appended', _this.seekingAppendCheck_);\n      });\n    };\n\n    this.seekingAppendCheck_ = function () {\n      if (_this.fixesBadSeeks_()) {\n        _this.consecutiveUpdates = 0;\n        _this.lastRecordedTime = _this.tech_.currentTime();\n        setSeekingHandlers('off');\n      }\n    };\n\n    this.clearSeekingAppendCheck_ = function () {\n      return setSeekingHandlers('off');\n    };\n\n    this.watchForBadSeeking_ = function () {\n      _this.clearSeekingAppendCheck_();\n\n      setSeekingHandlers('on');\n    };\n\n    this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n    this.tech_.on('seeking', this.watchForBadSeeking_);\n    this.tech_.on('waiting', waitingHandler);\n    this.tech_.on(timerCancelEvents, cancelTimerHandler);\n    this.tech_.on('canplay', canPlayHandler);\n    /*\n      An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n      is surfaced in one of two ways:\n       1)  The `waiting` event is fired before the player has buffered content, making it impossible\n          to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n          we can check if playback is stalled due to a gap, and skip the gap if necessary.\n      2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n          is in a playing state. To catch this case, it's important that our one-time play listener is setup\n          even if the player is in a playing state\n    */\n\n    this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n    this.dispose = function () {\n      _this.clearSeekingAppendCheck_();\n\n      _this.logger_('dispose');\n\n      _this.tech_.off('waiting', waitingHandler);\n\n      _this.tech_.off(timerCancelEvents, cancelTimerHandler);\n\n      _this.tech_.off('canplay', canPlayHandler);\n\n      _this.tech_.off('play', playHandler);\n\n      _this.tech_.off('seeking', _this.watchForBadSeeking_);\n\n      _this.tech_.off('seeked', _this.clearSeekingAppendCheck_);\n\n      loaderTypes.forEach(function (type) {\n        mpc[type + \"SegmentLoader_\"].off('appendsdone', loaderChecks[type].updateend);\n        mpc[type + \"SegmentLoader_\"].off('playlistupdate', loaderChecks[type].reset);\n\n        _this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n\n      if (_this.checkCurrentTimeTimeout_) {\n        window$1.clearTimeout(_this.checkCurrentTimeTimeout_);\n      }\n\n      _this.cancelTimer_();\n    };\n  }\n  /**\n   * Periodically check current time to see if playback stopped\n   *\n   * @private\n   */\n\n\n  var _proto = PlaybackWatcher.prototype;\n\n  _proto.monitorCurrentTime_ = function monitorCurrentTime_() {\n    this.checkCurrentTime_();\n\n    if (this.checkCurrentTimeTimeout_) {\n      window$1.clearTimeout(this.checkCurrentTimeTimeout_);\n    } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n\n    this.checkCurrentTimeTimeout_ = window$1.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n  }\n  /**\n   * Reset stalled download stats for a specific type of loader\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#playlistupdate\n   * @listens Tech#seeking\n   * @listens Tech#seeked\n   */\n  ;\n\n  _proto.resetSegmentDownloads_ = function resetSegmentDownloads_(type) {\n    var loader = this.masterPlaylistController_[type + \"SegmentLoader_\"];\n\n    if (this[type + \"StalledDownloads_\"] > 0) {\n      this.logger_(\"resetting possible stalled download count for \" + type + \" loader\");\n    }\n\n    this[type + \"StalledDownloads_\"] = 0;\n    this[type + \"Buffered_\"] = loader.buffered_();\n  }\n  /**\n   * Checks on every segment `appendsdone` to see\n   * if segment appends are making progress. If they are not\n   * and we are still downloading bytes. We blacklist the playlist.\n   *\n   * @param {string} type\n   *        The segment loader type to check.\n   *\n   * @listens SegmentLoader#appendsdone\n   */\n  ;\n\n  _proto.checkSegmentDownloads_ = function checkSegmentDownloads_(type) {\n    var mpc = this.masterPlaylistController_;\n    var loader = mpc[type + \"SegmentLoader_\"];\n    var buffered = loader.buffered_();\n    var isBufferedDifferent = isRangeDifferent(this[type + \"Buffered_\"], buffered);\n    this[type + \"Buffered_\"] = buffered; // if another watcher is going to fix the issue or\n    // the buffered value for this loader changed\n    // appends are working\n\n    if (isBufferedDifferent) {\n      this.resetSegmentDownloads_(type);\n      return;\n    }\n\n    this[type + \"StalledDownloads_\"]++;\n    this.logger_(\"found #\" + this[type + \"StalledDownloads_\"] + \" \" + type + \" appends that did not increase buffer (possible stalled download)\", {\n      playlistId: loader.playlist_ && loader.playlist_.id,\n      buffered: timeRangesToArray(buffered)\n    }); // after 10 possibly stalled appends with no reset, exclude\n\n    if (this[type + \"StalledDownloads_\"] < 10) {\n      return;\n    }\n\n    this.logger_(type + \" loader stalled download exclusion\");\n    this.resetSegmentDownloads_(type);\n    this.tech_.trigger({\n      type: 'usage',\n      name: \"vhs-\" + type + \"-download-exclusion\"\n    });\n\n    if (type === 'subtitle') {\n      return;\n    } // TODO: should we exclude audio tracks rather than main tracks\n    // when type is audio?\n\n\n    mpc.blacklistCurrentPlaylist({\n      message: \"Excessive \" + type + \" segment downloading detected.\"\n    }, Infinity);\n  }\n  /**\n   * The purpose of this function is to emulate the \"waiting\" event on\n   * browsers that do not emit it when they are waiting for more\n   * data to continue playback\n   *\n   * @private\n   */\n  ;\n\n  _proto.checkCurrentTime_ = function checkCurrentTime_() {\n    if (this.tech_.paused() || this.tech_.seeking()) {\n      return;\n    }\n\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n\n    if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n      // If current time is at the end of the final buffered region, then any playback\n      // stall is most likely caused by buffering in a low bandwidth environment. The tech\n      // should fire a `waiting` event in this scenario, but due to browser and tech\n      // inconsistencies. Calling `techWaiting_` here allows us to simulate\n      // responding to a native `waiting` event when the tech fails to emit one.\n      return this.techWaiting_();\n    }\n\n    if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n      this.waiting_();\n    } else if (currentTime === this.lastRecordedTime) {\n      this.consecutiveUpdates++;\n    } else {\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = currentTime;\n    }\n  }\n  /**\n   * Cancels any pending timers and resets the 'timeupdate' mechanism\n   * designed to detect that we are stalled\n   *\n   * @private\n   */\n  ;\n\n  _proto.cancelTimer_ = function cancelTimer_() {\n    this.consecutiveUpdates = 0;\n\n    if (this.timer_) {\n      this.logger_('cancelTimer_');\n      clearTimeout(this.timer_);\n    }\n\n    this.timer_ = null;\n  }\n  /**\n   * Fixes situations where there's a bad seek\n   *\n   * @return {boolean} whether an action was taken to fix the seek\n   * @private\n   */\n  ;\n\n  _proto.fixesBadSeeks_ = function fixesBadSeeks_() {\n    var seeking = this.tech_.seeking();\n\n    if (!seeking) {\n      return false;\n    } // TODO: It's possible that these seekable checks should be moved out of this function\n    // and into a function that runs on seekablechange. It's also possible that we only need\n    // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n    // seekable range.\n\n\n    var seekable = this.seekable();\n    var currentTime = this.tech_.currentTime();\n    var isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n    var seekTo;\n\n    if (isAfterSeekableRange) {\n      var seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n      seekTo = seekableEnd;\n    }\n\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      var seekableStart = seekable.start(0); // sync to the beginning of the live window\n      // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n      seekTo = seekableStart + ( // if the playlist is too short and the seekable range is an exact time (can\n      // happen in live with a 3 segment playlist), then don't use a time delta\n      seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n    }\n\n    if (typeof seekTo !== 'undefined') {\n      this.logger_(\"Trying to seek outside of seekable at time \" + currentTime + \" with \" + (\"seekable range \" + printableRange(seekable) + \". Seeking to \") + (seekTo + \".\"));\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n\n    var sourceUpdater = this.masterPlaylistController_.sourceUpdater_;\n    var buffered = this.tech_.buffered();\n    var audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n    var videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n    var media = this.media(); // verify that at least two segment durations or one part duration have been\n    // appended before checking for a gap.\n\n    var minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n    // appended before checking for a gap.\n\n    var bufferedToCheck = [audioBuffered, videoBuffered];\n\n    for (var i = 0; i < bufferedToCheck.length; i++) {\n      // skip null buffered\n      if (!bufferedToCheck[i]) {\n        continue;\n      }\n\n      var timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n      // duration behind we haven't appended enough to call this a bad seek.\n\n      if (timeAhead < minAppendedDuration) {\n        return false;\n      }\n    }\n\n    var nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n    // to seek over the gap\n\n    if (nextRange.length === 0) {\n      return false;\n    }\n\n    seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n    this.logger_(\"Buffered region starts (\" + nextRange.start(0) + \") \" + (\" just beyond seek point (\" + currentTime + \"). Seeking to \" + seekTo + \".\"));\n    this.tech_.setCurrentTime(seekTo);\n    return true;\n  }\n  /**\n   * Handler for situations when we determine the player is waiting.\n   *\n   * @private\n   */\n  ;\n\n  _proto.waiting_ = function waiting_() {\n    if (this.techWaiting_()) {\n      return;\n    } // All tech waiting checks failed. Use last resort correction\n\n\n    var currentTime = this.tech_.currentTime();\n    var buffered = this.tech_.buffered();\n    var currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n    // region with no indication that anything is amiss (seen in Firefox). Seeking to\n    // currentTime is usually enough to kickstart the player. This checks that the player\n    // is currently within a buffered region before attempting a corrective seek.\n    // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n    // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n    // make sure there is ~3 seconds of forward buffer before taking any corrective action\n    // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n    if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(currentTime);\n      this.logger_(\"Stopped at \" + currentTime + \" while inside a buffered region \" + (\"[\" + currentRange.start(0) + \" -> \" + currentRange.end(0) + \"]. Attempting to resume \") + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-unknown-waiting'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-unknown-waiting'\n      });\n      return;\n    }\n  }\n  /**\n   * Handler for situations when the tech fires a `waiting` event\n   *\n   * @return {boolean}\n   *         True if an action (or none) was needed to correct the waiting. False if no\n   *         checks passed\n   * @private\n   */\n  ;\n\n  _proto.techWaiting_ = function techWaiting_() {\n    var seekable = this.seekable();\n    var currentTime = this.tech_.currentTime();\n\n    if (this.tech_.seeking() || this.timer_ !== null) {\n      // Tech is seeking or already waiting on another action, no action needed\n      return true;\n    }\n\n    if (this.beforeSeekableWindow_(seekable, currentTime)) {\n      var livePoint = seekable.end(seekable.length - 1);\n      this.logger_(\"Fell out of live window at time \" + currentTime + \". Seeking to \" + (\"live point (seekable end) \" + livePoint));\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-live-resync'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-live-resync'\n      });\n      return true;\n    }\n\n    var sourceUpdater = this.tech_.vhs.masterPlaylistController_.sourceUpdater_;\n    var buffered = this.tech_.buffered();\n    var videoUnderflow = this.videoUnderflow_({\n      audioBuffered: sourceUpdater.audioBuffered(),\n      videoBuffered: sourceUpdater.videoBuffered(),\n      currentTime: currentTime\n    });\n\n    if (videoUnderflow) {\n      // Even though the video underflowed and was stuck in a gap, the audio overplayed\n      // the gap, leading currentTime into a buffered range. Seeking to currentTime\n      // allows the video to catch up to the audio position without losing any audio\n      // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n      this.cancelTimer_();\n      this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-video-underflow'\n      });\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'hls-video-underflow'\n      });\n      return true;\n    }\n\n    var nextRange = findNextRange(buffered, currentTime); // check for gap\n\n    if (nextRange.length > 0) {\n      var difference = nextRange.start(0) - currentTime;\n      this.logger_(\"Stopped at \" + currentTime + \", setting timer for \" + difference + \", seeking \" + (\"to \" + nextRange.start(0)));\n      this.cancelTimer_();\n      this.timer_ = setTimeout(this.skipTheGap_.bind(this), difference * 1000, currentTime);\n      return true;\n    } // All checks failed. Returning false to indicate failure to correct waiting\n\n\n    return false;\n  };\n\n  _proto.afterSeekableWindow_ = function afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow) {\n    if (allowSeeksWithinUnsafeLiveWindow === void 0) {\n      allowSeeksWithinUnsafeLiveWindow = false;\n    }\n\n    if (!seekable.length) {\n      // we can't make a solid case if there's no seekable, default to false\n      return false;\n    }\n\n    var allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n    var isLive = !playlist.endList;\n\n    if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n      allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n    }\n\n    if (currentTime > allowedEnd) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.beforeSeekableWindow_ = function beforeSeekableWindow_(seekable, currentTime) {\n    if (seekable.length && // can't fall before 0 and 0 seekable start identifies VOD stream\n    seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n      return true;\n    }\n\n    return false;\n  };\n\n  _proto.videoUnderflow_ = function videoUnderflow_(_ref) {\n    var videoBuffered = _ref.videoBuffered,\n        audioBuffered = _ref.audioBuffered,\n        currentTime = _ref.currentTime; // audio only content will not have video underflow :)\n\n    if (!videoBuffered) {\n      return;\n    }\n\n    var gap; // find a gap in demuxed content.\n\n    if (videoBuffered.length && audioBuffered.length) {\n      // in Chrome audio will continue to play for ~3s when we run out of video\n      // so we have to check that the video buffer did have some buffer in the\n      // past.\n      var lastVideoRange = findRange(videoBuffered, currentTime - 3);\n      var videoRange = findRange(videoBuffered, currentTime);\n      var audioRange = findRange(audioBuffered, currentTime);\n\n      if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n        gap = {\n          start: lastVideoRange.end(0),\n          end: audioRange.end(0)\n        };\n      } // find a gap in muxed content.\n\n    } else {\n      var nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n      // stuck in a gap due to video underflow.\n\n      if (!nextRange.length) {\n        gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n      }\n    }\n\n    if (gap) {\n      this.logger_(\"Encountered a gap in video from \" + gap.start + \" to \" + gap.end + \". \" + (\"Seeking to current time \" + currentTime));\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Timer callback. If playback still has not proceeded, then we seek\n   * to the start of the next buffered region.\n   *\n   * @private\n   */\n  ;\n\n  _proto.skipTheGap_ = function skipTheGap_(scheduledCurrentTime) {\n    var buffered = this.tech_.buffered();\n    var currentTime = this.tech_.currentTime();\n    var nextRange = findNextRange(buffered, currentTime);\n    this.cancelTimer_();\n\n    if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n      return;\n    }\n\n    this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n    this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'vhs-gap-skip'\n    });\n    this.tech_.trigger({\n      type: 'usage',\n      name: 'hls-gap-skip'\n    });\n  };\n\n  _proto.gapFromVideoUnderflow_ = function gapFromVideoUnderflow_(buffered, currentTime) {\n    // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n    // playing for ~3 seconds after the video gap starts. This is done to account for\n    // video buffer underflow/underrun (note that this is not done when there is audio\n    // buffer underflow/underrun -- in that case the video will stop as soon as it\n    // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n    // video stalls). The player's time will reflect the playthrough of audio, so the\n    // time will appear as if we are in a buffered region, even if we are stuck in a\n    // \"gap.\"\n    //\n    // Example:\n    // video buffer:   0 => 10.1, 10.2 => 20\n    // audio buffer:   0 => 20\n    // overall buffer: 0 => 10.1, 10.2 => 20\n    // current time: 13\n    //\n    // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n    // however, the audio continued playing until it reached ~3 seconds past the gap\n    // (13 seconds), at which point it stops as well. Since current time is past the\n    // gap, findNextRange will return no ranges.\n    //\n    // To check for this issue, we see if there is a gap that starts somewhere within\n    // a 3 second range (3 seconds +/- 1 second) back from our current time.\n    var gaps = findGaps(buffered);\n\n    for (var i = 0; i < gaps.length; i++) {\n      var start = gaps.start(i);\n      var end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n      if (currentTime - start < 4 && currentTime - start > 2) {\n        return {\n          start: start,\n          end: end\n        };\n      }\n    }\n\n    return null;\n  };\n\n  return PlaybackWatcher;\n}();\n\nvar defaultOptions = {\n  errorInterval: 30,\n  getSource: function getSource(next) {\n    var tech = this.tech({\n      IWillNotUseThisInPlugins: true\n    });\n    var sourceObj = tech.currentSource_ || this.currentSource();\n    return next(sourceObj);\n  }\n};\n/**\n * Main entry point for the plugin\n *\n * @param {Player} player a reference to a videojs Player instance\n * @param {Object} [options] an object with plugin options\n * @private\n */\n\nvar initPlugin = function initPlugin(player, options) {\n  var lastCalled = 0;\n  var seekTo = 0;\n  var localOptions = videojs.mergeOptions(defaultOptions, options);\n  player.ready(function () {\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload-initialized'\n    });\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload-initialized'\n    });\n  });\n  /**\n   * Player modifications to perform that must wait until `loadedmetadata`\n   * has been triggered\n   *\n   * @private\n   */\n\n  var loadedMetadataHandler = function loadedMetadataHandler() {\n    if (seekTo) {\n      player.currentTime(seekTo);\n    }\n  };\n  /**\n   * Set the source on the player element, play, and seek if necessary\n   *\n   * @param {Object} sourceObj An object specifying the source url and mime-type to play\n   * @private\n   */\n\n\n  var setSource = function setSource(sourceObj) {\n    if (sourceObj === null || sourceObj === undefined) {\n      return;\n    }\n\n    seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n    player.one('loadedmetadata', loadedMetadataHandler);\n    player.src(sourceObj);\n    player.trigger({\n      type: 'usage',\n      name: 'vhs-error-reload'\n    });\n    player.trigger({\n      type: 'usage',\n      name: 'hls-error-reload'\n    });\n    player.play();\n  };\n  /**\n   * Attempt to get a source from either the built-in getSource function\n   * or a custom function provided via the options\n   *\n   * @private\n   */\n\n\n  var errorHandler = function errorHandler() {\n    // Do not attempt to reload the source if a source-reload occurred before\n    // 'errorInterval' time has elapsed since the last source-reload\n    if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-canceled'\n      });\n      player.trigger({\n        type: 'usage',\n        name: 'hls-error-reload-canceled'\n      });\n      return;\n    }\n\n    if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n      videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n      return;\n    }\n\n    lastCalled = Date.now();\n    return localOptions.getSource.call(player, setSource);\n  };\n  /**\n   * Unbind any event handlers that were bound by the plugin\n   *\n   * @private\n   */\n\n\n  var cleanupEvents = function cleanupEvents() {\n    player.off('loadedmetadata', loadedMetadataHandler);\n    player.off('error', errorHandler);\n    player.off('dispose', cleanupEvents);\n  };\n  /**\n   * Cleanup before re-initializing the plugin\n   *\n   * @param {Object} [newOptions] an object with plugin options\n   * @private\n   */\n\n\n  var reinitPlugin = function reinitPlugin(newOptions) {\n    cleanupEvents();\n    initPlugin(player, newOptions);\n  };\n\n  player.on('error', errorHandler);\n  player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n  // initializing the plugin\n\n  player.reloadSourceOnError = reinitPlugin;\n};\n/**\n * Reload the source when an error is detected as long as there\n * wasn't an error previously within the last 30 seconds\n *\n * @param {Object} [options] an object with plugin options\n */\n\n\nvar reloadSourceOnError = function reloadSourceOnError(options) {\n  initPlugin(this, options);\n};\n\nvar version$4 = \"2.14.3\";\nvar version$3 = \"6.0.1\";\nvar version$2 = \"0.21.1\";\nvar version$1 = \"4.7.1\";\nvar version = \"3.1.3\";\nvar Vhs = {\n  PlaylistLoader: PlaylistLoader,\n  Playlist: Playlist,\n  utils: utils,\n  STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n  INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n  lastBandwidthSelector: lastBandwidthSelector,\n  movingAverageBandwidthSelector: movingAverageBandwidthSelector,\n  comparePlaylistBandwidth: comparePlaylistBandwidth,\n  comparePlaylistResolution: comparePlaylistResolution,\n  xhr: xhrFactory()\n}; // Define getter/setters for config properties\n\nObject.keys(Config).forEach(function (prop) {\n  Object.defineProperty(Vhs, prop, {\n    get: function get() {\n      videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\n      return Config[prop];\n    },\n    set: function set(value) {\n      videojs.log.warn(\"using Vhs.\" + prop + \" is UNSAFE be sure you know what you are doing\");\n\n      if (typeof value !== 'number' || value < 0) {\n        videojs.log.warn(\"value of Vhs.\" + prop + \" must be greater than or equal to 0\");\n        return;\n      }\n\n      Config[prop] = value;\n    }\n  });\n});\nvar LOCAL_STORAGE_KEY = 'videojs-vhs';\n/**\n * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n * @function handleVhsMediaChange\n */\n\nvar handleVhsMediaChange = function handleVhsMediaChange(qualityLevels, playlistLoader) {\n  var newPlaylist = playlistLoader.media();\n  var selectedIndex = -1;\n\n  for (var i = 0; i < qualityLevels.length; i++) {\n    if (qualityLevels[i].id === newPlaylist.id) {\n      selectedIndex = i;\n      break;\n    }\n  }\n\n  qualityLevels.selectedIndex_ = selectedIndex;\n  qualityLevels.trigger({\n    selectedIndex: selectedIndex,\n    type: 'change'\n  });\n};\n/**\n * Adds quality levels to list once playlist metadata is available\n *\n * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n * @param {Object} vhs Vhs object to listen to for media events.\n * @function handleVhsLoadedMetadata\n */\n\n\nvar handleVhsLoadedMetadata = function handleVhsLoadedMetadata(qualityLevels, vhs) {\n  vhs.representations().forEach(function (rep) {\n    qualityLevels.addQualityLevel(rep);\n  });\n  handleVhsMediaChange(qualityLevels, vhs.playlists);\n}; // HLS is a source handler, not a tech. Make sure attempts to use it\n// as one do not cause exceptions.\n\n\nVhs.canPlaySource = function () {\n  return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar emeKeySystems = function emeKeySystems(keySystemOptions, mainPlaylist, audioPlaylist) {\n  if (!keySystemOptions) {\n    return keySystemOptions;\n  }\n\n  var codecs = {};\n\n  if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n    codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n  }\n\n  if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n    codecs.audio = audioPlaylist.attributes.CODECS;\n  }\n\n  var videoContentType = getMimeForCodec(codecs.video);\n  var audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n  var keySystemContentTypes = {};\n\n  for (var keySystem in keySystemOptions) {\n    keySystemContentTypes[keySystem] = {};\n\n    if (audioContentType) {\n      keySystemContentTypes[keySystem].audioContentType = audioContentType;\n    }\n\n    if (videoContentType) {\n      keySystemContentTypes[keySystem].videoContentType = videoContentType;\n    } // Default to using the video playlist's PSSH even though they may be different, as\n    // videojs-contrib-eme will only accept one in the options.\n    //\n    // This shouldn't be an issue for most cases as early intialization will handle all\n    // unique PSSH values, and if they aren't, then encrypted events should have the\n    // specific information needed for the unique license.\n\n\n    if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n      keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n    } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n    // so we need to prevent overwriting the URL entirely\n\n\n    if (typeof keySystemOptions[keySystem] === 'string') {\n      keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n    }\n  }\n\n  return videojs.mergeOptions(keySystemOptions, keySystemContentTypes);\n};\n/**\n * @typedef {Object} KeySystems\n *\n * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n * Note: not all options are listed here.\n *\n * @property {Uint8Array} [pssh]\n *           Protection System Specific Header\n */\n\n/**\n * Goes through all the playlists and collects an array of KeySystems options objects\n * containing each playlist's keySystems and their pssh values, if available.\n *\n * @param {Object[]} playlists\n *        The playlists to look through\n * @param {string[]} keySystems\n *        The keySystems to collect pssh values for\n *\n * @return {KeySystems[]}\n *         An array of KeySystems objects containing available key systems and their\n *         pssh values\n */\n\n\nvar getAllPsshKeySystemsOptions = function getAllPsshKeySystemsOptions(playlists, keySystems) {\n  return playlists.reduce(function (keySystemsArr, playlist) {\n    if (!playlist.contentProtection) {\n      return keySystemsArr;\n    }\n\n    var keySystemsOptions = keySystems.reduce(function (keySystemsObj, keySystem) {\n      var keySystemOptions = playlist.contentProtection[keySystem];\n\n      if (keySystemOptions && keySystemOptions.pssh) {\n        keySystemsObj[keySystem] = {\n          pssh: keySystemOptions.pssh\n        };\n      }\n\n      return keySystemsObj;\n    }, {});\n\n    if (Object.keys(keySystemsOptions).length) {\n      keySystemsArr.push(keySystemsOptions);\n    }\n\n    return keySystemsArr;\n  }, []);\n};\n/**\n * Returns a promise that waits for the\n * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n *\n * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n * browsers.\n *\n * As per the above ticket, this is particularly important for Chrome, where, if\n * unencrypted content is appended before encrypted content and the key session has not\n * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n * during playback.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n * @param {Object[]} mainPlaylists\n *        The playlists found on the master playlist object\n *\n * @return {Object}\n *         Promise that resolves when the key session has been created\n */\n\n\nvar waitForKeySessionCreation = function waitForKeySessionCreation(_ref) {\n  var player = _ref.player,\n      sourceKeySystems = _ref.sourceKeySystems,\n      audioMedia = _ref.audioMedia,\n      mainPlaylists = _ref.mainPlaylists;\n\n  if (!player.eme.initializeMediaKeys) {\n    return Promise.resolve();\n  } // TODO should all audio PSSH values be initialized for DRM?\n  //\n  // All unique video rendition pssh values are initialized for DRM, but here only\n  // the initial audio playlist license is initialized. In theory, an encrypted\n  // event should be fired if the user switches to an alternative audio playlist\n  // where a license is required, but this case hasn't yet been tested. In addition, there\n  // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n  // languages).\n\n\n  var playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n  var keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n  var initializationFinishedPromises = [];\n  var keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n  // only place where it should not be deduped is for ms-prefixed APIs, but the early\n  // return for IE11 above, and the existence of modern EME APIs in addition to\n  // ms-prefixed APIs on Edge should prevent this from being a concern.\n  // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n  keySystemsOptionsArr.forEach(function (keySystemsOptions) {\n    keySessionCreatedPromises.push(new Promise(function (resolve, reject) {\n      player.tech_.one('keysessioncreated', resolve);\n    }));\n    initializationFinishedPromises.push(new Promise(function (resolve, reject) {\n      player.eme.initializeMediaKeys({\n        keySystems: keySystemsOptions\n      }, function (err) {\n        if (err) {\n          reject(err);\n          return;\n        }\n\n        resolve();\n      });\n    }));\n  }); // The reasons Promise.race is chosen over Promise.any:\n  //\n  // * Promise.any is only available in Safari 14+.\n  // * None of these promises are expected to reject. If they do reject, it might be\n  //   better here for the race to surface the rejection, rather than mask it by using\n  //   Promise.any.\n\n  return Promise.race([// If a session was previously created, these will all finish resolving without\n  // creating a new session, otherwise it will take until the end of all license\n  // requests, which is why the key session check is used (to make setup much faster).\n  Promise.all(initializationFinishedPromises), // Once a single session is created, the browser knows DRM will be used.\n  Promise.race(keySessionCreatedPromises)]);\n};\n/**\n * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n * there are keySystems on the source, sets up source options to prepare the source for\n * eme.\n *\n * @param {Object} player\n *        The player instance\n * @param {Object[]} sourceKeySystems\n *        The key systems options from the player source\n * @param {Object} media\n *        The active media playlist\n * @param {Object} [audioMedia]\n *        The active audio media playlist (optional)\n *\n * @return {boolean}\n *         Whether or not options were configured and EME is available\n */\n\n\nvar setupEmeOptions = function setupEmeOptions(_ref2) {\n  var player = _ref2.player,\n      sourceKeySystems = _ref2.sourceKeySystems,\n      media = _ref2.media,\n      audioMedia = _ref2.audioMedia;\n  var sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n\n  if (!sourceOptions) {\n    return false;\n  }\n\n  player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n  // do nothing.\n\n  if (sourceOptions && !player.eme) {\n    videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n    return false;\n  }\n\n  return true;\n};\n\nvar getVhsLocalStorage = function getVhsLocalStorage() {\n  if (!window$1.localStorage) {\n    return null;\n  }\n\n  var storedObject = window$1.localStorage.getItem(LOCAL_STORAGE_KEY);\n\n  if (!storedObject) {\n    return null;\n  }\n\n  try {\n    return JSON.parse(storedObject);\n  } catch (e) {\n    // someone may have tampered with the value\n    return null;\n  }\n};\n\nvar updateVhsLocalStorage = function updateVhsLocalStorage(options) {\n  if (!window$1.localStorage) {\n    return false;\n  }\n\n  var objectToStore = getVhsLocalStorage();\n  objectToStore = objectToStore ? videojs.mergeOptions(objectToStore, options) : options;\n\n  try {\n    window$1.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n  } catch (e) {\n    // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n    // storage is set to 0).\n    // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n    // No need to perform any operation.\n    return false;\n  }\n\n  return objectToStore;\n};\n/**\n * Parses VHS-supported media types from data URIs. See\n * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n * for information on data URIs.\n *\n * @param {string} dataUri\n *        The data URI\n *\n * @return {string|Object}\n *         The parsed object/string, or the original string if no supported media type\n *         was found\n */\n\n\nvar expandDataUri = function expandDataUri(dataUri) {\n  if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n    return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n  } // no known case for this data URI, return the string as-is\n\n\n  return dataUri;\n};\n/**\n * Whether the browser has built-in HLS support.\n */\n\n\nVhs.supportsNativeHls = function () {\n  if (!document || !document.createElement) {\n    return false;\n  }\n\n  var video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n  if (!videojs.getTech('Html5').isSupported()) {\n    return false;\n  } // HLS manifests can go by many mime-types\n\n\n  var canPlay = [// Apple santioned\n  'application/vnd.apple.mpegurl', // Apple sanctioned for backwards compatibility\n  'audio/mpegurl', // Very common\n  'audio/x-mpegurl', // Very common\n  'application/x-mpegurl', // Included for completeness\n  'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n  return canPlay.some(function (canItPlay) {\n    return /maybe|probably/i.test(video.canPlayType(canItPlay));\n  });\n}();\n\nVhs.supportsNativeDash = function () {\n  if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n    return false;\n  }\n\n  return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n}();\n\nVhs.supportsTypeNatively = function (type) {\n  if (type === 'hls') {\n    return Vhs.supportsNativeHls;\n  }\n\n  if (type === 'dash') {\n    return Vhs.supportsNativeDash;\n  }\n\n  return false;\n};\n/**\n * HLS is a source handler, not a tech. Make sure attempts to use it\n * as one do not cause exceptions.\n */\n\n\nVhs.isSupported = function () {\n  return videojs.log.warn('HLS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n};\n\nvar Component = videojs.getComponent('Component');\n/**\n * The Vhs Handler object, where we orchestrate all of the parts\n * of HLS to interact with video.js\n *\n * @class VhsHandler\n * @extends videojs.Component\n * @param {Object} source the soruce object\n * @param {Tech} tech the parent tech object\n * @param {Object} options optional and required options\n */\n\nvar VhsHandler = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(VhsHandler, _Component);\n\n  function VhsHandler(source, tech, options) {\n    var _this;\n\n    _this = _Component.call(this, tech, videojs.mergeOptions(options.hls, options.vhs)) || this;\n\n    if (options.hls && Object.keys(options.hls).length) {\n      videojs.log.warn('Using hls options is deprecated. Please rename `hls` to `vhs` in your options object.');\n    } // if a tech level `initialBandwidth` option was passed\n    // use that over the VHS level `bandwidth` option\n\n\n    if (typeof options.initialBandwidth === 'number') {\n      _this.options_.bandwidth = options.initialBandwidth;\n    }\n\n    _this.logger_ = logger('VhsHandler'); // tech.player() is deprecated but setup a reference to HLS for\n    // backwards-compatibility\n\n    if (tech.options_ && tech.options_.playerId) {\n      var _player = videojs(tech.options_.playerId);\n\n      if (!_player.hasOwnProperty('hls')) {\n        Object.defineProperty(_player, 'hls', {\n          get: function get() {\n            videojs.log.warn('player.hls is deprecated. Use player.tech().vhs instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'hls-player-access'\n            });\n            return _assertThisInitialized(_this);\n          },\n          configurable: true\n        });\n      }\n\n      if (!_player.hasOwnProperty('vhs')) {\n        Object.defineProperty(_player, 'vhs', {\n          get: function get() {\n            videojs.log.warn('player.vhs is deprecated. Use player.tech().vhs instead.');\n            tech.trigger({\n              type: 'usage',\n              name: 'vhs-player-access'\n            });\n            return _assertThisInitialized(_this);\n          },\n          configurable: true\n        });\n      }\n\n      if (!_player.hasOwnProperty('dash')) {\n        Object.defineProperty(_player, 'dash', {\n          get: function get() {\n            videojs.log.warn('player.dash is deprecated. Use player.tech().vhs instead.');\n            return _assertThisInitialized(_this);\n          },\n          configurable: true\n        });\n      }\n\n      _this.player_ = _player;\n    }\n\n    _this.tech_ = tech;\n    _this.source_ = source;\n    _this.stats = {};\n    _this.ignoreNextSeekingEvent_ = false;\n\n    _this.setOptions_();\n\n    if (_this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n      tech.overrideNativeAudioTracks(true);\n      tech.overrideNativeVideoTracks(true);\n    } else if (_this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n      // overriding native HLS only works if audio tracks have been emulated\n      // error early if we're misconfigured\n      throw new Error('Overriding native HLS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n    } // listen for fullscreenchange events for this player so that we\n    // can adjust our quality selection quickly\n\n\n    _this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], function (event) {\n      var fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n\n      if (fullscreenElement && fullscreenElement.contains(_this.tech_.el())) {\n        _this.masterPlaylistController_.fastQualityChange_();\n      } else {\n        // When leaving fullscreen, since the in page pixel dimensions should be smaller\n        // than full screen, see if there should be a rendition switch down to preserve\n        // bandwidth.\n        _this.masterPlaylistController_.checkABR_();\n      }\n    });\n\n    _this.on(_this.tech_, 'seeking', function () {\n      if (this.ignoreNextSeekingEvent_) {\n        this.ignoreNextSeekingEvent_ = false;\n        return;\n      }\n\n      this.setCurrentTime(this.tech_.currentTime());\n    });\n\n    _this.on(_this.tech_, 'error', function () {\n      // verify that the error was real and we are loaded\n      // enough to have mpc loaded.\n      if (this.tech_.error() && this.masterPlaylistController_) {\n        this.masterPlaylistController_.pauseLoading();\n      }\n    });\n\n    _this.on(_this.tech_, 'play', _this.play);\n\n    return _this;\n  }\n\n  var _proto = VhsHandler.prototype;\n\n  _proto.setOptions_ = function setOptions_() {\n    var _this2 = this; // defaults\n\n\n    this.options_.withCredentials = this.options_.withCredentials || false;\n    this.options_.handleManifestRedirects = this.options_.handleManifestRedirects === false ? false : true;\n    this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n    this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n    this.options_.smoothQualityChange = this.options_.smoothQualityChange || false;\n    this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n    this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n    this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n    this.options_.customTagParsers = this.options_.customTagParsers || [];\n    this.options_.customTagMappers = this.options_.customTagMappers || [];\n    this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n\n    if (typeof this.options_.blacklistDuration !== 'number') {\n      this.options_.blacklistDuration = 5 * 60;\n    }\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      if (this.options_.useBandwidthFromLocalStorage) {\n        var storedObject = getVhsLocalStorage();\n\n        if (storedObject && storedObject.bandwidth) {\n          this.options_.bandwidth = storedObject.bandwidth;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-bandwidth-from-local-storage'\n          });\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-bandwidth-from-local-storage'\n          });\n        }\n\n        if (storedObject && storedObject.throughput) {\n          this.options_.throughput = storedObject.throughput;\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-throughput-from-local-storage'\n          });\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'hls-throughput-from-local-storage'\n          });\n        }\n      }\n    } // if bandwidth was not set by options or pulled from local storage, start playlist\n    // selection at a reasonable bandwidth\n\n\n    if (typeof this.options_.bandwidth !== 'number') {\n      this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n    } // If the bandwidth number is unchanged from the initial setting\n    // then this takes precedence over the enableLowInitialPlaylist option\n\n\n    this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n    ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'smoothQualityChange', 'customTagParsers', 'customTagMappers', 'handleManifestRedirects', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'experimentalBufferBasedABR', 'liveRangeSafeTimeDelta', 'experimentalLLHLS', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'experimentalExactManifestTimings', 'experimentalLeastPixelDiffSelector'].forEach(function (option) {\n      if (typeof _this2.source_[option] !== 'undefined') {\n        _this2.options_[option] = _this2.source_[option];\n      }\n    });\n    this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n    this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n  }\n  /**\n   * called when player.src gets called, handle a new source\n   *\n   * @param {Object} src the source object to handle\n   */\n  ;\n\n  _proto.src = function src(_src, type) {\n    var _this3 = this; // do nothing if the src is falsey\n\n\n    if (!_src) {\n      return;\n    }\n\n    this.setOptions_(); // add master playlist controller options\n\n    this.options_.src = expandDataUri(this.source_.src);\n    this.options_.tech = this.tech_;\n    this.options_.externVhs = Vhs;\n    this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n    this.options_.seekTo = function (time) {\n      _this3.tech_.setCurrentTime(time);\n    };\n\n    if (this.options_.smoothQualityChange) {\n      videojs.log.warn('smoothQualityChange is deprecated and will be removed in the next major version');\n    }\n\n    this.masterPlaylistController_ = new MasterPlaylistController(this.options_);\n    var playbackWatcherOptions = videojs.mergeOptions({\n      liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n    }, this.options_, {\n      seekable: function seekable() {\n        return _this3.seekable();\n      },\n      media: function media() {\n        return _this3.masterPlaylistController_.media();\n      },\n      masterPlaylistController: this.masterPlaylistController_\n    });\n    this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n    this.masterPlaylistController_.on('error', function () {\n      var player = videojs.players[_this3.tech_.options_.playerId];\n      var error = _this3.masterPlaylistController_.error;\n\n      if (typeof error === 'object' && !error.code) {\n        error.code = 3;\n      } else if (typeof error === 'string') {\n        error = {\n          message: error,\n          code: 3\n        };\n      }\n\n      player.error(error);\n    });\n    var defaultSelector = this.options_.experimentalBufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n    // compatibility with < v2\n\n    this.masterPlaylistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n    this.masterPlaylistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n    this.playlists = this.masterPlaylistController_.masterPlaylistLoader_;\n    this.mediaSource = this.masterPlaylistController_.mediaSource; // Proxy assignment of some properties to the master playlist\n    // controller. Using a custom property for backwards compatibility\n    // with < v2\n\n    Object.defineProperties(this, {\n      selectPlaylist: {\n        get: function get() {\n          return this.masterPlaylistController_.selectPlaylist;\n        },\n        set: function set(selectPlaylist) {\n          this.masterPlaylistController_.selectPlaylist = selectPlaylist.bind(this);\n        }\n      },\n      throughput: {\n        get: function get() {\n          return this.masterPlaylistController_.mainSegmentLoader_.throughput.rate;\n        },\n        set: function set(throughput) {\n          this.masterPlaylistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n          // for the cumulative average\n\n          this.masterPlaylistController_.mainSegmentLoader_.throughput.count = 1;\n        }\n      },\n      bandwidth: {\n        get: function get() {\n          var playerBandwidthEst = this.masterPlaylistController_.mainSegmentLoader_.bandwidth;\n          var networkInformation = window$1.navigator.connection || window$1.navigator.mozConnection || window$1.navigator.webkitConnection;\n          var tenMbpsAsBitsPerSecond = 10e6;\n\n          if (this.options_.useNetworkInformationApi && networkInformation) {\n            // downlink returns Mbps\n            // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n            var networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n            // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n            // high quality streams are not filtered out.\n\n            if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n              playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n            } else {\n              playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n            }\n          }\n\n          return playerBandwidthEst;\n        },\n        set: function set(bandwidth) {\n          this.masterPlaylistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n          // `count` is set to zero that current value of `rate` isn't included\n          // in the cumulative average\n\n          this.masterPlaylistController_.mainSegmentLoader_.throughput = {\n            rate: 0,\n            count: 0\n          };\n        }\n      },\n\n      /**\n       * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n       * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n       * the entire process after that - decryption, transmuxing, and appending - provided\n       * by `throughput`.\n       *\n       * Since the two process are serial, the overall system bandwidth is given by:\n       *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n       */\n      systemBandwidth: {\n        get: function get() {\n          var invBandwidth = 1 / (this.bandwidth || 1);\n          var invThroughput;\n\n          if (this.throughput > 0) {\n            invThroughput = 1 / this.throughput;\n          } else {\n            invThroughput = 0;\n          }\n\n          var systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n          return systemBitrate;\n        },\n        set: function set() {\n          videojs.log.error('The \"systemBandwidth\" property is read-only');\n        }\n      }\n    });\n\n    if (this.options_.bandwidth) {\n      this.bandwidth = this.options_.bandwidth;\n    }\n\n    if (this.options_.throughput) {\n      this.throughput = this.options_.throughput;\n    }\n\n    Object.defineProperties(this.stats, {\n      bandwidth: {\n        get: function get() {\n          return _this3.bandwidth || 0;\n        },\n        enumerable: true\n      },\n      mediaRequests: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaRequests_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsAborted: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaRequestsAborted_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsTimedout: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaRequestsTimedout_() || 0;\n        },\n        enumerable: true\n      },\n      mediaRequestsErrored: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaRequestsErrored_() || 0;\n        },\n        enumerable: true\n      },\n      mediaTransferDuration: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaTransferDuration_() || 0;\n        },\n        enumerable: true\n      },\n      mediaBytesTransferred: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaBytesTransferred_() || 0;\n        },\n        enumerable: true\n      },\n      mediaSecondsLoaded: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaSecondsLoaded_() || 0;\n        },\n        enumerable: true\n      },\n      mediaAppends: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mediaAppends_() || 0;\n        },\n        enumerable: true\n      },\n      mainAppendsToLoadedData: {\n        get: function get() {\n          return _this3.masterPlaylistController_.mainAppendsToLoadedData_() || 0;\n        },\n        enumerable: true\n      },\n      audioAppendsToLoadedData: {\n        get: function get() {\n          return _this3.masterPlaylistController_.audioAppendsToLoadedData_() || 0;\n        },\n        enumerable: true\n      },\n      appendsToLoadedData: {\n        get: function get() {\n          return _this3.masterPlaylistController_.appendsToLoadedData_() || 0;\n        },\n        enumerable: true\n      },\n      timeToLoadedData: {\n        get: function get() {\n          return _this3.masterPlaylistController_.timeToLoadedData_() || 0;\n        },\n        enumerable: true\n      },\n      buffered: {\n        get: function get() {\n          return timeRangesToArray(_this3.tech_.buffered());\n        },\n        enumerable: true\n      },\n      currentTime: {\n        get: function get() {\n          return _this3.tech_.currentTime();\n        },\n        enumerable: true\n      },\n      currentSource: {\n        get: function get() {\n          return _this3.tech_.currentSource_;\n        },\n        enumerable: true\n      },\n      currentTech: {\n        get: function get() {\n          return _this3.tech_.name_;\n        },\n        enumerable: true\n      },\n      duration: {\n        get: function get() {\n          return _this3.tech_.duration();\n        },\n        enumerable: true\n      },\n      master: {\n        get: function get() {\n          return _this3.playlists.master;\n        },\n        enumerable: true\n      },\n      playerDimensions: {\n        get: function get() {\n          return _this3.tech_.currentDimensions();\n        },\n        enumerable: true\n      },\n      seekable: {\n        get: function get() {\n          return timeRangesToArray(_this3.tech_.seekable());\n        },\n        enumerable: true\n      },\n      timestamp: {\n        get: function get() {\n          return Date.now();\n        },\n        enumerable: true\n      },\n      videoPlaybackQuality: {\n        get: function get() {\n          return _this3.tech_.getVideoPlaybackQuality();\n        },\n        enumerable: true\n      }\n    });\n    this.tech_.one('canplay', this.masterPlaylistController_.setupFirstPlay.bind(this.masterPlaylistController_));\n    this.tech_.on('bandwidthupdate', function () {\n      if (_this3.options_.useBandwidthFromLocalStorage) {\n        updateVhsLocalStorage({\n          bandwidth: _this3.bandwidth,\n          throughput: Math.round(_this3.throughput)\n        });\n      }\n    });\n    this.masterPlaylistController_.on('selectedinitialmedia', function () {\n      // Add the manual rendition mix-in to VhsHandler\n      renditionSelectionMixin(_this3);\n    });\n    this.masterPlaylistController_.sourceUpdater_.on('createdsourcebuffers', function () {\n      _this3.setupEme_();\n    }); // the bandwidth of the primary segment loader is our best\n    // estimate of overall bandwidth\n\n    this.on(this.masterPlaylistController_, 'progress', function () {\n      this.tech_.trigger('progress');\n    }); // In the live case, we need to ignore the very first `seeking` event since\n    // that will be the result of the seek-to-live behavior\n\n    this.on(this.masterPlaylistController_, 'firstplay', function () {\n      this.ignoreNextSeekingEvent_ = true;\n    });\n    this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n    // this can occur if someone sets the src in player.ready(), for instance\n\n    if (!this.tech_.el()) {\n      return;\n    }\n\n    this.mediaSourceUrl_ = window$1.URL.createObjectURL(this.masterPlaylistController_.mediaSource);\n    this.tech_.src(this.mediaSourceUrl_);\n  };\n\n  _proto.createKeySessions_ = function createKeySessions_() {\n    var _this4 = this;\n\n    var audioPlaylistLoader = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    this.logger_('waiting for EME key session creation');\n    waitForKeySessionCreation({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n      mainPlaylists: this.playlists.master.playlists\n    }).then(function () {\n      _this4.logger_('created EME key session');\n\n      _this4.masterPlaylistController_.sourceUpdater_.initializedEme();\n    })[\"catch\"](function (err) {\n      _this4.logger_('error while creating EME key session', err);\n\n      _this4.player_.error({\n        message: 'Failed to initialize media keys for EME',\n        code: 3\n      });\n    });\n  };\n\n  _proto.handleWaitingForKey_ = function handleWaitingForKey_() {\n    // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n    // the key is in the manifest. While this should've happened on initial source load, it\n    // may happen again in live streams where the keys change, and the manifest info\n    // reflects the update.\n    //\n    // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n    // already requested keys for, we don't have to worry about this generating extraneous\n    // requests.\n    this.logger_('waitingforkey fired, attempting to create any new key sessions');\n    this.createKeySessions_();\n  }\n  /**\n   * If necessary and EME is available, sets up EME options and waits for key session\n   * creation.\n   *\n   * This function also updates the source updater so taht it can be used, as for some\n   * browsers, EME must be configured before content is appended (if appending unencrypted\n   * content before encrypted content).\n   */\n  ;\n\n  _proto.setupEme_ = function setupEme_() {\n    var _this5 = this;\n\n    var audioPlaylistLoader = this.masterPlaylistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n    var didSetupEmeOptions = setupEmeOptions({\n      player: this.player_,\n      sourceKeySystems: this.source_.keySystems,\n      media: this.playlists.media(),\n      audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n    });\n    this.player_.tech_.on('keystatuschange', function (e) {\n      if (e.status !== 'output-restricted') {\n        return;\n      }\n\n      var masterPlaylist = _this5.masterPlaylistController_.master();\n\n      if (!masterPlaylist || !masterPlaylist.playlists) {\n        return;\n      }\n\n      var excludedHDPlaylists = []; // Assume all HD streams are unplayable and exclude them from ABR selection\n\n      masterPlaylist.playlists.forEach(function (playlist) {\n        if (playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height >= 720) {\n          if (!playlist.excludeUntil || playlist.excludeUntil < Infinity) {\n            playlist.excludeUntil = Infinity;\n            excludedHDPlaylists.push(playlist);\n          }\n        }\n      });\n\n      if (excludedHDPlaylists.length) {\n        var _videojs$log;\n\n        (_videojs$log = videojs.log).warn.apply(_videojs$log, ['DRM keystatus changed to \"output-restricted.\" Removing the following HD playlists ' + 'that will most likely fail to play and clearing the buffer. ' + 'This may be due to HDCP restrictions on the stream and the capabilities of the current device.'].concat(excludedHDPlaylists)); // Clear the buffer before switching playlists, since it may already contain unplayable segments\n\n\n        _this5.masterPlaylistController_.fastQualityChange_();\n      }\n    });\n    this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n    this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_); // In IE11 this is too early to initialize media keys, and IE11 does not support\n    // promises.\n\n    if (videojs.browser.IE_VERSION === 11 || !didSetupEmeOptions) {\n      // If EME options were not set up, we've done all we could to initialize EME.\n      this.masterPlaylistController_.sourceUpdater_.initializedEme();\n      return;\n    }\n\n    this.createKeySessions_();\n  }\n  /**\n   * Initializes the quality levels and sets listeners to update them.\n   *\n   * @method setupQualityLevels_\n   * @private\n   */\n  ;\n\n  _proto.setupQualityLevels_ = function setupQualityLevels_() {\n    var _this6 = this;\n\n    var player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n    // or qualityLevels_ listeners have already been setup, do nothing.\n\n    if (!player || !player.qualityLevels || this.qualityLevels_) {\n      return;\n    }\n\n    this.qualityLevels_ = player.qualityLevels();\n    this.masterPlaylistController_.on('selectedinitialmedia', function () {\n      handleVhsLoadedMetadata(_this6.qualityLevels_, _this6);\n    });\n    this.playlists.on('mediachange', function () {\n      handleVhsMediaChange(_this6.qualityLevels_, _this6.playlists);\n    });\n  }\n  /**\n   * return the version\n   */\n  ;\n\n  VhsHandler.version = function version$5() {\n    return {\n      '@videojs/http-streaming': version$4,\n      'mux.js': version$3,\n      'mpd-parser': version$2,\n      'm3u8-parser': version$1,\n      'aes-decrypter': version\n    };\n  }\n  /**\n   * return the version\n   */\n  ;\n\n  _proto.version = function version() {\n    return this.constructor.version();\n  };\n\n  _proto.canChangeType = function canChangeType() {\n    return SourceUpdater.canChangeType();\n  }\n  /**\n   * Begin playing the video.\n   */\n  ;\n\n  _proto.play = function play() {\n    this.masterPlaylistController_.play();\n  }\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n  ;\n\n  _proto.setCurrentTime = function setCurrentTime(currentTime) {\n    this.masterPlaylistController_.setCurrentTime(currentTime);\n  }\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n  ;\n\n  _proto.duration = function duration() {\n    return this.masterPlaylistController_.duration();\n  }\n  /**\n   * a wrapper around the function in MasterPlaylistController\n   */\n  ;\n\n  _proto.seekable = function seekable() {\n    return this.masterPlaylistController_.seekable();\n  }\n  /**\n   * Abort all outstanding work and cleanup.\n   */\n  ;\n\n  _proto.dispose = function dispose() {\n    if (this.playbackWatcher_) {\n      this.playbackWatcher_.dispose();\n    }\n\n    if (this.masterPlaylistController_) {\n      this.masterPlaylistController_.dispose();\n    }\n\n    if (this.qualityLevels_) {\n      this.qualityLevels_.dispose();\n    }\n\n    if (this.player_) {\n      delete this.player_.vhs;\n      delete this.player_.dash;\n      delete this.player_.hls;\n    }\n\n    if (this.tech_ && this.tech_.vhs) {\n      delete this.tech_.vhs;\n    } // don't check this.tech_.hls as it will log a deprecated warning\n\n\n    if (this.tech_) {\n      delete this.tech_.hls;\n    }\n\n    if (this.mediaSourceUrl_ && window$1.URL.revokeObjectURL) {\n      window$1.URL.revokeObjectURL(this.mediaSourceUrl_);\n      this.mediaSourceUrl_ = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  _proto.convertToProgramTime = function convertToProgramTime(time, callback) {\n    return getProgramTime({\n      playlist: this.masterPlaylistController_.media(),\n      time: time,\n      callback: callback\n    });\n  } // the player must be playing before calling this\n  ;\n\n  _proto.seekToProgramTime = function seekToProgramTime$1(programTime, callback, pauseAfterSeek, retryCount) {\n    if (pauseAfterSeek === void 0) {\n      pauseAfterSeek = true;\n    }\n\n    if (retryCount === void 0) {\n      retryCount = 2;\n    }\n\n    return seekToProgramTime({\n      programTime: programTime,\n      playlist: this.masterPlaylistController_.media(),\n      retryCount: retryCount,\n      pauseAfterSeek: pauseAfterSeek,\n      seekTo: this.options_.seekTo,\n      tech: this.options_.tech,\n      callback: callback\n    });\n  };\n\n  return VhsHandler;\n}(Component);\n/**\n * The Source Handler object, which informs video.js what additional\n * MIME types are supported and sets up playback. It is registered\n * automatically to the appropriate tech based on the capabilities of\n * the browser it is running in. It is not necessary to use or modify\n * this object in normal usage.\n */\n\n\nvar VhsSourceHandler = {\n  name: 'videojs-http-streaming',\n  VERSION: version$4,\n  canHandleSource: function canHandleSource(srcObj, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var localOptions = videojs.mergeOptions(videojs.options, options);\n    return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n  },\n  handleSource: function handleSource(source, tech, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var localOptions = videojs.mergeOptions(videojs.options, options);\n    tech.vhs = new VhsHandler(source, tech, localOptions);\n\n    if (!videojs.hasOwnProperty('hls')) {\n      Object.defineProperty(tech, 'hls', {\n        get: function get() {\n          videojs.log.warn('player.tech().hls is deprecated. Use player.tech().vhs instead.');\n          return tech.vhs;\n        },\n        configurable: true\n      });\n    }\n\n    tech.vhs.xhr = xhrFactory();\n    tech.vhs.src(source.src, source.type);\n    return tech.vhs;\n  },\n  canPlayType: function canPlayType(type, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    var _videojs$mergeOptions = videojs.mergeOptions(videojs.options, options),\n        _videojs$mergeOptions2 = _videojs$mergeOptions.vhs;\n\n    _videojs$mergeOptions2 = _videojs$mergeOptions2 === void 0 ? {} : _videojs$mergeOptions2;\n    var _videojs$mergeOptions3 = _videojs$mergeOptions2.overrideNative,\n        overrideNative = _videojs$mergeOptions3 === void 0 ? !videojs.browser.IS_ANY_SAFARI : _videojs$mergeOptions3,\n        _videojs$mergeOptions4 = _videojs$mergeOptions.hls;\n    _videojs$mergeOptions4 = _videojs$mergeOptions4 === void 0 ? {} : _videojs$mergeOptions4;\n    var _videojs$mergeOptions5 = _videojs$mergeOptions4.overrideNative,\n        legacyOverrideNative = _videojs$mergeOptions5 === void 0 ? false : _videojs$mergeOptions5;\n    var supportedType = simpleTypeFromSourceType(type);\n    var canUseMsePlayback = supportedType && (!Vhs.supportsTypeNatively(supportedType) || legacyOverrideNative || overrideNative);\n    return canUseMsePlayback ? 'maybe' : '';\n  }\n};\n/**\n * Check to see if the native MediaSource object exists and supports\n * an MP4 container with both H.264 video and AAC-LC audio.\n *\n * @return {boolean} if  native media sources are supported\n */\n\nvar supportsNativeMediaSources = function supportsNativeMediaSources() {\n  return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n}; // register source handlers with the appropriate techs\n\n\nif (supportsNativeMediaSources()) {\n  videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n}\n\nvideojs.VhsHandler = VhsHandler;\nObject.defineProperty(videojs, 'HlsHandler', {\n  get: function get() {\n    videojs.log.warn('videojs.HlsHandler is deprecated. Use videojs.VhsHandler instead.');\n    return VhsHandler;\n  },\n  configurable: true\n});\nvideojs.VhsSourceHandler = VhsSourceHandler;\nObject.defineProperty(videojs, 'HlsSourceHandler', {\n  get: function get() {\n    videojs.log.warn('videojs.HlsSourceHandler is deprecated. ' + 'Use videojs.VhsSourceHandler instead.');\n    return VhsSourceHandler;\n  },\n  configurable: true\n});\nvideojs.Vhs = Vhs;\nObject.defineProperty(videojs, 'Hls', {\n  get: function get() {\n    videojs.log.warn('videojs.Hls is deprecated. Use videojs.Vhs instead.');\n    return Vhs;\n  },\n  configurable: true\n});\n\nif (!videojs.use) {\n  videojs.registerComponent('Hls', Vhs);\n  videojs.registerComponent('Vhs', Vhs);\n}\n\nvideojs.options.vhs = videojs.options.vhs || {};\nvideojs.options.hls = videojs.options.hls || {};\n\nif (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n  var registerPlugin = videojs.registerPlugin || videojs.plugin;\n  registerPlugin('reloadSourceOnError', reloadSourceOnError);\n}\n\nexport default videojs;\n"],"names":["browserApi","version$5","hooks_","hooks","type","fn","concat","removeHook","index","indexOf","slice","splice","FullscreenApi","prefixed","apiMap","specApi","i","length","_i","history","log$1","createLogger$1","name","logByType","level","log","_len","arguments","args","Array","_key","lvl","levels","lvlRegExp","RegExp","unshift","toUpperCase","push","test","isArray","LogByTypeFactory","createLogger","subname","all","off","debug","info","warn","error","DEFAULT","hasOwnProperty","Error","filter","fname","historyItem","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","toString","Object","prototype","keys","object","isObject","each","forEach","key","assign","target","sources","source","value","isPlain","call","constructor","computedStyle","el","prop","computedStyleValue","e","getPropertyValue","USER_AGENT","webkitVersionMap","exec","appleWebkitVersion","parseFloat","pop","IS_IPOD","IOS_VERSION","match","IS_ANDROID","ANDROID_VERSION","major","minor","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IE_VERSION","result","version","IS_SAFARI","IS_WINDOWS","TOUCH_ENABLED","Boolean","isReal","IS_IPAD","IS_IPHONE","IS_IOS","IS_ANY_SAFARI","browser","freeze","__proto__","isNonBlankString","str","trim","throwIfWhitespace","isEl","nodeType","isInFrame","x","createQuerier","method","selector","context","ctx","createEl","tagName","properties","attributes","content","getOwnPropertyNames","propName","val","setAttribute","textContent","attrName","appendContent","text","innerText","prependTo","child","parent","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","className","addClass","classToAdd","add","removeClass","classToRemove","remove","split","c","join","toggleClass","classToToggle","predicate","has","setAttributes","attrValue","removeAttribute","getAttributes","tag","obj","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","undefined","height","width","findPosition","offsetParent","left","top","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","event","translated","y","item","nodeName","toLowerCase","transform","values","map","Number","_values","position","boxTarget","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","Math","max","min","isTextNode","emptyEl","removeChild","normalizeContent","node","insertContent","isSingleLeftClick","button","buttons","videojs$1","$","$$","Dom","_windowLoaded","autoSetup","options","vids","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setWindowLoaded","FakeWeakMap","createStyleElement","style","setTextContent","styleSheet","cssText","_guid","newGUID","this","vdata","floor","Date","now","data","_proto","set","access","get","_supportsPassive","DomData","WeakMap","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","callback","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","doc","body","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","passiveEvents","on","guid","hash","handlersCopy","m","n","addEventListener","opts","defineProperty","supportsPassive","passive","attachEvent","removeType","t","trigger","elemData","ownerDocument","bubbles","targetData","one","func","apply","any","EVENT_MAP","Events","UPDATE_REFRESH_INTERVAL","bind","uid","bound","throttle","last","EventTarget$2","allowedEvents_","ael","dispatchEvent","queueTrigger","_this","Map","oldTimeout","timeout","size","objName","name_","isEvented","eventBusEl_","every","isValidEventType","validateTarget","fnName","validateEventType","validateListener","listener","normalizeListenArgs","self","isTargetingSelf","shift","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","_this3","_normalizeListenArgs3","_len5","_key5","targetOrType","typeOrListener","evented","eventBusKey","eventedCallbacks","el_","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","string","replace","w","toTitleCase$1","mergeOptions$3","MapSham","map_","thisArg","Map$1","SetSham","set_","Set$1","Component$1","Component","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","dispose","readyQueue_","restoreEl","replaceChild","isDisposed","localize","tokens","defaultValue","code","language","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","names","reduce","acc","currentChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","workingChildren","parentOptions","Tech","some","wchild","isTech","playerOptions","newChild","buildCSSClass","sync","isReady_","setTimeout","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","isNaN","rule","currentDimensions","currentWidth","currentHeight","focus","blur","handleKeyDown","handleKeyPress","emitTapEvents","couldBeTap","touchStart","firstTouch","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","touchHolding","report","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","clearTimeout","interval","intervalId","requestAnimationFrame","_this4","supportsRaf_","requestNamedAnimationFrame","_this5","cancelNamedAnimationFrame","cancelAnimationFrame","_this6","_ref","idName","cancelName","registerComponent","ComponentToRegister","reason","isComp","isPrototypeOf","components_","Player","players","playerNames","pname","getRange","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","timeRangesObj","start","end","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","MediaError","message","defaultMessages","status","errorTypes","errNum","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTrackConverter","tech","trackEls","trackObjs","trackEl","json","src","textTracks","addedTrack","addRemoteTextTrack","addCue","ModalDialog","_Component","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","MODAL_CLASS_NAME","role","descEl_","description","tabIndex","label","previouslyActiveEl_","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","pause","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","playerEl","focusIndex","focusableEls","focusableEls_","querySelector","shiftKey","allChildren","querySelectorAll","hasAttribute","TrackList","_EventTarget","tracks","tracks_","addTrack","labelchange_","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","labelchange","disableOthers$1","list","enabled","AudioTrackList","_TrackList","changing_","enabledChange_","disableOthers","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","TextTrackKind","descriptions","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","newLabel","parseUrl","url","props","a","href","details","protocol","host","getAbsoluteURL","getFileExtension","path","pathParts","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","parser","errors","oncue","onparsingerror","onflush","parse","flush","loadTrack","uri","crossOrigin","cors","withCredentials","tech_","err","response","responseBody","loaded_","TextTrack","_Track","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","rvf_","requestVideoFrameCallback","stopTracking","startTracking","defineProperties","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","HTMLTrackElement","readyState","load","NONE","LOADING","LOADED","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","Set","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","manualProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","setCrossOrigin","error_","played","setScrubbing","scrubbing","setCurrentTime","trackListChanges","addWebVttScript_","script","onload","onerror","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","manualCleanup","_this7","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","PromiseClass","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","cb","_this8","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","mediate","middleware","arg","callMethod","middlewareValue","middlewareIterator","terminated","mws","mw","executeRight","allowedGetters","muted","seekable","volume","ended","allowedSetters","setMuted","setVolume","allowedMediators","lastRun","_middleware","mwFactory","mwrest","_mws$i","mwf","mwi","getOrCreateFactory","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","caf","flac","oga","wav","m3u8","mpd","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","filterSource","newsrc","srcobj","fixSource","mimetype","MediaLoader","j","techOrder","techName","isSupported","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","_ClickableComponent","update","update_","poster","setSrc","backgroundImage","sourceIsEncrypted","usingPlugin","eme","sessions","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","color","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","firstDesc","firstCaptions","preferredTrack","modes","trackList","userPref","cache_","selectedLanguage","clearDisplay","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","_track","updateDisplayState","overrides","textTrackSettings","getValues","cueDiv","displayState","textOpacity","backgroundColor","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","_i2","_track2","_j","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","s","h","gm","gh","Infinity","implementation","formatTime","TimeDisplay","updateContent","updateTextNode_","span","labelText_","textNode_","time","formattedTime_","oldNode","CurrentTimeDisplay","_TimeDisplay","getCache","DurationDisplay","TimeDivider","div","RemainingTimeDisplay","displayNegative","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","number","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","vertical","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent","percent_","part","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","right","pullTooltipBy","round","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","getCurrentTime_","liveCurrentTime","currentTime_","userSeek_","nextSeekedFromUser","seekableStart","videoWasPlaying","mouseDown","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","STEP_SECONDS","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","currentType","substring","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","volumeBarPointPx","updateVolume","MouseVolumeLevelDisplay","bottom","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","checkVolumeSupport","throttledHandleMouseMove","orientationClass","MuteToggle","checkMuteSupport","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","handleKeyPressHandler_","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","title","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","_MenuButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","featuresNativeAudioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","currentRate","newIndex","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","v","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","o","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","innerHTML","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","JSON","stringify","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","immediate","debounced","_later","cancel","debounce","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","handleVisibilityChange_","handleVisibilityChange","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","abs","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","sort","seekableStarts","behindLiveEdge","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","childNodes","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","enumerable","configurable","firstSourceWatch","resetSourceWatch_","innerDescriptor","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","defineLazyProperty","getValue","setter","writable","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","userAgent","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","patchCanPlayType","unpatchCanPlayType","r","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","playerHeight","hiddenChildren","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleStageClick_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","defaultsStyleEl","head","fill_","fluid","aspectRatio","crossorigin","links","getElementsByTagName","linkEl","techGet_","techCall_","_dimension","privDimension","parsedVal","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_width","_height","techEl","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","loop","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","promise","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userActions","click","doubleClick","userWasActive","cancelable","toggleFullscreenClass_","targetPlayer","isFs","matches","fullscreen","msMatchesSelector","_this9","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","media","reduceRight","_this10","resolve","play_","_this11","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","fsOptions","_this12","preferFullWindow","enterFullWindow","exitFullscreenHelper_","_this13","exitFullWindow","isFullWindow","docOrigOverflow","isPiP","isInPictureInPicture_","hotkeys","isContentEditable","excludeElement","activeElement","handleHotkeys","_hotkeys$fullscreenKe","fullscreenKey","keydownEvent","_hotkeys$muteKey","muteKey","_hotkeys$playPauseKey","playPauseKey","FSToggle","selectSource","_this14","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","b","handleSrc_","isRetry","_this15","resetRetryOnError_","middlewareSource","src_","notSupportedMessage","setTech","retryOnError","retry","stopListeningForErrors","str1","str2","_this16","sourceTech","_this17","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","_ref3","durationDisplay","currentSources","techAutoplay","newPoster","usingNativeControls_","_this18","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","handleMouseUpAndMouseLeave","screenX","screenY","isAudio_","enableAudioOnlyUI_","_this19","playerChildren","controlBarHeight","disableAudioOnlyUI_","_this20","exitPromises","enablePosterModeUI_","disablePosterModeUI_","_this21","String","toJSON","createModal","_this22","modal","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","_breakpoints","responsive_","loadMedia","_this23","_this$cache_$media","artwork","tt","getMedia","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","previousLogLevel_","newRates","navigator","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","instance","getEventHash","Plugin","VERSION","isBasic","p","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","hasPlugin","normalizeId","videojs","getPlayer","TypeError","defaultView","PlayerComponent","hook","hookOnce","original","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","extend","superClass","subClassMethods","subClass","methods","super_","mergeOptions","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","EventTarget","xhr","dom","resolveUrl","resolveManifestRedirect","handleManifestRedirect","req","responseURL","logger","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","results","findRange","findNextRange","printableRange","range","strArr","timeRangesToArray","timeRangesList","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","playlist","segment","parts","preloadHints","partTargetDuration","getPartsAndSegments","segments","si","pi","segmentIndex","partIndex","getLastParts","lastSegment","getKnownPartCount","preloadSegment","partCount","count","hint","liveEdgeDelay","master","endList","suggestedPresentationDelay","hasParts","serverControl","partHoldBack","holdBack","targetDuration","intervalDuration","endSequence","expired","mediaSequence","backward","precise","backwardDuration","forward","forwardDuration","totalDuration","sumDurations","defaultDuration","durationList","startIndex","endIndex","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","isBlacklisted","excludeUntil","isIncompatible","isEnabled","blacklisted","isLowestEnabledRendition","playlists","currentBandwidth","BANDWIDTH","MAX_VALUE","playlistMatch","resolvedUri","someAudioVariant","AUDIO","mediaGroups","groupName","isAudioOnly","variant","CODECS","_ret","Playlist","getMediaInfoForTime","_ref4","startingSegmentIndex","startingPartIndex","experimentalExactManifestTimings","partsAndSegments","partAndSegment","_partAndSegment","_i3","_i4","_partAndSegment2","isDisabled","isAes","estimateSegmentRequestTime","segmentDuration","bandwidth","bytesReceived","createPlaylistID","forEachMediaGroup","mediaType","groupKey","labelKey","mediaProperties","setupMediaPlaylist","playlistErrors_","addPropertiesToMaster","phonyUri","audioOnlyMaster","groupId","setupMediaPlaylists","resolveMediaGroupUris","mergeOptions$2","EventTarget$1","updateSegment","skipped","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMaster$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skip","skippedSegments","offset","oldSegments","newSegments","currentMap","oldSegment","newSegment","updateSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","vhs","logger_","_options","_options$withCredenti","_options$handleManife","handleManifestRedirects","vhs_","vhsOptions","customTagParsers","customTagMappers","experimentalLLHLS","handleMediaupdatetimeout_","parameters","canBlockReload","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","canSkipDateranges","parsedUri","searchParams","addLLHLSQueryDirectives","playlistRequestError","haveMetadata","playlistString","responseText","startingState","parseManifest_","onwarn","oninfo","manifestString","_ref$customTagParsers","_ref$customTagMappers","customParser","addParser","mapper","addTagMapper","manifest","parseManifest","playlistObject","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","onreadystatechange","abort","shouldDelay","delay","mediaChange","masterPlaylistRef","started","setupInitialPlaylist","srcUri","masterForMedia","videojsXHR","mergeOptions$1","callbackWrapper","reqResponse","responseType","responseTime","roundTripTime","requestTime","byteLength","headers","responseHeaders","timedout","aborted","statusCode","xhrFactory","XhrFunction","beforeRequest","Vhs","newOptions","originalAbort","segmentXhrHeaders","byterange","Range","textRange","formatHexString","formatAsciiString","fromCharCode","createTransferableMessage","transferable","bytes","buffer","byteOffset","initSegmentId","initSegment","segmentKeyId","hexDump","step","utils","tagDump","textRanges","getProgramTime","_ref$time","matchedSegment","segmentEnd","videoTimingInfo","transmuxedPresentationEnd","estimatedStart","transmuxedPresentationStart","findSegmentForPlayerTime","seekTime","programTimeObject","mediaSeconds","programTime","playerTime","dateTimeObject","transmuxerPrependedSeconds","offsetFromSegmentStart","getTime","playerTimeToProgramTime","programDateTime","toISOString","seekToProgramTime","_ref2$retryCount","retryCount","seekTo","_ref2$pauseAfterSeek","pauseAfterSeek","verifyProgramDateTimeTags","lastSegmentStart","lastSegmentDuration","findSegmentForProgramTime","mediaOffset","comparisonTimeStamp","segmentDateTime","segmentTimeEpoch","getOffsetFromTimestamp","seekToTime","callbackOnCompleted","dashPlaylistUnchanged","sidx","aSegment","bSegment","aByterange","bByterange","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","DashPlaylistLoader","srcUrlOrPlaylist","masterPlaylistLoader","masterPlaylistLoader_","isMaster_","refreshXml_","refreshMedia_","loadedPlaylists_","srcUrl","sidxMapping_","childPlaylist_","requestErrored_","addSidxSegments_","sidxKey","fin","sidxMapping","subarray","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","beforeSend","overrideMimeType","total","loaded","containerRequest","container","internal","blacklistDuration","_playlist$sidx$bytera","mediaRequest_","minimumUpdatePeriodTimeout_","createMupOnMedia_","hasPendingRequest","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMaster_","masterChanged","haveMaster_","masterXml_","date","masterLoaded_","handleMaster_","syncClientServerClock_","done","utcTiming","clientOffset_","serverTime","oldMaster","newMaster","masterXml","clientOffset","previousManifest","manifestUri","parseMasterXml","noChanges","minimumUpdatePeriod","timelineStarts","playlistUpdate","group","_playlistUpdate","updateMaster","location","locations","mpl","mup","createMUPTimeout_","mediaGroupSidx","filterChangedSidxMappings","mediaID","mediaChanged","createMediaUpdateTimeout","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","browserWorkerPolyFill","workerObj","factory","objectUrl","URL","createObjectURL","Blob","blob","BlobBuilder","getBlob","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","Stream","init","pipe","destination","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mdat","mfhd","minf","moof","moov","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","stream","MAX_UINT32$1","pow","numbers","getUint64","uint8","dv","DataView","getBigUint64","MAX_SAFE_INTEGER","getUint32","MAX_UINT32","avc1","avcC","btrt","dref","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","Uint8Array","charCodeAt","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","boxes","flags","samples","dependsOn","isDependedOn","hasRedundancy","videoSample","audioSample","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","audioTrun","videoTrun","trunHeader","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","mp4Generator","fileType","movie","sampleForFrame","frame","dataOffset","pts","dts","keyFrame","frameUtils","nalUnits","currentNal","currentFrame","frames","nalCount","nalUnitType","currentGop","gops","baseDataOffset","nalsByteLength","numberOfNals","view","highPrefix","lowPrefix","zeroFill","silence_1","coneOfSilence","metaTable","arr","ONE_SECOND_IN_TS$4","timestamp","sampleRate","timelineStartPts","keepOriginalTimestamps","clock","audioFrameUtils","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","frameDuration","silentFrame","firstFrame","audioGapDuration","audioFillFrameCount","audioFillDuration","ceil","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","array","sum","sumFrameByteLengths","ONE_SECOND_IN_TS$3","trackDecodeInfo","maxSegmentDts","maxSegmentPts","timelineStartInfo","captionPacketParser","payloadType","payloadSize","sei","userData","ccData","newLength","newData","emulationPreventionBytesPositions","sourceIndex","CaptionStream$1","CaptionStream","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","captionServices","cc","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","newLine","beforeRowOverflow","isEmpty","addText","backspace","row","substr","Cea708Service","serviceNum","encoding","currentWindow","windows","createTextDecoder","startPts","win","setCurrentWindow","TextDecoder","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","service","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","byteIndex","flushDisplayed","_char","charCodeArray","isMultiByte","extended","currentByte","nextByte","decode","newCode","get708CharFromCode","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","ROWS","createDisplayBuffer","BOTTOM_ROW","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","_char2","newBaseRow","format","reverse","popOn","baseRow","rollUp","paintOn","captionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","TYPE_SHARED","handleRollover$1","reference","direction","TimestampRolloverStream$1","TimestampRolloverStream","lastDTS","referenceDTS","type_","discontinuity","_MetadataStream","timestampRolloverStream","percentEncode$1","parseUtf8","decodeURIComponent","parseSyncSafeInteger$1","tagParsers","TXXX","WXXX","PRIV","owner","unescape","privateData","tagSize","bufferSize","dispatchType","chunk","frameStart","frameSize","dataAlignmentIndicator","d","timeStamp","_TransportPacketStream","_TransportParseStream","_ElementaryStream","metadataStream","MP2T_PACKET_LENGTH$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","psi","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","streamType","pid","processPes_","STREAM_TYPES","h264","adts","segmentHadPmt","timedMetadata","forceFlush","packetFlushable","fragment","trackId","pes","ptsDtsFlags","startPrefix","packetLength","parsePes","codec","flushStreams_","m2ts","PAT_PID","MP2T_PACKET_LENGTH","TransportPacketStream","TransportParseStream","ElementaryStream","MetadataStream","_AdtsStream","m2ts_1","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","_H264Stream","_NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","expGolomb","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","syncPoint","swapBuffer","len","currentPts","currentDts","discardEmulationPreventionBytes","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","_AacStream","H264Stream","NalByteStream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","returnSize","getId3Offset","parseSyncSafeInteger","isLikelyAacData","parseAdtsSize","lowThree","middle","parseType","parseSampleRate","parseAacTimestamp","percentEncode","setTimestamp","bytesLeft","tempLength","_VideoSegmentStream","_AudioSegmentStream","_Transmuxer","_CoalesceStream","audioProperties","videoProperties","ONE_SECOND_IN_TS$1","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","nearestDistance","alignIndex","gopIndex","align","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","id3","captionStreams","cueTime","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","parseStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","getTracks","getTimescaleFromMediaHeader","Transmuxer","VideoSegmentStream","AudioSegmentStream","AUDIO_PROPERTIES","VIDEO_PROPERTIES","bin","parseType_1","toUnsigned$2","findBox_1","findBox","subresults","toUnsigned$1","getUint64$1","parseTfdt","parseSampleFlags_1","parseTrun","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTfhd","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","commonjsGlobal","globalThis","window","g","window_1","mapToSample","approximateOffset","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","truns","allSamples","BigInt","parseSamples","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","findSeiNals","captionParser","segmentCache","timescale","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","trackNals","parseEmbeddedCaptions","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","toUnsigned","toHexString","lowestTime","baseTime","scale","isFinite","traks","tkhdVersion","getUint8","sampleDescriptions","codecConfig","codecBox","probe$2","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","parsePesTime","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","handleRollover","probe","ts","ONE_SECOND_IN_TS","SYNC_BYTE","parseAudioPes_","pesType","parsed","endLoop","table","parseVideoPes_","firstKeyFrame","console","inspectTs_","parsePsi_","tsInspector","baseTimestamp","audioCount","audioTimescale","inspectAac_","segmentInfo","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","adjustTimestamp_","MessageHandlers","initArray","typedArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","wireTransmuxerEvents","pushMp4Captions","trackIds","probeMp4StartTime","probeMp4Tracks","probeTs","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","clearAllMp4Captions","clearParsedMp4Captions","setTimestampOffset","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","transmuxedData","waitForEndedTimelineEvent","currentTransmux","_event$data$segment","videoFrameDtsTime","videoFramePtsTime","handleData_","handleGopInfo_","handleDone_","dequeue","ArrayBuffer","transmuxQueue","processAction","enqueueAction","transmux","segmentTransmuxer","term","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","abortAll","activeXhrs","handleErrors","handleKeyResponse","objects","finishProcessingFn","errorObj","Uint32Array","parseInitSegment","_callback","handleSegmentResponse","newBytes","stringToArrayBuffer","lastReachedChar","stats","getRequestStats","encryptedBytes","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","probeResult","id3Frames","handleSegmentBytes","_ref5","bytesAsUint8Array","isFmp4","audioCodec","videoCodec","finishLoading","_ref6","decrypt","_ref7","keyBytes","decryptionWorker","decryptionHandler","decrypted","encrypted","iv","waitForCompletion","_ref9","didError","segmentFinish","_ref8","requestId","decryptedBytes","decryptSegment","endOfAllRequests","parseError","handleProgress","_ref11","progressFn","progressEvent","getProgressStats","firstBytesReceivedAt","mediaSegmentRequest","_ref12","xhrOptions","abortFn","keyXhr","mapKeyXhr","initSegmentOptions","initSegmentRequestCallback","handleInitSegmentResponse","initSegmentXhr","segmentRequestOptions","segmentXhr","loadendState","activeXhr","_ref10","calledAbortFn","handleLoadEnd","logFn$1","isMaat","mediaAttributes","unwrapCodecList","codecList","codecs","codecCount","codecObj","codecsForPlaylist","codecInfo","getCodecs","audioGroup","defaultCodecs","logFn","representationToString","representation","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","simpleSelector","playerBandwidth","playerWidth","limitRenditionByPlayerDimensions","masterPlaylistController","getAudioTrackPlaylists_","audioOnly","sortedPlaylistReps","RESOLUTION","enabledPlaylistReps","rep","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","_chosenRep","haveResolution","resolutionBestRepList","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","resolutionBestRep","experimentalLeastPixelDiffSelector","leastPixelDiffList","pixelDiff","chosenRep","_type","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","systemBandwidth","masterPlaylistController_","addMetadata","inbandTextTracks","metadataArray","videoDuration","Cue","metadataTrack","metadataTrack_","deprecateOldCue","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","removeCuesFromTrack","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","segmentInfoString","startOfSegment","_segmentInfo$playlist","_segmentInfo$playlist2","mediaIndex","timeline","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","shouldWaitForTimelineChange","timelineChangeController","currentTimeline","segmentTimeline","loaderType","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","segmentTooLong","maxDuration","getTroublesomeSegmentDurationMessage","sourceType","timingInfos","typeTimingInfo","mediaDuration","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","_videojs$EventTarget","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","currentTimeline_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncController","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","setAudio","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","checkForAbort_","_error","endOfStream","buffered_","getMediaInfo_","videoBuffered","audioBuffered","initSegmentForMap","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","init_","resetEverything","newPlaylist","oldPlaylist","syncInfo","setDateTimeMappingForStart","oldId","resyncLoader","resetLoader","mediaSequenceDiff","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","mapping","updatedBuffer","removeGopBuffer","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","getSyncPoint","targetTime","timelineSegments","getSyncSegmentCandidate","_Playlist$getMediaInf","_partIndex","nextSegment","lastSegmentLastPart","generateSegmentInfo_","forceTimestampOffset","random","overrideCheck","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","currentTimePts","gopsSafeToAlignWith","videoTimestampOffset","timestampOffsetForSegment","earlyAbortWhenNeeded_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","timeUntilRebuffer","switchCandidate","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","rebufferingImpact","noRebufferingPlaylists","estimate","minRebufferMaxBandwidthSelector","timeSavedBySwitching","minimumTimeSaving","handleAbort_","handleProgress_","simpleSegment","handleTrackInfo_","checkForIllegalMediaSwitch","akeys","bkeys","shallowEqual","handleTimingInfo_","timeType","timingInfoProperty","handleCaptions_","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","_captionTracks$trackN","instreamId","def","captionService","createCaptionsTrackIfNotExists","captionArray","addCaptionData","handleId3_","inBandMetadataTrackDispatchType","createMetadataTrackIfNotExists","processMetadataQueue_","callQueue","fun","loadQueue","getCurrentMediaInfo_","setTimeMapping_","updateMediaSecondsLoaded_","firstVideoFrameTimeForData","useVideoTimingInfo","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","appendData_","changedTimestampOffset","getInitSegmentAndUpdateState_","handleQuotaExceededError_","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","MIN_BACK_BUFFER","handleAppendError_","segmentObj","tempBuffer","concatSegments","appendBuffer","handleSegmentTimingInfo_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","segmentRequestFinished_","removeToTime","trimTime","maxTrimTime","safeBackBufferTrimTime","previousSegment","saveTransferStats_","saveBandwidthRelatedStats_","handleTimeout_","updateGopBuffer","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","startingMedia","illegalMediaSwitch","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","segmentProcessingTime","segmentProcessingThroughput","custom","dateTimeString","resolution","Vhs$1","toTitleCase","bufferTypes","_updating","sourceBuffer","queuePending","shiftQueue","queueIndex","queueEntry","nextQueueIndexOfType","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","_duration","mime","addSourceBuffer","removeSourceBuffer","changeType","pushQueue","onUpdateend","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","initializedEme","hasCreatedSourceBuffers","hasInitializedAnyEme","createSourceBuffers","addOrChangeSourceBuffers","canRemoveSourceBuffer","canChangeType","processedAppend_","videoBuffer","que","audioBuffer","bufferA","bufferB","arity","extents","bufferIntersection","setDuration","uint8ToUtf8","uintArray","escape","VTT_LINE_TERMINATORS","_char3","VTTSegmentLoader","_SegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","combinedByteLength","combinedSegment","timestampOffsetForTimeline","skipEmptySegments_","stopForError","loadHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","duplicates","occurrences","dupe","removeDuplicateCuesFromTrack","decoder","decodeBytesToString","timestampmap","MPEGTS","LOCAL","ontimestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","syncPointStrategies","run","timelineToDatetimeMappings","lastDistance","datetimeMapping","z","discontinuityStarts","discontinuitySequence","discontinuitySync","discontinuities","SyncController","syncPoints","runStrategies_","selectSyncPoint_","getExpiredTime","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","firstSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","workerCode","createCommonjsModule","basedir","module","exports","require","base","commonjsRequire","createClass","_defineProperties","Constructor","protoProps","staticProps","__esModule","setPrototypeOf","_setPrototypeOf","inheritsLoose","create","_length","aesTables","AES","tmp","xInv","x2","x4","tEnc","tDec","tables","encTable","decTable","sbox","sboxInv","th","precompute","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","b2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","_Stream","jobs","timeout_","processJob_","job","ntoh","word","Decrypter","initVector","STEP","encrypted32","Int32Array","asyncStream_","decryptChunk_","padded","init0","init1","init2","init3","wordIx","decipher","decrypted32","isView","audioTrackKind_","characteristics","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","segmentLoaders","mediaTypes","blacklistCurrentPlaylist","activeTrack","activeGroup","defaultTrack","onTrackChanged","SUBTITLES","setupListeners","requestOptions","initialize","_settings$mediaTypes$","groups","variantLabel","isMasterPlaylist","_settings$mediaTypes$2","forced","autoselect","_settings$mediaTypes$3","newProps","groupMatch","setupMediaGroups","_settings$segmentLoad3","audioSegmentLoader","mainSegmentLoader","variants","groupKeys","groupPropertyList","onGroupChanged","_settings$segmentLoad","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","onGroupChanging","_settings$segmentLoad2","lastTrack","mpc","selectPlaylist","fastQualityChange_","activeTrack_","onAudioTrackChanged","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","MasterPlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","experimentalBufferBasedABR","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","createMediaTypes","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","segmentLoaderSettings","setupMasterPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","appendsToLoadedData_","timeToLoadedData_","checkABR_","nextPlaylist","shouldSwitchToMedia_","switchMedia_","cause","newId","abrTimer_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","updatedPlaylist","selectedMedia","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","handleUpdatedMediaPlaylist","lastExcludeReason_","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","mediaGroup","currentPlaylist","bufferLowWaterLine","bufferHighWaterLine","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","_logLine","shouldSwitchToMedia","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mediaSecondsLoaded_","smoothQualityChange_","mainMediaInfo","absolutePlaylistEnd","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","areMediaTypesKnown_","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","unsupportedAudio","unsupportedCodecs","supporter","switchMessages","newCodec","oldCodec","codecString","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","blacklistReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","cueOut","_segment$cueOutCont$s","cueOutCont","adOffset","adTotal","updateAdCues","newMax","Representation","vhsHandler","playlistID","changePlaylistFn","qualityChangeFunction","smoothQualityChange","incompatible","currentlyEnabled","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","timer_","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","cancelTimer_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","isRangeDifferent","playlistId","waiting_","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","nextRange","currentRange","livePoint","videoUnderflow_","difference","skipTheGap_","allowedEnd","gap","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","findGaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","initPlugin","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reloadSourceOnError","version$4","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","comparePlaylistResolution","leftWidth","rightWidth","LOCAL_STORAGE_KEY","handleVhsMediaChange","qualityLevels","selectedIndex_","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","initializeMediaKeys","keySystemsOptionsArr","keySystems","keySystemsArr","contentProtection","keySystemsOptions","keySystemsObj","keySystem","keySystemOptions","pssh","getAllPsshKeySystemsOptions","initializationFinishedPromises","keySessionCreatedPromises","race","setupEmeOptions","sourceOptions","mainPlaylist","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","emeKeySystems","getVhsLocalStorage","storedObject","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","VhsHandler","hls","initialBandwidth","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","useBandwidthFromLocalStorage","useNetworkInformationApi","option","dataUri","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","tenMbpsAsBitsPerSecond","networkInfoBandwidthEstBitsPerSec","downlink","invThroughput","invBandwidth","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","timeToLoadedData","currentTech","playerDimensions","objectToStore","updateVhsLocalStorage","representations","setupEme_","setupQualityLevels_","mediaSourceUrl_","createKeySessions_","audioPlaylistLoader","handleWaitingForKey_","didSetupEmeOptions","masterPlaylist","_videojs$log","excludedHDPlaylists","qualityLevels_","addQualityLevel","dash","convertToProgramTime","VhsSourceHandler","_videojs$mergeOptions","_videojs$mergeOptions2","_videojs$mergeOptions3","_videojs$mergeOptions4","_videojs$mergeOptions5","legacyOverrideNative","supportedType"],"sourceRoot":""}