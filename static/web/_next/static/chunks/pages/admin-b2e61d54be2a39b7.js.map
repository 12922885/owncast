{"version":3,"file":"static/chunks/pages/admin-b2e61d54be2a39b7.js","mappings":"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","sources":["webpack://_N_E/?a37b","webpack://_N_E/./components/admin/LogTable.tsx","webpack://_N_E/./components/admin/StreamHealthOverview.tsx","webpack://_N_E/./components/admin/NewsFeed.tsx","webpack://_N_E/./components/admin/Offline.tsx","webpack://_N_E/./pages/admin/index.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin\",\n      function () {\n        return require(\"private-next-pages/admin/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin\"])\n      });\n    }\n  ","import React, { FC } from 'react';\nimport { Table, Tag, Typography } from 'antd';\nimport Linkify from 'react-linkify';\nimport { SortOrder } from 'antd/lib/table/interface';\nimport format from 'date-fns/format';\n\nconst { Title } = Typography;\n\nfunction renderColumnLevel(text, entry) {\n  let color = 'black';\n\n  if (entry.level === 'warning') {\n    color = 'orange';\n  } else if (entry.level === 'error') {\n    color = 'red';\n  }\n\n  return <Tag color={color}>{text}</Tag>;\n}\n\nfunction renderMessage(text) {\n  return <Linkify>{text}</Linkify>;\n}\n\nexport type LogTableProps = {\n  logs: object[];\n  pageSize: number;\n};\n\nexport const LogTable: FC<LogTableProps> = ({ logs, pageSize }) => {\n  if (!logs?.length) {\n    return null;\n  }\n  const columns = [\n    {\n      title: 'Level',\n      dataIndex: 'level',\n      key: 'level',\n      filters: [\n        {\n          text: 'Info',\n          value: 'info',\n        },\n        {\n          text: 'Warning',\n          value: 'warning',\n        },\n        {\n          text: 'Error',\n          value: 'Error',\n        },\n      ],\n      onFilter: (level, row) => row.level.indexOf(level) === 0,\n      render: renderColumnLevel,\n    },\n    {\n      title: 'Timestamp',\n      dataIndex: 'time',\n      key: 'time',\n      render: timestamp => {\n        const dateObject = new Date(timestamp);\n        return format(dateObject, 'pp P');\n      },\n      sorter: (a, b) => new Date(a.time).getTime() - new Date(b.time).getTime(),\n      sortDirections: ['descend', 'ascend'] as SortOrder[],\n      defaultSortOrder: 'descend' as SortOrder,\n    },\n    {\n      title: 'Message',\n      dataIndex: 'message',\n      key: 'message',\n      render: renderMessage,\n    },\n  ];\n\n  return (\n    <div className=\"logs-section\">\n      <Title>Logs</Title>\n      <Table\n        size=\"middle\"\n        dataSource={logs}\n        columns={columns}\n        rowKey={row => row.time}\n        pagination={{ pageSize: pageSize || 20 }}\n      />\n    </div>\n  );\n};\n","import { Alert, Button, Col, Row, Statistic, Typography } from 'antd';\nimport dynamic from 'next/dynamic';\nimport Link from 'next/link';\nimport React, { FC, useContext } from 'react';\nimport { ServerStatusContext } from '../../utils/server-status-context';\n\n// Lazy loaded components\n\nconst CheckCircleOutlined = dynamic(() => import('@ant-design/icons/CheckCircleOutlined'), {\n  ssr: false,\n});\n\nconst ExclamationCircleOutlined = dynamic(\n  () => import('@ant-design/icons/ExclamationCircleOutlined'),\n  {\n    ssr: false,\n  },\n);\n\nexport type StreamHealthOverviewProps = {\n  showTroubleshootButton?: Boolean;\n};\n\nexport const StreamHealthOverview: FC<StreamHealthOverviewProps> = ({ showTroubleshootButton }) => {\n  const serverStatusData = useContext(ServerStatusContext);\n  const { health } = serverStatusData;\n  if (!health) {\n    return null;\n  }\n\n  const { healthy, healthPercentage, message, representation } = health;\n  let color = '#3f8600';\n  let icon: 'success' | 'info' | 'warning' | 'error' = 'info';\n  if (healthPercentage < 80) {\n    color = '#cf000f';\n    icon = 'error';\n  } else if (healthPercentage < 30) {\n    color = '#f0ad4e';\n    icon = 'error';\n  }\n\n  return (\n    <div>\n      <Row gutter={8}>\n        <Col span={12}>\n          <Statistic\n            title=\"Healthy Stream\"\n            value={healthy ? 'Yes' : 'No'}\n            valueStyle={{ color }}\n            prefix={healthy ? <CheckCircleOutlined /> : <ExclamationCircleOutlined />}\n          />\n        </Col>\n        <Col span={12}>\n          <Statistic\n            title=\"Playback Health\"\n            value={healthPercentage}\n            valueStyle={{ color }}\n            suffix=\"%\"\n          />\n        </Col>\n      </Row>\n      <Row style={{ display: representation < 100 && representation !== 0 ? 'grid' : 'none' }}>\n        <Typography.Text\n          type=\"secondary\"\n          style={{ textAlign: 'center', fontSize: '0.7em', opacity: '0.3' }}\n        >\n          Stream health represents {representation}% of all known players. Other player status is\n          unknown.\n        </Typography.Text>\n      </Row>\n      <Row\n        gutter={16}\n        style={{ width: '100%', display: message ? 'grid' : 'none', marginTop: '10px' }}\n      >\n        <Col span={24}>\n          <Alert\n            message={message}\n            type={icon}\n            showIcon\n            action={\n              showTroubleshootButton && (\n                <Link passHref href=\"/stream-health\">\n                  <Button size=\"small\" type=\"text\" style={{ color: 'black' }}>\n                    TROUBLESHOOT\n                  </Button>\n                </Link>\n              )\n            }\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n};\n\nStreamHealthOverview.defaultProps = {\n  showTroubleshootButton: true,\n};\n","/* eslint-disable camelcase */\n/* eslint-disable react/no-danger */\nimport React, { useState, useEffect, FC } from 'react';\nimport { Collapse, Typography, Skeleton } from 'antd';\nimport format from 'date-fns/format';\n\nimport { fetchExternalData } from '../../utils/apis';\n\nconst { Panel } = Collapse;\nconst { Title, Link } = Typography;\n\nconst OWNCAST_FEED_URL = 'https://owncast.online/news/index.json';\nconst OWNCAST_BASE_URL = 'https://owncast.online';\n\nexport type ArticleProps = {\n  title: string;\n  url: string;\n  content_html: string;\n  date_published: string;\n};\n\nconst ArticleItem: FC<ArticleProps> = ({\n  title,\n  url,\n  content_html: content,\n  date_published: date,\n}) => {\n  const dateObject = new Date(date);\n  const dateString = format(dateObject, 'MMM dd, yyyy, HH:mm');\n  return (\n    <article>\n      <Collapse>\n        <Panel header={title} key={url}>\n          <p className=\"timestamp\">\n            {dateString} (\n            <Link href={`${OWNCAST_BASE_URL}${url}`} target=\"_blank\" rel=\"noopener noreferrer\">\n              Link\n            </Link>\n            )\n          </p>\n          <div dangerouslySetInnerHTML={{ __html: content }} />\n        </Panel>\n      </Collapse>\n    </article>\n  );\n};\n\nexport const NewsFeed = () => {\n  const [feed, setFeed] = useState<ArticleProps[]>([]);\n  const [loading, setLoading] = useState<Boolean>(true);\n\n  const getFeed = async () => {\n    setLoading(false);\n\n    try {\n      const result = await fetchExternalData(OWNCAST_FEED_URL);\n      if (result?.items.length > 0) {\n        setFeed(result.items);\n      }\n    } catch (error) {\n      console.log('==== error', error);\n    }\n  };\n\n  useEffect(() => {\n    getFeed();\n  }, []);\n\n  const loadingSpinner = loading ? <Skeleton loading active /> : null;\n  const noNews = !loading && feed.length === 0 ? <div>No news.</div> : null;\n\n  return (\n    <section className=\"news-feed form-module\">\n      <Title level={2}>News &amp; Updates from Owncast</Title>\n      {loadingSpinner}\n      {feed.map(item => (\n        <ArticleItem {...item} key={item.url} />\n      ))}\n\n      {noNews}\n    </section>\n  );\n};\n","import { Card, Col, Row, Typography } from 'antd';\nimport Link from 'next/link';\nimport { FC, useContext } from 'react';\nimport dynamic from 'next/dynamic';\nimport { LogTable } from './LogTable';\nimport { OwncastLogo } from '../common/OwncastLogo/OwncastLogo';\nimport { NewsFeed } from './NewsFeed';\nimport { ConfigDetails } from '../../types/config-section';\nimport { ServerStatusContext } from '../../utils/server-status-context';\n\nconst { Paragraph, Text } = Typography;\n\nconst { Title } = Typography;\nconst { Meta } = Card;\n\n// Lazy loaded components\n\nconst BookTwoTone = dynamic(() => import('@ant-design/icons/BookTwoTone'), {\n  ssr: false,\n});\n\nconst MessageTwoTone = dynamic(() => import('@ant-design/icons/MessageTwoTone'), {\n  ssr: false,\n});\n\nconst PlaySquareTwoTone = dynamic(() => import('@ant-design/icons/PlaySquareTwoTone'), {\n  ssr: false,\n});\n\nconst ProfileTwoTone = dynamic(() => import('@ant-design/icons/ProfileTwoTone'), {\n  ssr: false,\n});\n\nfunction generateStreamURL(serverURL, rtmpServerPort) {\n  return `rtmp://${serverURL.replace(/(^\\w+:|^)\\/\\//, '')}:${rtmpServerPort}/live`;\n}\n\nexport type OfflineProps = {\n  logs: any[];\n  config: ConfigDetails;\n};\n\nexport const Offline: FC<OfflineProps> = ({ logs = [], config }) => {\n  const serverStatusData = useContext(ServerStatusContext);\n\n  const { serverConfig } = serverStatusData || {};\n  const { rtmpServerPort } = serverConfig;\n  const instanceUrl = global.window?.location.hostname || '';\n\n  let rtmpURL;\n  if (instanceUrl && rtmpServerPort) {\n    rtmpURL = generateStreamURL(instanceUrl, rtmpServerPort);\n  }\n\n  const data = [\n    {\n      icon: <BookTwoTone twoToneColor=\"#6f42c1\" />,\n      title: 'Use your broadcasting software',\n      content: (\n        <div>\n          <a\n            href=\"https://owncast.online/docs/broadcasting/?source=admin\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn how to point your existing software to your new server and start streaming your\n            content.\n          </a>\n          <div className=\"stream-info-container\">\n            <Text strong className=\"stream-info-label\">\n              Streaming URL:\n            </Text>\n            {rtmpURL && (\n              <Paragraph className=\"stream-info-box\" copyable>\n                {rtmpURL}\n              </Paragraph>\n            )}\n            <Text strong className=\"stream-info-label\">\n              Streaming Keys:\n            </Text>\n            <Text strong className=\"stream-info-box\">\n              <Link href=\"/admin/config/server\"> View </Link>\n            </Text>\n          </div>\n        </div>\n      ),\n    },\n    {\n      icon: <PlaySquareTwoTone twoToneColor=\"#f9826c\" />,\n      title: 'Embed your video onto other sites',\n      content: (\n        <div>\n          <a\n            href=\"https://owncast.online/docs/embed?source=admin\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn how you can add your Owncast stream to other sites you control.\n          </a>\n        </div>\n      ),\n    },\n  ];\n\n  if (!config?.chatDisabled) {\n    data.push({\n      icon: <MessageTwoTone twoToneColor=\"#0366d6\" />,\n      title: 'Chat is disabled',\n      content: <span>Chat will continue to be disabled until you begin a live stream.</span>,\n    });\n  }\n\n  if (!config?.yp?.enabled) {\n    data.push({\n      icon: <ProfileTwoTone twoToneColor=\"#D18BFE\" />,\n      title: 'Find an audience on the Owncast Directory',\n      content: (\n        <div>\n          List yourself in the Owncast Directory and show off your stream. Enable it in{' '}\n          <Link href=\"/config-public-details\">settings.</Link>\n        </div>\n      ),\n    });\n  }\n\n  if (!config?.federation?.enabled) {\n    data.push({\n      icon: <img alt=\"fediverse\" width=\"20px\" src=\"fediverse-white.png\" />,\n      title: 'Add your Owncast instance to the Fediverse',\n      content: (\n        <div>\n          <Link href=\"/config-federation\">Enable Owncast social</Link> features to have your\n          instance join the Fediverse, allowing people to follow, share and engage with your live\n          stream.\n        </div>\n      ),\n    });\n  }\n\n  return (\n    <>\n      <Row>\n        <Col span={12} offset={6}>\n          <div className=\"offline-intro\">\n            <span className=\"logo\">\n              <OwncastLogo variant=\"simple\" />\n            </span>\n            <div>\n              <Title level={2}>No stream is active</Title>\n              <p>You should start one.</p>\n            </div>\n          </div>\n        </Col>\n      </Row>\n      <Row gutter={[16, 16]} className=\"offline-content\">\n        <Col span={12} xs={24} sm={24} md={24} lg={12} className=\"list-section\">\n          {data.map(item => (\n            <Card key={item.title} size=\"small\" bordered={false}>\n              <Meta avatar={item.icon} title={item.title} description={item.content} />\n            </Card>\n          ))}\n        </Col>\n        <Col span={12} xs={24} sm={24} md={24} lg={12}>\n          <NewsFeed />\n        </Col>\n      </Row>\n      <LogTable logs={logs} pageSize={5} />\n    </>\n  );\n};\nexport default Offline;\n","/* eslint-disable @next/next/no-css-tags */\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Skeleton, Card, Statistic, Row, Col } from 'antd';\nimport { formatDistanceToNow, formatRelative } from 'date-fns';\nimport dynamic from 'next/dynamic';\nimport { ServerStatusContext } from '../../utils/server-status-context';\nimport { LogTable } from '../../components/admin/LogTable';\nimport { Offline } from '../../components/admin/Offline';\nimport { StreamHealthOverview } from '../../components/admin/StreamHealthOverview';\n\nimport { LOGS_WARN, fetchData, FETCH_INTERVAL } from '../../utils/apis';\nimport { formatIPAddress, isEmptyObject } from '../../utils/format';\nimport { NewsFeed } from '../../components/admin/NewsFeed';\n\n// Lazy loaded components\n\nconst UserOutlined = dynamic(() => import('@ant-design/icons/UserOutlined'), {\n  ssr: false,\n});\n\nconst ClockCircleOutlined = dynamic(() => import('@ant-design/icons/ClockCircleOutlined'), {\n  ssr: false,\n});\n\nfunction streamDetailsFormatter(streamDetails) {\n  return (\n    <ul className=\"statistics-list\">\n      <li>\n        {streamDetails.videoCodec || 'Unknown'} @ {streamDetails.videoBitrate || 'Unknown'} kbps\n      </li>\n      <li>{streamDetails.framerate || 'Unknown'} fps</li>\n      <li>\n        {streamDetails.width} x {streamDetails.height}\n      </li>\n    </ul>\n  );\n}\n\nexport default function Home() {\n  const serverStatusData = useContext(ServerStatusContext);\n  const { broadcaster, serverConfig: configData } = serverStatusData || {};\n  const { remoteAddr, streamDetails } = broadcaster || {};\n\n  const encoder = streamDetails?.encoder || 'Unknown encoder';\n\n  const [logsData, setLogs] = useState([]);\n  const getLogs = async () => {\n    try {\n      const result = await fetchData(LOGS_WARN);\n      setLogs(result);\n    } catch (error) {\n      console.log('==== error', error);\n    }\n  };\n  const getMoreStats = () => {\n    getLogs();\n  };\n\n  useEffect(() => {\n    getMoreStats();\n\n    let intervalId = null;\n    intervalId = setInterval(getMoreStats, FETCH_INTERVAL);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  if (isEmptyObject(configData) || isEmptyObject(serverStatusData)) {\n    return (\n      <>\n        <Skeleton active />\n        <Skeleton active />\n        <Skeleton active />\n      </>\n    );\n  }\n\n  if (!broadcaster) {\n    return <Offline logs={logsData} config={configData} />;\n  }\n\n  // map out settings\n  const videoQualitySettings = serverStatusData?.currentBroadcast?.outputSettings?.map(setting => {\n    const { audioPassthrough, videoPassthrough, audioBitrate, videoBitrate, framerate } = setting;\n\n    const audioSetting = audioPassthrough\n      ? `${streamDetails.audioCodec || 'Unknown'}, ${streamDetails.audioBitrate} kbps`\n      : `${audioBitrate || 'Unknown'} kbps`;\n\n    const videoSetting = videoPassthrough\n      ? `${streamDetails.videoBitrate || 'Unknown'} kbps, ${streamDetails.framerate} fps ${\n          streamDetails.width\n        } x ${streamDetails.height}`\n      : `${videoBitrate || 'Unknown'} kbps, ${framerate} fps`;\n\n    return (\n      <div className=\"stream-details-item-container\">\n        <Statistic\n          className=\"stream-details-item\"\n          title=\"Outbound Video Stream\"\n          value={videoSetting}\n        />\n        <Statistic\n          className=\"stream-details-item\"\n          title=\"Outbound Audio Stream\"\n          value={audioSetting}\n        />\n      </div>\n    );\n  });\n\n  // inbound\n  const { viewerCount, sessionPeakViewerCount } = serverStatusData;\n\n  const streamAudioDetailString = `${streamDetails.audioCodec}, ${\n    streamDetails.audioBitrate || 'Unknown'\n  } kbps`;\n\n  const broadcastDate = new Date(broadcaster.time);\n\n  return (\n    <div className=\"home-container\">\n      <div className=\"sections-container\">\n        <div className=\"online-status-section\">\n          <Card size=\"small\" type=\"inner\" className=\"online-details-card\">\n            <Row gutter={[16, 16]} align=\"middle\">\n              <Col span={8} sm={24} md={8}>\n                <Statistic\n                  title={`Stream started ${formatRelative(broadcastDate, Date.now())}`}\n                  value={formatDistanceToNow(broadcastDate)}\n                  prefix={<ClockCircleOutlined />}\n                />\n              </Col>\n              <Col span={8} sm={24} md={8}>\n                <Statistic title=\"Viewers\" value={viewerCount} prefix={<UserOutlined />} />\n              </Col>\n              <Col span={8} sm={24} md={8}>\n                <Statistic\n                  title=\"Peak viewer count\"\n                  value={sessionPeakViewerCount}\n                  prefix={<UserOutlined />}\n                />\n              </Col>\n            </Row>\n            <StreamHealthOverview />\n          </Card>\n        </div>\n\n        <Row gutter={[16, 16]} className=\"section stream-details-section\">\n          <Col className=\"stream-details\" span={12} sm={24} md={24} lg={12}>\n            <Card\n              size=\"small\"\n              title=\"Outbound Stream Details\"\n              type=\"inner\"\n              className=\"outbound-details\"\n            >\n              {videoQualitySettings}\n            </Card>\n\n            <Card size=\"small\" title=\"Inbound Stream Details\" type=\"inner\">\n              <Statistic\n                className=\"stream-details-item\"\n                title=\"Input\"\n                value={`${encoder} ${formatIPAddress(remoteAddr)}`}\n              />\n              <Statistic\n                className=\"stream-details-item\"\n                title=\"Inbound Video Stream\"\n                value={streamDetails}\n                formatter={streamDetailsFormatter}\n              />\n              <Statistic\n                className=\"stream-details-item\"\n                title=\"Inbound Audio Stream\"\n                value={streamAudioDetailString}\n              />\n            </Card>\n          </Col>\n\n          <Col span={12} xs={24} sm={24} md={24} lg={12}>\n            <NewsFeed />\n          </Col>\n        </Row>\n      </div>\n      <br />\n      <LogTable logs={logsData} pageSize={5} />\n    </div>\n  );\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","Title","Typography","renderColumnLevel","text","entry","color","level","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Tag","renderMessage","Linkify","LogTable","logs","pageSize","param","length","jsxs","div","className","Table","size","dataSource","columns","title","dataIndex","key","filters","value","onFilter","row","indexOf","render","timestamp","dateObject","Date","format","sorter","a","b","time","getTime","sortDirections","defaultSortOrder","rowKey","pagination","CheckCircleOutlined","dynamic","Promise","all","e","then","t","bind","ssr","ExclamationCircleOutlined","StreamHealthOverview","showTroubleshootButton","serverStatusData","useContext","ServerStatusContext","health","healthy","healthPercentage","message","representation","icon","Row","gutter","Col","span","Statistic","valueStyle","prefix","suffix","style","display","type","textAlign","fontSize","opacity","width","marginTop","Alert","showIcon","action","Link","passHref","href","Button","defaultProps","Panel","Collapse","ArticleItem","url","content_html","content","date_published","date","dateString","jsx_runtime","article","header","p","concat","target","rel","dangerouslySetInnerHTML","__html","NewsFeed","feed","setFeed","useState","loading","setLoading","getFeed","result","fetchExternalData","items","error","console","log","useEffect","loadingSpinner","Skeleton","active","noNews","section","map","item","react","createElement","Paragraph","Text","Meta","Card","BookTwoTone","MessageTwoTone","PlaySquareTwoTone","ProfileTwoTone","Offline","global","config","rtmpURL","serverConfig","rtmpServerPort","instanceUrl","location","hostname","serverURL","replace","data","twoToneColor","strong","copyable","chatDisabled","yp","enabled","federation","img","alt","src","Fragment","offset","OwncastLogo","variant","xs","sm","md","lg","bordered","avatar","description","UserOutlined","ClockCircleOutlined","streamDetailsFormatter","streamDetails","ul","li","videoCodec","videoBitrate","framerate","height","Home","broadcaster","configData","remoteAddr","encoder","logsData","setLogs","getLogs","fetchData","LOGS_WARN","getMoreStats","intervalId","setInterval","FETCH_INTERVAL","clearInterval","isEmptyObject","videoQualitySettings","currentBroadcast","outputSettings","setting","audioPassthrough","videoPassthrough","audioBitrate","audioSetting","audioCodec","videoSetting","viewerCount","sessionPeakViewerCount","streamAudioDetailString","broadcastDate","align","formatRelative","now","formatDistanceToNow","formatIPAddress","formatter","br"],"sourceRoot":""}