{"version":3,"file":"static/chunks/pages/admin/config/general/EditInstanceTags-cadd6ec4531b2f72.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/CheckOutlined.js","webpack://_N_E/./node_modules/antd/es/tag/CheckableTag.js","webpack://_N_E/./node_modules/antd/es/tag/index.js","webpack://_N_E/?6ec6","webpack://_N_E/./components/config/EditValueArray.tsx","webpack://_N_E/./pages/admin/config/general/EditInstanceTags.tsx","webpack://_N_E/<anon>"],"sourcesContent":["// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\nCheckOutlined.displayName = 'CheckOutlined';\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nvar CheckableTag = function CheckableTag(_a) {\n  var _classNames;\n  var customizePrefixCls = _a.prefixCls,\n    className = _a.className,\n    checked = _a.checked,\n    onChange = _a.onChange,\n    onClick = _a.onClick,\n    restProps = __rest(_a, [\"prefixCls\", \"className\", \"checked\", \"onChange\", \"onClick\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls;\n  var handleClick = function handleClick(e) {\n    onChange === null || onChange === void 0 ? void 0 : onChange(!checked);\n    onClick === null || onClick === void 0 ? void 0 : onClick(e);\n  };\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var cls = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable\"), true), _defineProperty(_classNames, \"\".concat(prefixCls, \"-checkable-checked\"), checked), _classNames), className);\n  return /*#__PURE__*/React.createElement(\"span\", _extends({}, restProps, {\n    className: cls,\n    onClick: handleClick\n  }));\n};\nexport default CheckableTag;","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport CloseOutlined from \"@ant-design/icons/es/icons/CloseOutlined\";\nimport classNames from 'classnames';\nimport omit from \"rc-util/es/omit\";\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport { PresetColorTypes, PresetStatusColorTypes } from '../_util/colors';\nimport Wave from '../_util/wave';\nimport warning from '../_util/warning';\nimport CheckableTag from './CheckableTag';\nvar PresetColorRegex = new RegExp(\"^(\".concat(PresetColorTypes.join('|'), \")(-inverse)?$\"));\nvar PresetStatusColorRegex = new RegExp(\"^(\".concat(PresetStatusColorTypes.join('|'), \")$\"));\nvar InternalTag = function InternalTag(_a, ref) {\n  var _classNames;\n  var customizePrefixCls = _a.prefixCls,\n    className = _a.className,\n    style = _a.style,\n    children = _a.children,\n    icon = _a.icon,\n    color = _a.color,\n    onClose = _a.onClose,\n    closeIcon = _a.closeIcon,\n    _a$closable = _a.closable,\n    closable = _a$closable === void 0 ? false : _a$closable,\n    props = __rest(_a, [\"prefixCls\", \"className\", \"style\", \"children\", \"icon\", \"color\", \"onClose\", \"closeIcon\", \"closable\"]);\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var _React$useState = React.useState(true),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    visible = _React$useState2[0],\n    setVisible = _React$useState2[1];\n  // Warning for deprecated usage\n  if (process.env.NODE_ENV !== 'production') {\n    process.env.NODE_ENV !== \"production\" ? warning(!('visible' in props), 'Tag', '`visible` will be removed in next major version, please use `visible && <Tag />` instead.') : void 0;\n  }\n  React.useEffect(function () {\n    if ('visible' in props) {\n      setVisible(props.visible);\n    }\n  }, [props.visible]);\n  var isPresetColor = function isPresetColor() {\n    if (!color) {\n      return false;\n    }\n    return PresetColorRegex.test(color) || PresetStatusColorRegex.test(color);\n  };\n  var tagStyle = _extends({\n    backgroundColor: color && !isPresetColor() ? color : undefined\n  }, style);\n  var presetColor = isPresetColor();\n  var prefixCls = getPrefixCls('tag', customizePrefixCls);\n  var tagClassName = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-\").concat(color), presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-has-color\"), color && !presetColor), _defineProperty(_classNames, \"\".concat(prefixCls, \"-hidden\"), !visible), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n  var handleCloseClick = function handleCloseClick(e) {\n    e.stopPropagation();\n    onClose === null || onClose === void 0 ? void 0 : onClose(e);\n    if (e.defaultPrevented) {\n      return;\n    }\n    if (!('visible' in props)) {\n      setVisible(false);\n    }\n  };\n  var renderCloseIcon = function renderCloseIcon() {\n    if (closable) {\n      return closeIcon ? /*#__PURE__*/React.createElement(\"span\", {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      }, closeIcon) : /*#__PURE__*/React.createElement(CloseOutlined, {\n        className: \"\".concat(prefixCls, \"-close-icon\"),\n        onClick: handleCloseClick\n      });\n    }\n    return null;\n  };\n  var isNeedWave = 'onClick' in props || children && children.type === 'a';\n  var tagProps = omit(props, ['visible']);\n  var iconNode = icon || null;\n  var kids = iconNode ? /*#__PURE__*/React.createElement(React.Fragment, null, iconNode, /*#__PURE__*/React.createElement(\"span\", null, children)) : children;\n  var tagNode = /*#__PURE__*/React.createElement(\"span\", _extends({}, tagProps, {\n    ref: ref,\n    className: tagClassName,\n    style: tagStyle\n  }), kids, renderCloseIcon());\n  return isNeedWave ? /*#__PURE__*/React.createElement(Wave, null, tagNode) : tagNode;\n};\nvar Tag = /*#__PURE__*/React.forwardRef(InternalTag);\nif (process.env.NODE_ENV !== 'production') {\n  Tag.displayName = 'Tag';\n}\nTag.CheckableTag = CheckableTag;\nexport default Tag;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/config/general/EditInstanceTags\",\n      function () {\n        return require(\"private-next-pages/admin/config/general/EditInstanceTags.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin/config/general/EditInstanceTags\"])\n      });\n    }\n  ","/* eslint-disable react/no-array-index-key */\nimport React, { FC, useState } from 'react';\nimport { Typography, Tag } from 'antd';\n\nimport { TextField } from './TextField';\nimport { UpdateArgs } from '../../types/config-section';\nimport { StatusState } from '../../utils/input-statuses';\nimport { FormStatusIndicator } from './FormStatusIndicator';\n\nconst { Title } = Typography;\n\nexport const TAG_COLOR = '#5a67d8';\n\nexport type EditStringArrayProps = {\n  title: string;\n  description?: string;\n  placeholder: string;\n  maxLength?: number;\n  values: string[];\n  submitStatus?: StatusState;\n  continuousStatusMessage?: StatusState;\n  handleDeleteIndex: (index: number) => void;\n  handleCreateString: (arg: string) => void;\n};\n\nexport const EditValueArray: FC<EditStringArrayProps> = ({\n  title,\n  description,\n  placeholder,\n  maxLength,\n  values,\n  handleDeleteIndex,\n  handleCreateString,\n  submitStatus,\n  continuousStatusMessage,\n}) => {\n  const [newStringInput, setNewStringInput] = useState<string>('');\n\n  const handleInputChange = ({ value }: UpdateArgs) => {\n    setNewStringInput(value);\n  };\n\n  const handleSubmitNewString = () => {\n    const newString = newStringInput.trim();\n    handleCreateString(newString);\n    setNewStringInput('');\n  };\n\n  return (\n    <div className=\"edit-string-array-container\">\n      <Title level={3} className=\"section-title\">\n        {title}\n      </Title>\n      <p className=\"description\">{description}</p>\n\n      <div className=\"edit-current-strings\">\n        {values?.map((tag, index) => {\n          const handleClose = () => {\n            handleDeleteIndex(index);\n          };\n          return (\n            <Tag closable onClose={handleClose} color={TAG_COLOR} key={`tag-${tag}-${index}`}>\n              {tag}\n            </Tag>\n          );\n        })}\n      </div>\n      {continuousStatusMessage && (\n        <div className=\"continuous-status-section\">\n          <FormStatusIndicator status={continuousStatusMessage} />\n        </div>\n      )}\n      <div className=\"add-new-string-section\">\n        <TextField\n          fieldName=\"string-input\"\n          value={newStringInput}\n          onChange={handleInputChange}\n          onPressEnter={handleSubmitNewString}\n          maxLength={maxLength}\n          placeholder={placeholder}\n          status={submitStatus}\n        />\n      </div>\n    </div>\n  );\n};\n\nEditValueArray.defaultProps = {\n  maxLength: 50,\n  description: null,\n  submitStatus: null,\n  continuousStatusMessage: null,\n};\n","/* eslint-disable react/no-array-index-key */\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Typography, Tag } from 'antd';\nimport { ServerStatusContext } from '../../../../utils/server-status-context';\nimport {\n  FIELD_PROPS_TAGS,\n  RESET_TIMEOUT,\n  postConfigUpdateToAPI,\n} from '../../../../utils/config-constants';\nimport { TextField } from '../../../../components/config/TextField';\nimport { UpdateArgs } from '../../../../types/config-section';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n  STATUS_WARNING,\n} from '../../../../utils/input-statuses';\nimport { TAG_COLOR } from '../../../../components/config/EditValueArray';\n\nconst { Title } = Typography;\n\nexport default function EditInstanceTags() {\n  const [newTagInput, setNewTagInput] = useState<string>('');\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig, setFieldInConfigState } = serverStatusData || {};\n\n  const { instanceDetails } = serverConfig;\n  const { tags = [] } = instanceDetails;\n\n  const { apiPath, maxLength, placeholder, configPath } = FIELD_PROPS_TAGS;\n\n  let resetTimer = null;\n\n  useEffect(\n    () => () => {\n      clearTimeout(resetTimer);\n    },\n    [],\n  );\n\n  const resetStates = () => {\n    setSubmitStatus(null);\n    resetTimer = null;\n    clearTimeout(resetTimer);\n  };\n\n  // posts all the tags at once as an array obj\n  const postUpdateToAPI = async (postValue: any) => {\n    setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n\n    await postConfigUpdateToAPI({\n      apiPath,\n      data: { value: postValue },\n      onSuccess: () => {\n        setFieldInConfigState({ fieldName: 'tags', value: postValue, path: configPath });\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS, 'Tags updated.'));\n        setNewTagInput('');\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, message));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n    });\n  };\n\n  const handleInputChange = ({ value }: UpdateArgs) => {\n    if (!submitStatus) {\n      setSubmitStatus(null);\n    }\n    setNewTagInput(value);\n  };\n\n  // send to api and do stuff\n  const handleSubmitNewTag = () => {\n    resetStates();\n    const newTag = newTagInput.trim();\n    if (newTag === '') {\n      setSubmitStatus(createInputStatus(STATUS_WARNING, 'Please enter a tag'));\n      return;\n    }\n    if (tags.some(tag => tag.toLowerCase() === newTag.toLowerCase())) {\n      setSubmitStatus(createInputStatus(STATUS_WARNING, 'This tag is already used!'));\n      return;\n    }\n\n    const updatedTags = [...tags, newTag];\n    postUpdateToAPI(updatedTags);\n  };\n\n  const handleDeleteTag = index => {\n    resetStates();\n    const updatedTags = [...tags];\n    updatedTags.splice(index, 1);\n    postUpdateToAPI(updatedTags);\n  };\n\n  return (\n    <div className=\"tag-editor-container\">\n      <Title level={3} className=\"section-title\">\n        Add Tags\n      </Title>\n      <p className=\"description\">\n        This is a great way to categorize your Owncast server on the Directory!\n      </p>\n\n      <div className=\"edit-current-strings\">\n        {tags.map((tag, index) => {\n          const handleClose = () => {\n            handleDeleteTag(index);\n          };\n          return (\n            <Tag closable onClose={handleClose} color={TAG_COLOR} key={`tag-${tag}-${index}`}>\n              {tag}\n            </Tag>\n          );\n        })}\n      </div>\n\n      <div className=\"add-new-string-section\">\n        <TextField\n          fieldName=\"tag-input\"\n          value={newTagInput}\n          className=\"new-tag-input\"\n          onChange={handleInputChange}\n          onPressEnter={handleSubmitNewTag}\n          maxLength={maxLength}\n          placeholder={placeholder}\n          status={submitStatus}\n        />\n      </div>\n    </div>\n  );\n}\n"],"names":["asn_CheckOutlined","CheckOutlined_CheckOutlined","props","ref","react","createElement","AntdIcon","Z","objectSpread2","icon","displayName","icons_CheckOutlined","forwardRef","__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","tag_rest","PresetColorRegex","concat","colors","Y","join","PresetStatusColorRegex","E","Tag","_a","_classNames","customizePrefixCls","prefixCls","className","style","children","color","onClose","closeIcon","_a$closable","closable","_React$useContext","useContext","context","E_","getPrefixCls","direction","_React$useState","useState","_React$useState2","slicedToArray","visible","setVisible","useEffect","isPresetColor","test","tagStyle","esm_extends","backgroundColor","undefined","presetColor","tagClassName","classnames_default","defineProperty","handleCloseClick","stopPropagation","defaultPrevented","isNeedWave","type","tagProps","omit","iconNode","kids","Fragment","tagNode","onClick","CloseOutlined","wave","CheckableTag","checked","onChange","restProps","cls","tag","window","__NEXT_P","push","__webpack_require__","Title","Typography","TAG_COLOR","EditValueArray","title","description","placeholder","maxLength","values","handleDeleteIndex","handleCreateString","submitStatus","continuousStatusMessage","param","newStringInput","setNewStringInput","handleInputChange","value","handleSubmitNewString","newString","trim","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","jsx","level","map","index","handleClose","FormStatusIndicator","status","TextField","fieldName","onPressEnter","defaultProps","EditInstanceTags","newTagInput","setNewTagInput","setSubmitStatus","serverStatusData","ServerStatusContext","serverConfig","setFieldInConfigState","instanceDetails","tags","apiPath","configPath","FIELD_PROPS_TAGS","resetTimer","clearTimeout","resetStates","postUpdateToAPI","postValue","createInputStatus","STATUS_PROCESSING","postConfigUpdateToAPI","data","onSuccess","path","STATUS_SUCCESS","setTimeout","RESET_TIMEOUT","onError","STATUS_ERROR","message","handleSubmitNewTag","newTag","STATUS_WARNING","some","toLowerCase","updatedTags","handleDeleteTag","splice"],"sourceRoot":""}