{"version":3,"file":"static/chunks/pages/admin/config/general/EditInstanceDetails-5444323a80b4b89d.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/CheckOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/UploadOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/UploadOutlined.js","webpack://_N_E/./node_modules/antd/es/_util/hooks/useForceUpdate.js","webpack://_N_E/./node_modules/rc-switch/es/index.js","webpack://_N_E/./node_modules/antd/es/switch/index.js","webpack://_N_E/?1309","webpack://_N_E/./components/config/ToggleSwitch.tsx","webpack://_N_E/./components/config/EditLogo.tsx","webpack://_N_E/./pages/admin/config/general/EditInstanceDetails.tsx","webpack://_N_E/./utils/images.ts","webpack://_N_E/<anon>"],"sourcesContent":["// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\nCheckOutlined.displayName = 'CheckOutlined';\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);","// This icon file is generated automatically.\nvar UploadOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M400 317.7h73.9V656c0 4.4 3.6 8 8 8h60c4.4 0 8-3.6 8-8V317.7H624c6.7 0 10.4-7.7 6.3-12.9L518.3 163a8 8 0 00-12.6 0l-112 141.7c-4.1 5.3-.4 13 6.3 13zM878 626h-60c-4.4 0-8 3.6-8 8v154H214V634c0-4.4-3.6-8-8-8h-60c-4.4 0-8 3.6-8 8v198c0 17.7 14.3 32 32 32h684c17.7 0 32-14.3 32-32V634c0-4.4-3.6-8-8-8z\" } }] }, \"name\": \"upload\", \"theme\": \"outlined\" };\nexport default UploadOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UploadOutlinedSvg from \"@ant-design/icons-svg/es/asn/UploadOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar UploadOutlined = function UploadOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: UploadOutlinedSvg\n  }));\n};\nUploadOutlined.displayName = 'UploadOutlined';\nexport default /*#__PURE__*/React.forwardRef(UploadOutlined);","import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport * as React from 'react';\nexport default function useForceUpdate() {\n  var _React$useReducer = React.useReducer(function (x) {\n      return x + 1;\n    }, 0),\n    _React$useReducer2 = _slicedToArray(_React$useReducer, 2),\n    forceUpdate = _React$useReducer2[1];\n  return forceUpdate;\n}","import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport classNames from 'classnames';\nimport useMergedState from \"rc-util/es/hooks/useMergedState\";\nimport KeyCode from \"rc-util/es/KeyCode\";\nvar Switch = React.forwardRef(function (_ref, ref) {\n  var _classNames;\n\n  var _ref$prefixCls = _ref.prefixCls,\n      prefixCls = _ref$prefixCls === void 0 ? 'rc-switch' : _ref$prefixCls,\n      className = _ref.className,\n      checked = _ref.checked,\n      defaultChecked = _ref.defaultChecked,\n      disabled = _ref.disabled,\n      loadingIcon = _ref.loadingIcon,\n      checkedChildren = _ref.checkedChildren,\n      unCheckedChildren = _ref.unCheckedChildren,\n      onClick = _ref.onClick,\n      onChange = _ref.onChange,\n      onKeyDown = _ref.onKeyDown,\n      restProps = _objectWithoutProperties(_ref, [\"prefixCls\", \"className\", \"checked\", \"defaultChecked\", \"disabled\", \"loadingIcon\", \"checkedChildren\", \"unCheckedChildren\", \"onClick\", \"onChange\", \"onKeyDown\"]);\n\n  var _useMergedState = useMergedState(false, {\n    value: checked,\n    defaultValue: defaultChecked\n  }),\n      _useMergedState2 = _slicedToArray(_useMergedState, 2),\n      innerChecked = _useMergedState2[0],\n      setInnerChecked = _useMergedState2[1];\n\n  function triggerChange(newChecked, event) {\n    var mergedChecked = innerChecked;\n\n    if (!disabled) {\n      mergedChecked = newChecked;\n      setInnerChecked(mergedChecked);\n      onChange === null || onChange === void 0 ? void 0 : onChange(mergedChecked, event);\n    }\n\n    return mergedChecked;\n  }\n\n  function onInternalKeyDown(e) {\n    if (e.which === KeyCode.LEFT) {\n      triggerChange(false, e);\n    } else if (e.which === KeyCode.RIGHT) {\n      triggerChange(true, e);\n    }\n\n    onKeyDown === null || onKeyDown === void 0 ? void 0 : onKeyDown(e);\n  }\n\n  function onInternalClick(e) {\n    var ret = triggerChange(!innerChecked, e); // [Legacy] trigger onClick with value\n\n    onClick === null || onClick === void 0 ? void 0 : onClick(ret, e);\n  }\n\n  var switchClassName = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-checked\"), innerChecked), _defineProperty(_classNames, \"\".concat(prefixCls, \"-disabled\"), disabled), _classNames));\n  return React.createElement(\"button\", Object.assign({}, restProps, {\n    type: \"button\",\n    role: \"switch\",\n    \"aria-checked\": innerChecked,\n    disabled: disabled,\n    className: switchClassName,\n    ref: ref,\n    onKeyDown: onInternalKeyDown,\n    onClick: onInternalClick\n  }), loadingIcon, React.createElement(\"span\", {\n    className: \"\".concat(prefixCls, \"-inner\")\n  }, innerChecked ? checkedChildren : unCheckedChildren));\n});\nSwitch.displayName = 'Switch';\nexport default Switch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nimport LoadingOutlined from \"@ant-design/icons/es/icons/LoadingOutlined\";\nimport classNames from 'classnames';\nimport RcSwitch from 'rc-switch';\nimport * as React from 'react';\nimport { ConfigContext } from '../config-provider';\nimport DisabledContext from '../config-provider/DisabledContext';\nimport SizeContext from '../config-provider/SizeContext';\nimport warning from '../_util/warning';\nimport Wave from '../_util/wave';\nvar Switch = /*#__PURE__*/React.forwardRef(function (_a, ref) {\n  var _classNames;\n  var customizePrefixCls = _a.prefixCls,\n    customizeSize = _a.size,\n    customDisabled = _a.disabled,\n    loading = _a.loading,\n    _a$className = _a.className,\n    className = _a$className === void 0 ? '' : _a$className,\n    props = __rest(_a, [\"prefixCls\", \"size\", \"disabled\", \"loading\", \"className\"]);\n  process.env.NODE_ENV !== \"production\" ? warning('checked' in props || !('value' in props), 'Switch', '`value` is not a valid prop, do you mean `checked`?') : void 0;\n  var _React$useContext = React.useContext(ConfigContext),\n    getPrefixCls = _React$useContext.getPrefixCls,\n    direction = _React$useContext.direction;\n  var size = React.useContext(SizeContext);\n  // ===================== Disabled =====================\n  var disabled = React.useContext(DisabledContext);\n  var mergedDisabled = (customDisabled !== null && customDisabled !== void 0 ? customDisabled : disabled) || loading;\n  var prefixCls = getPrefixCls('switch', customizePrefixCls);\n  var loadingIcon = /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefixCls, \"-handle\")\n  }, loading && /*#__PURE__*/React.createElement(LoadingOutlined, {\n    className: \"\".concat(prefixCls, \"-loading-icon\")\n  }));\n  var classes = classNames((_classNames = {}, _defineProperty(_classNames, \"\".concat(prefixCls, \"-small\"), (customizeSize || size) === 'small'), _defineProperty(_classNames, \"\".concat(prefixCls, \"-loading\"), loading), _defineProperty(_classNames, \"\".concat(prefixCls, \"-rtl\"), direction === 'rtl'), _classNames), className);\n  return /*#__PURE__*/React.createElement(Wave, {\n    insertExtraNode: true\n  }, /*#__PURE__*/React.createElement(RcSwitch, _extends({}, props, {\n    prefixCls: prefixCls,\n    className: classes,\n    disabled: mergedDisabled,\n    ref: ref,\n    loadingIcon: loadingIcon\n  })));\n});\nSwitch.__ANT_SWITCH = true;\nif (process.env.NODE_ENV !== 'production') {\n  Switch.displayName = 'Switch';\n}\nexport default Switch;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/config/general/EditInstanceDetails\",\n      function () {\n        return require(\"private-next-pages/admin/config/general/EditInstanceDetails.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin/config/general/EditInstanceDetails\"])\n      });\n    }\n  ","// This is a wrapper for the Ant Switch component.\n// This one is styled to match the form-textfield component.\n// If `useSubmit` is true then it will automatically post to the config API onChange.\n\nimport React, { useState, useContext, FC } from 'react';\nimport { Switch } from 'antd';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n} from '../../utils/input-statuses';\nimport { FormStatusIndicator } from './FormStatusIndicator';\n\nimport { RESET_TIMEOUT, postConfigUpdateToAPI } from '../../utils/config-constants';\nimport { ServerStatusContext } from '../../utils/server-status-context';\n\nexport type ToggleSwitchProps = {\n  fieldName: string;\n\n  apiPath?: string;\n  checked?: boolean;\n  reversed?: boolean;\n  configPath?: string;\n  disabled?: boolean;\n  label?: string;\n  tip?: string;\n  useSubmit?: boolean;\n  onChange?: (arg: boolean) => void;\n};\n\nexport const ToggleSwitch: FC<ToggleSwitchProps> = ({\n  apiPath,\n  checked,\n  reversed = false,\n  configPath = '',\n  disabled = false,\n  fieldName,\n  label,\n  tip,\n  useSubmit,\n  onChange,\n}) => {\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n\n  let resetTimer = null;\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { setFieldInConfigState } = serverStatusData || {};\n\n  const resetStates = () => {\n    setSubmitStatus(null);\n    clearTimeout(resetTimer);\n    resetTimer = null;\n  };\n\n  const handleChange = async (isChecked: boolean) => {\n    if (useSubmit) {\n      setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n      const isCheckedSend = reversed ? !isChecked : isChecked;\n\n      await postConfigUpdateToAPI({\n        apiPath,\n        data: { value: isCheckedSend },\n        onSuccess: () => {\n          setFieldInConfigState({ fieldName, value: isCheckedSend, path: configPath });\n          setSubmitStatus(createInputStatus(STATUS_SUCCESS));\n        },\n        onError: (message: string) => {\n          setSubmitStatus(createInputStatus(STATUS_ERROR, `There was an error: ${message}`));\n        },\n      });\n      resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n    }\n    if (onChange) {\n      onChange(isChecked);\n    }\n  };\n\n  const loading = submitStatus !== null && submitStatus.type === STATUS_PROCESSING;\n  return (\n    <div className=\"formfield-container toggleswitch-container\">\n      {label && (\n        <div className=\"label-side\">\n          <span className=\"formfield-label\">{label}</span>\n        </div>\n      )}\n\n      <div className=\"input-side\">\n        <div className=\"input-group\">\n          <Switch\n            className={`switch field-${fieldName}`}\n            loading={loading}\n            onChange={handleChange}\n            defaultChecked={checked}\n            checked={checked}\n            checkedChildren=\"ON\"\n            unCheckedChildren=\"OFF\"\n            disabled={disabled}\n          />\n          <FormStatusIndicator status={submitStatus} />\n        </div>\n        <p className=\"field-tip\">{tip}</p>\n      </div>\n    </div>\n  );\n};\nexport default ToggleSwitch;\n\nToggleSwitch.defaultProps = {\n  apiPath: '',\n  checked: false,\n  reversed: false,\n  configPath: '',\n  disabled: false,\n  label: '',\n  tip: '',\n  useSubmit: false,\n  onChange: null,\n};\n","import { Button, Upload } from 'antd';\nimport { RcFile } from 'antd/lib/upload/interface';\nimport { LoadingOutlined, UploadOutlined } from '@ant-design/icons';\nimport React, { useState, useContext, FC } from 'react';\nimport { FormStatusIndicator } from './FormStatusIndicator';\nimport { ServerStatusContext } from '../../utils/server-status-context';\nimport {\n  postConfigUpdateToAPI,\n  RESET_TIMEOUT,\n  TEXTFIELD_PROPS_LOGO,\n} from '../../utils/config-constants';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n} from '../../utils/input-statuses';\nimport { NEXT_PUBLIC_API_HOST } from '../../utils/apis';\n\nimport {\n  ACCEPTED_IMAGE_TYPES,\n  getBase64,\n  MAX_IMAGE_FILESIZE,\n  readableBytes,\n} from '../../utils/images';\n\nexport const EditLogo: FC = () => {\n  const [logoUrl, setlogoUrl] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [logoCachedbuster, setLogoCacheBuster] = useState(0);\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { setFieldInConfigState, serverConfig } = serverStatusData || {};\n  const currentLogo = serverConfig?.instanceDetails?.logo;\n\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n  let resetTimer = null;\n\n  const { apiPath, tip } = TEXTFIELD_PROPS_LOGO;\n\n  // Clear out any validation states and messaging\n  const resetStates = () => {\n    setSubmitStatus(null);\n    clearTimeout(resetTimer);\n    resetTimer = null;\n  };\n\n  // validate file type and create base64 encoded img\n  const beforeUpload = (file: RcFile) => {\n    setLoading(true);\n\n    // eslint-disable-next-line consistent-return\n    return new Promise<void>((res, rej) => {\n      if (file.size > MAX_IMAGE_FILESIZE) {\n        const msg = `File size is too big: ${readableBytes(file.size)}`;\n        setSubmitStatus(createInputStatus(STATUS_ERROR, `There was an error: ${msg}`));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n        setLoading(false);\n        // eslint-disable-next-line no-promise-executor-return\n        return rej();\n      }\n      if (!ACCEPTED_IMAGE_TYPES.includes(file.type)) {\n        const msg = `File type is not supported: ${file.type}`;\n        setSubmitStatus(createInputStatus(STATUS_ERROR, `There was an error: ${msg}`));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n        setLoading(false);\n        // eslint-disable-next-line no-promise-executor-return\n        return rej();\n      }\n\n      getBase64(file, (url: string) => {\n        setlogoUrl(url);\n        setTimeout(() => res(), 100);\n      });\n    });\n  };\n\n  // Post new logo to api\n  const handleLogoUpdate = async () => {\n    if (logoUrl !== currentLogo) {\n      setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n      await postConfigUpdateToAPI({\n        apiPath,\n        data: { value: logoUrl },\n        onSuccess: () => {\n          setFieldInConfigState({ fieldName: 'logo', value: logoUrl, path: '' });\n          setSubmitStatus(createInputStatus(STATUS_SUCCESS));\n          setLoading(false);\n          setLogoCacheBuster(Math.floor(Math.random() * 100)); // Force logo to re-load\n        },\n        onError: (msg: string) => {\n          setSubmitStatus(createInputStatus(STATUS_ERROR, `There was an error: ${msg}`));\n          setLoading(false);\n        },\n      });\n      resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n    }\n  };\n\n  const logoDisplayUrl = `${NEXT_PUBLIC_API_HOST}logo?random=${logoCachedbuster}`;\n\n  return (\n    <div className=\"formfield-container logo-upload-container\">\n      <div className=\"label-side\">\n        <span className=\"formfield-label\">Logo</span>\n      </div>\n\n      <div className=\"input-side\">\n        <div className=\"input-group\">\n          <img src={logoDisplayUrl} alt=\"avatar\" className=\"logo-preview\" />\n          <Upload\n            name=\"logo\"\n            listType=\"picture\"\n            className=\"avatar-uploader\"\n            showUploadList={false}\n            accept={ACCEPTED_IMAGE_TYPES.join(',')}\n            beforeUpload={beforeUpload}\n            customRequest={handleLogoUpdate}\n            disabled={loading}\n          >\n            {loading ? (\n              <LoadingOutlined style={{ color: 'white' }} />\n            ) : (\n              <Button icon={<UploadOutlined />} />\n            )}\n          </Upload>\n        </div>\n        <FormStatusIndicator status={submitStatus} />\n        <p className=\"field-tip\">{tip}</p>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Typography } from 'antd';\nimport {\n  TextFieldWithSubmit,\n  TEXTFIELD_TYPE_TEXTAREA,\n  TEXTFIELD_TYPE_URL,\n} from '../../../../components/config/TextFieldWithSubmit';\nimport { ServerStatusContext } from '../../../../utils/server-status-context';\nimport {\n  postConfigUpdateToAPI,\n  TEXTFIELD_PROPS_INSTANCE_URL,\n  TEXTFIELD_PROPS_SERVER_NAME,\n  TEXTFIELD_PROPS_SERVER_SUMMARY,\n  TEXTFIELD_PROPS_SERVER_OFFLINE_MESSAGE,\n  API_YP_SWITCH,\n  FIELD_PROPS_YP,\n  FIELD_PROPS_NSFW,\n  FIELD_PROPS_HIDE_VIEWER_COUNT,\n} from '../../../../utils/config-constants';\nimport { UpdateArgs } from '../../../../types/config-section';\nimport { ToggleSwitch } from '../../../../components/config/ToggleSwitch';\nimport { EditLogo } from '../../../../components/config/EditLogo';\n\nconst { Title } = Typography;\n\nexport default function EditInstanceDetails() {\n  const [formDataValues, setFormDataValues] = useState(null);\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig } = serverStatusData || {};\n\n  const { instanceDetails, yp } = serverConfig;\n  const { instanceUrl } = yp;\n\n  useEffect(() => {\n    setFormDataValues({\n      ...instanceDetails,\n      ...yp,\n    });\n  }, [instanceDetails, yp]);\n\n  if (!formDataValues) {\n    return null;\n  }\n\n  // if instanceUrl is empty, we should also turn OFF the `enabled` field of directory.\n  const handleSubmitInstanceUrl = () => {\n    if (formDataValues.instanceUrl === '') {\n      if (yp.enabled === true) {\n        postConfigUpdateToAPI({\n          apiPath: API_YP_SWITCH,\n          data: { value: false },\n        });\n      }\n    }\n  };\n\n  const handleFieldChange = ({ fieldName, value }: UpdateArgs) => {\n    setFormDataValues({\n      ...formDataValues,\n      [fieldName]: value,\n    });\n  };\n\n  function handleHideViewerCountChange(enabled: boolean) {\n    handleFieldChange({ fieldName: 'hideViewerCount', value: enabled });\n  }\n\n  const hasInstanceUrl = instanceUrl !== '';\n\n  return (\n    <div className=\"edit-general-settings\">\n      <Title level={3} className=\"section-title\">\n        Configure Instance Details\n      </Title>\n      <br />\n\n      <TextFieldWithSubmit\n        fieldName=\"name\"\n        {...TEXTFIELD_PROPS_SERVER_NAME}\n        value={formDataValues.name}\n        initialValue={instanceDetails.name}\n        onChange={handleFieldChange}\n      />\n\n      <TextFieldWithSubmit\n        fieldName=\"instanceUrl\"\n        {...TEXTFIELD_PROPS_INSTANCE_URL}\n        value={formDataValues.instanceUrl}\n        initialValue={yp.instanceUrl}\n        type={TEXTFIELD_TYPE_URL}\n        onChange={handleFieldChange}\n        onSubmit={handleSubmitInstanceUrl}\n      />\n\n      <TextFieldWithSubmit\n        fieldName=\"summary\"\n        {...TEXTFIELD_PROPS_SERVER_SUMMARY}\n        type={TEXTFIELD_TYPE_TEXTAREA}\n        value={formDataValues.summary}\n        initialValue={instanceDetails.summary}\n        onChange={handleFieldChange}\n      />\n\n      <TextFieldWithSubmit\n        fieldName=\"offlineMessage\"\n        {...TEXTFIELD_PROPS_SERVER_OFFLINE_MESSAGE}\n        type={TEXTFIELD_TYPE_TEXTAREA}\n        value={formDataValues.offlineMessage}\n        initialValue={instanceDetails.offlineMessage}\n        onChange={handleFieldChange}\n      />\n\n      {/* Logo section */}\n      <EditLogo />\n\n      <ToggleSwitch\n        fieldName=\"hideViewerCount\"\n        useSubmit\n        {...FIELD_PROPS_HIDE_VIEWER_COUNT}\n        checked={formDataValues.hideViewerCount}\n        onChange={handleHideViewerCountChange}\n      />\n\n      <br />\n      <p className=\"description\">\n        Increase your audience by appearing in the{' '}\n        <a href=\"https://directory.owncast.online\" target=\"_blank\" rel=\"noreferrer\">\n          <strong>Owncast Directory</strong>\n        </a>\n        . This is an external service run by the Owncast project.{' '}\n        <a\n          href=\"https://owncast.online/docs/directory/?source=admin\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn more\n        </a>\n        .\n      </p>\n      {!yp.instanceUrl && (\n        <p className=\"description\">\n          You must set your <strong>Server URL</strong> above to enable the directory.\n        </p>\n      )}\n\n      <div className=\"config-yp-container\">\n        <ToggleSwitch\n          fieldName=\"enabled\"\n          useSubmit\n          {...FIELD_PROPS_YP}\n          checked={formDataValues.enabled}\n          disabled={!hasInstanceUrl}\n        />\n        <ToggleSwitch\n          fieldName=\"nsfw\"\n          useSubmit\n          {...FIELD_PROPS_NSFW}\n          checked={formDataValues.nsfw}\n          disabled={!hasInstanceUrl}\n        />\n      </div>\n    </div>\n  );\n}\n","export const MAX_IMAGE_FILESIZE = 2097152;\nexport const ACCEPTED_IMAGE_TYPES = ['image/png', 'image/jpeg', 'image/gif'];\n\nexport function getBase64(img: File | Blob, callback: (imageUrl: string | ArrayBuffer) => void) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nexport function readableBytes(bytes: number): string {\n  const index = Math.floor(Math.log(bytes) / Math.log(1024));\n  const SIZE_UNITS = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const size = Number((bytes / Math.pow(1024, index)).toFixed(2)) * 1;\n\n  return `${size} ${SIZE_UNITS[index]}`;\n}\n"],"names":["asn_CheckOutlined","CheckOutlined_CheckOutlined","props","ref","react","createElement","AntdIcon","Z","objectSpread2","icon","displayName","icons_CheckOutlined","forwardRef","asn_UploadOutlined","UploadOutlined_UploadOutlined","icons_UploadOutlined","useForceUpdate","_React$useReducer","react__WEBPACK_IMPORTED_MODULE_0__","useReducer","x","_React$useReducer2","_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","Switch","_ref","_classNames","_ref$prefixCls","prefixCls","className","checked","defaultChecked","disabled","loadingIcon","checkedChildren","unCheckedChildren","onClick","onChange","onKeyDown","restProps","objectWithoutProperties","_useMergedState","useMergedState","value","defaultValue","_useMergedState2","slicedToArray","innerChecked","setInnerChecked","triggerChange","newChecked","event","mergedChecked","switchClassName","classnames_default","defineProperty","concat","Object","assign","type","role","e","which","KeyCode","LEFT","RIGHT","ret","__rest","s","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","switch_Switch","_a","customizePrefixCls","customizeSize","size","customDisabled","loading","_a$className","_React$useContext","useContext","context","E_","getPrefixCls","direction","SizeContext","DisabledContext","LoadingOutlined","classes","wave","insertExtraNode","esm_extends","__ANT_SWITCH","es_switch","window","__NEXT_P","push","__webpack_require__","ToggleSwitch","apiPath","reversed","configPath","fieldName","label","tip","useSubmit","param","submitStatus","setSubmitStatus","useState","resetTimer","serverStatusData","ServerStatusContext","setFieldInConfigState","resetStates","clearTimeout","handleChange","isChecked","createInputStatus","STATUS_PROCESSING","isCheckedSend","postConfigUpdateToAPI","data","onSuccess","path","STATUS_SUCCESS","onError","STATUS_ERROR","message","setTimeout","RESET_TIMEOUT","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","jsx","span","FormStatusIndicator","status","defaultProps","EditLogo","serverConfig","logoUrl","setlogoUrl","setLoading","logoCachedbuster","setLogoCacheBuster","currentLogo","instanceDetails","logo","TEXTFIELD_PROPS_LOGO","beforeUpload","Promise","res","rej","file","MAX_IMAGE_FILESIZE","msg","readableBytes","ACCEPTED_IMAGE_TYPES","getBase64","url","handleLogoUpdate","Math","floor","random","logoDisplayUrl","NEXT_PUBLIC_API_HOST","jsx_runtime","img","src","alt","Upload","name","listType","showUploadList","accept","customRequest","style","color","Button","UploadOutlined","Title","Typography","EditInstanceDetails","formDataValues","setFormDataValues","yp","instanceUrl","useEffect","handleSubmitInstanceUrl","enabled","API_YP_SWITCH","handleFieldChange","hasInstanceUrl","level","br","TextFieldWithSubmit","TEXTFIELD_PROPS_SERVER_NAME","initialValue","TEXTFIELD_PROPS_INSTANCE_URL","TEXTFIELD_TYPE_URL","onSubmit","TEXTFIELD_PROPS_SERVER_SUMMARY","TEXTFIELD_TYPE_TEXTAREA","summary","TEXTFIELD_PROPS_SERVER_OFFLINE_MESSAGE","offlineMessage","FIELD_PROPS_HIDE_VIEWER_COUNT","hideViewerCount","a","href","target","rel","strong","FIELD_PROPS_YP","FIELD_PROPS_NSFW","nsfw","callback","reader","FileReader","addEventListener","result","readAsDataURL","bytes","index","log","Number","pow","toFixed","SIZE_UNITS"],"sourceRoot":""}