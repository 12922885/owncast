{"version":3,"file":"static/chunks/pages/admin/config/server/EditStorage-2e4c4c751bc7faa9.js","mappings":"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","sources":["webpack://_N_E/?4af3","webpack://_N_E/./components/config/ToggleSwitch.tsx","webpack://_N_E/./pages/admin/config/server/EditStorage.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/config/server/EditStorage\",\n      function () {\n        return require(\"private-next-pages/admin/config/server/EditStorage.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin/config/server/EditStorage\"])\n      });\n    }\n  ","// This is a wrapper for the Ant Switch component.\n// This one is styled to match the form-textfield component.\n// If `useSubmit` is true then it will automatically post to the config API onChange.\n\nimport React, { useState, useContext, FC } from 'react';\nimport { Switch } from 'antd';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n} from '../../utils/input-statuses';\nimport { FormStatusIndicator } from './FormStatusIndicator';\n\nimport { RESET_TIMEOUT, postConfigUpdateToAPI } from '../../utils/config-constants';\nimport { ServerStatusContext } from '../../utils/server-status-context';\n\nexport type ToggleSwitchProps = {\n  fieldName: string;\n\n  apiPath?: string;\n  checked?: boolean;\n  reversed?: boolean;\n  configPath?: string;\n  disabled?: boolean;\n  label?: string;\n  tip?: string;\n  useSubmit?: boolean;\n  onChange?: (arg: boolean) => void;\n};\n\nexport const ToggleSwitch: FC<ToggleSwitchProps> = ({\n  apiPath,\n  checked,\n  reversed = false,\n  configPath = '',\n  disabled = false,\n  fieldName,\n  label,\n  tip,\n  useSubmit,\n  onChange,\n}) => {\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n\n  let resetTimer = null;\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { setFieldInConfigState } = serverStatusData || {};\n\n  const resetStates = () => {\n    setSubmitStatus(null);\n    clearTimeout(resetTimer);\n    resetTimer = null;\n  };\n\n  const handleChange = async (isChecked: boolean) => {\n    if (useSubmit) {\n      setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n      const isCheckedSend = reversed ? !isChecked : isChecked;\n\n      await postConfigUpdateToAPI({\n        apiPath,\n        data: { value: isCheckedSend },\n        onSuccess: () => {\n          setFieldInConfigState({ fieldName, value: isCheckedSend, path: configPath });\n          setSubmitStatus(createInputStatus(STATUS_SUCCESS));\n        },\n        onError: (message: string) => {\n          setSubmitStatus(createInputStatus(STATUS_ERROR, `There was an error: ${message}`));\n        },\n      });\n      resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n    }\n    if (onChange) {\n      onChange(isChecked);\n    }\n  };\n\n  const loading = submitStatus !== null && submitStatus.type === STATUS_PROCESSING;\n  return (\n    <div className=\"formfield-container toggleswitch-container\">\n      {label && (\n        <div className=\"label-side\">\n          <span className=\"formfield-label\">{label}</span>\n        </div>\n      )}\n\n      <div className=\"input-side\">\n        <div className=\"input-group\">\n          <Switch\n            className={`switch field-${fieldName}`}\n            loading={loading}\n            onChange={handleChange}\n            defaultChecked={checked}\n            checked={checked}\n            checkedChildren=\"ON\"\n            unCheckedChildren=\"OFF\"\n            disabled={disabled}\n          />\n          <FormStatusIndicator status={submitStatus} />\n        </div>\n        <p className=\"field-tip\">{tip}</p>\n      </div>\n    </div>\n  );\n};\nexport default ToggleSwitch;\n\nToggleSwitch.defaultProps = {\n  apiPath: '',\n  checked: false,\n  reversed: false,\n  configPath: '',\n  disabled: false,\n  label: '',\n  tip: '',\n  useSubmit: false,\n  onChange: null,\n};\n","import { Button, Collapse } from 'antd';\nimport classNames from 'classnames';\nimport React, { useContext, useState, useEffect } from 'react';\nimport { UpdateArgs } from '../../../../types/config-section';\nimport { ServerStatusContext } from '../../../../utils/server-status-context';\nimport { AlertMessageContext } from '../../../../utils/alert-message-context';\n\nimport {\n  postConfigUpdateToAPI,\n  API_S3_INFO,\n  RESET_TIMEOUT,\n  S3_TEXT_FIELDS_INFO,\n} from '../../../../utils/config-constants';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n} from '../../../../utils/input-statuses';\nimport { TextField } from '../../../../components/config/TextField';\nimport { FormStatusIndicator } from '../../../../components/config/FormStatusIndicator';\nimport { isValidUrl } from '../../../../utils/urls';\nimport { ToggleSwitch } from '../../../../components/config/ToggleSwitch';\n\nconst { Panel } = Collapse;\n\n// we could probably add more detailed checks here\n// `currentValues` is what's currently in the global store and in the db\nfunction checkSaveable(formValues: any, currentValues: any) {\n  const {\n    endpoint,\n    accessKey,\n    secret,\n    bucket,\n    region,\n    enabled,\n    servingEndpoint,\n    acl,\n    forcePathStyle,\n  } = formValues;\n  // if fields are filled out and different from what's in store, then return true\n  if (enabled) {\n    if (!!endpoint && isValidUrl(endpoint) && !!accessKey && !!secret && !!bucket && !!region) {\n      if (\n        enabled !== currentValues.enabled ||\n        endpoint !== currentValues.endpoint ||\n        accessKey !== currentValues.accessKey ||\n        secret !== currentValues.secret ||\n        bucket !== currentValues.bucket ||\n        region !== currentValues.region ||\n        (!currentValues.servingEndpoint && servingEndpoint !== '') ||\n        (!!currentValues.servingEndpoint && servingEndpoint !== currentValues.servingEndpoint) ||\n        (!currentValues.acl && acl !== '') ||\n        (!!currentValues.acl && acl !== currentValues.acl) ||\n        forcePathStyle !== currentValues.forcePathStyle\n      ) {\n        return true;\n      }\n    }\n  } else if (enabled !== currentValues.enabled) {\n    return true;\n  }\n  return false;\n}\n\nexport default function EditStorage() {\n  const [formDataValues, setFormDataValues] = useState(null);\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n\n  const [shouldDisplayForm, setShouldDisplayForm] = useState(false);\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig, setFieldInConfigState } = serverStatusData || {};\n\n  const { setMessage: setAlertMessage } = useContext(AlertMessageContext);\n\n  const { s3 } = serverConfig;\n  const {\n    accessKey = '',\n    acl = '',\n    bucket = '',\n    enabled = false,\n    endpoint = '',\n    region = '',\n    secret = '',\n    servingEndpoint = '',\n    forcePathStyle = false,\n  } = s3;\n\n  useEffect(() => {\n    setFormDataValues({\n      accessKey,\n      acl,\n      bucket,\n      enabled,\n      endpoint,\n      region,\n      secret,\n      servingEndpoint,\n      forcePathStyle,\n    });\n    setShouldDisplayForm(enabled);\n  }, [s3]);\n\n  if (!formDataValues) {\n    return null;\n  }\n\n  let resetTimer = null;\n  const resetStates = () => {\n    setSubmitStatus(null);\n    resetTimer = null;\n    clearTimeout(resetTimer);\n  };\n\n  // update individual values in state\n  const handleFieldChange = ({ fieldName, value }: UpdateArgs) => {\n    setFormDataValues({\n      ...formDataValues,\n      [fieldName]: value,\n    });\n  };\n\n  // posts the whole state\n  const handleSave = async () => {\n    setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n    const postValue = formDataValues;\n\n    await postConfigUpdateToAPI({\n      apiPath: API_S3_INFO,\n      data: { value: postValue },\n      onSuccess: () => {\n        setFieldInConfigState({ fieldName: 's3', value: postValue, path: '' });\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS, 'Updated.'));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n        setAlertMessage(\n          'Changing your storage configuration will take place the next time you start a new stream.',\n        );\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, message));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n    });\n  };\n\n  // toggle switch.\n  const handleSwitchChange = (storageEnabled: boolean) => {\n    setShouldDisplayForm(storageEnabled);\n    handleFieldChange({ fieldName: 'enabled', value: storageEnabled });\n  };\n\n  const handleForcePathStyleSwitchChange = (forcePathStyleEnabled: boolean) => {\n    handleFieldChange({ fieldName: 'forcePathStyle', value: forcePathStyleEnabled });\n  };\n\n  const containerClass = classNames({\n    'edit-storage-container': true,\n    'form-module': true,\n    enabled: shouldDisplayForm,\n  });\n\n  const isSaveable = checkSaveable(formDataValues, s3);\n\n  return (\n    <div className={containerClass}>\n      <div className=\"enable-switch\">\n        <ToggleSwitch\n          apiPath=\"\"\n          fieldName=\"enabled\"\n          label=\"Use S3 Storage Provider\"\n          checked={formDataValues.enabled}\n          onChange={handleSwitchChange}\n        />\n        {/* <Switch\n          checked={formDataValues.enabled}\n          defaultChecked={formDataValues.enabled}\n          onChange={handleSwitchChange}\n          checkedChildren=\"ON\"\n          unCheckedChildren=\"OFF\"\n        />{' '}\n        Enabled */}\n      </div>\n\n      <div className=\"form-fields\">\n        <div className=\"field-container\">\n          <TextField\n            {...S3_TEXT_FIELDS_INFO.endpoint}\n            value={formDataValues.endpoint}\n            onChange={handleFieldChange}\n          />\n        </div>\n        <div className=\"field-container\">\n          <TextField\n            {...S3_TEXT_FIELDS_INFO.accessKey}\n            value={formDataValues.accessKey}\n            onChange={handleFieldChange}\n          />\n        </div>\n        <div className=\"field-container\">\n          <TextField\n            {...S3_TEXT_FIELDS_INFO.secret}\n            value={formDataValues.secret}\n            onChange={handleFieldChange}\n          />\n        </div>\n        <div className=\"field-container\">\n          <TextField\n            {...S3_TEXT_FIELDS_INFO.bucket}\n            value={formDataValues.bucket}\n            onChange={handleFieldChange}\n          />\n        </div>\n        <div className=\"field-container\">\n          <TextField\n            {...S3_TEXT_FIELDS_INFO.region}\n            value={formDataValues.region}\n            onChange={handleFieldChange}\n          />\n        </div>\n\n        <Collapse className=\"advanced-section\">\n          <Panel header=\"Optional Settings\" key=\"1\">\n            <div className=\"field-container\">\n              <TextField\n                {...S3_TEXT_FIELDS_INFO.acl}\n                value={formDataValues.acl}\n                onChange={handleFieldChange}\n              />\n            </div>\n            <div className=\"field-container\">\n              <TextField\n                {...S3_TEXT_FIELDS_INFO.servingEndpoint}\n                value={formDataValues.servingEndpoint}\n                onChange={handleFieldChange}\n              />\n            </div>\n            <div className=\"enable-switch\">\n              <ToggleSwitch\n                {...S3_TEXT_FIELDS_INFO.forcePathStyle}\n                fieldName=\"forcePathStyle\"\n                checked={formDataValues.forcePathStyle}\n                onChange={handleForcePathStyleSwitchChange}\n              />\n            </div>\n          </Panel>\n        </Collapse>\n      </div>\n\n      <div className=\"button-container\">\n        <Button type=\"primary\" onClick={handleSave} disabled={!isSaveable}>\n          Save\n        </Button>\n        <FormStatusIndicator status={submitStatus} />\n      </div>\n    </div>\n  );\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","ToggleSwitch","apiPath","checked","reversed","configPath","disabled","fieldName","label","tip","useSubmit","onChange","param","submitStatus","setSubmitStatus","useState","resetTimer","serverStatusData","useContext","ServerStatusContext","setFieldInConfigState","resetStates","clearTimeout","handleChange","isChecked","createInputStatus","STATUS_PROCESSING","isCheckedSend","postConfigUpdateToAPI","data","value","onSuccess","path","STATUS_SUCCESS","onError","STATUS_ERROR","concat","message","setTimeout","RESET_TIMEOUT","loading","type","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","jsx","span","Switch","defaultChecked","checkedChildren","unCheckedChildren","FormStatusIndicator","status","p","defaultProps","Panel","Collapse","EditStorage","formDataValues","setFormDataValues","shouldDisplayForm","setShouldDisplayForm","serverConfig","setMessage","setAlertMessage","AlertMessageContext","s3","accessKey","acl","bucket","enabled","endpoint","region","secret","servingEndpoint","forcePathStyle","useEffect","handleFieldChange","handleSave","API_S3_INFO","handleSwitchChange","storageEnabled","handleForcePathStyleSwitchChange","forcePathStyleEnabled","containerClass","classNames","isSaveable","checkSaveable","formValues","currentValues","isValidUrl","TextField","S3_TEXT_FIELDS_INFO","header","Button","onClick"],"sourceRoot":""}