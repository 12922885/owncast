{"version":3,"file":"static/chunks/pages/admin/config/general/EditPageContent-f67b80d46033a90b.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CheckOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/CheckOutlined.js","webpack://_N_E/?85f4","webpack://_N_E/./pages/admin/config/general/EditPageContent.tsx","webpack://_N_E/<anon>"],"sourcesContent":["// This icon file is generated automatically.\nvar CheckOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M912 190h-69.9c-9.8 0-19.1 4.5-25.1 12.2L404.7 724.5 207 474a32 32 0 00-25.1-12.2H112c-6.7 0-10.4 7.7-6.3 12.9l273.9 347c12.8 16.2 37.4 16.2 50.3 0l488.4-618.9c4.1-5.1.4-12.8-6.3-12.8z\" } }] }, \"name\": \"check\", \"theme\": \"outlined\" };\nexport default CheckOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckOutlinedSvg from \"@ant-design/icons-svg/es/asn/CheckOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckOutlined = function CheckOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckOutlinedSvg\n  }));\n};\nCheckOutlined.displayName = 'CheckOutlined';\nexport default /*#__PURE__*/React.forwardRef(CheckOutlined);","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/config/general/EditPageContent\",\n      function () {\n        return require(\"private-next-pages/admin/config/general/EditPageContent.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin/config/general/EditPageContent\"])\n      });\n    }\n  ","// EDIT CUSTOM DETAILS ON YOUR PAGE\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Typography, Button } from 'antd';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { bbedit } from '@uiw/codemirror-theme-bbedit';\nimport { markdown, markdownLanguage } from '@codemirror/lang-markdown';\nimport { languages } from '@codemirror/language-data';\n\nimport { ServerStatusContext } from '../../../../utils/server-status-context';\nimport {\n  postConfigUpdateToAPI,\n  RESET_TIMEOUT,\n  API_CUSTOM_CONTENT,\n} from '../../../../utils/config-constants';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n} from '../../../../utils/input-statuses';\nimport { FormStatusIndicator } from '../../../../components/config/FormStatusIndicator';\n\nconst { Title } = Typography;\n\nexport default function EditPageContent() {\n  const [content, setContent] = useState('');\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n  const [hasChanged, setHasChanged] = useState(false);\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig, setFieldInConfigState } = serverStatusData || {};\n\n  const { instanceDetails } = serverConfig;\n  const { extraPageContent: initialContent } = instanceDetails;\n\n  let resetTimer = null;\n\n  function handleEditorChange(text) {\n    setContent(text);\n    if (text !== initialContent && !hasChanged) {\n      setHasChanged(true);\n    } else if (text === initialContent && hasChanged) {\n      setHasChanged(false);\n    }\n  }\n\n  // Clear out any validation states and messaging\n  const resetStates = () => {\n    setSubmitStatus(null);\n    setHasChanged(false);\n    clearTimeout(resetTimer);\n    resetTimer = null;\n  };\n\n  // posts all the tags at once as an array obj\n  async function handleSave() {\n    setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n    await postConfigUpdateToAPI({\n      apiPath: API_CUSTOM_CONTENT,\n      data: { value: content },\n      onSuccess: (message: string) => {\n        setFieldInConfigState({\n          fieldName: 'extraPageContent',\n          value: content,\n          path: 'instanceDetails',\n        });\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS, message));\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, message));\n      },\n    });\n    resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n  }\n\n  useEffect(() => {\n    setContent(initialContent);\n  }, [instanceDetails]);\n\n  return (\n    <div className=\"edit-page-content\">\n      <Title level={3} className=\"section-title\">\n        Custom Page Content\n      </Title>\n\n      <p className=\"description\">\n        Edit the content of your page by using simple{' '}\n        <a\n          href=\"https://www.markdownguide.org/basic-syntax/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Markdown syntax\n        </a>\n        .\n      </p>\n\n      <CodeMirror\n        value={content}\n        placeholder=\"Enter your custom page content here...\"\n        theme={bbedit}\n        onChange={handleEditorChange}\n        extensions={[markdown({ base: markdownLanguage, codeLanguages: languages })]}\n      />\n\n      <br />\n      <div className=\"page-content-actions\">\n        {hasChanged && (\n          <Button type=\"primary\" onClick={handleSave}>\n            Save\n          </Button>\n        )}\n        <FormStatusIndicator status={submitStatus} />\n      </div>\n    </div>\n  );\n}\n"],"names":["asn_CheckOutlined","CheckOutlined_CheckOutlined","props","ref","react","createElement","AntdIcon","Z","objectSpread2","icon","displayName","icons_CheckOutlined","forwardRef","window","__NEXT_P","push","__webpack_require__","Title","Typography","EditPageContent","content","setContent","useState","submitStatus","setSubmitStatus","hasChanged","setHasChanged","serverStatusData","useContext","ServerStatusContext","serverConfig","setFieldInConfigState","instanceDetails","extraPageContent","initialContent","resetTimer","resetStates","clearTimeout","handleSave","createInputStatus","STATUS_PROCESSING","postConfigUpdateToAPI","apiPath","API_CUSTOM_CONTENT","data","value","onSuccess","fieldName","path","STATUS_SUCCESS","message","onError","STATUS_ERROR","setTimeout","RESET_TIMEOUT","useEffect","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","jsx","level","p","a","href","target","rel","CodeMirror","placeholder","theme","bbedit","onChange","text","extensions","markdown","base","markdownLanguage","codeLanguages","languages","br","Button","type","onClick","FormStatusIndicator","status"],"sourceRoot":""}