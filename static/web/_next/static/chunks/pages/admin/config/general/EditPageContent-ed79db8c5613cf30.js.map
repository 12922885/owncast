{"version":3,"file":"static/chunks/pages/admin/config/general/EditPageContent-ed79db8c5613cf30.js","mappings":"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FUe1C,EETf2C,OAAA,CACA7C,YAAA,eACA,EACA8C,MAAA,CACAC,YAAA,cACAC,cAAA,KACAC,YAAA,QACAC,gBAAA,aACAC,eAAA,mBACAC,wBAAA,oBACAC,UAAA,UACAC,UAAA,sBACAC,aAAA,sBACAC,WAAA,iBACAC,aAAA,kBACAC,UAAA,OACAC,OAAA,aACAC,SAAA,eACAC,YAAA,2BACAC,WAAA,0BACAC,WAAA,yBACA,EACAC,MAAA,CACAC,OAAA,KACAC,WAAA,SACAC,WAAA,IACA,EACAC,WAAA,CACAH,OAAA,KACAC,WAAA,QACA,EACAG,SAAA,CACAC,OAAA,QACAC,kBAAA,cACAC,SAAA,OACAC,UAAA,QACAC,OAAA,SACAC,cAAA,sBACAC,cAAA,sBACAtB,UAAA,kBACAuB,UAAA,kBACAtB,aAAA,qBACA,EACAuB,OAAA,CACAC,UAAA,eACAC,WAAA,cACAC,YAAA,eACAC,YAAA,eACAC,aAAA,eACA,EACAC,MAAA,CACAC,YAAA,SACA,EACAC,KAAA,CACAtH,KAAA,MACA,EACAuH,KAAA,CACAC,KAAA,OACAC,KAAA,OACAC,OAAA,SACA/B,OAAA,QACA,EACAgC,WAAA,CACAC,KAAA,MACA,EACAC,KAAA,CACAC,SAAA,aACAC,wBAAA,CACA,8CACAC,SAAA,wBACA,yCACAC,WAAA,uCACAC,KAAA,CACAC,OAAA,kCACAC,MAAA,yCACAC,QAAA,6BACA,EACAC,MAAA,CACAC,OAAAhE,EACAiE,OAAAjE,EACAkE,MAAAlE,EACAmE,OAAAnE,EACAoE,OAAApE,EACA2D,KAAA3D,EACA,QAAAA,EACAqE,QAAArE,EACA,MAAAA,EACAsE,OAAAtE,EACAuE,MAAAvE,EACAwE,IAAAxE,EACAyE,IAAAzE,CACA,EACAgE,OAAA,CACAU,IAAA,qCACAC,IAAA,8CACAC,IAAA,2CACAC,MAAA,mDACA,EACAT,OAAA,CACAM,IAAA,mCACAC,IAAA,kCACAC,IAAA,kCACAC,MAAA,wCACA,EACAX,MAAA,CACAQ,IAAA,0BACAC,IAAA,2BACAC,IAAA,0BACAC,MAAA,sDACA,EACAC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","sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CheckCircleFilled.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/CheckCircleFilled.js","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/ExclamationCircleFilled.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/ExclamationCircleFilled.js","webpack://_N_E/./node_modules/antd/es/locale-provider/default.js","webpack://_N_E/./node_modules/antd/es/locale-provider/LocaleReceiver.js","webpack://_N_E/./node_modules/antd/es/locale-provider/context.js","webpack://_N_E/./node_modules/rc-picker/es/locale/en_US.js","webpack://_N_E/./node_modules/antd/es/time-picker/locale/en_US.js","webpack://_N_E/./node_modules/antd/es/date-picker/locale/en_US.js","webpack://_N_E/./node_modules/antd/es/calendar/locale/en_US.js","webpack://_N_E/./node_modules/antd/es/locale/default.js","webpack://_N_E/?85f4","webpack://_N_E/./pages/admin/config/general/EditPageContent.tsx","webpack://_N_E/./utils/input-statuses.tsx","webpack://_N_E/./utils/server-status-context.tsx","webpack://_N_E/./node_modules/rc-pagination/es/locale/en_US.js","webpack://_N_E/<anon>"],"sourcesContent":["// This icon file is generated automatically.\nvar CheckCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm193.5 301.7l-210.6 292a31.8 31.8 0 01-51.7 0L318.5 484.9c-3.8-5.3 0-12.7 6.5-12.7h46.9c10.2 0 19.9 4.9 25.9 13.3l71.2 98.8 157.2-218c6-8.3 15.6-13.3 25.9-13.3H699c6.5 0 10.3 7.4 6.5 12.7z\" } }] }, \"name\": \"check-circle\", \"theme\": \"filled\" };\nexport default CheckCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CheckCircleFilledSvg from \"@ant-design/icons-svg/es/asn/CheckCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar CheckCircleFilled = function CheckCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: CheckCircleFilledSvg\n  }));\n};\nCheckCircleFilled.displayName = 'CheckCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(CheckCircleFilled);","// This icon file is generated automatically.\nvar ExclamationCircleFilled = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M512 64C264.6 64 64 264.6 64 512s200.6 448 448 448 448-200.6 448-448S759.4 64 512 64zm-32 232c0-4.4 3.6-8 8-8h48c4.4 0 8 3.6 8 8v272c0 4.4-3.6 8-8 8h-48c-4.4 0-8-3.6-8-8V296zm32 440a48.01 48.01 0 010-96 48.01 48.01 0 010 96z\" } }] }, \"name\": \"exclamation-circle\", \"theme\": \"filled\" };\nexport default ExclamationCircleFilled;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport ExclamationCircleFilledSvg from \"@ant-design/icons-svg/es/asn/ExclamationCircleFilled\";\nimport AntdIcon from '../components/AntdIcon';\nvar ExclamationCircleFilled = function ExclamationCircleFilled(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: ExclamationCircleFilledSvg\n  }));\n};\nExclamationCircleFilled.displayName = 'ExclamationCircleFilled';\nexport default /*#__PURE__*/React.forwardRef(ExclamationCircleFilled);","import locale from '../locale/default';\nexport default locale;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport LocaleContext from './context';\nimport defaultLocaleData from './default';\nvar LocaleReceiver = function LocaleReceiver(props) {\n  var _props$componentName = props.componentName,\n    componentName = _props$componentName === void 0 ? 'global' : _props$componentName,\n    defaultLocale = props.defaultLocale,\n    children = props.children;\n  var antLocale = React.useContext(LocaleContext);\n  var getLocale = React.useMemo(function () {\n    var _a;\n    var locale = defaultLocale || defaultLocaleData[componentName];\n    var localeFromContext = (_a = antLocale === null || antLocale === void 0 ? void 0 : antLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return _extends(_extends({}, locale instanceof Function ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, antLocale]);\n  var getLocaleCode = React.useMemo(function () {\n    var localeCode = antLocale && antLocale.locale;\n    // Had use LocaleProvide but didn't set locale\n    if (antLocale && antLocale.exist && !localeCode) {\n      return defaultLocaleData.locale;\n    }\n    return localeCode;\n  }, [antLocale]);\n  return children(getLocale, getLocaleCode, antLocale);\n};\nexport default LocaleReceiver;\nexport var useLocaleReceiver = function useLocaleReceiver(componentName, defaultLocale) {\n  var antLocale = React.useContext(LocaleContext);\n  var getLocale = React.useMemo(function () {\n    var _a;\n    var locale = defaultLocale || defaultLocaleData[componentName];\n    var localeFromContext = (_a = antLocale === null || antLocale === void 0 ? void 0 : antLocale[componentName]) !== null && _a !== void 0 ? _a : {};\n    return _extends(_extends({}, typeof locale === 'function' ? locale() : locale), localeFromContext || {});\n  }, [componentName, defaultLocale, antLocale]);\n  return [getLocale];\n};","import { createContext } from 'react';\nvar LocaleContext = /*#__PURE__*/createContext(undefined);\nexport default LocaleContext;","var locale = {\n  locale: 'en_US',\n  today: 'Today',\n  now: 'Now',\n  backToToday: 'Back to today',\n  ok: 'OK',\n  clear: 'Clear',\n  month: 'Month',\n  year: 'Year',\n  timeSelect: 'select time',\n  dateSelect: 'select date',\n  weekSelect: 'Choose a week',\n  monthSelect: 'Choose a month',\n  yearSelect: 'Choose a year',\n  decadeSelect: 'Choose a decade',\n  yearFormat: 'YYYY',\n  dateFormat: 'M/D/YYYY',\n  dayFormat: 'D',\n  dateTimeFormat: 'M/D/YYYY HH:mm:ss',\n  monthBeforeYear: true,\n  previousMonth: 'Previous month (PageUp)',\n  nextMonth: 'Next month (PageDown)',\n  previousYear: 'Last year (Control + left)',\n  nextYear: 'Next year (Control + right)',\n  previousDecade: 'Last decade',\n  nextDecade: 'Next decade',\n  previousCentury: 'Last century',\n  nextCentury: 'Next century'\n};\nexport default locale;","var locale = {\n  placeholder: 'Select time',\n  rangePlaceholder: ['Start time', 'End time']\n};\nexport default locale;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport CalendarLocale from \"rc-picker/es/locale/en_US\";\nimport TimePickerLocale from '../../time-picker/locale/en_US';\n// Merge into a locale object\nvar locale = {\n  lang: _extends({\n    placeholder: 'Select date',\n    yearPlaceholder: 'Select year',\n    quarterPlaceholder: 'Select quarter',\n    monthPlaceholder: 'Select month',\n    weekPlaceholder: 'Select week',\n    rangePlaceholder: ['Start date', 'End date'],\n    rangeYearPlaceholder: ['Start year', 'End year'],\n    rangeQuarterPlaceholder: ['Start quarter', 'End quarter'],\n    rangeMonthPlaceholder: ['Start month', 'End month'],\n    rangeWeekPlaceholder: ['Start week', 'End week']\n  }, CalendarLocale),\n  timePickerLocale: _extends({}, TimePickerLocale)\n};\n// All settings at:\n// https://github.com/ant-design/ant-design/blob/master/components/date-picker/locale/example.json\nexport default locale;","import enUS from '../../date-picker/locale/en_US';\nexport default enUS;","/* eslint-disable no-template-curly-in-string */\nimport Pagination from \"rc-pagination/es/locale/en_US\";\nimport Calendar from '../calendar/locale/en_US';\nimport DatePicker from '../date-picker/locale/en_US';\nimport TimePicker from '../time-picker/locale/en_US';\nvar typeTemplate = '${label} is not a valid ${type}';\nvar localeValues = {\n  locale: 'en',\n  Pagination: Pagination,\n  DatePicker: DatePicker,\n  TimePicker: TimePicker,\n  Calendar: Calendar,\n  global: {\n    placeholder: 'Please select'\n  },\n  Table: {\n    filterTitle: 'Filter menu',\n    filterConfirm: 'OK',\n    filterReset: 'Reset',\n    filterEmptyText: 'No filters',\n    filterCheckall: 'Select all items',\n    filterSearchPlaceholder: 'Search in filters',\n    emptyText: 'No data',\n    selectAll: 'Select current page',\n    selectInvert: 'Invert current page',\n    selectNone: 'Clear all data',\n    selectionAll: 'Select all data',\n    sortTitle: 'Sort',\n    expand: 'Expand row',\n    collapse: 'Collapse row',\n    triggerDesc: 'Click to sort descending',\n    triggerAsc: 'Click to sort ascending',\n    cancelSort: 'Click to cancel sorting'\n  },\n  Modal: {\n    okText: 'OK',\n    cancelText: 'Cancel',\n    justOkText: 'OK'\n  },\n  Popconfirm: {\n    okText: 'OK',\n    cancelText: 'Cancel'\n  },\n  Transfer: {\n    titles: ['', ''],\n    searchPlaceholder: 'Search here',\n    itemUnit: 'item',\n    itemsUnit: 'items',\n    remove: 'Remove',\n    selectCurrent: 'Select current page',\n    removeCurrent: 'Remove current page',\n    selectAll: 'Select all data',\n    removeAll: 'Remove all data',\n    selectInvert: 'Invert current page'\n  },\n  Upload: {\n    uploading: 'Uploading...',\n    removeFile: 'Remove file',\n    uploadError: 'Upload error',\n    previewFile: 'Preview file',\n    downloadFile: 'Download file'\n  },\n  Empty: {\n    description: 'No data'\n  },\n  Icon: {\n    icon: 'icon'\n  },\n  Text: {\n    edit: 'Edit',\n    copy: 'Copy',\n    copied: 'Copied',\n    expand: 'Expand'\n  },\n  PageHeader: {\n    back: 'Back'\n  },\n  Form: {\n    optional: '(optional)',\n    defaultValidateMessages: {\n      \"default\": 'Field validation error for ${label}',\n      required: 'Please enter ${label}',\n      \"enum\": '${label} must be one of [${enum}]',\n      whitespace: '${label} cannot be a blank character',\n      date: {\n        format: '${label} date format is invalid',\n        parse: '${label} cannot be converted to a date',\n        invalid: '${label} is an invalid date'\n      },\n      types: {\n        string: typeTemplate,\n        method: typeTemplate,\n        array: typeTemplate,\n        object: typeTemplate,\n        number: typeTemplate,\n        date: typeTemplate,\n        \"boolean\": typeTemplate,\n        integer: typeTemplate,\n        \"float\": typeTemplate,\n        regexp: typeTemplate,\n        email: typeTemplate,\n        url: typeTemplate,\n        hex: typeTemplate\n      },\n      string: {\n        len: '${label} must be ${len} characters',\n        min: '${label} must be at least ${min} characters',\n        max: '${label} must be up to ${max} characters',\n        range: '${label} must be between ${min}-${max} characters'\n      },\n      number: {\n        len: '${label} must be equal to ${len}',\n        min: '${label} must be minimum ${min}',\n        max: '${label} must be maximum ${max}',\n        range: '${label} must be between ${min}-${max}'\n      },\n      array: {\n        len: 'Must be ${len} ${label}',\n        min: 'At least ${min} ${label}',\n        max: 'At most ${max} ${label}',\n        range: 'The amount of ${label} must be between ${min}-${max}'\n      },\n      pattern: {\n        mismatch: '${label} does not match the pattern ${pattern}'\n      }\n    }\n  },\n  Image: {\n    preview: 'Preview'\n  }\n};\nexport default localeValues;","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/config/general/EditPageContent\",\n      function () {\n        return require(\"private-next-pages/admin/config/general/EditPageContent.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin/config/general/EditPageContent\"])\n      });\n    }\n  ","// EDIT CUSTOM DETAILS ON YOUR PAGE\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Typography, Button } from 'antd';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { bbedit } from '@uiw/codemirror-theme-bbedit';\nimport { markdown, markdownLanguage } from '@codemirror/lang-markdown';\nimport { languages } from '@codemirror/language-data';\n\nimport { ServerStatusContext } from '../../../../utils/server-status-context';\nimport {\n  postConfigUpdateToAPI,\n  RESET_TIMEOUT,\n  API_CUSTOM_CONTENT,\n} from '../../../../utils/config-constants';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n} from '../../../../utils/input-statuses';\nimport { FormStatusIndicator } from '../../../../components/config/FormStatusIndicator';\n\nconst { Title } = Typography;\n\nexport default function EditPageContent() {\n  const [content, setContent] = useState('');\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n  const [hasChanged, setHasChanged] = useState(false);\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig, setFieldInConfigState } = serverStatusData || {};\n\n  const { instanceDetails } = serverConfig;\n  const { extraPageContent: initialContent } = instanceDetails;\n\n  let resetTimer = null;\n\n  function handleEditorChange(text) {\n    setContent(text);\n    if (text !== initialContent && !hasChanged) {\n      setHasChanged(true);\n    } else if (text === initialContent && hasChanged) {\n      setHasChanged(false);\n    }\n  }\n\n  // Clear out any validation states and messaging\n  const resetStates = () => {\n    setSubmitStatus(null);\n    setHasChanged(false);\n    clearTimeout(resetTimer);\n    resetTimer = null;\n  };\n\n  // posts all the tags at once as an array obj\n  async function handleSave() {\n    setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n    await postConfigUpdateToAPI({\n      apiPath: API_CUSTOM_CONTENT,\n      data: { value: content },\n      onSuccess: (message: string) => {\n        setFieldInConfigState({\n          fieldName: 'extraPageContent',\n          value: content,\n          path: 'instanceDetails',\n        });\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS, message));\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, message));\n      },\n    });\n    resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n  }\n\n  useEffect(() => {\n    setContent(initialContent);\n  }, [instanceDetails]);\n\n  return (\n    <div className=\"edit-page-content\">\n      <Title level={3} className=\"section-title\">\n        Custom Page Content\n      </Title>\n\n      <p className=\"description\">\n        Edit the content of your page by using simple{' '}\n        <a\n          href=\"https://www.markdownguide.org/basic-syntax/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Markdown syntax\n        </a>\n        .\n      </p>\n\n      <CodeMirror\n        value={content}\n        placeholder=\"Enter your custom page content here...\"\n        theme={bbedit}\n        onChange={handleEditorChange}\n        extensions={[markdown({ base: markdownLanguage, codeLanguages: languages })]}\n      />\n\n      <br />\n      <div className=\"page-content-actions\">\n        {hasChanged && (\n          <Button type=\"primary\" onClick={handleSave}>\n            Save\n          </Button>\n        )}\n        <FormStatusIndicator status={submitStatus} />\n      </div>\n    </div>\n  );\n}\n","import {\n  CheckCircleFilled,\n  ExclamationCircleFilled,\n  LoadingOutlined,\n  WarningOutlined,\n} from '@ant-design/icons';\n\nexport const STATUS_RESET_TIMEOUT = 3000;\n\nexport const STATUS_ERROR = 'error';\nexport const STATUS_INVALID = 'invalid';\nexport const STATUS_PROCESSING = 'proessing';\nexport const STATUS_SUCCESS = 'success';\nexport const STATUS_WARNING = 'warning';\n\nexport type InputStatusTypes = 'error' | 'invalid' | 'proessing' | 'success' | 'warning';\n\nexport interface StatusState {\n  type: InputStatusTypes;\n  icon: any; // Element type of sorts?\n  message: string;\n}\ninterface InputStates {\n  [key: string]: StatusState;\n}\n\nexport const INPUT_STATES: InputStates = {\n  [STATUS_SUCCESS]: {\n    type: STATUS_SUCCESS,\n    icon: <CheckCircleFilled style={{ color: 'green' }} />,\n    message: 'Success!',\n  },\n  [STATUS_ERROR]: {\n    type: STATUS_ERROR,\n    icon: <ExclamationCircleFilled style={{ color: 'red' }} />,\n    message: 'An error occurred.',\n  },\n  [STATUS_INVALID]: {\n    type: STATUS_INVALID,\n    icon: <ExclamationCircleFilled style={{ color: 'red' }} />,\n    message: 'An error occurred.',\n  },\n  [STATUS_PROCESSING]: {\n    type: STATUS_PROCESSING,\n    icon: <LoadingOutlined />,\n    message: '',\n  },\n  [STATUS_WARNING]: {\n    type: STATUS_WARNING,\n    icon: <WarningOutlined style={{ color: '#fc0' }} />,\n    message: '',\n  },\n};\n\n// Don't like any of the default messages in INPUT_STATES? Create a state with custom message by providing an icon style with your message.\nexport function createInputStatus(type: InputStatusTypes, message?: string): StatusState {\n  if (!type || !INPUT_STATES[type]) {\n    return null;\n  }\n  if (!message) {\n    return INPUT_STATES[type];\n  }\n  return {\n    type,\n    icon: INPUT_STATES[type].icon,\n    message,\n  };\n}\n","// TODO: add a notication after updating info that changes will take place either on a new stream or server restart. may be different for each field.\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { STATUS, fetchData, FETCH_INTERVAL, SERVER_CONFIG } from './apis';\nimport { ConfigDetails, UpdateArgs } from '../types/config-section';\nimport { DEFAULT_VARIANT_STATE } from './config-constants';\n\nexport const initialServerConfigState: ConfigDetails = {\n  streamKeys: [],\n  adminPassword: '',\n  instanceDetails: {\n    customStyles: '',\n    extraPageContent: '',\n    logo: '',\n    name: '',\n    nsfw: false,\n    socialHandles: [],\n    streamTitle: '',\n    summary: '',\n    tags: [],\n    title: '',\n    welcomeMessage: '',\n    offlineMessage: '',\n    appearanceVariables: {},\n  },\n  ffmpegPath: '',\n  rtmpServerPort: '',\n  webServerPort: '',\n  socketHostOverride: null,\n  s3: {\n    accessKey: '',\n    acl: '',\n    bucket: '',\n    enabled: false,\n    endpoint: '',\n    region: '',\n    secret: '',\n    servingEndpoint: '',\n    forcePathStyle: false,\n  },\n  yp: {\n    enabled: false,\n    instanceUrl: '',\n  },\n  videoSettings: {\n    latencyLevel: 4,\n    cpuUsageLevel: 3,\n    videoQualityVariants: [DEFAULT_VARIANT_STATE],\n  },\n  federation: {\n    enabled: false,\n    isPrivate: false,\n    username: '',\n    goLiveMessage: '',\n    showEngagement: true,\n    blockedDomains: [],\n  },\n  notifications: {\n    browser: { enabled: false, goLiveMessage: '' },\n    discord: { enabled: false, webhook: '', goLiveMessage: '' },\n    twitter: {\n      enabled: false,\n      goLiveMessage: '',\n      apiKey: '',\n      apiSecret: '',\n      accessToken: '',\n      accessTokenSecret: '',\n      bearerToken: '',\n    },\n  },\n  externalActions: [],\n  supportedCodecs: [],\n  videoCodec: '',\n  forbiddenUsernames: [],\n  suggestedUsernames: [],\n  chatDisabled: false,\n  chatJoinMessagesEnabled: true,\n  chatEstablishedUserMode: false,\n  hideViewerCount: false,\n};\n\nconst initialServerStatusState = {\n  broadcastActive: false,\n  broadcaster: null,\n  currentBroadcast: null,\n  online: false,\n  viewerCount: 0,\n  sessionMaxViewerCount: 0,\n  sessionPeakViewerCount: 0,\n  overallPeakViewerCount: 0,\n  versionNumber: '0.0.0',\n  streamTitle: '',\n  chatDisabled: false,\n  health: {\n    healthy: true,\n    healthPercentage: 100,\n    message: '',\n    representation: 0,\n  },\n};\n\nexport const ServerStatusContext = React.createContext({\n  ...initialServerStatusState,\n  serverConfig: initialServerConfigState,\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setFieldInConfigState: (args: UpdateArgs) => null,\n});\n\nconst ServerStatusProvider = ({ children }) => {\n  const [status, setStatus] = useState(initialServerStatusState);\n  const [config, setConfig] = useState(initialServerConfigState);\n\n  const getStatus = async () => {\n    try {\n      const result = await fetchData(STATUS);\n      setStatus({ ...result });\n    } catch (error) {\n      // todo\n    }\n  };\n  const getConfig = async () => {\n    try {\n      const result = await fetchData(SERVER_CONFIG);\n      setConfig(result);\n    } catch (error) {\n      // todo\n    }\n  };\n\n  const setFieldInConfigState = ({ fieldName, value, path }: UpdateArgs) => {\n    const updatedConfig = path\n      ? {\n          ...config,\n          [path]: {\n            ...config[path],\n            [fieldName]: value,\n          },\n        }\n      : {\n          ...config,\n          [fieldName]: value,\n        };\n    setConfig(updatedConfig);\n  };\n\n  useEffect(() => {\n    let getStatusIntervalId = null;\n\n    getStatus();\n    getStatusIntervalId = setInterval(getStatus, FETCH_INTERVAL);\n\n    getConfig();\n\n    // returned function will be called on component unmount\n    return () => {\n      clearInterval(getStatusIntervalId);\n    };\n  }, []);\n\n  // eslint-disable-next-line react/jsx-no-constructed-context-values\n  const providerValue = {\n    ...status,\n    serverConfig: config,\n\n    setFieldInConfigState,\n  };\n  return (\n    <ServerStatusContext.Provider value={providerValue}>{children}</ServerStatusContext.Provider>\n  );\n};\n\nServerStatusProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default ServerStatusProvider;\n","export default {\n  // Options.jsx\n  items_per_page: '/ page',\n  jump_to: 'Go to',\n  jump_to_confirm: 'confirm',\n  page: 'Page',\n  // Pagination.jsx\n  prev_page: 'Previous Page',\n  next_page: 'Next Page',\n  prev_5: 'Previous 5 Pages',\n  next_5: 'Next 5 Pages',\n  prev_3: 'Previous 3 Pages',\n  next_3: 'Next 3 Pages',\n  page_size: 'Page Size'\n};"],"names":["asn_CheckCircleFilled","CheckCircleFilled_CheckCircleFilled","props","ref","react","createElement","AntdIcon","Z","objectSpread2","icon","displayName","icons_CheckCircleFilled","forwardRef","asn_ExclamationCircleFilled","ExclamationCircleFilled_ExclamationCircleFilled","icons_ExclamationCircleFilled","locale_provider_default","locale_default","locale_provider_LocaleReceiver","_props$componentName","componentName","defaultLocale","children","antLocale","useContext","context","useMemo","_a","locale","localeFromContext","esm_extends","Function","localeCode","exist","useLocaleReceiver","LocaleContext","react__WEBPACK_IMPORTED_MODULE_0__","createContext","undefined","__webpack_exports__","time_picker_locale_en_US","placeholder","rangePlaceholder","locale_en_US_locale","lang","yearPlaceholder","quarterPlaceholder","monthPlaceholder","weekPlaceholder","rangeYearPlaceholder","rangeQuarterPlaceholder","rangeMonthPlaceholder","rangeWeekPlaceholder","today","now","backToToday","ok","clear","month","year","timeSelect","dateSelect","weekSelect","monthSelect","yearSelect","decadeSelect","yearFormat","dateFormat","dayFormat","dateTimeFormat","monthBeforeYear","previousMonth","nextMonth","previousYear","nextYear","previousDecade","nextDecade","previousCentury","nextCentury","timePickerLocale","typeTemplate","Pagination","en_US","DatePicker","TimePicker","Calendar","global","Table","filterTitle","filterConfirm","filterReset","filterEmptyText","filterCheckall","filterSearchPlaceholder","emptyText","selectAll","selectInvert","selectNone","selectionAll","sortTitle","expand","collapse","triggerDesc","triggerAsc","cancelSort","Modal","okText","cancelText","justOkText","Popconfirm","Transfer","titles","searchPlaceholder","itemUnit","itemsUnit","remove","selectCurrent","removeCurrent","removeAll","Upload","uploading","removeFile","uploadError","previewFile","downloadFile","Empty","description","Icon","Text","edit","copy","copied","PageHeader","back","Form","optional","defaultValidateMessages","required","whitespace","date","format","parse","invalid","types","string","method","array","object","number","integer","regexp","email","url","hex","len","min","max","range","pattern","mismatch","Image","preview","window","__NEXT_P","push","__webpack_require__","Title","Typography","EditPageContent","content","setContent","useState","submitStatus","setSubmitStatus","hasChanged","setHasChanged","serverStatusData","ServerStatusContext","serverConfig","setFieldInConfigState","instanceDetails","extraPageContent","initialContent","resetTimer","resetStates","clearTimeout","handleSave","createInputStatus","STATUS_PROCESSING","postConfigUpdateToAPI","apiPath","API_CUSTOM_CONTENT","data","value","onSuccess","fieldName","path","STATUS_SUCCESS","message","onError","STATUS_ERROR","setTimeout","RESET_TIMEOUT","useEffect","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","jsx","level","p","a","href","target","rel","CodeMirror","theme","bbedit","onChange","text","extensions","markdown","base","markdownLanguage","codeLanguages","languages","br","Button","type","onClick","FormStatusIndicator","status","STATUS_INVALID","STATUS_WARNING","INPUT_STATES","CheckCircleFilled","style","color","ExclamationCircleFilled","LoadingOutlined","WarningOutlined","initialServerConfigState","streamKeys","adminPassword","customStyles","logo","name","nsfw","socialHandles","streamTitle","summary","tags","title","welcomeMessage","offlineMessage","appearanceVariables","ffmpegPath","rtmpServerPort","webServerPort","socketHostOverride","s3","accessKey","acl","bucket","enabled","endpoint","region","secret","servingEndpoint","forcePathStyle","yp","instanceUrl","videoSettings","latencyLevel","cpuUsageLevel","videoQualityVariants","DEFAULT_VARIANT_STATE","federation","isPrivate","username","goLiveMessage","showEngagement","blockedDomains","notifications","browser","discord","webhook","twitter","apiKey","apiSecret","accessToken","accessTokenSecret","bearerToken","externalActions","supportedCodecs","videoCodec","forbiddenUsernames","suggestedUsernames","chatDisabled","chatJoinMessagesEnabled","chatEstablishedUserMode","hideViewerCount","initialServerStatusState","broadcastActive","broadcaster","currentBroadcast","online","viewerCount","sessionMaxViewerCount","sessionPeakViewerCount","overallPeakViewerCount","versionNumber","health","healthy","healthPercentage","representation","React","ServerStatusProvider","param","setStatus","config","setConfig","getStatus","result","fetchData","STATUS","error","getConfig","SERVER_CONFIG","updatedConfig","getStatusIntervalId","setInterval","FETCH_INTERVAL","clearInterval","providerValue","Provider","propTypes","PropTypes","items_per_page","jump_to","jump_to_confirm","page","prev_page","next_page","prev_5","next_5","prev_3","next_3","page_size"],"sourceRoot":""}