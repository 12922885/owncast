{"version":3,"file":"static/chunks/pages/admin/config/general-d1c5ccb50b7eba06.js","mappings":"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","sources":["webpack://_N_E/?4dda","webpack://_N_E/./components/admin/EditValueArray.tsx","webpack://_N_E/./components/admin/ToggleSwitch.tsx","webpack://_N_E/./components/admin/SocialDropdown.tsx","webpack://_N_E/./components/admin/config/general/EditSocialLinks.tsx","webpack://_N_E/./components/admin/EditLogo.tsx","webpack://_N_E/./components/admin/config/general/EditInstanceDetails.tsx","webpack://_N_E/./components/admin/config/general/EditInstanceTags.tsx","webpack://_N_E/./components/admin/config/general/EditPageContent.tsx","webpack://_N_E/./components/admin/config/general/GeneralConfig.tsx","webpack://_N_E/./components/admin/EditCustomStyles.tsx","webpack://_N_E/./components/admin/config/general/AppearanceConfig.tsx","webpack://_N_E/./pages/admin/config/general/index.tsx","webpack://_N_E/./utils/images.ts","webpack://_N_E/./components/admin/config/general/appearance.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/config/general\",\n      function () {\n        return require(\"private-next-pages/admin/config/general/index.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin/config/general\"])\n      });\n    }\n  ","/* eslint-disable react/no-array-index-key */\nimport React, { FC, useState } from 'react';\nimport { Typography, Tag } from 'antd';\n\nimport { TextField } from './TextField';\nimport { UpdateArgs } from '../../types/config-section';\nimport { StatusState } from '../../utils/input-statuses';\nimport { FormStatusIndicator } from './FormStatusIndicator';\n\nconst { Title } = Typography;\n\nexport const TAG_COLOR = '#5a67d8';\n\nexport type EditStringArrayProps = {\n  title: string;\n  description?: string;\n  placeholder: string;\n  maxLength?: number;\n  values: string[];\n  submitStatus?: StatusState;\n  continuousStatusMessage?: StatusState;\n  handleDeleteIndex: (index: number) => void;\n  handleCreateString: (arg: string) => void;\n};\n\nexport const EditValueArray: FC<EditStringArrayProps> = ({\n  title,\n  description,\n  placeholder,\n  maxLength,\n  values,\n  handleDeleteIndex,\n  handleCreateString,\n  submitStatus,\n  continuousStatusMessage,\n}) => {\n  const [newStringInput, setNewStringInput] = useState<string>('');\n\n  const handleInputChange = ({ value }: UpdateArgs) => {\n    setNewStringInput(value);\n  };\n\n  const handleSubmitNewString = () => {\n    const newString = newStringInput.trim();\n    handleCreateString(newString);\n    setNewStringInput('');\n  };\n\n  return (\n    <div className=\"edit-string-array-container\">\n      <Title level={3} className=\"section-title\">\n        {title}\n      </Title>\n      <p className=\"description\">{description}</p>\n\n      <div className=\"edit-current-strings\">\n        {values?.map((tag, index) => {\n          const handleClose = () => {\n            handleDeleteIndex(index);\n          };\n          return (\n            <Tag closable onClose={handleClose} color={TAG_COLOR} key={`tag-${tag}-${index}`}>\n              {tag}\n            </Tag>\n          );\n        })}\n      </div>\n      {continuousStatusMessage && (\n        <div className=\"continuous-status-section\">\n          <FormStatusIndicator status={continuousStatusMessage} />\n        </div>\n      )}\n      <div className=\"add-new-string-section\">\n        <TextField\n          fieldName=\"string-input\"\n          value={newStringInput}\n          onChange={handleInputChange}\n          onPressEnter={handleSubmitNewString}\n          maxLength={maxLength}\n          placeholder={placeholder}\n          status={submitStatus}\n        />\n      </div>\n    </div>\n  );\n};\n\nEditValueArray.defaultProps = {\n  maxLength: 50,\n  description: null,\n  submitStatus: null,\n  continuousStatusMessage: null,\n};\n","// This is a wrapper for the Ant Switch component.\n// This one is styled to match the form-textfield component.\n// If `useSubmit` is true then it will automatically post to the config API onChange.\n\nimport React, { useState, useContext, FC } from 'react';\nimport { Switch } from 'antd';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n} from '../../utils/input-statuses';\nimport { FormStatusIndicator } from './FormStatusIndicator';\n\nimport { RESET_TIMEOUT, postConfigUpdateToAPI } from '../../utils/config-constants';\nimport { ServerStatusContext } from '../../utils/server-status-context';\n\nexport type ToggleSwitchProps = {\n  fieldName: string;\n\n  apiPath?: string;\n  checked?: boolean;\n  reversed?: boolean;\n  configPath?: string;\n  disabled?: boolean;\n  label?: string;\n  tip?: string;\n  useSubmit?: boolean;\n  onChange?: (arg: boolean) => void;\n};\n\nexport const ToggleSwitch: FC<ToggleSwitchProps> = ({\n  apiPath,\n  checked,\n  reversed = false,\n  configPath = '',\n  disabled = false,\n  fieldName,\n  label,\n  tip,\n  useSubmit,\n  onChange,\n}) => {\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n\n  let resetTimer = null;\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { setFieldInConfigState } = serverStatusData || {};\n\n  const resetStates = () => {\n    setSubmitStatus(null);\n    clearTimeout(resetTimer);\n    resetTimer = null;\n  };\n\n  const handleChange = async (isChecked: boolean) => {\n    if (useSubmit) {\n      setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n      const isCheckedSend = reversed ? !isChecked : isChecked;\n\n      await postConfigUpdateToAPI({\n        apiPath,\n        data: { value: isCheckedSend },\n        onSuccess: () => {\n          setFieldInConfigState({ fieldName, value: isCheckedSend, path: configPath });\n          setSubmitStatus(createInputStatus(STATUS_SUCCESS));\n        },\n        onError: (message: string) => {\n          setSubmitStatus(createInputStatus(STATUS_ERROR, `There was an error: ${message}`));\n        },\n      });\n      resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n    }\n    if (onChange) {\n      onChange(isChecked);\n    }\n  };\n\n  const loading = submitStatus !== null && submitStatus.type === STATUS_PROCESSING;\n  return (\n    <div className=\"formfield-container toggleswitch-container\">\n      {label && (\n        <div className=\"label-side\">\n          <span className=\"formfield-label\">{label}</span>\n        </div>\n      )}\n\n      <div className=\"input-side\">\n        <div className=\"input-group\">\n          <Switch\n            className={`switch field-${fieldName}`}\n            loading={loading}\n            onChange={handleChange}\n            defaultChecked={checked}\n            checked={checked}\n            checkedChildren=\"ON\"\n            unCheckedChildren=\"OFF\"\n            disabled={disabled}\n          />\n          <FormStatusIndicator status={submitStatus} />\n        </div>\n        <p className=\"field-tip\">{tip}</p>\n      </div>\n    </div>\n  );\n};\nexport default ToggleSwitch;\n\nToggleSwitch.defaultProps = {\n  apiPath: '',\n  checked: false,\n  reversed: false,\n  configPath: '',\n  disabled: false,\n  label: '',\n  tip: '',\n  useSubmit: false,\n  onChange: null,\n};\n","import React, { FC } from 'react';\nimport { Select } from 'antd';\nimport { SocialHandleDropdownItem } from '../../types/config-section';\nimport { OTHER_SOCIAL_HANDLE_OPTION } from '../../utils/config-constants';\n\nexport type DropdownProps = {\n  iconList: SocialHandleDropdownItem[];\n  selectedOption: string;\n  onSelected: any;\n};\n\nexport const SocialDropdown: FC<DropdownProps> = ({ iconList, selectedOption, onSelected }) => {\n  const handleSelected = (value: string) => {\n    if (onSelected) {\n      onSelected(value);\n    }\n  };\n  const inititalSelected = selectedOption === '' ? null : selectedOption;\n  return (\n    <div className=\"social-dropdown-container\">\n      <p className=\"description\">\n        If you are looking for a platform name not on this list, please select Other and type in\n        your own name. A logo will not be provided.\n      </p>\n\n      <div className=\"formfield-container\">\n        <div className=\"label-side\">\n          <span className=\"formfield-label\">Social Platform</span>\n        </div>\n        <div className=\"input-side\">\n          <Select\n            style={{ width: 240 }}\n            className=\"social-dropdown\"\n            placeholder=\"Social platform...\"\n            defaultValue={inititalSelected}\n            value={inititalSelected}\n            onSelect={handleSelected}\n          >\n            {iconList.map(item => {\n              const { platform, icon, key } = item;\n\n              return (\n                <Select.Option className=\"social-option\" key={`platform-${key}`} value={key}>\n                  <span className=\"option-icon\">\n                    <img src={icon} alt=\"\" className=\"option-icon\" />\n                  </span>\n                  <span className=\"option-label\">{platform}</span>\n                </Select.Option>\n              );\n            })}\n            <Select.Option\n              className=\"social-option\"\n              key={`platform-${OTHER_SOCIAL_HANDLE_OPTION}`}\n              value={OTHER_SOCIAL_HANDLE_OPTION}\n            >\n              Other...\n            </Select.Option>\n          </Select>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Typography, Table, Button, Modal, Input } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport { CaretDownOutlined, CaretUpOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { SocialDropdown } from '../../SocialDropdown';\nimport { fetchData, SOCIAL_PLATFORMS_LIST } from '../../../../utils/apis';\nimport { ServerStatusContext } from '../../../../utils/server-status-context';\nimport {\n  API_SOCIAL_HANDLES,\n  postConfigUpdateToAPI,\n  RESET_TIMEOUT,\n  DEFAULT_SOCIAL_HANDLE,\n  OTHER_SOCIAL_HANDLE_OPTION,\n} from '../../../../utils/config-constants';\nimport { SocialHandle, UpdateArgs } from '../../../../types/config-section';\nimport {\n  isValidMatrixAccount,\n  isValidAccount,\n  isValidUrl,\n  DEFAULT_TEXTFIELD_URL_PATTERN,\n} from '../../../../utils/urls';\nimport { TextField } from '../../TextField';\nimport { createInputStatus, STATUS_ERROR, STATUS_SUCCESS } from '../../../../utils/input-statuses';\nimport { FormStatusIndicator } from '../../FormStatusIndicator';\n\nconst { Title } = Typography;\n\n// eslint-disable-next-line react/function-component-definition\nexport default function EditSocialLinks() {\n  const [availableIconsList, setAvailableIconsList] = useState([]);\n  const [currentSocialHandles, setCurrentSocialHandles] = useState([]);\n\n  const [displayModal, setDisplayModal] = useState(false);\n  const [displayOther, setDisplayOther] = useState(false);\n  const [modalProcessing, setModalProcessing] = useState(false);\n  const [editId, setEditId] = useState(-1);\n\n  // current data inside modal\n  const [modalDataState, setModalDataState] = useState(DEFAULT_SOCIAL_HANDLE);\n\n  const [submitStatus, setSubmitStatus] = useState(null);\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig, setFieldInConfigState } = serverStatusData || {};\n\n  const { instanceDetails } = serverConfig;\n  const { socialHandles: initialSocialHandles } = instanceDetails;\n\n  let resetTimer = null;\n\n  const PLACEHOLDERS = {\n    mastodon: 'https://mastodon.social/@username',\n    twitter: 'https://twitter.com/username',\n  };\n\n  const getAvailableIcons = async () => {\n    try {\n      const result = await fetchData(SOCIAL_PLATFORMS_LIST, { auth: false });\n      const list = Object.keys(result).map(item => ({\n        key: item,\n        ...result[item],\n      }));\n      setAvailableIconsList(list);\n    } catch (error) {\n      console.log(error);\n      //  do nothing\n    }\n  };\n\n  const isPredefinedSocial = (platform: string) =>\n    availableIconsList.find(item => item.key === platform) || false;\n\n  const selectedOther =\n    modalDataState.platform !== '' &&\n    !availableIconsList.find(item => item.key === modalDataState.platform);\n\n  useEffect(() => {\n    getAvailableIcons();\n  }, []);\n\n  useEffect(() => {\n    if (instanceDetails.socialHandles) {\n      setCurrentSocialHandles(initialSocialHandles);\n    }\n  }, [instanceDetails]);\n\n  const resetStates = () => {\n    setSubmitStatus(null);\n    resetTimer = null;\n    clearTimeout(resetTimer);\n  };\n  const resetModal = () => {\n    setDisplayModal(false);\n    setEditId(-1);\n    setDisplayOther(false);\n    setModalProcessing(false);\n    setModalDataState({ ...DEFAULT_SOCIAL_HANDLE });\n  };\n\n  const handleModalCancel = () => {\n    resetModal();\n  };\n\n  const updateModalState = (fieldName: string, value: string) => {\n    setModalDataState({\n      ...modalDataState,\n      [fieldName]: value,\n    });\n  };\n  const handleDropdownSelect = (value: string) => {\n    if (value === OTHER_SOCIAL_HANDLE_OPTION) {\n      setDisplayOther(true);\n      updateModalState('platform', '');\n    } else {\n      setDisplayOther(false);\n      updateModalState('platform', value);\n    }\n  };\n  const handleOtherNameChange = event => {\n    const { value } = event.target;\n    updateModalState('platform', value);\n  };\n\n  const handleUrlChange = ({ value }: UpdateArgs) => {\n    updateModalState('url', value);\n  };\n\n  // posts all the variants at once as an array obj\n  const postUpdateToAPI = async (postValue: any) => {\n    await postConfigUpdateToAPI({\n      apiPath: API_SOCIAL_HANDLES,\n      data: { value: postValue },\n      onSuccess: () => {\n        setFieldInConfigState({\n          fieldName: 'socialHandles',\n          value: postValue,\n          path: 'instanceDetails',\n        });\n\n        // close modal\n        setModalProcessing(false);\n        handleModalCancel();\n\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS));\n\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, `There was an error: ${message}`));\n        setModalProcessing(false);\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n    });\n  };\n\n  // on Ok, send all of dataState to api\n  // show loading\n  // close modal when api is done\n  const handleModalOk = () => {\n    setModalProcessing(true);\n    const postData = currentSocialHandles.length ? [...currentSocialHandles] : [];\n    if (editId === -1) {\n      postData.push(modalDataState);\n    } else {\n      postData.splice(editId, 1, modalDataState);\n    }\n    postUpdateToAPI(postData);\n  };\n\n  const handleDeleteItem = (index: number) => {\n    const postData = [...currentSocialHandles];\n    postData.splice(index, 1);\n    postUpdateToAPI(postData);\n  };\n\n  const handleMoveItemUp = (index: number) => {\n    if (index <= 0 || index >= currentSocialHandles.length) {\n      return;\n    }\n    const postData = [...currentSocialHandles];\n    const tmp = postData[index - 1];\n    postData[index - 1] = postData[index];\n    postData[index] = tmp;\n    postUpdateToAPI(postData);\n  };\n\n  const handleMoveItemDown = (index: number) => {\n    if (index < 0 || index >= currentSocialHandles.length - 1) {\n      return;\n    }\n    const postData = [...currentSocialHandles];\n    const tmp = postData[index + 1];\n    postData[index + 1] = postData[index];\n    postData[index] = tmp;\n    postUpdateToAPI(postData);\n  };\n\n  const socialHandlesColumns: ColumnsType<SocialHandle> = [\n    {\n      title: 'Social Link',\n      dataIndex: '',\n      key: 'combo',\n      render: (data, record) => {\n        const { platform, url } = record;\n        const platformInfo = isPredefinedSocial(platform);\n\n        // custom platform case\n        if (!platformInfo) {\n          return (\n            <div className=\"social-handle-cell\">\n              <p className=\"option-label\">\n                <strong>{platform}</strong>\n                <span className=\"handle-url\" title={url}>\n                  {url}\n                </span>\n              </p>\n            </div>\n          );\n        }\n        const { icon, platform: platformName } = platformInfo;\n        return (\n          <div className=\"social-handle-cell\">\n            <span className=\"option-icon\">\n              <img src={icon} alt=\"\" className=\"option-icon\" />\n            </span>\n            <p className=\"option-label\">\n              <strong>{platformName}</strong>\n              <span className=\"handle-url\" title={url}>\n                {url}\n              </span>\n            </p>\n          </div>\n        );\n      },\n    },\n    {\n      title: '',\n      dataIndex: '',\n      key: 'edit',\n      render: (data, record, index) => (\n        <div className=\"actions\">\n          <Button\n            size=\"small\"\n            onClick={() => {\n              const platformInfo = currentSocialHandles[index];\n              setEditId(index);\n              setModalDataState({ ...platformInfo });\n              setDisplayModal(true);\n              if (!isPredefinedSocial(platformInfo.platform)) {\n                setDisplayOther(true);\n              }\n            }}\n          >\n            Edit\n          </Button>\n          <Button\n            icon={<CaretUpOutlined />}\n            size=\"small\"\n            hidden={index === 0}\n            onClick={() => handleMoveItemUp(index)}\n          />\n          <Button\n            icon={<CaretDownOutlined />}\n            size=\"small\"\n            hidden={index === currentSocialHandles.length - 1}\n            onClick={() => handleMoveItemDown(index)}\n          />\n          <Button\n            className=\"delete-button\"\n            icon={<DeleteOutlined />}\n            size=\"small\"\n            onClick={() => handleDeleteItem(index)}\n          />\n        </div>\n      ),\n    },\n  ];\n\n  const isValid = (url: string, platform: string) => {\n    if (platform === 'xmpp') {\n      return isValidAccount(url, 'xmpp');\n    }\n    if (platform === 'matrix') {\n      return isValidMatrixAccount(url);\n    }\n\n    return isValidUrl(url);\n  };\n\n  const okButtonProps = {\n    disabled: !isValid(modalDataState.url, modalDataState.platform),\n  };\n\n  const otherField = (\n    <div className=\"other-field-container formfield-container\">\n      <div className=\"label-side\" />\n      <div className=\"input-side\">\n        <Input\n          placeholder=\"Other platform name\"\n          defaultValue={modalDataState.platform}\n          onChange={handleOtherNameChange}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"social-links-edit-container\">\n      <Title level={3} className=\"section-title\">\n        Your Social Handles\n      </Title>\n      <p className=\"description\">\n        Add all your social media handles and links to your other profiles here.\n      </p>\n\n      <FormStatusIndicator status={submitStatus} />\n\n      <Table\n        className=\"social-handles-table\"\n        pagination={false}\n        size=\"small\"\n        rowKey={record => `${record.platform}-${record.url}`}\n        columns={socialHandlesColumns}\n        dataSource={currentSocialHandles}\n      />\n\n      <Modal\n        title=\"Edit Social Handle\"\n        open={displayModal}\n        onOk={handleModalOk}\n        onCancel={handleModalCancel}\n        confirmLoading={modalProcessing}\n        okButtonProps={okButtonProps}\n      >\n        <div className=\"social-handle-modal-content\">\n          <SocialDropdown\n            iconList={availableIconsList}\n            selectedOption={selectedOther ? OTHER_SOCIAL_HANDLE_OPTION : modalDataState.platform}\n            onSelected={handleDropdownSelect}\n          />\n          {displayOther && otherField}\n          <br />\n          <TextField\n            fieldName=\"social-url\"\n            label=\"URL\"\n            placeholder={PLACEHOLDERS[modalDataState.platform] || 'Url to page'}\n            value={modalDataState.url}\n            onChange={handleUrlChange}\n            useTrim\n            type=\"url\"\n            pattern={DEFAULT_TEXTFIELD_URL_PATTERN}\n          />\n          <FormStatusIndicator status={submitStatus} />\n        </div>\n      </Modal>\n      <br />\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          resetModal();\n          setDisplayModal(true);\n        }}\n      >\n        Add a new social link\n      </Button>\n    </div>\n  );\n}\n","import { Button, Upload } from 'antd';\nimport { RcFile } from 'antd/lib/upload/interface';\nimport { LoadingOutlined, UploadOutlined } from '@ant-design/icons';\nimport React, { useState, useContext, FC } from 'react';\nimport { FormStatusIndicator } from './FormStatusIndicator';\nimport { ServerStatusContext } from '../../utils/server-status-context';\nimport {\n  postConfigUpdateToAPI,\n  RESET_TIMEOUT,\n  TEXTFIELD_PROPS_LOGO,\n} from '../../utils/config-constants';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n} from '../../utils/input-statuses';\nimport { NEXT_PUBLIC_API_HOST } from '../../utils/apis';\n\nimport {\n  ACCEPTED_IMAGE_TYPES,\n  getBase64,\n  MAX_IMAGE_FILESIZE,\n  readableBytes,\n} from '../../utils/images';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const EditLogo: FC = () => {\n  const [logoUrl, setlogoUrl] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [logoCachedbuster, setLogoCacheBuster] = useState(0);\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { setFieldInConfigState, serverConfig } = serverStatusData || {};\n  const currentLogo = serverConfig?.instanceDetails?.logo;\n\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n  let resetTimer = null;\n\n  const { apiPath, tip } = TEXTFIELD_PROPS_LOGO;\n\n  // Clear out any validation states and messaging\n  const resetStates = () => {\n    setSubmitStatus(null);\n    clearTimeout(resetTimer);\n    resetTimer = null;\n  };\n\n  // validate file type and create base64 encoded img\n  const beforeUpload = (file: RcFile) => {\n    setLoading(true);\n\n    // eslint-disable-next-line consistent-return\n    return new Promise<void>((res, rej) => {\n      if (file.size > MAX_IMAGE_FILESIZE) {\n        const msg = `File size is too big: ${readableBytes(file.size)}`;\n        setSubmitStatus(createInputStatus(STATUS_ERROR, `There was an error: ${msg}`));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n        setLoading(false);\n        // eslint-disable-next-line no-promise-executor-return\n        return rej();\n      }\n      if (!ACCEPTED_IMAGE_TYPES.includes(file.type)) {\n        const msg = `File type is not supported: ${file.type}`;\n        setSubmitStatus(createInputStatus(STATUS_ERROR, `There was an error: ${msg}`));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n        setLoading(false);\n        // eslint-disable-next-line no-promise-executor-return\n        return rej();\n      }\n\n      getBase64(file, (url: string) => {\n        setlogoUrl(url);\n        setTimeout(() => res(), 100);\n      });\n    });\n  };\n\n  // Post new logo to api\n  const handleLogoUpdate = async () => {\n    if (logoUrl !== currentLogo) {\n      setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n      await postConfigUpdateToAPI({\n        apiPath,\n        data: { value: logoUrl },\n        onSuccess: () => {\n          setFieldInConfigState({ fieldName: 'logo', value: logoUrl, path: '' });\n          setSubmitStatus(createInputStatus(STATUS_SUCCESS));\n          setLoading(false);\n          setLogoCacheBuster(Math.floor(Math.random() * 100)); // Force logo to re-load\n        },\n        onError: (msg: string) => {\n          setSubmitStatus(createInputStatus(STATUS_ERROR, `There was an error: ${msg}`));\n          setLoading(false);\n        },\n      });\n      resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n    }\n  };\n\n  const logoDisplayUrl = `${NEXT_PUBLIC_API_HOST}logo?random=${logoCachedbuster}`;\n\n  return (\n    <div className=\"formfield-container logo-upload-container\">\n      <div className=\"label-side\">\n        <span className=\"formfield-label\">Logo</span>\n      </div>\n\n      <div className=\"input-side\">\n        <div className=\"input-group\">\n          <img src={logoDisplayUrl} alt=\"avatar\" className=\"logo-preview\" />\n          <Upload\n            name=\"logo\"\n            listType=\"picture\"\n            className=\"avatar-uploader\"\n            showUploadList={false}\n            accept={ACCEPTED_IMAGE_TYPES.join(',')}\n            beforeUpload={beforeUpload}\n            customRequest={handleLogoUpdate}\n            disabled={loading}\n          >\n            {loading ? (\n              <LoadingOutlined style={{ color: 'white' }} />\n            ) : (\n              <Button icon={<UploadOutlined />} />\n            )}\n          </Upload>\n        </div>\n        <FormStatusIndicator status={submitStatus} />\n        <p className=\"field-tip\">{tip}</p>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Typography } from 'antd';\nimport {\n  TextFieldWithSubmit,\n  TEXTFIELD_TYPE_TEXTAREA,\n  TEXTFIELD_TYPE_URL,\n} from '../../TextFieldWithSubmit';\nimport { ServerStatusContext } from '../../../../utils/server-status-context';\nimport {\n  postConfigUpdateToAPI,\n  TEXTFIELD_PROPS_INSTANCE_URL,\n  TEXTFIELD_PROPS_SERVER_NAME,\n  TEXTFIELD_PROPS_SERVER_SUMMARY,\n  TEXTFIELD_PROPS_SERVER_OFFLINE_MESSAGE,\n  API_YP_SWITCH,\n  FIELD_PROPS_YP,\n  FIELD_PROPS_NSFW,\n  FIELD_PROPS_HIDE_VIEWER_COUNT,\n} from '../../../../utils/config-constants';\nimport { UpdateArgs } from '../../../../types/config-section';\nimport { ToggleSwitch } from '../../ToggleSwitch';\nimport { EditLogo } from '../../EditLogo';\n\nconst { Title } = Typography;\n\n// eslint-disable-next-line react/function-component-definition\nexport default function EditInstanceDetails() {\n  const [formDataValues, setFormDataValues] = useState(null);\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig } = serverStatusData || {};\n\n  const { instanceDetails, yp } = serverConfig;\n  const { instanceUrl } = yp;\n\n  useEffect(() => {\n    setFormDataValues({\n      ...instanceDetails,\n      ...yp,\n    });\n  }, [instanceDetails, yp]);\n\n  if (!formDataValues) {\n    return null;\n  }\n\n  // if instanceUrl is empty, we should also turn OFF the `enabled` field of directory.\n  const handleSubmitInstanceUrl = () => {\n    if (formDataValues.instanceUrl === '') {\n      if (yp.enabled === true) {\n        postConfigUpdateToAPI({\n          apiPath: API_YP_SWITCH,\n          data: { value: false },\n        });\n      }\n    }\n  };\n\n  const handleFieldChange = ({ fieldName, value }: UpdateArgs) => {\n    setFormDataValues({\n      ...formDataValues,\n      [fieldName]: value,\n    });\n  };\n\n  function handleHideViewerCountChange(enabled: boolean) {\n    handleFieldChange({ fieldName: 'hideViewerCount', value: enabled });\n  }\n\n  const hasInstanceUrl = instanceUrl !== '';\n\n  return (\n    <div className=\"edit-general-settings\">\n      <Title level={3} className=\"section-title\">\n        Configure Instance Details\n      </Title>\n      <br />\n\n      <TextFieldWithSubmit\n        fieldName=\"name\"\n        {...TEXTFIELD_PROPS_SERVER_NAME}\n        value={formDataValues.name}\n        initialValue={instanceDetails.name}\n        onChange={handleFieldChange}\n      />\n\n      <TextFieldWithSubmit\n        fieldName=\"instanceUrl\"\n        {...TEXTFIELD_PROPS_INSTANCE_URL}\n        value={formDataValues.instanceUrl}\n        initialValue={yp.instanceUrl}\n        type={TEXTFIELD_TYPE_URL}\n        onChange={handleFieldChange}\n        onSubmit={handleSubmitInstanceUrl}\n      />\n\n      <TextFieldWithSubmit\n        fieldName=\"summary\"\n        {...TEXTFIELD_PROPS_SERVER_SUMMARY}\n        type={TEXTFIELD_TYPE_TEXTAREA}\n        value={formDataValues.summary}\n        initialValue={instanceDetails.summary}\n        onChange={handleFieldChange}\n      />\n\n      <TextFieldWithSubmit\n        fieldName=\"offlineMessage\"\n        {...TEXTFIELD_PROPS_SERVER_OFFLINE_MESSAGE}\n        type={TEXTFIELD_TYPE_TEXTAREA}\n        value={formDataValues.offlineMessage}\n        initialValue={instanceDetails.offlineMessage}\n        onChange={handleFieldChange}\n      />\n\n      {/* Logo section */}\n      <EditLogo />\n\n      <ToggleSwitch\n        fieldName=\"hideViewerCount\"\n        useSubmit\n        {...FIELD_PROPS_HIDE_VIEWER_COUNT}\n        checked={formDataValues.hideViewerCount}\n        onChange={handleHideViewerCountChange}\n      />\n\n      <br />\n      <p className=\"description\">\n        Increase your audience by appearing in the{' '}\n        <a href=\"https://directory.owncast.online\" target=\"_blank\" rel=\"noreferrer\">\n          <strong>Owncast Directory</strong>\n        </a>\n        . This is an external service run by the Owncast project.{' '}\n        <a\n          href=\"https://owncast.online/docs/directory/?source=admin\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn more\n        </a>\n        .\n      </p>\n      {!yp.instanceUrl && (\n        <p className=\"description\">\n          You must set your <strong>Server URL</strong> above to enable the directory.\n        </p>\n      )}\n\n      <div className=\"config-yp-container\">\n        <ToggleSwitch\n          fieldName=\"enabled\"\n          useSubmit\n          {...FIELD_PROPS_YP}\n          checked={formDataValues.enabled}\n          disabled={!hasInstanceUrl}\n        />\n        <ToggleSwitch\n          fieldName=\"nsfw\"\n          useSubmit\n          {...FIELD_PROPS_NSFW}\n          checked={formDataValues.nsfw}\n          disabled={!hasInstanceUrl}\n        />\n      </div>\n    </div>\n  );\n}\n","/* eslint-disable react/no-array-index-key */\nimport React, { useContext, useState, useEffect } from 'react';\nimport { Typography, Tag } from 'antd';\nimport { ServerStatusContext } from '../../../../utils/server-status-context';\nimport {\n  FIELD_PROPS_TAGS,\n  RESET_TIMEOUT,\n  postConfigUpdateToAPI,\n} from '../../../../utils/config-constants';\nimport { TextField } from '../../TextField';\nimport { UpdateArgs } from '../../../../types/config-section';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n  STATUS_WARNING,\n} from '../../../../utils/input-statuses';\nimport { TAG_COLOR } from '../../EditValueArray';\n\nconst { Title } = Typography;\n\n// eslint-disable-next-line react/function-component-definition\nexport default function EditInstanceTags() {\n  const [newTagInput, setNewTagInput] = useState<string>('');\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig, setFieldInConfigState } = serverStatusData || {};\n\n  const { instanceDetails } = serverConfig;\n  const { tags = [] } = instanceDetails;\n\n  const { apiPath, maxLength, placeholder, configPath } = FIELD_PROPS_TAGS;\n\n  let resetTimer = null;\n\n  useEffect(\n    () => () => {\n      clearTimeout(resetTimer);\n    },\n    [],\n  );\n\n  const resetStates = () => {\n    setSubmitStatus(null);\n    resetTimer = null;\n    clearTimeout(resetTimer);\n  };\n\n  // posts all the tags at once as an array obj\n  const postUpdateToAPI = async (postValue: any) => {\n    setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n\n    await postConfigUpdateToAPI({\n      apiPath,\n      data: { value: postValue },\n      onSuccess: () => {\n        setFieldInConfigState({ fieldName: 'tags', value: postValue, path: configPath });\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS, 'Tags updated.'));\n        setNewTagInput('');\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, message));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n    });\n  };\n\n  const handleInputChange = ({ value }: UpdateArgs) => {\n    if (!submitStatus) {\n      setSubmitStatus(null);\n    }\n    setNewTagInput(value);\n  };\n\n  // send to api and do stuff\n  const handleSubmitNewTag = () => {\n    resetStates();\n    const newTag = newTagInput.trim();\n    if (newTag === '') {\n      setSubmitStatus(createInputStatus(STATUS_WARNING, 'Please enter a tag'));\n      return;\n    }\n    if (tags.some(tag => tag.toLowerCase() === newTag.toLowerCase())) {\n      setSubmitStatus(createInputStatus(STATUS_WARNING, 'This tag is already used!'));\n      return;\n    }\n\n    const updatedTags = [...tags, newTag];\n    postUpdateToAPI(updatedTags);\n  };\n\n  const handleDeleteTag = index => {\n    resetStates();\n    const updatedTags = [...tags];\n    updatedTags.splice(index, 1);\n    postUpdateToAPI(updatedTags);\n  };\n\n  return (\n    <div className=\"tag-editor-container\">\n      <Title level={3} className=\"section-title\">\n        Add Tags\n      </Title>\n      <p className=\"description\">\n        This is a great way to categorize your Owncast server on the Directory!\n      </p>\n\n      <div className=\"edit-current-strings\">\n        {tags.map((tag, index) => {\n          const handleClose = () => {\n            handleDeleteTag(index);\n          };\n          return (\n            <Tag closable onClose={handleClose} color={TAG_COLOR} key={`tag-${tag}-${index}`}>\n              {tag}\n            </Tag>\n          );\n        })}\n      </div>\n\n      <div className=\"add-new-string-section\">\n        <TextField\n          fieldName=\"tag-input\"\n          value={newTagInput}\n          className=\"new-tag-input\"\n          onChange={handleInputChange}\n          onPressEnter={handleSubmitNewTag}\n          maxLength={maxLength}\n          placeholder={placeholder}\n          status={submitStatus}\n        />\n      </div>\n    </div>\n  );\n}\n","// EDIT CUSTOM DETAILS ON YOUR PAGE\nimport React, { useState, useEffect, useContext } from 'react';\nimport { Typography, Button } from 'antd';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { bbedit } from '@uiw/codemirror-theme-bbedit';\nimport { markdown, markdownLanguage } from '@codemirror/lang-markdown';\nimport { languages } from '@codemirror/language-data';\n\nimport { ServerStatusContext } from '../../../../utils/server-status-context';\nimport {\n  postConfigUpdateToAPI,\n  RESET_TIMEOUT,\n  API_CUSTOM_CONTENT,\n} from '../../../../utils/config-constants';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n} from '../../../../utils/input-statuses';\nimport { FormStatusIndicator } from '../../FormStatusIndicator';\n\nconst { Title } = Typography;\n\n// eslint-disable-next-line react/function-component-definition\nexport default function EditPageContent() {\n  const [content, setContent] = useState('');\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n  const [hasChanged, setHasChanged] = useState(false);\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig, setFieldInConfigState } = serverStatusData || {};\n\n  const { instanceDetails } = serverConfig;\n  const { extraPageContent: initialContent } = instanceDetails;\n\n  let resetTimer = null;\n\n  function handleEditorChange(text) {\n    setContent(text);\n    if (text !== initialContent && !hasChanged) {\n      setHasChanged(true);\n    } else if (text === initialContent && hasChanged) {\n      setHasChanged(false);\n    }\n  }\n\n  // Clear out any validation states and messaging\n  const resetStates = () => {\n    setSubmitStatus(null);\n    setHasChanged(false);\n    clearTimeout(resetTimer);\n    resetTimer = null;\n  };\n\n  // posts all the tags at once as an array obj\n  async function handleSave() {\n    setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n    await postConfigUpdateToAPI({\n      apiPath: API_CUSTOM_CONTENT,\n      data: { value: content },\n      onSuccess: (message: string) => {\n        setFieldInConfigState({\n          fieldName: 'extraPageContent',\n          value: content,\n          path: 'instanceDetails',\n        });\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS, message));\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, message));\n      },\n    });\n    resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n  }\n\n  useEffect(() => {\n    setContent(initialContent);\n  }, [instanceDetails]);\n\n  return (\n    <div className=\"edit-page-content\">\n      <Title level={3} className=\"section-title\">\n        Custom Page Content\n      </Title>\n\n      <p className=\"description\">\n        Edit the content of your page by using simple{' '}\n        <a\n          href=\"https://www.markdownguide.org/basic-syntax/\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Markdown syntax\n        </a>\n        .\n      </p>\n\n      <CodeMirror\n        value={content}\n        placeholder=\"Enter your custom page content here...\"\n        theme={bbedit}\n        onChange={handleEditorChange}\n        extensions={[markdown({ base: markdownLanguage, codeLanguages: languages })]}\n      />\n\n      <br />\n      <div className=\"page-content-actions\">\n        {hasChanged && (\n          <Button type=\"primary\" onClick={handleSave}>\n            Save\n          </Button>\n        )}\n        <FormStatusIndicator status={submitStatus} />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport EditInstanceDetails from './EditInstanceDetails';\nimport EditInstanceTags from './EditInstanceTags';\nimport EditSocialLinks from './EditSocialLinks';\nimport EditPageContent from './EditPageContent';\n\n// eslint-disable-next-line react/function-component-definition\nexport default function PublicFacingDetails() {\n  return (\n    <div className=\"config-public-details-page\">\n      <p className=\"description\">\n        The following are displayed on your site to describe your stream and its content.{' '}\n        <a\n          href=\"https://owncast.online/docs/website/?source=admin\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn more.\n        </a>\n      </p>\n\n      <div className=\"top-container\">\n        <div className=\"form-module instance-details-container\">\n          <EditInstanceDetails />\n        </div>\n\n        <div className=\"form-module social-items-container \">\n          <div className=\"form-module tags-module\">\n            <EditInstanceTags />\n          </div>\n\n          <div className=\"form-module social-handles-container\">\n            <EditSocialLinks />\n          </div>\n        </div>\n      </div>\n      <div className=\"form-module page-content-module\">\n        <EditPageContent />\n      </div>\n    </div>\n  );\n}\n","// EDIT CUSTOM CSS STYLES\nimport React, { useState, useEffect, useContext, FC } from 'react';\nimport { Typography, Button } from 'antd';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { bbedit } from '@uiw/codemirror-theme-bbedit';\nimport { css } from '@codemirror/lang-css';\n\nimport { ServerStatusContext } from '../../utils/server-status-context';\nimport {\n  postConfigUpdateToAPI,\n  RESET_TIMEOUT,\n  API_CUSTOM_CSS_STYLES,\n} from '../../utils/config-constants';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n} from '../../utils/input-statuses';\nimport { FormStatusIndicator } from './FormStatusIndicator';\n\nconst { Title } = Typography;\n\n// eslint-disable-next-line import/prefer-default-export\nexport const EditCustomStyles: FC = () => {\n  const [content, setContent] = useState('/* Enter custom CSS here */');\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n  const [hasChanged, setHasChanged] = useState(false);\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig, setFieldInConfigState } = serverStatusData || {};\n\n  const { instanceDetails } = serverConfig;\n  const { customStyles: initialContent } = instanceDetails;\n\n  let resetTimer = null;\n\n  // Clear out any validation states and messaging\n  const resetStates = () => {\n    setSubmitStatus(null);\n    setHasChanged(false);\n    clearTimeout(resetTimer);\n    resetTimer = null;\n  };\n\n  // posts all the tags at once as an array obj\n  async function handleSave() {\n    setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n    await postConfigUpdateToAPI({\n      apiPath: API_CUSTOM_CSS_STYLES,\n      data: { value: content },\n      onSuccess: (message: string) => {\n        setFieldInConfigState({\n          fieldName: 'customStyles',\n          value: content,\n          path: 'instanceDetails',\n        });\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS, message));\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, message));\n      },\n    });\n    resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n  }\n\n  useEffect(() => {\n    setContent(initialContent);\n  }, [instanceDetails]);\n\n  const onCSSValueChange = React.useCallback(value => {\n    setContent(value);\n    if (value !== initialContent && !hasChanged) {\n      setHasChanged(true);\n    } else if (value === initialContent && hasChanged) {\n      setHasChanged(false);\n    }\n  }, []);\n\n  return (\n    <div className=\"edit-custom-css\">\n      <Title level={3} className=\"section-title\">\n        Customize your page styling with CSS\n      </Title>\n\n      <p className=\"description\">\n        Customize the look and feel of your Owncast instance by overriding the CSS styles of various\n        components on the page. Refer to the{' '}\n        <a href=\"https://owncast.online/docs/website/\" rel=\"noopener noreferrer\" target=\"_blank\">\n          CSS &amp; Components guide\n        </a>\n        .\n      </p>\n      <p className=\"description\">\n        Please input plain CSS text, as this will be directly injected onto your page during load.\n      </p>\n\n      <CodeMirror\n        value={content}\n        placeholder=\"/* Enter custom CSS here */\"\n        theme={bbedit}\n        height=\"200px\"\n        extensions={[css()]}\n        onChange={onCSSValueChange}\n      />\n\n      <br />\n      <div className=\"page-content-actions\">\n        {hasChanged && (\n          <Button type=\"primary\" onClick={handleSave}>\n            Save\n          </Button>\n        )}\n        <FormStatusIndicator status={submitStatus} />\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport { Button, Col, Collapse, Row, Slider, Space } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport Title from 'antd/lib/typography/Title';\nimport { EditCustomStyles } from '../../EditCustomStyles';\nimport s from './appearance.module.scss';\nimport { postConfigUpdateToAPI, RESET_TIMEOUT } from '../../../../utils/config-constants';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_SUCCESS,\n} from '../../../../utils/input-statuses';\nimport { ServerStatusContext } from '../../../../utils/server-status-context';\nimport { FormStatusIndicator } from '../../FormStatusIndicator';\n\nconst { Panel } = Collapse;\n\nconst ENDPOINT = '/appearance';\n\ninterface AppearanceVariable {\n  value: string;\n  description: string;\n}\n\nconst chatColorVariables = [\n  { name: 'theme-color-users-0', description: '' },\n  { name: 'theme-color-users-1', description: '' },\n  { name: 'theme-color-users-2', description: '' },\n  { name: 'theme-color-users-3', description: '' },\n  { name: 'theme-color-users-4', description: '' },\n  { name: 'theme-color-users-5', description: '' },\n  { name: 'theme-color-users-6', description: '' },\n  { name: 'theme-color-users-7', description: '' },\n];\n\nconst paletteVariables = [\n  { name: 'theme-color-palette-0', description: '' },\n  { name: 'theme-color-palette-1', description: '' },\n  { name: 'theme-color-palette-2', description: '' },\n  { name: 'theme-color-palette-3', description: '' },\n  { name: 'theme-color-palette-4', description: '' },\n  { name: 'theme-color-palette-5', description: '' },\n  { name: 'theme-color-palette-6', description: '' },\n  { name: 'theme-color-palette-7', description: '' },\n  { name: 'theme-color-palette-8', description: '' },\n  { name: 'theme-color-palette-9', description: '' },\n  { name: 'theme-color-palette-10', description: '' },\n  { name: 'theme-color-palette-11', description: '' },\n  { name: 'theme-color-palette-12', description: '' },\n];\n\nconst componentColorVariables = [\n  { name: 'theme-color-background-main', description: 'Background' },\n  { name: 'theme-color-action', description: 'Action' },\n  { name: 'theme-color-action-hover', description: 'Action Hover' },\n  { name: 'theme-color-components-chat-background', description: 'Chat Background' },\n  { name: 'theme-color-components-chat-text', description: 'Text: Chat' },\n  { name: 'theme-color-components-text-on-dark', description: 'Text: Light' },\n  { name: 'theme-color-components-text-on-light', description: 'Text: Dark' },\n  { name: 'theme-color-background-header', description: 'Header/Footer' },\n  { name: 'theme-color-components-content-background', description: 'Page Content' },\n  { name: 'theme-color-components-scrollbar-background', description: 'Scrollbar Background' },\n  { name: 'theme-color-components-scrollbar-thumb', description: 'Scrollbar Thumb' },\n];\n\nconst others = [{ name: 'theme-rounded-corners', description: 'Corner radius' }];\n\n// Create an object so these vars can be indexed by name.\nconst allAvailableValues = [\n  ...paletteVariables,\n  ...componentColorVariables,\n  ...chatColorVariables,\n  ...others,\n].reduce((obj, val) => {\n  // eslint-disable-next-line no-param-reassign\n  obj[val.name] = { name: val.name, description: val.description };\n  return obj;\n}, {});\n\n// eslint-disable-next-line react/function-component-definition\nfunction ColorPicker({\n  value,\n  name,\n  description,\n  onChange,\n}: {\n  value: string;\n  name: string;\n  description: string;\n  onChange: (name: string, value: string, description: string) => void;\n}) {\n  return (\n    <Col span={3} key={name}>\n      <input\n        type=\"color\"\n        id={name}\n        name={description}\n        title={description}\n        value={value}\n        className={s.colorPicker}\n        onChange={e => onChange(name, e.target.value, description)}\n      />\n      <div style={{ padding: '2px' }}>{description}</div>\n    </Col>\n  );\n}\n// eslint-disable-next-line react/function-component-definition\nexport default function Appearance() {\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig } = serverStatusData;\n  const { instanceDetails } = serverConfig;\n  const { appearanceVariables } = instanceDetails;\n\n  const [colors, setColors] = useState<Record<string, AppearanceVariable>>();\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n\n  let resetTimer = null;\n  const resetStates = () => {\n    setSubmitStatus(null);\n    resetTimer = null;\n    clearTimeout(resetTimer);\n  };\n\n  const setColorDefaults = () => {\n    const c = {};\n    [...paletteVariables, ...componentColorVariables, ...chatColorVariables, ...others].forEach(\n      color => {\n        const resolvedColor = getComputedStyle(document.documentElement).getPropertyValue(\n          `--${color.name}`,\n        );\n        c[color.name] = { value: resolvedColor.trim(), description: color.description };\n      },\n    );\n    setColors(c);\n  };\n\n  useEffect(() => {\n    setColorDefaults();\n  }, []);\n\n  useEffect(() => {\n    if (Object.keys(appearanceVariables).length === 0) return;\n\n    const c = colors || {};\n    Object.keys(appearanceVariables).forEach(key => {\n      c[key] = {\n        value: appearanceVariables[key],\n        description: allAvailableValues[key]?.description || '',\n      };\n    });\n    setColors(c);\n  }, [appearanceVariables]);\n\n  const updateColor = (variable: string, color: string, description: string) => {\n    setColors({\n      ...colors,\n      [variable]: { value: color, description },\n    });\n  };\n\n  const reset = async () => {\n    await postConfigUpdateToAPI({\n      apiPath: ENDPOINT,\n      data: { value: {} },\n      onSuccess: () => {\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS, 'Updated.'));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n        setColorDefaults();\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, message));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n    });\n  };\n\n  const save = async () => {\n    const c = {};\n    Object.keys(colors).forEach(color => {\n      c[color] = colors[color].value;\n    });\n\n    await postConfigUpdateToAPI({\n      apiPath: ENDPOINT,\n      data: { value: c },\n      onSuccess: () => {\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS, 'Updated.'));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, message));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n    });\n  };\n\n  const onBorderRadiusChange = (value: string) => {\n    const variableName = 'theme-rounded-corners';\n\n    updateColor(variableName, `${value.toString()}px`, '');\n  };\n\n  if (!colors) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Space direction=\"vertical\">\n      <Title>Customize Appearance</Title>\n      <Paragraph>The following colors are used across the user interface.</Paragraph>\n      <div>\n        <Collapse defaultActiveKey={['1']}>\n          <Panel header={<Title level={3}>Section Colors</Title>} key=\"1\">\n            <p>\n              Certain sections of the interface can be customized by selecting new colors for them.\n            </p>\n            <Row gutter={[16, 16]}>\n              {componentColorVariables.map(colorVar => {\n                const { name } = colorVar;\n                const c = colors[name];\n\n                return (\n                  <ColorPicker\n                    key={name}\n                    value={c.value}\n                    name={name}\n                    description={c.description}\n                    onChange={updateColor}\n                  />\n                );\n              })}\n            </Row>\n          </Panel>\n          <Panel header={<Title level={3}>Chat User Colors</Title>} key=\"2\">\n            <Row gutter={[16, 16]}>\n              {chatColorVariables.map(colorVar => {\n                const { name } = colorVar;\n                const c = colors[name];\n                return (\n                  <ColorPicker\n                    key={name}\n                    value={c.value}\n                    name={name}\n                    description={c.description}\n                    onChange={updateColor}\n                  />\n                );\n              })}\n            </Row>\n          </Panel>\n          <Panel header={<Title level={3}>Theme Colors</Title>} key=\"3\">\n            <Row gutter={[16, 16]}>\n              {paletteVariables.map(colorVar => {\n                const { name } = colorVar;\n                const c = colors[name];\n                return (\n                  <ColorPicker\n                    key={name}\n                    value={c.value}\n                    name={name}\n                    description={c.description}\n                    onChange={updateColor}\n                  />\n                );\n              })}\n            </Row>\n          </Panel>\n          <Panel header={<Title level={3}>Other Settings</Title>} key=\"4\">\n            How rounded should corners be?\n            <Row gutter={[16, 16]}>\n              <Col span={12}>\n                <Slider\n                  min={0}\n                  max={20}\n                  tooltip={{ formatter: null }}\n                  onChange={v => {\n                    onBorderRadiusChange(v);\n                  }}\n                  value={Number(colors['theme-rounded-corners']?.value?.replace('px', '') || 0)}\n                />\n              </Col>\n              <Col span={4}>\n                <div\n                  style={{\n                    width: '100px',\n                    height: '30px',\n                    borderRadius: `${colors['theme-rounded-corners']?.value}`,\n                    backgroundColor: 'var(--theme-color-palette-7)',\n                  }}\n                />\n              </Col>\n            </Row>\n          </Panel>\n        </Collapse>\n      </div>\n\n      <Space direction=\"horizontal\">\n        <Button type=\"primary\" onClick={save}>\n          Save Colors\n        </Button>\n        <Button type=\"ghost\" onClick={reset}>\n          Reset to Defaults\n        </Button>\n      </Space>\n      <FormStatusIndicator status={submitStatus} />\n      <div className=\"form-module page-content-module\">\n        <EditCustomStyles />\n      </div>\n    </Space>\n  );\n}\n","import React from 'react';\nimport { Tabs } from 'antd';\n\nimport GeneralConfig from '../../../../components/admin/config/general/GeneralConfig';\nimport AppearanceConfig from '../../../../components/admin/config/general/AppearanceConfig';\n\nexport default function PublicFacingDetails() {\n  return (\n    <div className=\"config-public-details-page\">\n      <Tabs\n        defaultActiveKey=\"1\"\n        centered\n        items={[\n          {\n            label: `General`,\n            key: '1',\n            children: <GeneralConfig />,\n          },\n          {\n            label: `Appearance`,\n            key: '2',\n            children: <AppearanceConfig />,\n          },\n        ]}\n      />\n    </div>\n  );\n}\n","export const MAX_IMAGE_FILESIZE = 2097152;\nexport const ACCEPTED_IMAGE_TYPES = ['image/png', 'image/jpeg', 'image/gif'];\n\nexport function getBase64(img: File | Blob, callback: (imageUrl: string | ArrayBuffer) => void) {\n  const reader = new FileReader();\n  reader.addEventListener('load', () => callback(reader.result));\n  reader.readAsDataURL(img);\n}\n\nexport function readableBytes(bytes: number): string {\n  const index = Math.floor(Math.log(bytes) / Math.log(1024));\n  const SIZE_UNITS = ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'];\n  const size = Number((bytes / Math.pow(1024, index)).toFixed(2)) * 1;\n\n  return `${size} ${SIZE_UNITS[index]}`;\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorPicker\":\"appearance_colorPicker__xsvcV\"};"],"names":["window","__NEXT_P","push","__webpack_require__","Title","Typography","TAG_COLOR","EditValueArray","title","description","placeholder","maxLength","values","handleDeleteIndex","handleCreateString","submitStatus","continuousStatusMessage","param","newStringInput","setNewStringInput","useState","handleInputChange","value","handleSubmitNewString","newString","trim","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","jsx","level","p","map","tag","index","handleClose","Tag","closable","onClose","color","concat","FormStatusIndicator","status","TextField","fieldName","onChange","onPressEnter","defaultProps","ToggleSwitch","apiPath","checked","reversed","configPath","disabled","label","tip","useSubmit","setSubmitStatus","resetTimer","serverStatusData","useContext","ServerStatusContext","setFieldInConfigState","resetStates","clearTimeout","handleChange","isChecked","createInputStatus","STATUS_PROCESSING","isCheckedSend","postConfigUpdateToAPI","data","onSuccess","path","STATUS_SUCCESS","onError","STATUS_ERROR","message","setTimeout","RESET_TIMEOUT","loading","type","span","Switch","defaultChecked","checkedChildren","unCheckedChildren","SocialDropdown","iconList","selectedOption","onSelected","handleSelected","inititalSelected","jsx_runtime","Select","style","width","defaultValue","onSelect","item","platform","icon","key","img","src","alt","OTHER_SOCIAL_HANDLE_OPTION","EditSocialLinks","url","availableIconsList","setAvailableIconsList","currentSocialHandles","setCurrentSocialHandles","displayModal","setDisplayModal","displayOther","setDisplayOther","modalProcessing","setModalProcessing","editId","setEditId","modalDataState","setModalDataState","DEFAULT_SOCIAL_HANDLE","serverConfig","instanceDetails","socialHandles","initialSocialHandles","getAvailableIcons","result","fetchData","SOCIAL_PLATFORMS_LIST","auth","list","Object","keys","error","console","log","isPredefinedSocial","find","selectedOther","useEffect","resetModal","handleModalCancel","updateModalState","handleDropdownSelect","handleOtherNameChange","event","target","handleUrlChange","postUpdateToAPI","postValue","API_SOCIAL_HANDLES","handleModalOk","postData","length","splice","handleDeleteItem","handleMoveItemUp","tmp","handleMoveItemDown","okButtonProps","isValidAccount","isValidMatrixAccount","isValidUrl","otherField","Input","Table","pagination","size","rowKey","record","columns","dataIndex","render","platformInfo","strong","platformName","Button","onClick","CaretUpOutlined","hidden","CaretDownOutlined","DeleteOutlined","dataSource","Modal","open","onOk","onCancel","confirmLoading","br","PLACEHOLDERS","mastodon","twitter","useTrim","pattern","DEFAULT_TEXTFIELD_URL_PATTERN","EditLogo","logoUrl","setlogoUrl","setLoading","logoCachedbuster","setLogoCacheBuster","currentLogo","logo","TEXTFIELD_PROPS_LOGO","beforeUpload","Promise","res","rej","file","MAX_IMAGE_FILESIZE","msg","readableBytes","ACCEPTED_IMAGE_TYPES","getBase64","handleLogoUpdate","Math","floor","random","logoDisplayUrl","NEXT_PUBLIC_API_HOST","Upload","name","listType","showUploadList","accept","customRequest","LoadingOutlined","UploadOutlined","EditInstanceDetails","formDataValues","setFormDataValues","yp","instanceUrl","handleSubmitInstanceUrl","enabled","API_YP_SWITCH","handleFieldChange","hasInstanceUrl","TextFieldWithSubmit","TEXTFIELD_PROPS_SERVER_NAME","initialValue","TEXTFIELD_PROPS_INSTANCE_URL","TEXTFIELD_TYPE_URL","onSubmit","TEXTFIELD_PROPS_SERVER_SUMMARY","TEXTFIELD_TYPE_TEXTAREA","summary","TEXTFIELD_PROPS_SERVER_OFFLINE_MESSAGE","offlineMessage","FIELD_PROPS_HIDE_VIEWER_COUNT","hideViewerCount","a","href","rel","FIELD_PROPS_YP","FIELD_PROPS_NSFW","nsfw","EditInstanceTags","newTagInput","setNewTagInput","tags","FIELD_PROPS_TAGS","handleSubmitNewTag","newTag","STATUS_WARNING","some","toLowerCase","updatedTags","handleDeleteTag","EditPageContent","content","setContent","hasChanged","setHasChanged","extraPageContent","initialContent","handleSave","API_CUSTOM_CONTENT","CodeMirror","theme","bbedit","text","extensions","markdown","base","markdownLanguage","codeLanguages","languages","PublicFacingDetails","EditCustomStyles","customStyles","API_CUSTOM_CSS_STYLES","onCSSValueChange","React","height","css","Panel","Collapse","ENDPOINT","chatColorVariables","paletteVariables","componentColorVariables","others","allAvailableValues","reduce","obj","val","ColorPicker","Col","input","id","s","e","padding","Appearance","colors","appearanceVariables","setColors","setColorDefaults","c","forEach","resolvedColor","getComputedStyle","document","documentElement","getPropertyValue","updateColor","variable","reset","save","onBorderRadiusChange","toString","Space","direction","Paragraph","defaultActiveKey","header","Row","gutter","colorVar","Slider","min","max","tooltip","formatter","v","Number","replace","borderRadius","backgroundColor","Tabs","centered","items","children","GeneralConfig","AppearanceConfig","callback","reader","FileReader","addEventListener","readAsDataURL","bytes","pow","toFixed","SIZE_UNITS","module","exports"],"sourceRoot":""}