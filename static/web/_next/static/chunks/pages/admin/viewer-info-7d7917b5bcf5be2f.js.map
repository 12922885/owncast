{"version":3,"file":"static/chunks/pages/admin/viewer-info-7d7917b5bcf5be2f.js","mappings":"uFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,qBACA,WACE,OAAO,EAAQ,W,sICoBvB,SAASC,EAAmBC,GAC1B,MAAMC,EAAa,GAMnB,OALAD,EAAUE,SAAQC,IAChB,MAAMC,EAAa,IAAIC,KAAKF,EAAKG,MAC3BC,GAAaC,EAAAA,EAAAA,GAAOJ,EAAY,SACtCH,EAAWM,GAAcJ,EAAKM,SAEzBR,EAxBTS,IAAAA,IAAcC,EAAAA,IA2BP,MAAMC,EAAyB,I,IAAA,KACpCC,EAAI,MACJC,EAAK,MACLC,EAAK,KACLC,EAAI,gBACJC,EAAe,SACfC,EAAQ,aACRC,GACD,EACC,MAAMC,EAAa,GAEfP,GAAQA,EAAKQ,OAAS,GACxBD,EAAWtB,KAAK,CACdwB,KAAMR,EACNC,QACAF,KAAMd,EAAmBc,KAI7BI,EAAgBf,SAAQqB,IACtBH,EAAWtB,KAAK,CACdwB,KAAMC,EAAWD,KACjBT,KAAMd,EAAmBwB,EAAWV,MACpCE,MAAOQ,EAAWR,MAClBS,QAASD,EAAWE,aAMxB,MAAMA,EAAU,CACdC,OAAQ,CACNC,EAAG,CAAEC,SAAS,EAAOC,KAAM,UAC3BC,EAAG,CACDD,KAAM,UAQZ,OAHAJ,EAAQC,OAAOC,EAAEC,QAAUV,EAC3BO,EAAQC,OAAOC,EAAEE,KAAOV,EAAe,cAAgB,UAGrD,SAACY,MAAAA,CAAIC,UAAU,uB,UACb,SAACC,EAAAA,GAASA,CACRC,OAAO,OACPC,OAAQrB,EACRsB,OAAQpB,EACRqB,OAAO,SACPtB,MAAOA,EACPF,KAAMO,EACNkB,SAAUxB,EACVyB,QAASd,OAMjBb,EAAM4B,aAAe,CACnBvB,gBAAiB,GACjBJ,KAAM,GACNC,MAAO,GACPI,UAAU,EACVC,cAAc,I,6HC1FhB,MAAM,KAAEsB,GAASC,EAAAA,EAaXF,EAAe,CACnB1B,MAAO,GACPL,MAAO,EACPkC,OAAQ,KACRP,OAAQ,KACRrB,MAAO,GACP6B,UAAU,EACVC,UAAU,EACVC,UAAW,MAUPC,EAA6B,I,IAAA,OAAEJ,EAAM,MAAElC,EAAK,OAAE2B,EAAM,MAAEtB,GAAO,E,OACjE,UAACiB,MAAAA,C,UACEY,GACD,SAACZ,MAAAA,C,UACC,SAACU,EAAAA,CAAKZ,KAAK,Y,SAAaf,OAE1B,SAACiB,MAAAA,C,UACC,UAACU,EAAAA,CAAKZ,KAAK,Y,UACRpB,EACA2B,GAAU,aAMbY,EAAwC,I,IAAA,MAAElC,EAAK,MAAEL,EAAK,OAAEkC,EAAM,OAAEP,EAAM,MAAErB,GAAO,EACnF,MAAMkC,EAAWxC,EAAQ,GAAK,MAAQM,EAChCmC,GAAU,SAACH,EAAAA,CAAQJ,OAAQA,EAAQlC,MAAOA,EAAO2B,OAAQA,EAAQtB,MAAOA,IAE9E,OACE,SAACqC,EAAAA,EAAQA,CACPtB,KAAK,YACLuB,QAAS3C,EACT4C,MAAO,IACPC,YAAa,CACX,KAAMvC,EACN,MAAOkC,GAETzC,OAAQ,IAAM0C,KAIpBF,EAAaR,aAAeA,EAE5B,MAAMe,EAAyC,I,IAAA,MAAEzC,EAAK,MAAEL,EAAK,OAAEkC,EAAM,UAAEG,GAAW,E,OAChF,SAACU,EAAAA,EAASA,CAAC1C,MAAOA,EAAOL,MAAOA,EAAOkC,OAAQA,EAAQG,UAAWA,KAEpES,EAAcf,aAAeA,EAEtB,MAAMiB,EAAwCC,IACnD,MAAM,SAAEd,EAAQ,SAAEC,GAAaa,EACzBC,EAAOf,EAAWI,EAAeO,EAEjCK,EAAQf,EAAW,CAAEgB,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAAa,GAE/F,OACE,SAACC,EAAAA,EAAIA,CAACnC,KAAK,Q,UACT,SAACE,MAAAA,CAAI6B,MAAOA,E,UACV,SAACD,EAAAA,IAASD,SAKlBD,EAAcjB,aAAeA,G,yRC3EtB,MAAMyB,EAAqC,I,IAAA,KAAEpD,GAAM,EACxD,MAAMqD,EAAU,CACd,CACEpD,MAAO,aACPqD,UAAW,YACXC,IAAK,YACLC,OAASC,IAAeC,EAAAA,EAAAA,IAAeD,IAEzC,CACExD,MAAO,WACPqD,UAAW,MACXC,IAAK,MACLC,OAAQG,GAAQA,EAAM,GAAsBA,OAAnBA,EAAIC,WAAW,MAAoB,OAAhBD,EAAIE,aAAgB,KAElE,CACE5D,MAAO,aACPqD,UAAW,YACXC,IAAK,YACLO,iBAAkB,SAClBN,OAAS/D,IAAesE,EAAAA,EAAAA,GAAoB,IAAIvE,KAAKC,IACrDuE,OAAQ,CAACC,EAAQC,IAAW,IAAI1E,KAAKyE,EAAEE,WAAWC,UAAY,IAAI5E,KAAK0E,EAAEC,WAAWC,UACpFC,eAAgB,CAAC,UAAW,YAIhC,OACE,SAACC,EAAAA,EAAKA,CACJC,WAAY,CAAEC,kBAAkB,GAChCrD,UAAU,kBACVkC,QAASA,EACToB,WAAYzE,EACZ0E,KAAK,QACLC,OAAO,Q,0BClCE,SAASC,IACtB,MAAMC,GAAUC,EAAAA,EAAAA,YAAWC,EAAAA,KACrB,OAAEC,EAAM,YAAEC,EAAW,YAAEC,EAAW,uBAAEC,EAAsB,uBAAEC,GAChEP,GAAW,GACb,IAAIQ,EACAJ,GAAeA,EAAYxF,OAC7B4F,EAAc,IAAI7F,KAAKyF,EAAYxF,OAGrC,MAAM6F,EAAQ,CACZ,CAAErF,MAAO,iBAAkBsF,MAAOF,GAClC,CAAEpF,MAAO,gBAAiBsF,OAAOC,EAAAA,EAAAA,GAAI,IAAIhG,KAAQ,CAAEiG,MAAO,MAC1D,CAAExF,MAAO,gBAAiBsF,OAAOC,EAAAA,EAAAA,GAAI,IAAIhG,KAAQ,CAAEiG,MAAO,MAC1D,CAAExF,MAAO,cAAesF,OAAOC,EAAAA,EAAAA,GAAI,IAAIhG,KAAQ,CAAEkG,KAAM,KACvD,CAAEzF,MAAO,eAAgBsF,OAAOC,EAAAA,EAAAA,GAAI,IAAIhG,KAAQ,CAAEkG,KAAM,MACxD,CAAEzF,MAAO,gBAAiBsF,OAAOC,EAAAA,EAAAA,GAAI,IAAIhG,KAAQ,CAAEmG,OAAQ,KAC3D,CAAE1F,MAAO,gBAAiBsF,OAAOC,EAAAA,EAAAA,GAAI,IAAIhG,KAAQ,CAAEmG,OAAQ,OAGtDC,EAAcC,IAAmBC,EAAAA,EAAAA,WAAS,IAC1CC,EAAYC,IAAiBF,EAAAA,EAAAA,UAAS,KACtCG,EAAeC,IAAoBJ,EAAAA,EAAAA,UAAS,KAC5CK,EAAiBC,IAAsBN,EAAAA,EAAAA,UAASR,EAAM,IAEvDe,EAAUC,UACd,IACE,MAAMC,EAAM,GAAoCC,OAAjCC,EAAAA,GAAkB,iBAAkD,QAAnCD,EAAAA,EAAAA,GAAYL,EAAgBZ,QACtEmB,QAAeC,EAAAA,EAAAA,IAAUJ,GAC/BP,EAAcU,GACdb,GAAgB,GAChB,MAAOe,GACPC,QAAQC,IAAI,aAAcF,GAG5B,IACE,MAAMF,QAAeC,EAAAA,EAAAA,IAAUI,EAAAA,IAC/Bb,EAAiBQ,GACjB,MAAOE,GACPC,QAAQC,IAAI,aAAcF,MAI9BI,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAsB,KAG1B,OADAZ,IACIrB,GACFiC,EAAsBC,YAAYb,EAjDjB,KAmDV,KACLc,cAAcF,KAIX,IAAM,KACZ,CAACjC,EAAQmB,IAEZ,MAAMiB,EAAsB,I,IAAA,IAAE7D,GAAK,EACjC6C,EAAmBd,EAAM/B,KAGrB8D,GACJ,UAACC,EAAAA,EAAIA,C,UACFtC,GAAUK,IACT,SAACiC,EAAAA,EAAAA,KAAS,CAASC,QAASH,E,SACzB9B,EAAM,GAAGrF,OADG,KAIhBqF,EAAMkC,MAAM,GAAGC,KAAI,CAAChI,EAAMiI,KAGzB,SAACJ,EAAAA,EAAAA,KAAS,CAAiBC,QAASH,E,SACjC3H,EAAKQ,OADQyH,EAAQ,QAO9B,OACE,sB,WACE,SAAC7F,EAAAA,EAAAA,MAAgB,C,SAAC,iBAClB,SAAC8F,KAAAA,KACD,UAACC,EAAAA,EAAGA,CAACC,OAAQ,CAAC,GAAI,IAAKC,QAAQ,e,UAC5B9C,IACC,SAAC+C,EAAAA,EAAGA,CAACC,KAAM,EAAGC,GAAI,E,UAChB,SAACrF,EAAAA,EAAaA,CACZ3C,MAAM,kBACNL,MAAOsF,EAAYgD,WACnBpG,QAAQ,SAACqG,EAAAA,EAAYA,SAI3B,SAACJ,EAAAA,EAAGA,CAACE,GAAIjD,EAAS,EAAI,G,UACpB,SAACpC,EAAAA,EAAaA,CACZ3C,MAAO+E,EAAS,0BAA4B,0BAC5CpF,MAAOwF,EAAuB8C,WAC9BpG,QAAQ,SAACqG,EAAAA,EAAYA,SAGzB,SAACJ,EAAAA,EAAGA,CAACE,GAAIjD,EAAS,EAAI,G,UACpB,SAACpC,EAAAA,EAAaA,CACZ3C,MAAM,uBACNL,MAAOuF,EAAuB+C,WAC9BpG,QAAQ,SAACqG,EAAAA,EAAYA,YAIzBpC,EAAWvF,SACX,SAAC4H,EAAAA,EAAKA,CACJrF,MAAO,CAAEsF,UAAW,QACpBC,QAAM,EACNC,QAAQ,cACRC,YAAY,yCACZxH,KAAK,UAIT,UAACyH,EAAAA,EAAIA,CAACC,UAAW3C,EAAWvF,QAAUoF,E,WACpC,SAAC+C,EAAAA,EAAQA,CAACC,QAASvB,EAAMwB,QAAS,CAAC,S,UACjC,UAACC,SAAAA,CACC9H,KAAK,SACL+B,MAAO,CAAEgG,MAAO,QAASC,WAAY,cAAeC,OAAQ,S,UAE3D9C,EAAgBlG,MAAM,KAAC,SAACiJ,EAAAA,EAAYA,SAGxCnD,EAAWvF,OAAS,IACnB,SAACT,EAAAA,EAAKA,CAACE,MAAM,UAAUD,KAAM+F,EAAY7F,MAAM,UAAUC,KAAK,MAGhE,SAACiD,EAAWA,CAACpD,KAAMiG,Y,oKC9IpB,SAASkD,EAAgBC,GAC9B,MAAMC,EAAsBD,EAAUE,MAAM,KAG5CD,EAAoBA,EAAoB7I,OAAS,GAAK,GAEtD,IAAI+I,EAAKF,EAAoBG,KAAK,KAElC,OADAD,EAAKA,EAAG/B,MAAM,EAAG+B,EAAG/I,OAAS,GAClB,UAAP+I,GAAyB,cAAPA,EACb,YAGFA,EAIF,SAASE,EAAcC,GAC5B,OAAQA,GAAoC,IAA5BC,OAAOC,KAAKF,GAAKlJ,QAAgBkJ,EAAIG,cAAgBF,OAGhE,SAASG,EAAQC,EAAMC,EAAKtF,GACjC,OAAOuF,OAAOD,EAAIE,OAAOxF,GAAQqF,GAAMvC,OAAO9C,GAGzC,SAASyF,I,IAA6BC,EAAAA,UAAAA,OAAAA,QAAAA,IAAAA,UAAAA,GAAAA,UAAAA,GAAU,EACrD,MAAMC,EAAgBC,OAAOC,UAAUH,GAAWI,KAAKC,IAAIL,GAAW,EAEhE1E,EAAO8E,KAAKE,MAAML,EAAgB,OAClCM,EAAajF,EAAO,EAAI,GAAcA,OAAXA,EAAK,QAA0B,OAApBA,EAAO,EAAI,IAAM,GAAG,KAAK,GAE/DD,EAAQ+E,KAAKE,MAAM,EAAiB,KAAQ,IAC5CE,EAAcnF,GAASC,EAAOoE,EAAQ,GAAS,OAANrE,EAAM,KAAI,IAAK,GAAK,GAE7DoF,EAAOL,KAAKE,MAAM,EAAiB,GAAM,IACzCI,EAAYhB,EAAQ,GAAQ,OAALe,EAAK,KAAI,IAAK,GAErCE,EAAOP,KAAKE,MAAML,EAAgB,IAClCW,EAAalB,EAAQ,GAAQ,OAALiB,GAAQ,IAAK,GAE3C,OAAOJ,EAAaC,EAAcE,EAAYE,EAUzC,SAAStH,EAAeuH,GAC7B,MAAMC,EAASC,IAASF,IAClB,OAAEG,EAAM,GAAEC,EAAE,QAAEC,GAAYJ,GACxBK,MAAOC,EAAc,KAAE/K,GAAS6K,GAChCG,QAASC,EAAWjL,KAAMkL,GAAWN,GACvC,MAAEO,EAAK,KAAE5K,GAASoK,EAExB,GAAiB,WAAbH,EACF,MAAO,mBAGT,IAAKxK,IAAS+K,IAAmBG,EAC/B,OAAOV,EAGT,MAAMY,EAAeD,GAAS5K,EAAO,KAAmB,OAAd4K,GAAS5K,EAAK,KAAK,GAC7D,MAAO,GAAWwK,OAAR/K,EAAK,KAAwBkL,OAArBH,EAAe,QAAgBE,OAAVC,EAAO,KAC5CE,OAD+CH,EAAU,QAC5C,OAAbG,K,6HC3DG,MAAMC,EAA0C,CACrDC,WAAY,GACZC,cAAe,GACfC,gBAAiB,CACfC,aAAc,GACdC,iBAAkB,GAClBC,KAAM,GACN3L,KAAM,GACN4L,MAAM,EACNC,cAAe,GACfC,YAAa,GACbC,QAAS,GACTC,KAAM,GACNxM,MAAO,GACPyM,eAAgB,GAChBC,eAAgB,GAChBC,oBAAqB,IAEvBC,WAAY,GACZC,eAAgB,GAChBC,cAAe,GACfC,mBAAoB,KACpBC,GAAI,CACFC,UAAW,GACXC,IAAK,GACLC,OAAQ,GACRC,SAAS,EACTC,SAAU,GACVC,OAAQ,GACRC,OAAQ,GACRC,gBAAiB,GACjBC,gBAAgB,GAElBC,GAAI,CACFN,SAAS,EACTO,YAAa,IAEfC,cAAe,CACbC,aAAc,EACdC,cAAe,EACfC,qBAAsB,C,SAACC,KAEzBC,WAAY,CACVb,SAAS,EACTc,WAAW,EACXC,SAAU,GACVC,cAAe,GACfC,gBAAgB,EAChBC,eAAgB,IAElBC,cAAe,CACblD,QAAS,CAAE+B,SAAS,EAAOgB,cAAe,IAC1CI,QAAS,CAAEpB,SAAS,EAAOqB,QAAS,GAAIL,cAAe,IACvDM,QAAS,CACPtB,SAAS,EACTgB,cAAe,GACfO,OAAQ,GACRC,UAAW,GACXC,YAAa,GACbC,kBAAmB,GACnBC,YAAa,KAGjBC,gBAAiB,GACjBC,gBAAiB,GACjBC,WAAY,GACZC,mBAAoB,GACpBC,mBAAoB,GACpBC,cAAc,EACdC,yBAAyB,EACzBC,yBAAyB,EACzBC,iBAAiB,GAGbC,EAA2B,CAC/BC,iBAAiB,EACjB1K,YAAa,KACb2K,iBAAkB,KAClB5K,QAAQ,EACRE,YAAa,EACb2K,sBAAuB,EACvBzK,uBAAwB,EACxBD,uBAAwB,EACxB2K,cAAe,QACfvD,YAAa,GACb+C,cAAc,EACdS,OAAQ,CACNC,SAAS,EACTC,iBAAkB,IAClB1H,QAAS,GACT2H,eAAgB,IAIPnL,EAAsBoL,EAAAA,cAAoB,IAClDT,EACHU,aAActE,EAGduE,sBAAwBC,GAAqB,OAGzCC,EAAwB,I,IAAA,SAAEC,GAAU,EACxC,MAAOC,EAAQC,IAAa5K,EAAAA,EAAAA,UAAS4J,IAC9BiB,EAAQC,IAAa9K,EAAAA,EAAAA,UAASgG,GAE/B+E,EAAYvK,UAChB,IACE,MAAMI,QAAeC,EAAAA,EAAAA,IAAUmK,EAAAA,IAC/BJ,EAAU,IAAKhK,IACf,MAAOE,OA6BXI,EAAAA,EAAAA,YAAU,KACR,IAAIC,EAAsB,KAQ1B,OANA4J,IACA5J,EAAsBC,YAAY2J,EAAWE,EAAAA,IA7B7BzK,WAChB,IACE,MAAMI,QAAeC,EAAAA,EAAAA,IAAUqK,EAAAA,IAC/BJ,EAAUlK,GACV,MAAOE,MA2BTqK,GAGO,KACL9J,cAAcF,MAEf,IAGH,MAAMiK,EAAgB,IACjBT,EACHL,aAAcO,EAEdN,sBAnC6B,I,IAAA,UAAEc,EAAS,MAAEvR,EAAK,KAAEwR,GAAkB,EACnE,MAAMC,EAAgBD,EAClB,IACKT,EACH,CAACS,GAAO,IACHT,EAAOS,GACV,CAACD,GAAYvR,IAGjB,IACK+Q,EACH,CAACQ,GAAYvR,GAEnBgR,EAAUS,KAwBZ,OACE,SAACtM,EAAoBuM,SAAQ,CAAC1R,MAAOsR,E,SAAgBV,KAIzDD,EAAqBgB,UAAY,CAC/Bf,SAAUgB,IAAAA,QAAAA,YAGZ,S","sources":["webpack://_N_E/?f65a","webpack://_N_E/./components/admin/Chart.tsx","webpack://_N_E/./components/admin/StatisticItem.tsx","webpack://_N_E/./components/admin/ViewerTable.tsx","webpack://_N_E/./pages/admin/viewer-info.tsx","webpack://_N_E/./utils/format.ts","webpack://_N_E/./utils/server-status-context.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/viewer-info\",\n      function () {\n        return require(\"private-next-pages/admin/viewer-info.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin/viewer-info\"])\n      });\n    }\n  ","import ChartJs from 'chart.js/auto';\nimport Chartkick from 'chartkick';\nimport format from 'date-fns/format';\nimport { LineChart } from 'react-chartkick';\nimport { FC } from 'react';\n\n// from https://github.com/ankane/chartkick.js/blob/master/chart.js/chart.esm.js\nChartkick.use(ChartJs);\n\ninterface TimedValue {\n  time: Date;\n  value: number;\n}\n\nexport type ChartProps = {\n  data?: TimedValue[];\n  title?: string;\n  color: string;\n  unit: string;\n  yFlipped?: boolean;\n  yLogarithmic?: boolean;\n  dataCollections?: any[];\n};\n\nfunction createGraphDataset(dataArray) {\n  const dataValues = {};\n  dataArray.forEach(item => {\n    const dateObject = new Date(item.time);\n    const dateString = format(dateObject, 'H:mma');\n    dataValues[dateString] = item.value;\n  });\n  return dataValues;\n}\n\nexport const Chart: FC<ChartProps> = ({\n  data,\n  title,\n  color,\n  unit,\n  dataCollections,\n  yFlipped,\n  yLogarithmic,\n}) => {\n  const renderData = [];\n\n  if (data && data.length > 0) {\n    renderData.push({\n      name: title,\n      color,\n      data: createGraphDataset(data),\n    });\n  }\n\n  dataCollections.forEach(collection => {\n    renderData.push({\n      name: collection.name,\n      data: createGraphDataset(collection.data),\n      color: collection.color,\n      dataset: collection.options,\n    });\n  });\n\n  // ChartJs.defaults.scales.linear.reverse = true;\n\n  const options = {\n    scales: {\n      y: { reverse: false, type: 'linear' },\n      x: {\n        type: 'time',\n      },\n    },\n  };\n\n  options.scales.y.reverse = yFlipped;\n  options.scales.y.type = yLogarithmic ? 'logarithmic' : 'linear';\n\n  return (\n    <div className=\"line-chart-container\">\n      <LineChart\n        xtitle=\"Time\"\n        ytitle={title}\n        suffix={unit}\n        legend=\"bottom\"\n        color={color}\n        data={renderData}\n        download={title}\n        library={options}\n      />\n    </div>\n  );\n};\n\nChart.defaultProps = {\n  dataCollections: [],\n  data: [],\n  title: '',\n  yFlipped: false,\n  yLogarithmic: false,\n};\n","/* eslint-disable react/no-unused-prop-types */\n/* eslint-disable react/no-unstable-nested-components */\n// TODO: This component should be cleaned up and usage should be re-examined. The types should be reconsidered as well.\n\nimport { Typography, Statistic, Card, Progress } from 'antd';\nimport { FC } from 'react';\n\nconst { Text } = Typography;\n\nexport type StatisticItemProps = {\n  title?: string;\n  value?: any;\n  prefix?: any;\n  suffix?: string;\n  color?: string;\n  progress?: boolean;\n  centered?: boolean;\n  formatter?: any;\n};\n\nconst defaultProps = {\n  title: '',\n  value: 0,\n  prefix: null,\n  suffix: null,\n  color: '',\n  progress: false,\n  centered: false,\n  formatter: null,\n};\n\nexport type ContentProps = {\n  prefix: string;\n  value: any;\n  suffix: string;\n  title: string;\n};\n\nconst Content: FC<ContentProps> = ({ prefix, value, suffix, title }) => (\n  <div>\n    {prefix}\n    <div>\n      <Text type=\"secondary\">{title}</Text>\n    </div>\n    <div>\n      <Text type=\"secondary\">\n        {value}\n        {suffix || '%'}\n      </Text>\n    </div>\n  </div>\n);\n\nconst ProgressView: FC<StatisticItemProps> = ({ title, value, prefix, suffix, color }) => {\n  const endColor = value > 90 ? 'red' : color;\n  const content = <Content prefix={prefix} value={value} suffix={suffix} title={title} />;\n\n  return (\n    <Progress\n      type=\"dashboard\"\n      percent={value}\n      width={120}\n      strokeColor={{\n        '0%': color,\n        '90%': endColor,\n      }}\n      format={() => content}\n    />\n  );\n};\nProgressView.defaultProps = defaultProps;\n\nconst StatisticView: FC<StatisticItemProps> = ({ title, value, prefix, formatter }) => (\n  <Statistic title={title} value={value} prefix={prefix} formatter={formatter} />\n);\nStatisticView.defaultProps = defaultProps;\n\nexport const StatisticItem: FC<StatisticItemProps> = props => {\n  const { progress, centered } = props;\n  const View = progress ? ProgressView : StatisticView;\n\n  const style = centered ? { display: 'flex', alignItems: 'center', justifyContent: 'center' } : {};\n\n  return (\n    <Card type=\"inner\">\n      <div style={style}>\n        <View {...props} />\n      </div>\n    </Card>\n  );\n};\nStatisticItem.defaultProps = defaultProps;\n","import { Table } from 'antd';\nimport format from 'date-fns/format';\nimport { SortOrder } from 'antd/lib/table/interface';\nimport { formatDistanceToNow } from 'date-fns';\nimport { FC } from 'react';\nimport { User } from '../../types/chat';\nimport { formatUAstring } from '../../utils/format';\n\nexport function formatDisplayDate(date: string | Date) {\n  return format(new Date(date), 'MMM d H:mma');\n}\n\nexport type ViewerTableProps = {\n  data: User[];\n};\n\nexport const ViewerTable: FC<ViewerTableProps> = ({ data }) => {\n  const columns = [\n    {\n      title: 'User Agent',\n      dataIndex: 'userAgent',\n      key: 'userAgent',\n      render: (ua: string) => formatUAstring(ua),\n    },\n    {\n      title: 'Location',\n      dataIndex: 'geo',\n      key: 'geo',\n      render: geo => (geo ? `${geo.regionName}, ${geo.countryCode}` : '-'),\n    },\n    {\n      title: 'Watch Time',\n      dataIndex: 'firstSeen',\n      key: 'firstSeen',\n      defaultSortOrder: 'ascend' as SortOrder,\n      render: (time: Date) => formatDistanceToNow(new Date(time)),\n      sorter: (a: any, b: any) => new Date(a.firstSeen).getTime() - new Date(b.firstSeen).getTime(),\n      sortDirections: ['descend', 'ascend'] as SortOrder[],\n    },\n  ];\n\n  return (\n    <Table\n      pagination={{ hideOnSinglePage: true }}\n      className=\"table-container\"\n      columns={columns}\n      dataSource={data}\n      size=\"small\"\n      rowKey=\"id\"\n    />\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Row, Col, Typography, Menu, Dropdown, Spin, Alert } from 'antd';\nimport { DownOutlined, UserOutlined } from '@ant-design/icons';\nimport { getUnixTime, sub } from 'date-fns';\nimport { Chart } from '../../components/admin/Chart';\nimport { StatisticItem } from '../../components/admin/StatisticItem';\nimport { ViewerTable } from '../../components/admin/ViewerTable';\n\nimport { ServerStatusContext } from '../../utils/server-status-context';\n\nimport { VIEWERS_OVER_TIME, ACTIVE_VIEWER_DETAILS, fetchData } from '../../utils/apis';\n\nconst FETCH_INTERVAL = 60 * 1000; // 1 min\n\nexport default function ViewersOverTime() {\n  const context = useContext(ServerStatusContext);\n  const { online, broadcaster, viewerCount, overallPeakViewerCount, sessionPeakViewerCount } =\n    context || {};\n  let streamStart;\n  if (broadcaster && broadcaster.time) {\n    streamStart = new Date(broadcaster.time);\n  }\n\n  const times = [\n    { title: 'Current stream', start: streamStart },\n    { title: 'Last 12 hours', start: sub(new Date(), { hours: 12 }) },\n    { title: 'Last 24 hours', start: sub(new Date(), { hours: 24 }) },\n    { title: 'Last 7 days', start: sub(new Date(), { days: 7 }) },\n    { title: 'Last 30 days', start: sub(new Date(), { days: 30 }) },\n    { title: 'Last 3 months', start: sub(new Date(), { months: 3 }) },\n    { title: 'Last 6 months', start: sub(new Date(), { months: 6 }) },\n  ];\n\n  const [loadingChart, setLoadingChart] = useState(true);\n  const [viewerInfo, setViewerInfo] = useState([]);\n  const [viewerDetails, setViewerDetails] = useState([]);\n  const [timeWindowStart, setTimeWindowStart] = useState(times[1]);\n\n  const getInfo = async () => {\n    try {\n      const url = `${VIEWERS_OVER_TIME}?windowStart=${getUnixTime(timeWindowStart.start)}`;\n      const result = await fetchData(url);\n      setViewerInfo(result);\n      setLoadingChart(false);\n    } catch (error) {\n      console.log('==== error', error);\n    }\n\n    try {\n      const result = await fetchData(ACTIVE_VIEWER_DETAILS);\n      setViewerDetails(result);\n    } catch (error) {\n      console.log('==== error', error);\n    }\n  };\n\n  useEffect(() => {\n    let getStatusIntervalId = null;\n\n    getInfo();\n    if (online) {\n      getStatusIntervalId = setInterval(getInfo, FETCH_INTERVAL);\n      // returned function will be called on component unmount\n      return () => {\n        clearInterval(getStatusIntervalId);\n      };\n    }\n\n    return () => [];\n  }, [online, timeWindowStart]);\n\n  const onTimeWindowSelect = ({ key }) => {\n    setTimeWindowStart(times[key]);\n  };\n\n  const menu = (\n    <Menu>\n      {online && streamStart && (\n        <Menu.Item key=\"0\" onClick={onTimeWindowSelect}>\n          {times[0].title}\n        </Menu.Item>\n      )}\n      {times.slice(1).map((time, index) => (\n        // The array is hard coded, so it's safe to use the index as a key.\n        // eslint-disable-next-line react/no-array-index-key\n        <Menu.Item key={index + 1} onClick={onTimeWindowSelect}>\n          {time.title}\n        </Menu.Item>\n      ))}\n    </Menu>\n  );\n\n  return (\n    <>\n      <Typography.Title>Viewer Info</Typography.Title>\n      <br />\n      <Row gutter={[16, 16]} justify=\"space-around\">\n        {online && (\n          <Col span={8} md={8}>\n            <StatisticItem\n              title=\"Current viewers\"\n              value={viewerCount.toString()}\n              prefix={<UserOutlined />}\n            />\n          </Col>\n        )}\n        <Col md={online ? 8 : 12}>\n          <StatisticItem\n            title={online ? 'Max viewers this stream' : 'Max viewers last stream'}\n            value={sessionPeakViewerCount.toString()}\n            prefix={<UserOutlined />}\n          />\n        </Col>\n        <Col md={online ? 8 : 12}>\n          <StatisticItem\n            title=\"All-time max viewers\"\n            value={overallPeakViewerCount.toString()}\n            prefix={<UserOutlined />}\n          />\n        </Col>\n      </Row>\n      {!viewerInfo.length && (\n        <Alert\n          style={{ marginTop: '10px' }}\n          banner\n          message=\"Please wait\"\n          description=\"No viewer data has been collected yet.\"\n          type=\"info\"\n        />\n      )}\n\n      <Spin spinning={!viewerInfo.length || loadingChart}>\n        <Dropdown overlay={menu} trigger={['click']}>\n          <button\n            type=\"button\"\n            style={{ float: 'right', background: 'transparent', border: 'unset' }}\n          >\n            {timeWindowStart.title} <DownOutlined />\n          </button>\n        </Dropdown>\n        {viewerInfo.length > 0 && (\n          <Chart title=\"Viewers\" data={viewerInfo} color=\"#2087E2\" unit=\"\" />\n        )}\n\n        <ViewerTable data={viewerDetails} />\n      </Spin>\n    </>\n  );\n}\n","import UAParser from 'ua-parser-js';\n\nexport function formatIPAddress(ipAddress: string): string {\n  const ipAddressComponents = ipAddress.split(':');\n\n  // Wipe out the port component\n  ipAddressComponents[ipAddressComponents.length - 1] = '';\n\n  let ip = ipAddressComponents.join(':');\n  ip = ip.slice(0, ip.length - 1);\n  if (ip === '[::1]' || ip === '127.0.0.1') {\n    return 'Localhost';\n  }\n\n  return ip;\n}\n\n// check if obj is {}\nexport function isEmptyObject(obj) {\n  return !obj || (Object.keys(obj).length === 0 && obj.constructor === Object);\n}\n\nexport function padLeft(text, pad, size) {\n  return String(pad.repeat(size) + text).slice(-size);\n}\n\nexport function parseSecondsToDurationString(seconds = 0) {\n  const finiteSeconds = Number.isFinite(+seconds) ? Math.abs(seconds) : 0;\n\n  const days = Math.floor(finiteSeconds / 86400);\n  const daysString = days > 0 ? `${days} day${days > 1 ? 's' : ''} ` : '';\n\n  const hours = Math.floor((finiteSeconds / 3600) % 24);\n  const hoursString = hours || days ? padLeft(`${hours}:`, '0', 3) : '';\n\n  const mins = Math.floor((finiteSeconds / 60) % 60);\n  const minString = padLeft(`${mins}:`, '0', 3);\n\n  const secs = Math.floor(finiteSeconds % 60);\n  const secsString = padLeft(`${secs}`, '0', 2);\n\n  return daysString + hoursString + minString + secsString;\n}\n\nexport function makeAndStringFromArray(arr: string[]): string {\n  if (arr.length === 1) return arr[0];\n  const firsts = arr.slice(0, arr.length - 1);\n  const last = arr[arr.length - 1];\n  return `${firsts.join(', ')} and ${last}`;\n}\n\nexport function formatUAstring(uaString: string) {\n  const parser = UAParser(uaString);\n  const { device, os, browser } = parser;\n  const { major: browserVersion, name } = browser;\n  const { version: osVersion, name: osName } = os;\n  const { model, type } = device;\n\n  if (uaString === 'libmpv') {\n    return 'mpv media player';\n  }\n  // Fallback to just displaying the raw agent string.\n  if (!name || !browserVersion || !osName) {\n    return uaString;\n  }\n\n  const deviceString = model || type ? ` (${model || type})` : '';\n  return `${name} ${browserVersion} on ${osName} ${osVersion}\n  ${deviceString}`;\n}\n","// TODO: add a notication after updating info that changes will take place either on a new stream or server restart. may be different for each field.\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { STATUS, fetchData, FETCH_INTERVAL, SERVER_CONFIG } from './apis';\nimport { ConfigDetails, UpdateArgs } from '../types/config-section';\nimport { DEFAULT_VARIANT_STATE } from './config-constants';\n\nexport const initialServerConfigState: ConfigDetails = {\n  streamKeys: [],\n  adminPassword: '',\n  instanceDetails: {\n    customStyles: '',\n    extraPageContent: '',\n    logo: '',\n    name: '',\n    nsfw: false,\n    socialHandles: [],\n    streamTitle: '',\n    summary: '',\n    tags: [],\n    title: '',\n    welcomeMessage: '',\n    offlineMessage: '',\n    appearanceVariables: {},\n  },\n  ffmpegPath: '',\n  rtmpServerPort: '',\n  webServerPort: '',\n  socketHostOverride: null,\n  s3: {\n    accessKey: '',\n    acl: '',\n    bucket: '',\n    enabled: false,\n    endpoint: '',\n    region: '',\n    secret: '',\n    servingEndpoint: '',\n    forcePathStyle: false,\n  },\n  yp: {\n    enabled: false,\n    instanceUrl: '',\n  },\n  videoSettings: {\n    latencyLevel: 4,\n    cpuUsageLevel: 3,\n    videoQualityVariants: [DEFAULT_VARIANT_STATE],\n  },\n  federation: {\n    enabled: false,\n    isPrivate: false,\n    username: '',\n    goLiveMessage: '',\n    showEngagement: true,\n    blockedDomains: [],\n  },\n  notifications: {\n    browser: { enabled: false, goLiveMessage: '' },\n    discord: { enabled: false, webhook: '', goLiveMessage: '' },\n    twitter: {\n      enabled: false,\n      goLiveMessage: '',\n      apiKey: '',\n      apiSecret: '',\n      accessToken: '',\n      accessTokenSecret: '',\n      bearerToken: '',\n    },\n  },\n  externalActions: [],\n  supportedCodecs: [],\n  videoCodec: '',\n  forbiddenUsernames: [],\n  suggestedUsernames: [],\n  chatDisabled: false,\n  chatJoinMessagesEnabled: true,\n  chatEstablishedUserMode: false,\n  hideViewerCount: false,\n};\n\nconst initialServerStatusState = {\n  broadcastActive: false,\n  broadcaster: null,\n  currentBroadcast: null,\n  online: false,\n  viewerCount: 0,\n  sessionMaxViewerCount: 0,\n  sessionPeakViewerCount: 0,\n  overallPeakViewerCount: 0,\n  versionNumber: '0.0.0',\n  streamTitle: '',\n  chatDisabled: false,\n  health: {\n    healthy: true,\n    healthPercentage: 100,\n    message: '',\n    representation: 0,\n  },\n};\n\nexport const ServerStatusContext = React.createContext({\n  ...initialServerStatusState,\n  serverConfig: initialServerConfigState,\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setFieldInConfigState: (args: UpdateArgs) => null,\n});\n\nconst ServerStatusProvider = ({ children }) => {\n  const [status, setStatus] = useState(initialServerStatusState);\n  const [config, setConfig] = useState(initialServerConfigState);\n\n  const getStatus = async () => {\n    try {\n      const result = await fetchData(STATUS);\n      setStatus({ ...result });\n    } catch (error) {\n      // todo\n    }\n  };\n  const getConfig = async () => {\n    try {\n      const result = await fetchData(SERVER_CONFIG);\n      setConfig(result);\n    } catch (error) {\n      // todo\n    }\n  };\n\n  const setFieldInConfigState = ({ fieldName, value, path }: UpdateArgs) => {\n    const updatedConfig = path\n      ? {\n          ...config,\n          [path]: {\n            ...config[path],\n            [fieldName]: value,\n          },\n        }\n      : {\n          ...config,\n          [fieldName]: value,\n        };\n    setConfig(updatedConfig);\n  };\n\n  useEffect(() => {\n    let getStatusIntervalId = null;\n\n    getStatus();\n    getStatusIntervalId = setInterval(getStatus, FETCH_INTERVAL);\n\n    getConfig();\n\n    // returned function will be called on component unmount\n    return () => {\n      clearInterval(getStatusIntervalId);\n    };\n  }, []);\n\n  // eslint-disable-next-line react/jsx-no-constructed-context-values\n  const providerValue = {\n    ...status,\n    serverConfig: config,\n\n    setFieldInConfigState,\n  };\n  return (\n    <ServerStatusContext.Provider value={providerValue}>{children}</ServerStatusContext.Provider>\n  );\n};\n\nServerStatusProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default ServerStatusProvider;\n"],"names":["window","__NEXT_P","push","createGraphDataset","dataArray","dataValues","forEach","item","dateObject","Date","time","dateString","format","value","Chartkick","ChartJs","Chart","data","title","color","unit","dataCollections","yFlipped","yLogarithmic","renderData","length","name","collection","dataset","options","scales","y","reverse","type","x","div","className","LineChart","xtitle","ytitle","suffix","legend","download","library","defaultProps","Text","Typography","prefix","progress","centered","formatter","Content","ProgressView","endColor","content","Progress","percent","width","strokeColor","StatisticView","Statistic","StatisticItem","props","View","style","display","alignItems","justifyContent","Card","ViewerTable","columns","dataIndex","key","render","ua","formatUAstring","geo","regionName","countryCode","defaultSortOrder","formatDistanceToNow","sorter","a","b","firstSeen","getTime","sortDirections","Table","pagination","hideOnSinglePage","dataSource","size","rowKey","ViewersOverTime","context","useContext","ServerStatusContext","online","broadcaster","viewerCount","overallPeakViewerCount","sessionPeakViewerCount","streamStart","times","start","sub","hours","days","months","loadingChart","setLoadingChart","useState","viewerInfo","setViewerInfo","viewerDetails","setViewerDetails","timeWindowStart","setTimeWindowStart","getInfo","async","url","getUnixTime","VIEWERS_OVER_TIME","result","fetchData","error","console","log","ACTIVE_VIEWER_DETAILS","useEffect","getStatusIntervalId","setInterval","clearInterval","onTimeWindowSelect","menu","Menu","onClick","slice","map","index","br","Row","gutter","justify","Col","span","md","toString","UserOutlined","Alert","marginTop","banner","message","description","Spin","spinning","Dropdown","overlay","trigger","button","float","background","border","DownOutlined","formatIPAddress","ipAddress","ipAddressComponents","split","ip","join","isEmptyObject","obj","Object","keys","constructor","padLeft","text","pad","String","repeat","parseSecondsToDurationString","seconds","finiteSeconds","Number","isFinite","Math","abs","floor","daysString","hoursString","mins","minString","secs","secsString","uaString","parser","UAParser","device","os","browser","major","browserVersion","version","osVersion","osName","model","deviceString","initialServerConfigState","streamKeys","adminPassword","instanceDetails","customStyles","extraPageContent","logo","nsfw","socialHandles","streamTitle","summary","tags","welcomeMessage","offlineMessage","appearanceVariables","ffmpegPath","rtmpServerPort","webServerPort","socketHostOverride","s3","accessKey","acl","bucket","enabled","endpoint","region","secret","servingEndpoint","forcePathStyle","yp","instanceUrl","videoSettings","latencyLevel","cpuUsageLevel","videoQualityVariants","DEFAULT_VARIANT_STATE","federation","isPrivate","username","goLiveMessage","showEngagement","blockedDomains","notifications","discord","webhook","twitter","apiKey","apiSecret","accessToken","accessTokenSecret","bearerToken","externalActions","supportedCodecs","videoCodec","forbiddenUsernames","suggestedUsernames","chatDisabled","chatJoinMessagesEnabled","chatEstablishedUserMode","hideViewerCount","initialServerStatusState","broadcastActive","currentBroadcast","sessionMaxViewerCount","versionNumber","health","healthy","healthPercentage","representation","React","serverConfig","setFieldInConfigState","args","ServerStatusProvider","children","status","setStatus","config","setConfig","getStatus","STATUS","FETCH_INTERVAL","SERVER_CONFIG","getConfig","providerValue","fieldName","path","updatedConfig","Provider","propTypes","PropTypes"],"sourceRoot":""}