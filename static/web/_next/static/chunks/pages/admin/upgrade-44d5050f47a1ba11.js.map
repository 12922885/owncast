{"version":3,"file":"static/chunks/pages/admin/upgrade-44d5050f47a1ba11.js","mappings":"uFACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,iBACA,WACE,OAAO,EAAQ,W,+GCCvB,MAAM,MAAEC,GAAUC,EAAAA,EAEZC,EAAaC,IACjB,MAAMC,EAAOC,OAAOC,OAAOH,GAErBI,EAAU,CACd,CACEC,MAAO,OACPC,UAAW,OACXC,IAAK,OACLC,OAAQ,CAACC,EAAMC,KAAU,SAACC,IAAAA,CAAEC,KAAMF,EAAMG,qB,SAAuBJ,KAEjE,CACEJ,MAAO,OACPC,UAAW,OACXC,IAAK,OACLC,OAAQC,GAAQ,GAAmC,QAA/BA,EAAO,KAAO,MAAMK,QAAQ,GAAG,SAIvD,OACE,SAACC,EAAAA,EAAKA,CACJC,WAAYf,EACZG,QAASA,EACTa,OAAQC,GAAUA,EAAOC,GACzBC,KAAK,QACLC,YAAY,KA2ClB,UAtCa,KACX,MAAOC,EAASC,IAAcC,EAAAA,EAAAA,UAAS,CACrCC,SAAU,GACVC,KAAM,GACNC,WAAY,KACZC,KAAM,GACN5B,OAAQ,KAgBV,OAJA6B,EAAAA,EAAAA,YAAU,KATSC,WACjB,IACE,MAAMC,QAAeC,EAAAA,EAAAA,MACrBT,EAAWQ,GACX,MAAOE,GACPC,QAAQC,IAAI,aAAcF,KAK5BG,KACC,IAEEd,GAKH,UAACe,MAAAA,CAAIC,UAAU,e,WACb,SAACzC,EAAAA,CAAM0C,MAAO,E,UACZ,SAAC5B,IAAAA,CAAEC,KAAMU,EAAQG,S,SAAWH,EAAQI,UAEtC,SAAC7B,EAAAA,CAAM0C,MAAO,E,SAAI,IAAIC,KAAKlB,EAAQK,YAAYc,kBAC/C,SAACC,EAAAA,EAAaA,C,SAAEpB,EAAQM,QACxB,SAACe,KAAAA,C,SAAG,eACJ,SAAC5C,EAAAA,IAAeuB,EAAQtB,YAXnB,O,2iCC1DX,MAAM4C,EAAiBC,EAAQC,IAAIC,2BAC7BC,EAAkBH,EAAQC,IAAIG,4BACvBC,EAAuBL,IAE9BM,EAAe,GAAwB,OAArBD,EAAqB,cAEhCE,EAAiB,KAGjBC,EAAS,GAAgB,OAAbF,EAAa,UASzBG,GANa,GAAgB,OAAbH,EAAa,cAGV,GAAgB,OAAbA,EAAa,aAGnB,GAAgB,OAAbA,EAAa,iBAGhCI,EAA2B,GAAgB,OAAbJ,EAAa,UAG3CK,EAAoB,GAAgB,OAAbL,EAAa,mBAGpCM,EAAwB,GAAgB,OAAbN,EAAa,WAGxCO,EAAoB,GAAgB,OAAbP,EAAa,gBAGpCQ,EAAiB,GAAgB,OAAbR,EAAa,uBAGjCS,EAAsB,GAAgB,OAAbT,EAAa,yBAGtCU,EAAa,GAAgB,OAAbV,EAAa,qBAG7BW,EAAmB,GAAgB,OAAbX,EAAa,4BAGnCY,EAAqB,GAAgB,OAAbZ,EAAa,2BAGrCa,EAAa,GAAgB,OAAbb,EAAa,yBAG7Bc,EAAiB,GAAgB,OAAbd,EAAa,iBAGjCe,EAAW,GAAgB,OAAbf,EAAa,QAG3BgB,EAAY,GAAgB,OAAbhB,EAAa,iBAG5BiB,EAAe,GAAgB,OAAbjB,EAAa,iBAG/BkB,EAA2B,oCAG3BC,EAAe,GAAgB,OAAbnB,EAAa,gBAG/BoB,EAAe,GAAgB,OAAbpB,EAAa,gBAG/BqB,EAAgB,GAAgB,OAAbrB,EAAa,gBAGhCsB,EAAsB,GAAgB,OAAbtB,EAAa,uBAGtCuB,EAAsB,GAAgB,OAAbvB,EAAa,uBAGtCwB,EAAW,GAAgB,OAAbxB,EAAa,YAG3ByB,EAAiB,GAAgB,OAAbzB,EAAa,mBAGjC0B,EAAiB,GAAgB,OAAb1B,EAAa,mBAGjC2B,EAAwB,GAAwB,OAArB5B,EAAqB,uBAMhD6B,GAHmB,GAAgB,OAAb5B,EAAa,uBAGT,GAAgB,OAAbA,EAAa,oBAG1C6B,EAAY,GAAgB,OAAb7B,EAAa,aAG5B8B,EAAoB,GAAgB,OAAb9B,EAAa,qBAGpC+B,EAAoB,GAAgB,OAAb/B,EAAa,qBAGpCgC,EAAwB,GAAgB,OAAbhC,EAAa,qBAGxCiC,EAAqB,GAAgB,OAAbjC,EAAa,sBAErCkC,EAA4B,GAAgB,OAAblC,EAAa,iBAG5CmC,EAAqB,GAAgB,OAAbnC,EAAa,qBAErCoC,EAAe,GAAgB,OAAbpC,EAAa,YAYrCrB,eAAe0D,EAAUC,EAAaC,GAC3C,MAAM,KAAEzF,EAAI,OAAE0F,EAAS,MAAK,KAAEC,GAAO,GAASF,GAAW,GAGnDG,EAA8B,CAClCF,UAOF,GAJI1F,IACF4F,EAAejE,KAAOkE,KAAKC,UAAU9F,IAGnC2F,GAAQhD,GAAkBI,EAAiB,CAC7C,MAAMgD,EAAUC,KAAK,GAAqBjD,OAAlBJ,EAAe,KAAmB,OAAhBI,IAC1C6C,EAAeK,QAAU,CACvBC,cAAe,SAAiB,OAARH,IAE1BH,EAAeO,KAAO,OACtBP,EAAeQ,YAAc,UAG/B,IACE,MAAMC,QAAiBC,MAAMd,EAAKI,GAC5BW,QAAaF,EAASE,OAE5B,IAAKF,EAASG,GAAI,CAChB,MAAMC,EAAUF,EAAKE,SAAW,0BAA0C,OAAhBJ,EAASK,QACnE,MAAM,IAAIC,MAAMF,GAElB,OAAOF,EACP,MAAOvE,GAEP,OADAC,QAAQD,MAAMA,GACPA,GAMJH,eAAe+E,EAAgBpB,EAAaC,GAMjD,OAAOF,EAAUC,EALJ,CACXE,OAAQ,MACRC,MAAM,KACHF,IAKA5D,eAAegF,EAAkBrB,GACtC,IACE,MAAMa,QAAiBC,MAAMd,EAAK,CAChCsB,eAAgB,cAChBC,SAAU,KAEZ,IAAKV,EAASG,GAAI,CAChB,MAAMC,EAAU,yBAAyC,OAAhBJ,EAASK,QAClD,MAAM,IAAIC,MAAMF,GAGlB,aADmBJ,EAASE,OAE5B,MAAOvE,GACPC,QAAQC,IAAIF,GAEd,MAAO,GAGFH,eAAeE,IACpB,OAAO8E,EA1EkB,gEA8E3B,MAAMG,EAAO,oBAyBNnF,eAAeoF,EAAwBC,GAE5C,IAAIC,SADwBpF,KACaqF,SAMzC,MAJ0C,MAAtCD,EAAqBE,OAAO,EAAG,KACjCF,EAAuBA,EAAqBE,OAAO,IA7BvD,SAAkBC,EAAOC,GACvB,IAAKD,IAAUC,GAA2B,IAAjBD,EAAME,QAAkC,IAAlBD,EAAOC,OAAc,OAAO,EAC3E,GAAIF,IAAUC,EAAQ,OAAO,EAC7B,GAAIP,EAAKS,KAAKH,IAAUN,EAAKS,KAAKF,GAAS,CACzC,MAAMG,EAASJ,EAAMK,MAAM,KAC3B,KAAOD,EAAOF,OAAS,GAAGE,EAAO/H,KAAK,KACtC,MAAMiI,EAASL,EAAOI,MAAM,KAC5B,KAAOC,EAAOJ,OAAS,GAAGI,EAAOjI,KAAK,KAEtC,IAAK,IAAIkI,EAAI,EAAGA,EAAI,EAAGA,IAAK,CAC1B,MAAMC,EAAIC,SAASL,EAAOG,GAAI,IACxBG,EAAID,SAASH,EAAOC,GAAI,IAC9B,GAAIC,IAAME,EAGV,OAAOF,EAAIE,EAEb,OAAO,EAET,OAAOV,GAASC,EAaXU,CAASf,EAAgBC,GAIvB,KAHEA,K","sources":["webpack://_N_E/?3d0f","webpack://_N_E/./pages/admin/upgrade.tsx","webpack://_N_E/./utils/apis.ts"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/upgrade\",\n      function () {\n        return require(\"private-next-pages/admin/upgrade.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin/upgrade\"])\n      });\n    }\n  ","import React, { useState, useEffect } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport { Table, Typography } from 'antd';\nimport { getGithubRelease } from '../../utils/apis';\n\nconst { Title } = Typography;\n\nconst AssetTable = assets => {\n  const data = Object.values(assets) as object[];\n\n  const columns = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (text, entry) => <a href={entry.browser_download_url}>{text}</a>,\n    },\n    {\n      title: 'Size',\n      dataIndex: 'size',\n      key: 'size',\n      render: text => `${(text / 1024 / 1024).toFixed(2)} MB`,\n    },\n  ];\n\n  return (\n    <Table\n      dataSource={data}\n      columns={columns}\n      rowKey={record => record.id}\n      size=\"large\"\n      pagination={false}\n    />\n  );\n};\n\nconst Logs = () => {\n  const [release, setRelease] = useState({\n    html_url: '',\n    name: '',\n    created_at: null,\n    body: '',\n    assets: [],\n  });\n\n  const getRelease = async () => {\n    try {\n      const result = await getGithubRelease();\n      setRelease(result);\n    } catch (error) {\n      console.log('==== error', error);\n    }\n  };\n\n  useEffect(() => {\n    getRelease();\n  }, []);\n\n  if (!release) {\n    return null;\n  }\n\n  return (\n    <div className=\"upgrade-page\">\n      <Title level={2}>\n        <a href={release.html_url}>{release.name}</a>\n      </Title>\n      <Title level={5}>{new Date(release.created_at).toDateString()}</Title>\n      <ReactMarkdown>{release.body}</ReactMarkdown>\n      <h3>Downloads</h3>\n      <AssetTable {...release.assets} />\n    </div>\n  );\n};\nexport default Logs;\n","/* eslint-disable prefer-destructuring */\nconst ADMIN_USERNAME = process.env.NEXT_PUBLIC_ADMIN_USERNAME;\nconst ADMIN_STREAMKEY = process.env.NEXT_PUBLIC_ADMIN_STREAMKEY;\nexport const NEXT_PUBLIC_API_HOST = process.env.NEXT_PUBLIC_API_HOST;\n\nconst API_LOCATION = `${NEXT_PUBLIC_API_HOST}api/admin/`;\n\nexport const FETCH_INTERVAL = 15000;\n\n// Current inbound broadcaster info\nexport const STATUS = `${API_LOCATION}status`;\n\n// Disconnect inbound stream\nexport const DISCONNECT = `${API_LOCATION}disconnect`;\n\n// Change the current streaming key in memory\nexport const STREAMKEY_CHANGE = `${API_LOCATION}changekey`;\n\n// Current server config\nexport const SERVER_CONFIG = `${API_LOCATION}serverconfig`;\n\n// Base url to update config settings\nexport const SERVER_CONFIG_UPDATE_URL = `${API_LOCATION}config`;\n\n// Get viewer count over time\nexport const VIEWERS_OVER_TIME = `${API_LOCATION}viewersOverTime`;\n\n// Get active viewer details\nexport const ACTIVE_VIEWER_DETAILS = `${API_LOCATION}viewers`;\n\n// Get currently connected chat clients\nexport const CONNECTED_CLIENTS = `${API_LOCATION}chat/clients`;\n\n// Get list of disabled/blocked chat users\nexport const DISABLED_USERS = `${API_LOCATION}chat/users/disabled`;\n\n// Disable/enable a single user\nexport const USER_ENABLED_TOGGLE = `${API_LOCATION}chat/users/setenabled`;\n\n// Get banned IP addresses\nexport const BANNED_IPS = `${API_LOCATION}chat/users/ipbans`;\n\n// Remove IP ban\nexport const BANNED_IP_REMOVE = `${API_LOCATION}chat/users/ipbans/remove`;\n\n// Disable/enable a single user\nexport const USER_SET_MODERATOR = `${API_LOCATION}chat/users/setmoderator`;\n\n// Get list of moderators\nexport const MODERATORS = `${API_LOCATION}chat/users/moderators`;\n\n// Get hardware stats\nexport const HARDWARE_STATS = `${API_LOCATION}hardwarestats`;\n\n// Get all logs\nexport const LOGS_ALL = `${API_LOCATION}logs`;\n\n// Get warnings + errors\nexport const LOGS_WARN = `${API_LOCATION}logs/warnings`;\n\n// Get chat history\nexport const CHAT_HISTORY = `${API_LOCATION}chat/messages`;\n\n// Get chat history\nexport const UPDATE_CHAT_MESSGAE_VIZ = `/api/admin/chat/messagevisibility`;\n\n// Upload a new custom emoji\nexport const UPLOAD_EMOJI = `${API_LOCATION}emoji/upload`;\n\n// Delete a custom emoji\nexport const DELETE_EMOJI = `${API_LOCATION}emoji/delete`;\n\n// Get all access tokens\nexport const ACCESS_TOKENS = `${API_LOCATION}accesstokens`;\n\n// Delete a single access token\nexport const DELETE_ACCESS_TOKEN = `${API_LOCATION}accesstokens/delete`;\n\n// Create a new access token\nexport const CREATE_ACCESS_TOKEN = `${API_LOCATION}accesstokens/create`;\n\n// Get webhooks\nexport const WEBHOOKS = `${API_LOCATION}webhooks`;\n\n// Delete a single webhook\nexport const DELETE_WEBHOOK = `${API_LOCATION}webhooks/delete`;\n\n// Create a single webhook\nexport const CREATE_WEBHOOK = `${API_LOCATION}webhooks/create`;\n\n// hard coded social icons list\nexport const SOCIAL_PLATFORMS_LIST = `${NEXT_PUBLIC_API_HOST}api/socialplatforms`;\n\n// set external action links\nexport const EXTERNAL_ACTIONS = `${API_LOCATION}api/externalactions`;\n\n// send a message to the fediverse\nexport const FEDERATION_MESSAGE_SEND = `${API_LOCATION}federation/send`;\n\n// Get followers\nexport const FOLLOWERS = `${API_LOCATION}followers`;\n\n// Get followers pending approval\nexport const FOLLOWERS_PENDING = `${API_LOCATION}followers/pending`;\n\n// Get followers who were blocked or rejected\nexport const FOLLOWERS_BLOCKED = `${API_LOCATION}followers/blocked`;\n\n// Approve, reject a follow request\nexport const SET_FOLLOWER_APPROVAL = `${API_LOCATION}followers/approve`;\n\n// List of inbound federated actions that took place.\nexport const FEDERATION_ACTIONS = `${API_LOCATION}federation/actions`;\n\nexport const API_STREAM_HEALTH_METRICS = `${API_LOCATION}metrics/video`;\n\n// Save an array of stream keys\nexport const UPDATE_STREAM_KEYS = `${API_LOCATION}config/streamkeys`;\n\nexport const API_YP_RESET = `${API_LOCATION}yp/reset`;\n\nexport const TEMP_UPDATER_API = LOGS_ALL;\n\nconst GITHUB_RELEASE_URL = 'https://api.github.com/repos/owncast/owncast/releases/latest';\n\ninterface FetchOptions {\n  data?: any;\n  method?: string;\n  auth?: boolean;\n}\n\nexport async function fetchData(url: string, options?: FetchOptions) {\n  const { data, method = 'GET', auth = true } = options || {};\n\n  // eslint-disable-next-line no-undef\n  const requestOptions: RequestInit = {\n    method,\n  };\n\n  if (data) {\n    requestOptions.body = JSON.stringify(data);\n  }\n\n  if (auth && ADMIN_USERNAME && ADMIN_STREAMKEY) {\n    const encoded = btoa(`${ADMIN_USERNAME}:${ADMIN_STREAMKEY}`);\n    requestOptions.headers = {\n      Authorization: `Basic ${encoded}`,\n    };\n    requestOptions.mode = 'cors';\n    requestOptions.credentials = 'include';\n  }\n\n  try {\n    const response = await fetch(url, requestOptions);\n    const json = await response.json();\n\n    if (!response.ok) {\n      const message = json.message || `An error has occurred: ${response.status}`;\n      throw new Error(message);\n    }\n    return json;\n  } catch (error) {\n    console.error(error);\n    return error;\n    // console.log(error)\n    // throw new Error(error)\n  }\n}\n\nexport async function getUnauthedData(url: string, options?: FetchOptions) {\n  const opts = {\n    method: 'GET',\n    auth: false,\n    ...options,\n  };\n  return fetchData(url, opts);\n}\n\nexport async function fetchExternalData(url: string) {\n  try {\n    const response = await fetch(url, {\n      referrerPolicy: 'no-referrer', // Send no referrer header for privacy reasons.\n      referrer: '',\n    });\n    if (!response.ok) {\n      const message = `An error has occured: ${response.status}`;\n      throw new Error(message);\n    }\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    console.log(error);\n  }\n  return {};\n}\n\nexport async function getGithubRelease() {\n  return fetchExternalData(GITHUB_RELEASE_URL);\n}\n\n// Stolen from https://gist.github.com/prenagha/98bbb03e27163bc2f5e4\nconst VPAT = /^\\d+(\\.\\d+){0,2}$/;\nfunction upToDate(local, remote) {\n  if (!local || !remote || local.length === 0 || remote.length === 0) return false;\n  if (local === remote) return true;\n  if (VPAT.test(local) && VPAT.test(remote)) {\n    const lparts = local.split('.');\n    while (lparts.length < 3) lparts.push('0');\n    const rparts = remote.split('.');\n    while (rparts.length < 3) rparts.push('0');\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < 3; i++) {\n      const l = parseInt(lparts[i], 10);\n      const r = parseInt(rparts[i], 10);\n      if (l === r)\n        // eslint-disable-next-line no-continue\n        continue;\n      return l > r;\n    }\n    return true;\n  }\n  return local >= remote;\n}\n\n// Make a request to the server status API and the Github releases API\n// and return a release if it's newer than the server version.\nexport async function upgradeVersionAvailable(currentVersion) {\n  const recentRelease = await getGithubRelease();\n  let recentReleaseVersion = recentRelease.tag_name;\n\n  if (recentReleaseVersion.substr(0, 1) === 'v') {\n    recentReleaseVersion = recentReleaseVersion.substr(1);\n  }\n\n  if (!upToDate(currentVersion, recentReleaseVersion)) {\n    return recentReleaseVersion;\n  }\n\n  return null;\n}\n"],"names":["window","__NEXT_P","push","Title","Typography","AssetTable","assets","data","Object","values","columns","title","dataIndex","key","render","text","entry","a","href","browser_download_url","toFixed","Table","dataSource","rowKey","record","id","size","pagination","release","setRelease","useState","html_url","name","created_at","body","useEffect","async","result","getGithubRelease","error","console","log","getRelease","div","className","level","Date","toDateString","ReactMarkdown","h3","ADMIN_USERNAME","process","env","NEXT_PUBLIC_ADMIN_USERNAME","ADMIN_STREAMKEY","NEXT_PUBLIC_ADMIN_STREAMKEY","NEXT_PUBLIC_API_HOST","API_LOCATION","FETCH_INTERVAL","STATUS","SERVER_CONFIG","SERVER_CONFIG_UPDATE_URL","VIEWERS_OVER_TIME","ACTIVE_VIEWER_DETAILS","CONNECTED_CLIENTS","DISABLED_USERS","USER_ENABLED_TOGGLE","BANNED_IPS","BANNED_IP_REMOVE","USER_SET_MODERATOR","MODERATORS","HARDWARE_STATS","LOGS_ALL","LOGS_WARN","CHAT_HISTORY","UPDATE_CHAT_MESSGAE_VIZ","UPLOAD_EMOJI","DELETE_EMOJI","ACCESS_TOKENS","DELETE_ACCESS_TOKEN","CREATE_ACCESS_TOKEN","WEBHOOKS","DELETE_WEBHOOK","CREATE_WEBHOOK","SOCIAL_PLATFORMS_LIST","FEDERATION_MESSAGE_SEND","FOLLOWERS","FOLLOWERS_PENDING","FOLLOWERS_BLOCKED","SET_FOLLOWER_APPROVAL","FEDERATION_ACTIONS","API_STREAM_HEALTH_METRICS","UPDATE_STREAM_KEYS","API_YP_RESET","fetchData","url","options","method","auth","requestOptions","JSON","stringify","encoded","btoa","headers","Authorization","mode","credentials","response","fetch","json","ok","message","status","Error","getUnauthedData","fetchExternalData","referrerPolicy","referrer","VPAT","upgradeVersionAvailable","currentVersion","recentReleaseVersion","tag_name","substr","local","remote","length","test","lparts","split","rparts","i","l","parseInt","r","upToDate"],"sourceRoot":""}