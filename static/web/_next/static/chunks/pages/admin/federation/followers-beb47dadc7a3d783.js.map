{"version":3,"file":"static/chunks/pages/admin/federation/followers-beb47dadc7a3d783.js","mappings":"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","sources":["webpack://_N_E/?9bfd","webpack://_N_E/./pages/admin/federation/followers.tsx","webpack://_N_E/./utils/format.ts","webpack://_N_E/./utils/server-status-context.tsx"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/federation/followers\",\n      function () {\n        return require(\"private-next-pages/admin/federation/followers.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin/federation/followers\"])\n      });\n    }\n  ","import React, { useEffect, useState, useContext } from 'react';\nimport { Table, Avatar, Button, Tabs } from 'antd';\nimport { ColumnsType, SortOrder } from 'antd/lib/table/interface';\nimport format from 'date-fns/format';\nimport { UserAddOutlined, UserDeleteOutlined } from '@ant-design/icons';\nimport { ServerStatusContext } from '../../../utils/server-status-context';\nimport {\n  FOLLOWERS,\n  FOLLOWERS_PENDING,\n  SET_FOLLOWER_APPROVAL,\n  FOLLOWERS_BLOCKED,\n  fetchData,\n} from '../../../utils/apis';\nimport { isEmptyObject } from '../../../utils/format';\n\nexport interface Follower {\n  link: string;\n  username: string;\n  image: string;\n  name: string;\n  timestamp: Date;\n  approved: Date;\n}\n\nexport default function FediverseFollowers() {\n  const [followersPending, setFollowersPending] = useState<Follower[]>([]);\n  const [followersBlocked, setFollowersBlocked] = useState<Follower[]>([]);\n  const [followers, setFollowers] = useState<Follower[]>([]);\n  const [totalCount, setTotalCount] = useState<number>(0);\n  const [currentPage, setCurrentPage] = useState<number>(0);\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig } = serverStatusData || {};\n  const { federation } = serverConfig;\n  const { isPrivate } = federation;\n\n  const getFollowers = async () => {\n    try {\n      const limit = 50;\n      const offset = currentPage * limit;\n      const u = `${FOLLOWERS}?offset=${offset}&limit=${limit}`;\n\n      // Active followers\n      const result = await fetchData(u, { auth: true });\n      const { results, total } = result;\n\n      if (isEmptyObject(results)) {\n        setFollowers([]);\n      } else {\n        setTotalCount(total);\n        setFollowers(results);\n      }\n\n      // Pending follow requests\n      const pendingFollowersResult = await fetchData(FOLLOWERS_PENDING, { auth: true });\n      if (isEmptyObject(pendingFollowersResult)) {\n        setFollowersPending([]);\n      } else {\n        setFollowersPending(pendingFollowersResult);\n      }\n\n      // Blocked/rejected followers\n      const blockedFollowersResult = await fetchData(FOLLOWERS_BLOCKED, { auth: true });\n      if (isEmptyObject(followersBlocked)) {\n        setFollowersBlocked([]);\n      } else {\n        setFollowersBlocked(blockedFollowersResult);\n      }\n    } catch (error) {\n      console.log('==== error', error);\n    }\n  };\n\n  useEffect(() => {\n    getFollowers();\n  }, []);\n\n  const columns: ColumnsType<Follower> = [\n    {\n      title: '',\n      dataIndex: 'image',\n      key: 'image',\n      width: 90,\n      render: image => <Avatar size={40} src={image || '/img/logo.svg'} />,\n    },\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      key: 'name',\n      render: (_, follower) => (\n        <a href={follower.link} target=\"_blank\" rel=\"noreferrer\">\n          {follower.name || follower.username}\n        </a>\n      ),\n    },\n    {\n      title: 'URL',\n      dataIndex: 'link',\n      key: 'link',\n      render: (_, follower) => (\n        <a href={follower.link} target=\"_blank\" rel=\"noreferrer\">\n          {follower.link}\n        </a>\n      ),\n    },\n  ];\n\n  function makeTable(data: Follower[], tableColumns: ColumnsType<Follower>) {\n    return (\n      <Table\n        dataSource={data}\n        columns={tableColumns}\n        size=\"small\"\n        rowKey={row => row.link}\n        pagination={{\n          pageSize: 50,\n          hideOnSinglePage: true,\n          showSizeChanger: false,\n          total: totalCount,\n        }}\n        onChange={pagination => {\n          const page = pagination.current;\n          setCurrentPage(page);\n        }}\n      />\n    );\n  }\n\n  async function approveFollowRequest(request) {\n    try {\n      await fetchData(SET_FOLLOWER_APPROVAL, {\n        auth: true,\n        method: 'POST',\n        data: {\n          actorIRI: request.link,\n          approved: true,\n        },\n      });\n\n      // Refetch and update the current data.\n      getFollowers();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  async function rejectFollowRequest(request) {\n    try {\n      await fetchData(SET_FOLLOWER_APPROVAL, {\n        auth: true,\n        method: 'POST',\n        data: {\n          actorIRI: request.link,\n          approved: false,\n        },\n      });\n\n      // Refetch and update the current data.\n      getFollowers();\n    } catch (err) {\n      console.error(err);\n    }\n  }\n\n  const pendingColumns: ColumnsType<Follower> = [...columns];\n  pendingColumns.unshift(\n    {\n      title: 'Approve',\n      dataIndex: null,\n      key: null,\n      render: request => (\n        <Button\n          type=\"primary\"\n          icon={<UserAddOutlined />}\n          onClick={() => {\n            approveFollowRequest(request);\n          }}\n        />\n      ),\n      width: 50,\n    },\n    {\n      title: 'Reject',\n      dataIndex: null,\n      key: null,\n      render: request => (\n        <Button\n          type=\"primary\"\n          danger\n          icon={<UserDeleteOutlined />}\n          onClick={() => {\n            rejectFollowRequest(request);\n          }}\n        />\n      ),\n      width: 50,\n    },\n  );\n\n  pendingColumns.push({\n    title: 'Requested',\n    dataIndex: 'timestamp',\n    key: 'requested',\n    width: 200,\n    render: timestamp => {\n      const dateObject = new Date(timestamp);\n      return <>{format(dateObject, 'P')}</>;\n    },\n    sorter: (a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime(),\n    sortDirections: ['descend', 'ascend'] as SortOrder[],\n    defaultSortOrder: 'descend' as SortOrder,\n  });\n\n  const blockedColumns: ColumnsType<Follower> = [...columns];\n  blockedColumns.unshift({\n    title: 'Approve',\n    dataIndex: null,\n    key: null,\n    render: request => (\n      <Button\n        type=\"primary\"\n        icon={<UserAddOutlined />}\n        size=\"large\"\n        onClick={() => {\n          approveFollowRequest(request);\n        }}\n      />\n    ),\n    width: 50,\n  });\n\n  blockedColumns.push(\n    {\n      title: 'Requested',\n      dataIndex: 'timestamp',\n      key: 'requested',\n      width: 200,\n      render: timestamp => {\n        const dateObject = new Date(timestamp);\n        return <>{format(dateObject, 'P')}</>;\n      },\n      sorter: (a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime(),\n      sortDirections: ['descend', 'ascend'] as SortOrder[],\n      defaultSortOrder: 'descend' as SortOrder,\n    },\n    {\n      title: 'Rejected/Blocked',\n      dataIndex: 'timestamp',\n      key: 'disabled_at',\n      width: 200,\n      render: timestamp => {\n        const dateObject = new Date(timestamp);\n        return <>{format(dateObject, 'P')}</>;\n      },\n      sorter: (a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime(),\n      sortDirections: ['descend', 'ascend'] as SortOrder[],\n      defaultSortOrder: 'descend' as SortOrder,\n    },\n  );\n\n  const followersColumns: ColumnsType<Follower> = [...columns];\n\n  followersColumns.push(\n    {\n      title: 'Added',\n      dataIndex: 'timestamp',\n      key: 'timestamp',\n      width: 200,\n      render: timestamp => {\n        const dateObject = new Date(timestamp);\n        return <>{format(dateObject, 'P')}</>;\n      },\n      sorter: (a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime(),\n      sortDirections: ['descend', 'ascend'] as SortOrder[],\n      defaultSortOrder: 'descend' as SortOrder,\n    },\n    {\n      title: 'Remove',\n      dataIndex: null,\n      key: null,\n      render: request => (\n        <Button\n          type=\"primary\"\n          danger\n          icon={<UserDeleteOutlined />}\n          onClick={() => {\n            rejectFollowRequest(request);\n          }}\n        />\n      ),\n      width: 50,\n    },\n  );\n\n  const followersTabTitle = (\n    <span>Followers {followers.length > 0 && `(${followers.length})`}</span>\n  );\n  const followersTab = (\n    <>\n      <p>The following accounts get notified when you go live or send a post.</p>\n      {makeTable(followers, followersColumns)}{' '}\n    </>\n  );\n\n  const pendingRequestsTabTitle = (\n    <span>Requests {followersPending.length > 0 && `(${followersPending.length})`}</span>\n  );\n  const pendingRequestsTab = (\n    <>\n      <p>\n        The following people are requesting to follow your Owncast server on the{' '}\n        <a href=\"https://en.wikipedia.org/wiki/Fediverse\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Fediverse\n        </a>{' '}\n        and be alerted to when you go live. Each must be approved.\n      </p>\n      {makeTable(followersPending, pendingColumns)}\n    </>\n  );\n\n  const blockedTabTitle = (\n    <span>Blocked {followersBlocked.length > 0 && `(${followersBlocked.length})`}</span>\n  );\n  const blockedTab = (\n    <>\n      <p>\n        The following people were either rejected or blocked by you. You can approve them as a\n        follower.\n      </p>\n      <p>{makeTable(followersBlocked, blockedColumns)}</p>\n    </>\n  );\n\n  const items = [\n    { label: followersTabTitle, key: '1', children: followersTab },\n    isPrivate && { label: pendingRequestsTabTitle, key: '2', children: pendingRequestsTab },\n    { label: blockedTabTitle, key: '3', children: blockedTab },\n  ];\n\n  return (\n    <div className=\"followers-section\">\n      <Tabs defaultActiveKey=\"1\" items={items} />\n    </div>\n  );\n}\n","import UAParser from 'ua-parser-js';\n\nexport function formatIPAddress(ipAddress: string): string {\n  const ipAddressComponents = ipAddress.split(':');\n\n  // Wipe out the port component\n  ipAddressComponents[ipAddressComponents.length - 1] = '';\n\n  let ip = ipAddressComponents.join(':');\n  ip = ip.slice(0, ip.length - 1);\n  if (ip === '[::1]' || ip === '127.0.0.1') {\n    return 'Localhost';\n  }\n\n  return ip;\n}\n\n// check if obj is {}\nexport function isEmptyObject(obj) {\n  return !obj || (Object.keys(obj).length === 0 && obj.constructor === Object);\n}\n\nexport function padLeft(text, pad, size) {\n  return String(pad.repeat(size) + text).slice(-size);\n}\n\nexport function parseSecondsToDurationString(seconds = 0) {\n  const finiteSeconds = Number.isFinite(+seconds) ? Math.abs(seconds) : 0;\n\n  const days = Math.floor(finiteSeconds / 86400);\n  const daysString = days > 0 ? `${days} day${days > 1 ? 's' : ''} ` : '';\n\n  const hours = Math.floor((finiteSeconds / 3600) % 24);\n  const hoursString = hours || days ? padLeft(`${hours}:`, '0', 3) : '';\n\n  const mins = Math.floor((finiteSeconds / 60) % 60);\n  const minString = padLeft(`${mins}:`, '0', 3);\n\n  const secs = Math.floor(finiteSeconds % 60);\n  const secsString = padLeft(`${secs}`, '0', 2);\n\n  return daysString + hoursString + minString + secsString;\n}\n\nexport function makeAndStringFromArray(arr: string[]): string {\n  if (arr.length === 1) return arr[0];\n  const firsts = arr.slice(0, arr.length - 1);\n  const last = arr[arr.length - 1];\n  return `${firsts.join(', ')} and ${last}`;\n}\n\nexport function formatUAstring(uaString: string) {\n  const parser = UAParser(uaString);\n  const { device, os, browser } = parser;\n  const { major: browserVersion, name } = browser;\n  const { version: osVersion, name: osName } = os;\n  const { model, type } = device;\n\n  if (uaString === 'libmpv') {\n    return 'mpv media player';\n  }\n  // Fallback to just displaying the raw agent string.\n  if (!name || !browserVersion || !osName) {\n    return uaString;\n  }\n\n  const deviceString = model || type ? ` (${model || type})` : '';\n  return `${name} ${browserVersion} on ${osName} ${osVersion}\n  ${deviceString}`;\n}\n","// TODO: add a notication after updating info that changes will take place either on a new stream or server restart. may be different for each field.\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { STATUS, fetchData, FETCH_INTERVAL, SERVER_CONFIG } from './apis';\nimport { ConfigDetails, UpdateArgs } from '../types/config-section';\nimport { DEFAULT_VARIANT_STATE } from './config-constants';\n\nexport const initialServerConfigState: ConfigDetails = {\n  streamKeys: [],\n  adminPassword: '',\n  instanceDetails: {\n    customStyles: '',\n    extraPageContent: '',\n    logo: '',\n    name: '',\n    nsfw: false,\n    socialHandles: [],\n    streamTitle: '',\n    summary: '',\n    tags: [],\n    title: '',\n    welcomeMessage: '',\n    offlineMessage: '',\n    appearanceVariables: {},\n  },\n  ffmpegPath: '',\n  rtmpServerPort: '',\n  webServerPort: '',\n  socketHostOverride: null,\n  s3: {\n    accessKey: '',\n    acl: '',\n    bucket: '',\n    enabled: false,\n    endpoint: '',\n    region: '',\n    secret: '',\n    servingEndpoint: '',\n    forcePathStyle: false,\n  },\n  yp: {\n    enabled: false,\n    instanceUrl: '',\n  },\n  videoSettings: {\n    latencyLevel: 4,\n    cpuUsageLevel: 3,\n    videoQualityVariants: [DEFAULT_VARIANT_STATE],\n  },\n  federation: {\n    enabled: false,\n    isPrivate: false,\n    username: '',\n    goLiveMessage: '',\n    showEngagement: true,\n    blockedDomains: [],\n  },\n  notifications: {\n    browser: { enabled: false, goLiveMessage: '' },\n    discord: { enabled: false, webhook: '', goLiveMessage: '' },\n    twitter: {\n      enabled: false,\n      goLiveMessage: '',\n      apiKey: '',\n      apiSecret: '',\n      accessToken: '',\n      accessTokenSecret: '',\n      bearerToken: '',\n    },\n  },\n  externalActions: [],\n  supportedCodecs: [],\n  videoCodec: '',\n  forbiddenUsernames: [],\n  suggestedUsernames: [],\n  chatDisabled: false,\n  chatJoinMessagesEnabled: true,\n  chatEstablishedUserMode: false,\n  hideViewerCount: false,\n};\n\nconst initialServerStatusState = {\n  broadcastActive: false,\n  broadcaster: null,\n  currentBroadcast: null,\n  online: false,\n  viewerCount: 0,\n  sessionMaxViewerCount: 0,\n  sessionPeakViewerCount: 0,\n  overallPeakViewerCount: 0,\n  versionNumber: '0.0.0',\n  streamTitle: '',\n  chatDisabled: false,\n  health: {\n    healthy: true,\n    healthPercentage: 100,\n    message: '',\n    representation: 0,\n  },\n};\n\nexport const ServerStatusContext = React.createContext({\n  ...initialServerStatusState,\n  serverConfig: initialServerConfigState,\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setFieldInConfigState: (args: UpdateArgs) => null,\n});\n\nconst ServerStatusProvider = ({ children }) => {\n  const [status, setStatus] = useState(initialServerStatusState);\n  const [config, setConfig] = useState(initialServerConfigState);\n\n  const getStatus = async () => {\n    try {\n      const result = await fetchData(STATUS);\n      setStatus({ ...result });\n    } catch (error) {\n      // todo\n    }\n  };\n  const getConfig = async () => {\n    try {\n      const result = await fetchData(SERVER_CONFIG);\n      setConfig(result);\n    } catch (error) {\n      // todo\n    }\n  };\n\n  const setFieldInConfigState = ({ fieldName, value, path }: UpdateArgs) => {\n    const updatedConfig = path\n      ? {\n          ...config,\n          [path]: {\n            ...config[path],\n            [fieldName]: value,\n          },\n        }\n      : {\n          ...config,\n          [fieldName]: value,\n        };\n    setConfig(updatedConfig);\n  };\n\n  useEffect(() => {\n    let getStatusIntervalId = null;\n\n    getStatus();\n    getStatusIntervalId = setInterval(getStatus, FETCH_INTERVAL);\n\n    getConfig();\n\n    // returned function will be called on component unmount\n    return () => {\n      clearInterval(getStatusIntervalId);\n    };\n  }, []);\n\n  // eslint-disable-next-line react/jsx-no-constructed-context-values\n  const providerValue = {\n    ...status,\n    serverConfig: config,\n\n    setFieldInConfigState,\n  };\n  return (\n    <ServerStatusContext.Provider value={providerValue}>{children}</ServerStatusContext.Provider>\n  );\n};\n\nServerStatusProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default ServerStatusProvider;\n"],"names":["window","__NEXT_P","push","FediverseFollowers","followersPending","setFollowersPending","useState","followersBlocked","setFollowersBlocked","followers","setFollowers","totalCount","setTotalCount","currentPage","setCurrentPage","serverStatusData","useContext","ServerStatusContext","serverConfig","federation","isPrivate","getFollowers","async","limit","offset","u","FOLLOWERS","result","fetchData","auth","results","total","isEmptyObject","pendingFollowersResult","FOLLOWERS_PENDING","blockedFollowersResult","FOLLOWERS_BLOCKED","error","console","log","useEffect","columns","title","dataIndex","key","width","render","image","Avatar","size","src","_","follower","a","href","link","target","rel","name","username","makeTable","data","tableColumns","Table","dataSource","rowKey","row","pagination","pageSize","hideOnSinglePage","showSizeChanger","onChange","page","current","approveFollowRequest","request","SET_FOLLOWER_APPROVAL","method","actorIRI","approved","err","rejectFollowRequest","pendingColumns","unshift","Button","type","icon","UserAddOutlined","onClick","danger","UserDeleteOutlined","timestamp","dateObject","Date","format","sorter","b","getTime","sortDirections","defaultSortOrder","blockedColumns","followersColumns","followersTabTitle","span","length","followersTab","p","pendingRequestsTabTitle","pendingRequestsTab","items","label","children","div","className","Tabs","defaultActiveKey","formatIPAddress","ipAddress","ipAddressComponents","split","ip","join","slice","obj","Object","keys","constructor","padLeft","text","pad","String","repeat","parseSecondsToDurationString","seconds","finiteSeconds","Number","isFinite","Math","abs","days","floor","daysString","hours","hoursString","mins","minString","secs","secsString","formatUAstring","uaString","parser","UAParser","device","os","browser","major","browserVersion","version","osVersion","osName","model","deviceString","initialServerConfigState","streamKeys","adminPassword","instanceDetails","customStyles","extraPageContent","logo","nsfw","socialHandles","streamTitle","summary","tags","welcomeMessage","offlineMessage","appearanceVariables","ffmpegPath","rtmpServerPort","webServerPort","socketHostOverride","s3","accessKey","acl","bucket","enabled","endpoint","region","secret","servingEndpoint","forcePathStyle","yp","instanceUrl","videoSettings","latencyLevel","cpuUsageLevel","videoQualityVariants","DEFAULT_VARIANT_STATE","goLiveMessage","showEngagement","blockedDomains","notifications","discord","webhook","twitter","apiKey","apiSecret","accessToken","accessTokenSecret","bearerToken","externalActions","supportedCodecs","videoCodec","forbiddenUsernames","suggestedUsernames","chatDisabled","chatJoinMessagesEnabled","chatEstablishedUserMode","hideViewerCount","initialServerStatusState","broadcastActive","broadcaster","currentBroadcast","online","viewerCount","sessionMaxViewerCount","sessionPeakViewerCount","overallPeakViewerCount","versionNumber","health","healthy","healthPercentage","message","representation","React","setFieldInConfigState","args","ServerStatusProvider","status","setStatus","config","setConfig","getStatus","STATUS","getStatusIntervalId","setInterval","FETCH_INTERVAL","SERVER_CONFIG","getConfig","clearInterval","providerValue","fieldName","value","path","updatedConfig","Provider","propTypes","PropTypes"],"sourceRoot":""}