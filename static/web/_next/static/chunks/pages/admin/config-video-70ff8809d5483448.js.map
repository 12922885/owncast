{"version":3,"file":"static/chunks/pages/admin/config-video-70ff8809d5483448.js","mappings":"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","sources":["webpack://_N_E/?2729","webpack://_N_E/./components/config/ToggleSwitch.tsx","webpack://_N_E/./components/config/CodecSelector.tsx","webpack://_N_E/./components/config/VideoLatency.tsx","webpack://_N_E/./components/config/VideoVariantForm.tsx","webpack://_N_E/./components/config/CurrentVariantsTable.tsx","webpack://_N_E/./pages/admin/config-video.tsx","webpack://_N_E/./utils/alert-message-context.tsx","webpack://_N_E/./utils/input-statuses.tsx","webpack://_N_E/./utils/server-status-context.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/config-video\",\n      function () {\n        return require(\"private-next-pages/admin/config-video.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin/config-video\"])\n      });\n    }\n  ","// This is a wrapper for the Ant Switch component.\n// This one is styled to match the form-textfield component.\n// If `useSubmit` is true then it will automatically post to the config API onChange.\n\nimport React, { useState, useContext, FC } from 'react';\nimport { Switch } from 'antd';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n} from '../../utils/input-statuses';\nimport { FormStatusIndicator } from './FormStatusIndicator';\n\nimport { RESET_TIMEOUT, postConfigUpdateToAPI } from '../../utils/config-constants';\nimport { ServerStatusContext } from '../../utils/server-status-context';\n\nexport type ToggleSwitchProps = {\n  fieldName: string;\n\n  apiPath?: string;\n  checked?: boolean;\n  reversed?: boolean;\n  configPath?: string;\n  disabled?: boolean;\n  label?: string;\n  tip?: string;\n  useSubmit?: boolean;\n  onChange?: (arg: boolean) => void;\n};\n\nexport const ToggleSwitch: FC<ToggleSwitchProps> = ({\n  apiPath,\n  checked,\n  reversed = false,\n  configPath = '',\n  disabled = false,\n  fieldName,\n  label,\n  tip,\n  useSubmit,\n  onChange,\n}) => {\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n\n  let resetTimer = null;\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { setFieldInConfigState } = serverStatusData || {};\n\n  const resetStates = () => {\n    setSubmitStatus(null);\n    clearTimeout(resetTimer);\n    resetTimer = null;\n  };\n\n  const handleChange = async (isChecked: boolean) => {\n    if (useSubmit) {\n      setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n      const isCheckedSend = reversed ? !isChecked : isChecked;\n\n      await postConfigUpdateToAPI({\n        apiPath,\n        data: { value: isCheckedSend },\n        onSuccess: () => {\n          setFieldInConfigState({ fieldName, value: isCheckedSend, path: configPath });\n          setSubmitStatus(createInputStatus(STATUS_SUCCESS));\n        },\n        onError: (message: string) => {\n          setSubmitStatus(createInputStatus(STATUS_ERROR, `There was an error: ${message}`));\n        },\n      });\n      resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n    }\n    if (onChange) {\n      onChange(isChecked);\n    }\n  };\n\n  const loading = submitStatus !== null && submitStatus.type === STATUS_PROCESSING;\n  return (\n    <div className=\"formfield-container toggleswitch-container\">\n      {label && (\n        <div className=\"label-side\">\n          <span className=\"formfield-label\">{label}</span>\n        </div>\n      )}\n\n      <div className=\"input-side\">\n        <div className=\"input-group\">\n          <Switch\n            className={`switch field-${fieldName}`}\n            loading={loading}\n            onChange={handleChange}\n            defaultChecked={checked}\n            checked={checked}\n            checkedChildren=\"ON\"\n            unCheckedChildren=\"OFF\"\n            disabled={disabled}\n          />\n          <FormStatusIndicator status={submitStatus} />\n        </div>\n        <p className=\"field-tip\">{tip}</p>\n      </div>\n    </div>\n  );\n};\nexport default ToggleSwitch;\n\nToggleSwitch.defaultProps = {\n  apiPath: '',\n  checked: false,\n  reversed: false,\n  configPath: '',\n  disabled: false,\n  label: '',\n  tip: '',\n  useSubmit: false,\n  onChange: null,\n};\n","import { Popconfirm, Select, Typography } from 'antd';\nimport React, { FC, useContext, useEffect, useState } from 'react';\nimport { AlertMessageContext } from '../../utils/alert-message-context';\nimport {\n  API_VIDEO_CODEC,\n  postConfigUpdateToAPI,\n  RESET_TIMEOUT,\n} from '../../utils/config-constants';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_SUCCESS,\n} from '../../utils/input-statuses';\nimport { ServerStatusContext } from '../../utils/server-status-context';\nimport { FormStatusIndicator } from './FormStatusIndicator';\n\nexport type CodecSelectorProps = {};\n\nexport const CodecSelector: FC<CodecSelectorProps> = () => {\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig, setFieldInConfigState } = serverStatusData || {};\n  const { videoCodec, supportedCodecs } = serverConfig || {};\n  const { Title } = Typography;\n  const { Option } = Select;\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n  const { setMessage } = useContext(AlertMessageContext);\n  const [selectedCodec, setSelectedCodec] = useState(videoCodec);\n  const [pendingSaveCodec, setPendingSavecodec] = useState(videoCodec);\n  const [confirmPopupOpen, setConfirmPopupOpen] = React.useState(false);\n\n  let resetTimer = null;\n\n  useEffect(() => {\n    setSelectedCodec(videoCodec);\n  }, [videoCodec]);\n\n  const resetStates = () => {\n    setSubmitStatus(null);\n    resetTimer = null;\n    clearTimeout(resetTimer);\n  };\n\n  function handleChange(value) {\n    setPendingSavecodec(value);\n    setConfirmPopupOpen(true);\n  }\n\n  async function save() {\n    setSelectedCodec(pendingSaveCodec);\n    setPendingSavecodec('');\n    setConfirmPopupOpen(false);\n\n    await postConfigUpdateToAPI({\n      apiPath: API_VIDEO_CODEC,\n      data: { value: pendingSaveCodec },\n      onSuccess: () => {\n        setFieldInConfigState({\n          fieldName: 'videoCodec',\n          value: pendingSaveCodec,\n          path: 'videoSettings',\n        });\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS, 'Video codec updated.'));\n\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n        if (serverStatusData.online) {\n          setMessage(\n            'Your latency buffer setting will take effect the next time you begin a live stream.',\n          );\n        }\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, message));\n\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n    });\n  }\n\n  const items = supportedCodecs.map(codec => {\n    let title = codec;\n    if (title === 'libx264') {\n      title = 'Default (libx264)';\n    } else if (title === 'h264_nvenc') {\n      title = 'NVIDIA GPU acceleration';\n    } else if (title === 'h264_vaapi') {\n      title = 'VA-API hardware encoding';\n    } else if (title === 'h264_qsv') {\n      title = 'Intel QuickSync';\n    } else if (title === 'h264_v4l2m2m') {\n      title = 'Video4Linux hardware encoding';\n    } else if (title === 'h264_omx') {\n      title = 'OpenMax (omx) for Raspberry Pi';\n    } else if (title === 'h264_videotoolbox') {\n      title = 'Apple VideoToolbox (hardware)';\n    }\n\n    return (\n      <Option key={codec} value={codec}>\n        {title}\n      </Option>\n    );\n  });\n\n  let description = '';\n  if (selectedCodec === 'libx264') {\n    description =\n      'libx264 is the default codec and generally the only working choice for shared VPS environments. This is likely what you should be using unless you know you have set up other options.';\n  } else if (selectedCodec === 'h264_nvenc') {\n    description =\n      'You can use your NVIDIA GPU for encoding if you have a modern NVIDIA card with encoding cores.';\n  } else if (selectedCodec === 'h264_vaapi') {\n    description =\n      'VA-API may be supported by your NVIDIA proprietary drivers, Mesa open-source drivers for AMD or Intel graphics.';\n  } else if (selectedCodec === 'h264_qsv') {\n    description =\n      \"Quick Sync Video is Intel's brand for its dedicated video encoding and decoding hardware. It may be an option if you have a modern Intel CPU with integrated graphics.\";\n  } else if (selectedCodec === 'h264_v4l2m2m') {\n    description =\n      'Video4Linux is an interface to multiple different hardware encoding platforms such as Intel and AMD.';\n  } else if (selectedCodec === 'h264_omx') {\n    description = 'OpenMax is a codec most often used with a Raspberry Pi.';\n  } else if (selectedCodec === 'h264_videotoolbox') {\n    description =\n      'Apple VideoToolbox is a low-level framework that provides direct access to hardware encoders and decoders.';\n  }\n\n  return (\n    <>\n      <Title level={3} className=\"section-title\">\n        Video Codec\n      </Title>\n      <div className=\"description\">\n        If you have access to specific hardware with the drivers and software installed for them,\n        you may be able to improve your video encoding performance.\n        <p>\n          <a\n            href=\"https://owncast.online/docs/codecs?source=admin\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Read the documentation about this setting before changing it or you may make your stream\n            unplayable.\n          </a>\n        </p>\n      </div>\n      <div className=\"segment-slider-container\">\n        <Popconfirm\n          title={`Are you sure you want to change your video codec to ${pendingSaveCodec} and understand what this means?`}\n          open={confirmPopupOpen}\n          placement=\"leftBottom\"\n          onConfirm={save}\n          onCancel={() => setConfirmPopupOpen(false)}\n          okText=\"Yes\"\n          cancelText=\"No\"\n        >\n          <Select\n            defaultValue={selectedCodec}\n            value={selectedCodec}\n            style={{ width: '100%' }}\n            onChange={handleChange}\n          >\n            {items}\n          </Select>\n        </Popconfirm>\n        <FormStatusIndicator status={submitStatus} />\n\n        <p id=\"selected-codec-note\" className=\"selected-value-note\">\n          {description}\n        </p>\n      </div>\n    </>\n  );\n};\n","import React, { useContext, useState, useEffect, FC } from 'react';\nimport { Typography, Slider } from 'antd';\nimport { ServerStatusContext } from '../../utils/server-status-context';\nimport { AlertMessageContext } from '../../utils/alert-message-context';\nimport {\n  API_VIDEO_SEGMENTS,\n  RESET_TIMEOUT,\n  postConfigUpdateToAPI,\n} from '../../utils/config-constants';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n} from '../../utils/input-statuses';\nimport { FormStatusIndicator } from './FormStatusIndicator';\n\nconst { Title } = Typography;\n\nconst SLIDER_MARKS = {\n  0: 'Lowest',\n  1: '',\n  2: '',\n  3: '',\n  4: 'Highest',\n};\n\nconst SLIDER_COMMENTS = {\n  0: 'Lowest latency, lowest error tolerance (Not recommended, may not work for all content/configurations.)',\n  1: 'Low latency, low error tolerance',\n  2: 'Medium latency, medium error tolerance (Default)',\n  3: 'High latency, high error tolerance',\n  4: 'Highest latency, highest error tolerance',\n};\n\nexport const VideoLatency: FC = () => {\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n  const [selectedOption, setSelectedOption] = useState(null);\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { setMessage } = useContext(AlertMessageContext);\n  const { serverConfig, setFieldInConfigState } = serverStatusData || {};\n  const { videoSettings } = serverConfig || {};\n\n  let resetTimer = null;\n\n  if (!videoSettings) {\n    return null;\n  }\n\n  useEffect(() => {\n    setSelectedOption(videoSettings.latencyLevel);\n  }, [videoSettings]);\n\n  const resetStates = () => {\n    setSubmitStatus(null);\n    resetTimer = null;\n    clearTimeout(resetTimer);\n  };\n\n  // posts all the variants at once as an array obj\n  const postUpdateToAPI = async (postValue: any) => {\n    setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n\n    await postConfigUpdateToAPI({\n      apiPath: API_VIDEO_SEGMENTS,\n      data: { value: postValue },\n      onSuccess: () => {\n        setFieldInConfigState({\n          fieldName: 'latencyLevel',\n          value: postValue,\n          path: 'videoSettings',\n        });\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS, 'Latency buffer level updated.'));\n\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n        if (serverStatusData.online) {\n          setMessage(\n            'Your latency buffer setting will take effect the next time you begin a live stream.',\n          );\n        }\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, message));\n\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n    });\n  };\n\n  const handleChange = value => {\n    postUpdateToAPI(value);\n  };\n\n  return (\n    <div className=\"config-video-latency-container\">\n      <Title level={3} className=\"section-title\">\n        Latency Buffer\n      </Title>\n      <p className=\"description\">\n        While it&apos;s natural to want to keep your latency as low as possible, you may experience\n        reduced error tolerance and stability the lower you go. The lowest setting is not\n        recommended.\n      </p>\n      <p className=\"description\">\n        For interactive live streams you may want to experiment with a lower latency, for\n        non-interactive broadcasts you may want to increase it.{' '}\n        <a\n          href=\"https://owncast.online/docs/encoding#latency-buffer?source=admin\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Read to learn more.\n        </a>\n      </p>\n\n      <div className=\"segment-slider-container\">\n        <Slider\n          tipFormatter={value => SLIDER_COMMENTS[value]}\n          onChange={handleChange}\n          min={0}\n          max={4}\n          marks={SLIDER_MARKS}\n          defaultValue={selectedOption}\n          value={selectedOption}\n        />\n        <p className=\"selected-value-note\">{SLIDER_COMMENTS[selectedOption]}</p>\n        <FormStatusIndicator status={submitStatus} />\n      </div>\n    </div>\n  );\n};\n","// This content populates the video variant modal, which is spawned from the variants table. This relies on the `dataState` prop fed in by the table.\nimport React, { FC } from 'react';\nimport { Popconfirm, Row, Col, Slider, Collapse, Typography, Alert, Button } from 'antd';\nimport { ExclamationCircleFilled } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport { FieldUpdaterFunc, VideoVariant, UpdateArgs } from '../../types/config-section';\nimport { TextField } from './TextField';\nimport {\n  DEFAULT_VARIANT_STATE,\n  VIDEO_VARIANT_SETTING_DEFAULTS,\n  VIDEO_NAME_DEFAULTS,\n  ENCODER_PRESET_SLIDER_MARKS,\n  ENCODER_PRESET_TOOLTIPS,\n  VIDEO_BITRATE_DEFAULTS,\n  VIDEO_BITRATE_SLIDER_MARKS,\n  FRAMERATE_SLIDER_MARKS,\n  FRAMERATE_DEFAULTS,\n  FRAMERATE_TOOLTIPS,\n} from '../../utils/config-constants';\nimport { ToggleSwitch } from './ToggleSwitch';\n\nconst { Panel } = Collapse;\n\nexport type VideoVariantFormProps = {\n  dataState: VideoVariant;\n  onUpdateField: FieldUpdaterFunc;\n};\n\nexport const VideoVariantForm: FC<VideoVariantFormProps> = ({\n  dataState = DEFAULT_VARIANT_STATE,\n  onUpdateField,\n}) => {\n  const videoPassthroughEnabled = dataState.videoPassthrough;\n\n  const handleFramerateChange = (value: number) => {\n    onUpdateField({ fieldName: 'framerate', value });\n  };\n  const handleVideoBitrateChange = (value: number) => {\n    onUpdateField({ fieldName: 'videoBitrate', value });\n  };\n  const handleVideoCpuUsageLevelChange = (value: number) => {\n    onUpdateField({ fieldName: 'cpuUsageLevel', value });\n  };\n  const handleScaledWidthChanged = (args: UpdateArgs) => {\n    const value = Number(args.value);\n    // eslint-disable-next-line no-restricted-globals\n    if (isNaN(value)) {\n      return;\n    }\n    onUpdateField({ fieldName: 'scaledWidth', value: value || 0 });\n  };\n  const handleScaledHeightChanged = (args: UpdateArgs) => {\n    const value = Number(args.value);\n    // eslint-disable-next-line no-restricted-globals\n    if (isNaN(value)) {\n      return;\n    }\n    onUpdateField({ fieldName: 'scaledHeight', value: value || 0 });\n  };\n\n  // Video passthrough handling\n  const handleVideoPassConfirm = () => {\n    onUpdateField({ fieldName: 'videoPassthrough', value: true });\n  };\n  // If passthrough is currently on, set it back to false on toggle.\n  // Else let the Popconfirm turn it on.\n  const handleVideoPassthroughToggle = (value: boolean) => {\n    if (videoPassthroughEnabled) {\n      onUpdateField({ fieldName: 'videoPassthrough', value });\n    }\n  };\n\n  const handleNameChanged = (args: UpdateArgs) => {\n    onUpdateField({ fieldName: 'name', value: args.value });\n  };\n\n  // Slider notes\n  const selectedVideoBRnote = () => {\n    if (videoPassthroughEnabled) {\n      return 'Bitrate selection is disabled when Video Passthrough is enabled.';\n    }\n    let note = `${dataState.videoBitrate}${VIDEO_BITRATE_DEFAULTS.unit}`;\n    if (dataState.videoBitrate < 2000) {\n      note = `${note} - Good for low bandwidth environments.`;\n    } else if (dataState.videoBitrate < 3500) {\n      note = `${note} - Good for most bandwidth environments.`;\n    } else {\n      note = `${note} - Good for high bandwidth environments.`;\n    }\n    return note;\n  };\n  const selectedFramerateNote = () => {\n    if (videoPassthroughEnabled) {\n      return 'Framerate selection is disabled when Video Passthrough is enabled.';\n    }\n    return FRAMERATE_TOOLTIPS[dataState.framerate] || '';\n  };\n  const cpuUsageNote = () => {\n    if (videoPassthroughEnabled) {\n      return 'CPU usage selection is disabled when Video Passthrough is enabled.';\n    }\n    return ENCODER_PRESET_TOOLTIPS[dataState.cpuUsageLevel] || '';\n  };\n\n  const classes = classNames({\n    'config-variant-form': true,\n    'video-passthrough-enabled': videoPassthroughEnabled,\n  });\n  return (\n    <div className={classes}>\n      <div className=\"video-varient-alert\">\n        <Alert\n          type=\"info\"\n          action={\n            <a\n              href=\"https://owncast.online/docs/video?source=admin\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              <div className=\"video-varient-alert-button-container\">\n                <Button size=\"small\" type=\"text\" icon={<ExclamationCircleFilled />}>\n                  Read more about how each of these settings can impact the performance of your\n                  server.\n                </Button>\n              </div>\n            </a>\n          }\n        />\n      </div>\n      {videoPassthroughEnabled && (\n        <p className=\"passthrough-warning\">\n          NOTE: Video Passthrough for this output stream variant is <em>enabled</em>, disabling the\n          below video encoding settings.\n        </p>\n      )}\n\n      <Row gutter={16}>\n        <Col xs={24} lg={{ span: 24, pull: 3 }} className=\"video-text-field-container\">\n          <TextField\n            maxLength=\"10\"\n            {...VIDEO_NAME_DEFAULTS}\n            value={dataState.name}\n            onChange={handleNameChanged}\n          />\n        </Col>\n        <Col sm={24} md={12}>\n          <div className=\"form-module cpu-usage-container\">\n            <Typography.Title level={3}>CPU or GPU Utilization</Typography.Title>\n            <p className=\"description\">\n              Reduce to improve server performance, or increase it to improve video quality.\n            </p>\n            <div className=\"segment-slider-container\">\n              <Slider\n                tipFormatter={value => ENCODER_PRESET_TOOLTIPS[value]}\n                onChange={handleVideoCpuUsageLevelChange}\n                min={1}\n                max={Object.keys(ENCODER_PRESET_SLIDER_MARKS).length}\n                marks={ENCODER_PRESET_SLIDER_MARKS}\n                defaultValue={dataState.cpuUsageLevel}\n                value={dataState.cpuUsageLevel}\n                disabled={dataState.videoPassthrough}\n              />\n              <p className=\"selected-value-note\">{cpuUsageNote()}</p>\n            </div>\n            <p className=\"read-more-subtext\">\n              This could mean GPU or CPU usage depending on your server environment.\n              <br />\n              <br />\n              <a\n                href=\"https://owncast.online/docs/video/?source=admin#cpu-usage\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Read more about hardware performance.\n              </a>\n            </p>\n          </div>\n        </Col>\n        <Col sm={24} md={11} offset={1}>\n          {/* VIDEO BITRATE FIELD */}\n          <div\n            className={`form-module bitrate-container ${\n              dataState.videoPassthrough ? 'disabled' : ''\n            }`}\n          >\n            <Typography.Title level={3}>Video Bitrate</Typography.Title>\n            <p className=\"description\">{VIDEO_BITRATE_DEFAULTS.tip}</p>\n            <div className=\"segment-slider-container\">\n              <Slider\n                tipFormatter={value => `${value} ${VIDEO_BITRATE_DEFAULTS.unit}`}\n                disabled={dataState.videoPassthrough}\n                defaultValue={dataState.videoBitrate}\n                value={dataState.videoBitrate}\n                onChange={handleVideoBitrateChange}\n                step={VIDEO_BITRATE_DEFAULTS.incrementBy}\n                min={VIDEO_BITRATE_DEFAULTS.min}\n                max={VIDEO_BITRATE_DEFAULTS.max}\n                marks={VIDEO_BITRATE_SLIDER_MARKS}\n              />\n              <p className=\"selected-value-note\">{selectedVideoBRnote()}</p>\n            </div>\n            <p className=\"read-more-subtext\">\n              <a\n                href=\"https://owncast.online/docs/video/?source=admin\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Read more about bitrates.\n              </a>\n            </p>\n          </div>\n        </Col>\n      </Row>\n      <Collapse className=\"advanced-settings\">\n        <Panel header=\"Advanced Settings\" key=\"1\">\n          <Row gutter={16}>\n            <Col sm={24} md={12}>\n              <div className=\"form-module resolution-module\">\n                <Typography.Title level={3}>Resolution</Typography.Title>\n                <p className=\"description\">\n                  Resizing your content will take additional resources on your server. If you wish\n                  to optionally resize your content for this stream output then you should either\n                  set the width <strong>or</strong> the height to keep your aspect ratio. <br />\n                  <br />\n                  <a\n                    href=\"https://owncast.online/docs/video/?source=admin\"\n                    target=\"_blank\"\n                    rel=\"noopener noreferrer\"\n                  >\n                    Read more about resolutions.\n                  </a>\n                </p>\n                <br />\n                <TextField\n                  type=\"number\"\n                  {...VIDEO_VARIANT_SETTING_DEFAULTS.scaledWidth}\n                  value={dataState.scaledWidth}\n                  onChange={handleScaledWidthChanged}\n                  disabled={dataState.videoPassthrough}\n                />\n                <TextField\n                  type=\"number\"\n                  {...VIDEO_VARIANT_SETTING_DEFAULTS.scaledHeight}\n                  value={dataState.scaledHeight}\n                  onChange={handleScaledHeightChanged}\n                  disabled={dataState.videoPassthrough}\n                />\n              </div>\n            </Col>\n            <Col sm={24} md={12}>\n              {/* VIDEO PASSTHROUGH FIELD */}\n              <div className=\"form-module video-passthrough-module\">\n                <Typography.Title level={3}>Video Passthrough</Typography.Title>\n                <div className=\"description\">\n                  <p>\n                    Enabling video passthrough may allow for less hardware utilization, but may also\n                    make your stream <strong>unplayable</strong>.\n                  </p>\n                  <p>\n                    All other settings for this stream output will be disabled if passthrough is\n                    used.\n                  </p>\n                  <p>\n                    <a\n                      href=\"https://owncast.online/docs/video/?source=admin#video-passthrough\"\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Read the documentation before enabling, as it impacts your stream.\n                    </a>\n                  </p>\n                </div>\n                <div className=\"advanced-switch-container\">\n                  <Popconfirm\n                    disabled={dataState.videoPassthrough === true}\n                    title=\"Did you read the documentation about video passthrough and understand the risks involved with enabling it?\"\n                    icon={<ExclamationCircleFilled />}\n                    onConfirm={handleVideoPassConfirm}\n                    okText=\"Yes\"\n                    cancelText=\"No\"\n                  >\n                    {/* adding an <a> tag to force Popcofirm to register click on toggle */}\n                    {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n                    <a href=\"#\">\n                      <div className=\"advanced-description-switch-container\">\n                        <div className=\"advanced-description-wrapper\">\n                          <p>Use Video Passthrough?</p>\n                        </div>\n                        <ToggleSwitch\n                          label=\"\"\n                          fieldName=\"video-passthrough\"\n                          checked={dataState.videoPassthrough}\n                          onChange={handleVideoPassthroughToggle}\n                        />\n                      </div>\n                    </a>\n                    <p>*{VIDEO_VARIANT_SETTING_DEFAULTS.videoPassthrough.tip}</p>\n                  </Popconfirm>\n                </div>\n              </div>\n            </Col>\n          </Row>\n\n          {/* FRAME RATE FIELD */}\n          <div className=\"form-module frame-rate-module\">\n            <Typography.Title level={3}>Frame rate</Typography.Title>\n            <p className=\"description\">{FRAMERATE_DEFAULTS.tip}</p>\n            <div className=\"segment-slider-container\">\n              <Slider\n                tipFormatter={value => `${value} ${FRAMERATE_DEFAULTS.unit}`}\n                defaultValue={dataState.framerate}\n                value={dataState.framerate}\n                onChange={handleFramerateChange}\n                step={FRAMERATE_DEFAULTS.incrementBy}\n                min={FRAMERATE_DEFAULTS.min}\n                max={FRAMERATE_DEFAULTS.max}\n                marks={FRAMERATE_SLIDER_MARKS}\n                disabled={dataState.videoPassthrough}\n              />\n              <p className=\"selected-value-note\">{selectedFramerateNote()}</p>\n            </div>\n            <p className=\"read-more-subtext\">\n              <a\n                href=\"https://owncast.online/docs/video/?source=admin#framerate\"\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n              >\n                Read more about framerates.\n              </a>\n            </p>\n          </div>\n        </Panel>\n      </Collapse>\n    </div>\n  );\n};\n","// Updating a variant will post ALL the variants in an array as an update to the API.\n\nimport React, { FC, useContext, useState } from 'react';\nimport { Typography, Table, Modal, Button, Alert } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { ServerStatusContext } from '../../utils/server-status-context';\nimport { AlertMessageContext } from '../../utils/alert-message-context';\nimport { UpdateArgs, VideoVariant } from '../../types/config-section';\n\nimport { VideoVariantForm } from './VideoVariantForm';\nimport {\n  API_VIDEO_VARIANTS,\n  DEFAULT_VARIANT_STATE,\n  RESET_TIMEOUT,\n  postConfigUpdateToAPI,\n  ENCODER_PRESET_TOOLTIPS,\n  ENCODER_RECOMMENDATION_THRESHOLD,\n} from '../../utils/config-constants';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n} from '../../utils/input-statuses';\nimport { FormStatusIndicator } from './FormStatusIndicator';\n\nconst { Title } = Typography;\n\nexport const CurrentVariantsTable: FC = () => {\n  const [displayModal, setDisplayModal] = useState(false);\n  const [modalProcessing, setModalProcessing] = useState(false);\n  const [editId, setEditId] = useState(0);\n  const { setMessage } = useContext(AlertMessageContext);\n\n  // current data inside modal\n  const [modalDataState, setModalDataState] = useState(DEFAULT_VARIANT_STATE);\n\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig, setFieldInConfigState } = serverStatusData || {};\n  const { videoSettings } = serverConfig || {};\n  const { videoQualityVariants } = videoSettings || {};\n\n  let resetTimer = null;\n\n  if (!videoSettings) {\n    return null;\n  }\n\n  const resetStates = () => {\n    setSubmitStatus(null);\n    resetTimer = null;\n    clearTimeout(resetTimer);\n  };\n\n  const handleModalCancel = () => {\n    setDisplayModal(false);\n    setEditId(-1);\n    setModalDataState(DEFAULT_VARIANT_STATE);\n  };\n\n  // posts all the variants at once as an array obj\n  const postUpdateToAPI = async (postValue: any) => {\n    setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n\n    await postConfigUpdateToAPI({\n      apiPath: API_VIDEO_VARIANTS,\n      data: { value: postValue },\n      onSuccess: () => {\n        setFieldInConfigState({\n          fieldName: 'videoQualityVariants',\n          value: postValue,\n          path: 'videoSettings',\n        });\n\n        // close modal\n        setModalProcessing(false);\n        handleModalCancel();\n\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS, 'Variants updated'));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n\n        if (serverStatusData.online) {\n          setMessage(\n            'Updating your video configuration will take effect the next time you begin a new stream.',\n          );\n        }\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, message));\n        setModalProcessing(false);\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n    });\n  };\n\n  // on Ok, send all of dataState to api\n  // show loading\n  // close modal when api is done\n  const handleModalOk = () => {\n    setModalProcessing(true);\n\n    const postData = [...videoQualityVariants];\n    if (editId === -1) {\n      postData.push(modalDataState);\n    } else {\n      postData.splice(editId, 1, modalDataState);\n    }\n    postUpdateToAPI(postData);\n  };\n\n  const handleDeleteVariant = (index: number) => {\n    const postData = [...videoQualityVariants];\n    postData.splice(index, 1);\n    postUpdateToAPI(postData);\n  };\n\n  const handleUpdateField = ({ fieldName, value }: UpdateArgs) => {\n    setModalDataState({\n      ...modalDataState,\n      [fieldName]: value,\n    });\n  };\n\n  const videoQualityColumns: ColumnsType<VideoVariant> = [\n    {\n      title: 'Name',\n      dataIndex: 'name',\n      render: (name: string) => (!name ? 'No name' : name),\n    },\n    {\n      title: 'Video bitrate',\n      dataIndex: 'videoBitrate',\n      key: 'videoBitrate',\n      render: (bitrate: number, variant: VideoVariant) =>\n        !bitrate || variant.videoPassthrough ? 'Same as source' : `${bitrate} kbps`,\n    },\n\n    {\n      title: 'CPU Usage',\n      dataIndex: 'cpuUsageLevel',\n      key: 'cpuUsageLevel',\n      render: (level: string, variant: VideoVariant) =>\n        !level || variant.videoPassthrough ? 'n/a' : ENCODER_PRESET_TOOLTIPS[level].split(' ')[0],\n    },\n    {\n      title: '',\n      dataIndex: '',\n      key: 'edit',\n      render: ({ key }: VideoVariant) => {\n        const index = key - 1;\n        return (\n          <span className=\"actions\">\n            <Button\n              size=\"small\"\n              onClick={() => {\n                setEditId(index);\n                setModalDataState(videoQualityVariants[index]);\n                setDisplayModal(true);\n              }}\n            >\n              Edit\n            </Button>\n            <Button\n              className=\"delete-button\"\n              icon={<DeleteOutlined />}\n              size=\"small\"\n              disabled={videoQualityVariants.length === 1}\n              onClick={() => {\n                handleDeleteVariant(index);\n              }}\n            />\n          </span>\n        );\n      },\n    },\n  ];\n\n  const videoQualityVariantData = videoQualityVariants.map((variant, index) => ({\n    key: index + 1,\n    ...variant,\n  }));\n\n  const showSecondVariantRecommendation = (): boolean => {\n    if (videoQualityVariants.length !== 1) {\n      return false;\n    }\n\n    const [variant] = videoQualityVariants;\n\n    return (\n      ENCODER_RECOMMENDATION_THRESHOLD.VIDEO_HEIGHT <= variant.scaledHeight ||\n      ENCODER_RECOMMENDATION_THRESHOLD.VIDEO_BITRATE <= variant.videoBitrate\n    );\n  };\n\n  return (\n    <>\n      <Title level={3} className=\"section-title\">\n        Stream output\n      </Title>\n\n      {showSecondVariantRecommendation() && (\n        <Alert message={ENCODER_RECOMMENDATION_THRESHOLD.HELP_TEXT} type=\"info\" closable />\n      )}\n\n      <FormStatusIndicator status={submitStatus} />\n\n      <Table\n        className=\"variants-table\"\n        pagination={false}\n        size=\"small\"\n        columns={videoQualityColumns}\n        dataSource={videoQualityVariantData}\n      />\n\n      <Modal\n        title=\"Edit Video Variant Details\"\n        open={displayModal}\n        onOk={handleModalOk}\n        onCancel={handleModalCancel}\n        confirmLoading={modalProcessing}\n        width={900}\n      >\n        <VideoVariantForm dataState={{ ...modalDataState }} onUpdateField={handleUpdateField} />\n\n        <FormStatusIndicator status={submitStatus} />\n      </Modal>\n      <br />\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          setEditId(-1);\n          setModalDataState(DEFAULT_VARIANT_STATE);\n          setDisplayModal(true);\n        }}\n      >\n        Add a new variant\n      </Button>\n    </>\n  );\n};\n","import { Col, Collapse, Row, Typography } from 'antd';\nimport React from 'react';\nimport { CodecSelector as VideoCodecSelector } from '../../components/config/CodecSelector';\nimport { VideoLatency } from '../../components/config/VideoLatency';\nimport { CurrentVariantsTable } from '../../components/config/CurrentVariantsTable';\n\nconst { Panel } = Collapse;\nconst { Title } = Typography;\n\nexport default function ConfigVideoSettings() {\n  return (\n    <div className=\"config-video-variants\">\n      <Title>Video configuration</Title>\n      <p className=\"description\">\n        Before changing your video configuration{' '}\n        <a\n          href=\"https://owncast.online/docs/video?source=admin\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          visit the video documentation\n        </a>{' '}\n        to learn how it impacts your stream performance. The general rule is to start conservatively\n        by having one middle quality stream output variant and experiment with adding more of varied\n        qualities.\n      </p>\n\n      <Row gutter={[16, 16]}>\n        <Col md={24} lg={12}>\n          <div className=\"form-module variants-table-module\">\n            <CurrentVariantsTable />\n          </div>\n        </Col>\n        <Col md={24} lg={12}>\n          <div className=\"form-module latency-module\">\n            <VideoLatency />\n          </div>\n\n          <Collapse className=\"advanced-settings codec-module\">\n            <Panel header=\"Advanced Settings\" key=\"1\">\n              <div className=\"form-module variants-table-module\">\n                <VideoCodecSelector />\n              </div>\n            </Panel>\n          </Collapse>\n        </Col>\n      </Row>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nexport const AlertMessageContext = React.createContext({\n  message: null,\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setMessage: (text?: string) => null,\n});\n\nconst AlertMessageProvider = ({ children }) => {\n  const [message, setMessage] = useState('');\n\n  const providerValue = {\n    message,\n    setMessage,\n  };\n  return (\n    <AlertMessageContext.Provider value={providerValue}>{children}</AlertMessageContext.Provider>\n  );\n};\n\nAlertMessageProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default AlertMessageProvider;\n","import {\n  CheckCircleFilled,\n  ExclamationCircleFilled,\n  LoadingOutlined,\n  WarningOutlined,\n} from '@ant-design/icons';\n\nexport const STATUS_RESET_TIMEOUT = 3000;\n\nexport const STATUS_ERROR = 'error';\nexport const STATUS_INVALID = 'invalid';\nexport const STATUS_PROCESSING = 'proessing';\nexport const STATUS_SUCCESS = 'success';\nexport const STATUS_WARNING = 'warning';\n\nexport type InputStatusTypes = 'error' | 'invalid' | 'proessing' | 'success' | 'warning';\n\nexport interface StatusState {\n  type: InputStatusTypes;\n  icon: any; // Element type of sorts?\n  message: string;\n}\ninterface InputStates {\n  [key: string]: StatusState;\n}\n\nexport const INPUT_STATES: InputStates = {\n  [STATUS_SUCCESS]: {\n    type: STATUS_SUCCESS,\n    icon: <CheckCircleFilled style={{ color: 'green' }} />,\n    message: 'Success!',\n  },\n  [STATUS_ERROR]: {\n    type: STATUS_ERROR,\n    icon: <ExclamationCircleFilled style={{ color: 'red' }} />,\n    message: 'An error occurred.',\n  },\n  [STATUS_INVALID]: {\n    type: STATUS_INVALID,\n    icon: <ExclamationCircleFilled style={{ color: 'red' }} />,\n    message: 'An error occurred.',\n  },\n  [STATUS_PROCESSING]: {\n    type: STATUS_PROCESSING,\n    icon: <LoadingOutlined />,\n    message: '',\n  },\n  [STATUS_WARNING]: {\n    type: STATUS_WARNING,\n    icon: <WarningOutlined style={{ color: '#fc0' }} />,\n    message: '',\n  },\n};\n\n// Don't like any of the default messages in INPUT_STATES? Create a state with custom message by providing an icon style with your message.\nexport function createInputStatus(type: InputStatusTypes, message?: string): StatusState {\n  if (!type || !INPUT_STATES[type]) {\n    return null;\n  }\n  if (!message) {\n    return INPUT_STATES[type];\n  }\n  return {\n    type,\n    icon: INPUT_STATES[type].icon,\n    message,\n  };\n}\n","// TODO: add a notication after updating info that changes will take place either on a new stream or server restart. may be different for each field.\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { STATUS, fetchData, FETCH_INTERVAL, SERVER_CONFIG } from './apis';\nimport { ConfigDetails, UpdateArgs } from '../types/config-section';\nimport { DEFAULT_VARIANT_STATE } from './config-constants';\n\nexport const initialServerConfigState: ConfigDetails = {\n  streamKeys: [],\n  adminPassword: '',\n  instanceDetails: {\n    customStyles: '',\n    extraPageContent: '',\n    logo: '',\n    name: '',\n    nsfw: false,\n    socialHandles: [],\n    streamTitle: '',\n    summary: '',\n    tags: [],\n    title: '',\n    welcomeMessage: '',\n    offlineMessage: '',\n    appearanceVariables: {},\n  },\n  ffmpegPath: '',\n  rtmpServerPort: '',\n  webServerPort: '',\n  socketHostOverride: null,\n  s3: {\n    accessKey: '',\n    acl: '',\n    bucket: '',\n    enabled: false,\n    endpoint: '',\n    region: '',\n    secret: '',\n    servingEndpoint: '',\n    forcePathStyle: false,\n  },\n  yp: {\n    enabled: false,\n    instanceUrl: '',\n  },\n  videoSettings: {\n    latencyLevel: 4,\n    cpuUsageLevel: 3,\n    videoQualityVariants: [DEFAULT_VARIANT_STATE],\n  },\n  federation: {\n    enabled: false,\n    isPrivate: false,\n    username: '',\n    goLiveMessage: '',\n    showEngagement: true,\n    blockedDomains: [],\n  },\n  notifications: {\n    browser: { enabled: false, goLiveMessage: '' },\n    discord: { enabled: false, webhook: '', goLiveMessage: '' },\n    twitter: {\n      enabled: false,\n      goLiveMessage: '',\n      apiKey: '',\n      apiSecret: '',\n      accessToken: '',\n      accessTokenSecret: '',\n      bearerToken: '',\n    },\n  },\n  externalActions: [],\n  supportedCodecs: [],\n  videoCodec: '',\n  forbiddenUsernames: [],\n  suggestedUsernames: [],\n  chatDisabled: false,\n  chatJoinMessagesEnabled: true,\n  chatEstablishedUserMode: false,\n  hideViewerCount: false,\n};\n\nconst initialServerStatusState = {\n  broadcastActive: false,\n  broadcaster: null,\n  currentBroadcast: null,\n  online: false,\n  viewerCount: 0,\n  sessionMaxViewerCount: 0,\n  sessionPeakViewerCount: 0,\n  overallPeakViewerCount: 0,\n  versionNumber: '0.0.0',\n  streamTitle: '',\n  chatDisabled: false,\n  health: {\n    healthy: true,\n    healthPercentage: 100,\n    message: '',\n    representation: 0,\n  },\n};\n\nexport const ServerStatusContext = React.createContext({\n  ...initialServerStatusState,\n  serverConfig: initialServerConfigState,\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setFieldInConfigState: (args: UpdateArgs) => null,\n});\n\nconst ServerStatusProvider = ({ children }) => {\n  const [status, setStatus] = useState(initialServerStatusState);\n  const [config, setConfig] = useState(initialServerConfigState);\n\n  const getStatus = async () => {\n    try {\n      const result = await fetchData(STATUS);\n      setStatus({ ...result });\n    } catch (error) {\n      // todo\n    }\n  };\n  const getConfig = async () => {\n    try {\n      const result = await fetchData(SERVER_CONFIG);\n      setConfig(result);\n    } catch (error) {\n      // todo\n    }\n  };\n\n  const setFieldInConfigState = ({ fieldName, value, path }: UpdateArgs) => {\n    const updatedConfig = path\n      ? {\n          ...config,\n          [path]: {\n            ...config[path],\n            [fieldName]: value,\n          },\n        }\n      : {\n          ...config,\n          [fieldName]: value,\n        };\n    setConfig(updatedConfig);\n  };\n\n  useEffect(() => {\n    let getStatusIntervalId = null;\n\n    getStatus();\n    getStatusIntervalId = setInterval(getStatus, FETCH_INTERVAL);\n\n    getConfig();\n\n    // returned function will be called on component unmount\n    return () => {\n      clearInterval(getStatusIntervalId);\n    };\n  }, []);\n\n  // eslint-disable-next-line react/jsx-no-constructed-context-values\n  const providerValue = {\n    ...status,\n    serverConfig: config,\n\n    setFieldInConfigState,\n  };\n  return (\n    <ServerStatusContext.Provider value={providerValue}>{children}</ServerStatusContext.Provider>\n  );\n};\n\nServerStatusProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default ServerStatusProvider;\n"],"names":["window","__NEXT_P","push","__webpack_require__","ToggleSwitch","apiPath","checked","reversed","configPath","disabled","fieldName","label","tip","useSubmit","onChange","param","submitStatus","setSubmitStatus","useState","resetTimer","serverStatusData","useContext","ServerStatusContext","setFieldInConfigState","resetStates","clearTimeout","handleChange","isChecked","createInputStatus","STATUS_PROCESSING","isCheckedSend","postConfigUpdateToAPI","data","value","onSuccess","path","STATUS_SUCCESS","onError","STATUS_ERROR","concat","message","setTimeout","RESET_TIMEOUT","loading","type","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","jsx","span","Switch","defaultChecked","checkedChildren","unCheckedChildren","FormStatusIndicator","status","p","defaultProps","CodecSelector","serverConfig","videoCodec","supportedCodecs","Title","Typography","Option","Select","setMessage","AlertMessageContext","selectedCodec","setSelectedCodec","pendingSaveCodec","setPendingSavecodec","confirmPopupOpen","setConfirmPopupOpen","React","useEffect","save","API_VIDEO_CODEC","online","items","map","codec","title","jsx_runtime","description","Fragment","level","a","href","target","rel","Popconfirm","open","placement","onConfirm","onCancel","okText","cancelText","defaultValue","style","width","id","SLIDER_MARKS","SLIDER_COMMENTS","VideoLatency","selectedOption","setSelectedOption","videoSettings","latencyLevel","postUpdateToAPI","postValue","API_VIDEO_SEGMENTS","Slider","tipFormatter","min","max","marks","Panel","Collapse","VideoVariantForm","dataState","DEFAULT_VARIANT_STATE","onUpdateField","videoPassthroughEnabled","videoPassthrough","handleFramerateChange","handleVideoBitrateChange","handleVideoCpuUsageLevelChange","handleScaledWidthChanged","Number","args","isNaN","handleScaledHeightChanged","handleVideoPassConfirm","handleVideoPassthroughToggle","handleNameChanged","classes","classNames","Alert","action","Button","size","icon","ExclamationCircleFilled","em","Row","gutter","Col","xs","lg","pull","TextField","maxLength","VIDEO_NAME_DEFAULTS","name","sm","md","ENCODER_PRESET_TOOLTIPS","Object","keys","ENCODER_PRESET_SLIDER_MARKS","length","cpuUsageLevel","br","offset","VIDEO_BITRATE_DEFAULTS","videoBitrate","step","VIDEO_BITRATE_SLIDER_MARKS","selectedVideoBRnote","note","header","strong","VIDEO_VARIANT_SETTING_DEFAULTS","scaledWidth","scaledHeight","FRAMERATE_DEFAULTS","framerate","FRAMERATE_SLIDER_MARKS","FRAMERATE_TOOLTIPS","CurrentVariantsTable","displayModal","setDisplayModal","modalProcessing","setModalProcessing","editId","setEditId","modalDataState","setModalDataState","videoQualityVariants","handleModalCancel","API_VIDEO_VARIANTS","handleModalOk","postData","splice","handleDeleteVariant","index","handleUpdateField","videoQualityVariantData","variant","key","showSecondVariantRecommendation","ENCODER_RECOMMENDATION_THRESHOLD","closable","Table","pagination","columns","dataIndex","render","bitrate","split","onClick","DeleteOutlined","dataSource","Modal","onOk","confirmLoading","ConfigVideoSettings","VideoCodecSelector","AlertMessageProvider","children","Provider","propTypes","PropTypes","__webpack_exports__","STATUS_INVALID","STATUS_WARNING","INPUT_STATES","CheckCircleFilled","color","LoadingOutlined","WarningOutlined","initialServerConfigState","streamKeys","adminPassword","instanceDetails","customStyles","extraPageContent","logo","nsfw","socialHandles","streamTitle","summary","tags","welcomeMessage","offlineMessage","appearanceVariables","ffmpegPath","rtmpServerPort","webServerPort","socketHostOverride","s3","accessKey","acl","bucket","enabled","endpoint","region","secret","servingEndpoint","forcePathStyle","yp","instanceUrl","federation","isPrivate","username","goLiveMessage","showEngagement","blockedDomains","notifications","browser","discord","webhook","twitter","apiKey","apiSecret","accessToken","accessTokenSecret","bearerToken","externalActions","forbiddenUsernames","suggestedUsernames","chatDisabled","chatJoinMessagesEnabled","chatEstablishedUserMode","hideViewerCount","initialServerStatusState","broadcastActive","broadcaster","currentBroadcast","viewerCount","sessionMaxViewerCount","sessionPeakViewerCount","overallPeakViewerCount","versionNumber","health","healthy","healthPercentage","representation","ServerStatusProvider","setStatus","config","setConfig","getStatus","result","fetchData","STATUS","error","getConfig","SERVER_CONFIG","updatedConfig","getStatusIntervalId","setInterval","FETCH_INTERVAL","clearInterval","providerValue"],"sourceRoot":""}