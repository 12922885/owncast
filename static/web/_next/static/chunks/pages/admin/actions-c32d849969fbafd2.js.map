{"version":3,"file":"static/chunks/pages/admin/actions-c32d849969fbafd2.js","mappings":"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","sources":["webpack://_N_E/?0727","webpack://_N_E/./pages/admin/actions.tsx","webpack://_N_E/./utils/input-statuses.tsx","webpack://_N_E/./utils/server-status-context.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/actions\",\n      function () {\n        return require(\"private-next-pages/admin/actions.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin/actions\"])\n      });\n    }\n  ","import { DeleteOutlined, EditOutlined } from '@ant-design/icons';\nimport { Button, Checkbox, Form, Input, Modal, Space, Table, Typography } from 'antd';\nimport _ from 'lodash';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { FormStatusIndicator } from '../../components/admin/FormStatusIndicator';\nimport { ExternalAction } from '../../interfaces/external-action';\nimport {\n  API_EXTERNAL_ACTIONS,\n  postConfigUpdateToAPI,\n  RESET_TIMEOUT,\n} from '../../utils/config-constants';\nimport { createInputStatus, STATUS_ERROR, STATUS_SUCCESS } from '../../utils/input-statuses';\nimport { ServerStatusContext } from '../../utils/server-status-context';\nimport { isValidUrl, DEFAULT_TEXTFIELD_URL_PATTERN } from '../../utils/urls';\n\nconst { Title, Paragraph } = Typography;\nlet resetTimer = null;\n\ninterface Props {\n  onCancel: () => void;\n  onOk: (\n    oldAction: ExternalAction | null,\n    actionUrl: string,\n    actionTitle: string,\n    actionDescription: string,\n    actionIcon: string,\n    actionColor: string,\n    openExternally: boolean,\n  ) => void;\n  open: boolean;\n  action: ExternalAction | null;\n}\n\nconst ActionModal = (props: Props) => {\n  const { onOk, onCancel, open, action } = props;\n\n  const [actionUrl, setActionUrl] = useState('');\n  const [actionTitle, setActionTitle] = useState('');\n  const [actionDescription, setActionDescription] = useState('');\n  const [actionIcon, setActionIcon] = useState('');\n  const [actionColor, setActionColor] = useState('');\n  const [openExternally, setOpenExternally] = useState(false);\n\n  useEffect(() => {\n    setActionUrl(action?.url || '');\n    setActionTitle(action?.title || '');\n    setActionDescription(action?.description || '');\n    setActionIcon(action?.icon || '');\n    setActionColor(action?.color || '');\n    setOpenExternally(action?.openExternally || false);\n  }, [action]);\n\n  function save() {\n    onOk(\n      action,\n      actionUrl,\n      actionTitle,\n      actionDescription,\n      actionIcon,\n      actionColor,\n      openExternally,\n    );\n    setActionUrl('');\n    setActionTitle('');\n    setActionDescription('');\n    setActionIcon('');\n    setActionColor('');\n    setOpenExternally(false);\n  }\n\n  function canSave(): Boolean {\n    return isValidUrl(actionUrl, ['https:']) && actionTitle !== '';\n  }\n\n  const okButtonProps = {\n    disabled: !canSave(),\n  };\n\n  const onOpenExternallyChanged = checkbox => {\n    setOpenExternally(checkbox.target.checked);\n  };\n\n  return (\n    <Modal\n      destroyOnClose\n      title={action == null ? 'Create New Action' : 'Edit Action'}\n      open={open}\n      onOk={save}\n      onCancel={onCancel}\n      okButtonProps={okButtonProps}\n    >\n      <Form initialValues={action}>\n        Add the URL for the external action you want to present.{' '}\n        <strong>Only HTTPS urls are supported.</strong>\n        <p>\n          <a\n            href=\"https://owncast.online/thirdparty/actions/\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Read more about external actions.\n          </a>\n        </p>\n        <Form.Item name=\"url\">\n          <Input\n            required\n            placeholder=\"https://myserver.com/action (required)\"\n            onChange={input => setActionUrl(input.currentTarget.value.trim())}\n            type=\"url\"\n            pattern={DEFAULT_TEXTFIELD_URL_PATTERN}\n          />\n        </Form.Item>\n        <Form.Item name=\"title\">\n          <Input\n            value={actionTitle}\n            required\n            placeholder=\"Your action title (required)\"\n            onChange={input => setActionTitle(input.currentTarget.value)}\n          />\n        </Form.Item>\n        <Form.Item name=\"description\">\n          <Input\n            value={actionDescription}\n            placeholder=\"Optional description\"\n            onChange={input => setActionDescription(input.currentTarget.value)}\n          />\n        </Form.Item>\n        <Form.Item name=\"icon\">\n          <Input\n            value={actionIcon}\n            placeholder=\"https://myserver.com/action/icon.png (optional)\"\n            onChange={input => setActionIcon(input.currentTarget.value)}\n          />\n        </Form.Item>\n        <div>\n          <Form.Item name=\"color\" style={{ marginBottom: '0px' }}>\n            <Input\n              type=\"color\"\n              value={actionColor}\n              onChange={input => setActionColor(input.currentTarget.value)}\n            />\n          </Form.Item>\n          Optional background color of the action button.\n        </div>\n        <Form.Item name=\"openExternally\">\n          <Checkbox\n            checked={openExternally}\n            defaultChecked={openExternally}\n            onChange={onOpenExternallyChanged}\n          >\n            Open in a new tab instead of within your page.\n          </Checkbox>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nconst Actions = () => {\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig, setFieldInConfigState } = serverStatusData || {};\n  const { externalActions } = serverConfig;\n  const [actions, setActions] = useState<ExternalAction[]>(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [submitStatus, setSubmitStatus] = useState(null);\n  const [editAction, setEditAction] = useState<ExternalAction>(null);\n\n  const resetStates = () => {\n    setSubmitStatus(null);\n    resetTimer = null;\n    clearTimeout(resetTimer);\n  };\n\n  useEffect(() => {\n    setActions(externalActions || []);\n  }, [externalActions]);\n\n  async function save(actionsData) {\n    await postConfigUpdateToAPI({\n      apiPath: API_EXTERNAL_ACTIONS,\n      data: { value: actionsData },\n      onSuccess: () => {\n        setFieldInConfigState({ fieldName: 'externalActions', value: actionsData, path: '' });\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS, 'Updated.'));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n      onError: (message: string) => {\n        console.log(message);\n        setSubmitStatus(createInputStatus(STATUS_ERROR, message));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n    });\n  }\n\n  async function handleDelete(action) {\n    const actionsData = [...actions];\n    const index = actions.findIndex(item => item.url === action.url);\n    actionsData.splice(index, 1);\n\n    try {\n      setActions(actionsData);\n      save(actionsData);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function handleSave(\n    oldAction: ExternalAction | null,\n    url: string,\n    title: string,\n    description: string,\n    icon: string,\n    color: string,\n    openExternally: boolean,\n  ) {\n    try {\n      const actionsData = [...actions];\n\n      const newAction: ExternalAction = {\n        url,\n        title,\n        description,\n        icon,\n        color,\n        openExternally,\n      };\n\n      // Replace old action if edited or append the new action\n      const index = oldAction ? actions.findIndex(item => _.isEqual(item, oldAction)) : -1;\n      if (index >= 0) {\n        actionsData[index] = newAction;\n      } else {\n        actionsData.push(newAction);\n      }\n\n      setActions(actionsData);\n      await save(actionsData);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  async function handleEdit(action: ExternalAction) {\n    setEditAction(action);\n    setIsModalOpen(true);\n  }\n\n  const showCreateModal = () => {\n    setEditAction(null);\n    setIsModalOpen(true);\n  };\n\n  const handleModalSaveButton = (\n    oldAction: ExternalAction | null,\n    actionUrl: string,\n    actionTitle: string,\n    actionDescription: string,\n    actionIcon: string,\n    actionColor: string,\n    openExternally: boolean,\n  ) => {\n    setIsModalOpen(false);\n    handleSave(\n      oldAction,\n      actionUrl,\n      actionTitle,\n      actionDescription,\n      actionIcon,\n      actionColor,\n      openExternally,\n    );\n    setEditAction(null);\n  };\n\n  const handleModalCancelButton = () => {\n    setIsModalOpen(false);\n  };\n\n  const columns = [\n    {\n      title: '',\n      key: 'delete-edit',\n      render: (text, record) => (\n        <Space size=\"middle\">\n          <Button onClick={() => handleDelete(record)} icon={<DeleteOutlined />} />\n          <Button onClick={() => handleEdit(record)} icon={<EditOutlined />} />\n        </Space>\n      ),\n    },\n    {\n      title: 'Name',\n      dataIndex: 'title',\n      key: 'title',\n    },\n    {\n      title: 'Description',\n      dataIndex: 'description',\n      key: 'description',\n    },\n    {\n      title: 'URL',\n      dataIndex: 'url',\n      key: 'url',\n    },\n    {\n      title: 'Icon',\n      dataIndex: 'icon',\n      key: 'icon',\n      render: (url: string) => (url ? <img style={{ width: '2vw' }} src={url} alt=\"\" /> : null),\n    },\n    {\n      title: 'Color',\n      dataIndex: 'color',\n      key: 'color',\n      render: (color: string) =>\n        color ? <div style={{ backgroundColor: color, height: '30px' }}>{color}</div> : null,\n    },\n    {\n      title: 'Opens',\n      dataIndex: 'openExternally',\n      key: 'openExternally',\n      render: (openExternally: boolean) => (openExternally ? 'In a new tab' : 'In a modal'),\n    },\n  ];\n\n  return (\n    <div>\n      <Title>External Actions</Title>\n      <Paragraph>\n        External action URLs are 3rd party UI you can display, embedded, into your Owncast page when\n        a user clicks on a button to launch your action.\n      </Paragraph>\n      <Paragraph>\n        Read more about how to use actions, with examples, at{' '}\n        <a\n          href=\"https://owncast.online/thirdparty/?source=admin\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          our documentation\n        </a>\n        .\n      </Paragraph>\n\n      <Table\n        rowKey={record => `${record.title}-${record.url}`}\n        columns={columns}\n        dataSource={actions}\n        pagination={false}\n      />\n      <br />\n      <Button type=\"primary\" onClick={showCreateModal}>\n        Create New Action\n      </Button>\n      <FormStatusIndicator status={submitStatus} />\n\n      <ActionModal\n        action={editAction}\n        open={isModalOpen}\n        onOk={handleModalSaveButton}\n        onCancel={handleModalCancelButton}\n      />\n    </div>\n  );\n};\nexport default Actions;\n","import {\n  CheckCircleFilled,\n  ExclamationCircleFilled,\n  LoadingOutlined,\n  WarningOutlined,\n} from '@ant-design/icons';\n\nexport const STATUS_RESET_TIMEOUT = 3000;\n\nexport const STATUS_ERROR = 'error';\nexport const STATUS_INVALID = 'invalid';\nexport const STATUS_PROCESSING = 'proessing';\nexport const STATUS_SUCCESS = 'success';\nexport const STATUS_WARNING = 'warning';\n\nexport type InputStatusTypes = 'error' | 'invalid' | 'proessing' | 'success' | 'warning';\n\nexport interface StatusState {\n  type: InputStatusTypes;\n  icon: any; // Element type of sorts?\n  message: string;\n}\ninterface InputStates {\n  [key: string]: StatusState;\n}\n\nexport const INPUT_STATES: InputStates = {\n  [STATUS_SUCCESS]: {\n    type: STATUS_SUCCESS,\n    icon: <CheckCircleFilled style={{ color: 'green' }} />,\n    message: 'Success!',\n  },\n  [STATUS_ERROR]: {\n    type: STATUS_ERROR,\n    icon: <ExclamationCircleFilled style={{ color: 'red' }} />,\n    message: 'An error occurred.',\n  },\n  [STATUS_INVALID]: {\n    type: STATUS_INVALID,\n    icon: <ExclamationCircleFilled style={{ color: 'red' }} />,\n    message: 'An error occurred.',\n  },\n  [STATUS_PROCESSING]: {\n    type: STATUS_PROCESSING,\n    icon: <LoadingOutlined />,\n    message: '',\n  },\n  [STATUS_WARNING]: {\n    type: STATUS_WARNING,\n    icon: <WarningOutlined style={{ color: '#fc0' }} />,\n    message: '',\n  },\n};\n\n// Don't like any of the default messages in INPUT_STATES? Create a state with custom message by providing an icon style with your message.\nexport function createInputStatus(type: InputStatusTypes, message?: string): StatusState {\n  if (!type || !INPUT_STATES[type]) {\n    return null;\n  }\n  if (!message) {\n    return INPUT_STATES[type];\n  }\n  return {\n    type,\n    icon: INPUT_STATES[type].icon,\n    message,\n  };\n}\n","// TODO: add a notication after updating info that changes will take place either on a new stream or server restart. may be different for each field.\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { STATUS, fetchData, FETCH_INTERVAL, SERVER_CONFIG } from './apis';\nimport { ConfigDetails, UpdateArgs } from '../types/config-section';\nimport { DEFAULT_VARIANT_STATE } from './config-constants';\n\nexport const initialServerConfigState: ConfigDetails = {\n  streamKeys: [],\n  adminPassword: '',\n  instanceDetails: {\n    customStyles: '',\n    extraPageContent: '',\n    logo: '',\n    name: '',\n    nsfw: false,\n    socialHandles: [],\n    streamTitle: '',\n    summary: '',\n    tags: [],\n    title: '',\n    welcomeMessage: '',\n    offlineMessage: '',\n    appearanceVariables: {},\n  },\n  ffmpegPath: '',\n  rtmpServerPort: '',\n  webServerPort: '',\n  socketHostOverride: null,\n  s3: {\n    accessKey: '',\n    acl: '',\n    bucket: '',\n    enabled: false,\n    endpoint: '',\n    region: '',\n    secret: '',\n    servingEndpoint: '',\n    forcePathStyle: false,\n  },\n  yp: {\n    enabled: false,\n    instanceUrl: '',\n  },\n  videoSettings: {\n    latencyLevel: 4,\n    cpuUsageLevel: 3,\n    videoQualityVariants: [DEFAULT_VARIANT_STATE],\n  },\n  federation: {\n    enabled: false,\n    isPrivate: false,\n    username: '',\n    goLiveMessage: '',\n    showEngagement: true,\n    blockedDomains: [],\n  },\n  notifications: {\n    browser: { enabled: false, goLiveMessage: '' },\n    discord: { enabled: false, webhook: '', goLiveMessage: '' },\n    twitter: {\n      enabled: false,\n      goLiveMessage: '',\n      apiKey: '',\n      apiSecret: '',\n      accessToken: '',\n      accessTokenSecret: '',\n      bearerToken: '',\n    },\n  },\n  externalActions: [],\n  supportedCodecs: [],\n  videoCodec: '',\n  forbiddenUsernames: [],\n  suggestedUsernames: [],\n  chatDisabled: false,\n  chatJoinMessagesEnabled: true,\n  chatEstablishedUserMode: false,\n  hideViewerCount: false,\n};\n\nconst initialServerStatusState = {\n  broadcastActive: false,\n  broadcaster: null,\n  currentBroadcast: null,\n  online: false,\n  viewerCount: 0,\n  sessionMaxViewerCount: 0,\n  sessionPeakViewerCount: 0,\n  overallPeakViewerCount: 0,\n  versionNumber: '0.0.0',\n  streamTitle: '',\n  chatDisabled: false,\n  health: {\n    healthy: true,\n    healthPercentage: 100,\n    message: '',\n    representation: 0,\n  },\n};\n\nexport const ServerStatusContext = React.createContext({\n  ...initialServerStatusState,\n  serverConfig: initialServerConfigState,\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  setFieldInConfigState: (args: UpdateArgs) => null,\n});\n\nconst ServerStatusProvider = ({ children }) => {\n  const [status, setStatus] = useState(initialServerStatusState);\n  const [config, setConfig] = useState(initialServerConfigState);\n\n  const getStatus = async () => {\n    try {\n      const result = await fetchData(STATUS);\n      setStatus({ ...result });\n    } catch (error) {\n      // todo\n    }\n  };\n  const getConfig = async () => {\n    try {\n      const result = await fetchData(SERVER_CONFIG);\n      setConfig(result);\n    } catch (error) {\n      // todo\n    }\n  };\n\n  const setFieldInConfigState = ({ fieldName, value, path }: UpdateArgs) => {\n    const updatedConfig = path\n      ? {\n          ...config,\n          [path]: {\n            ...config[path],\n            [fieldName]: value,\n          },\n        }\n      : {\n          ...config,\n          [fieldName]: value,\n        };\n    setConfig(updatedConfig);\n  };\n\n  useEffect(() => {\n    let getStatusIntervalId = null;\n\n    getStatus();\n    getStatusIntervalId = setInterval(getStatus, FETCH_INTERVAL);\n\n    getConfig();\n\n    // returned function will be called on component unmount\n    return () => {\n      clearInterval(getStatusIntervalId);\n    };\n  }, []);\n\n  // eslint-disable-next-line react/jsx-no-constructed-context-values\n  const providerValue = {\n    ...status,\n    serverConfig: config,\n\n    setFieldInConfigState,\n  };\n  return (\n    <ServerStatusContext.Provider value={providerValue}>{children}</ServerStatusContext.Provider>\n  );\n};\n\nServerStatusProvider.propTypes = {\n  children: PropTypes.element.isRequired,\n};\n\nexport default ServerStatusProvider;\n"],"names":["window","__NEXT_P","push","__webpack_require__","Title","Paragraph","Typography","ActionModal","onOk","onCancel","open","action","props","actionUrl","setActionUrl","useState","actionTitle","setActionTitle","actionDescription","setActionDescription","actionIcon","setActionIcon","actionColor","setActionColor","openExternally","setOpenExternally","useEffect","url","title","description","icon","color","okButtonProps","disabled","isValidUrl","onOpenExternallyChanged","checkbox","target","checked","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Modal","destroyOnClose","jsxs","Form","initialValues","strong","p","a","href","rel","name","Input","required","placeholder","onChange","input","currentTarget","value","trim","type","pattern","DEFAULT_TEXTFIELD_URL_PATTERN","div","style","marginBottom","Checkbox","defaultChecked","Actions","serverStatusData","useContext","ServerStatusContext","serverConfig","setFieldInConfigState","externalActions","actions","setActions","isModalOpen","setIsModalOpen","submitStatus","setSubmitStatus","editAction","setEditAction","resetStates","clearTimeout","save","actionsData","postConfigUpdateToAPI","apiPath","API_EXTERNAL_ACTIONS","data","onSuccess","fieldName","path","createInputStatus","STATUS_SUCCESS","setTimeout","RESET_TIMEOUT","onError","console","log","message","STATUS_ERROR","handleDelete","index","findIndex","item","splice","error","handleSave","oldAction","newAction","_","handleEdit","showCreateModal","handleModalSaveButton","handleModalCancelButton","Table","rowKey","record","concat","columns","key","render","text","Space","size","Button","onClick","DeleteOutlined","EditOutlined","dataIndex","img","width","src","alt","backgroundColor","height","dataSource","pagination","br","FormStatusIndicator","status","__webpack_exports__","STATUS_INVALID","STATUS_PROCESSING","STATUS_WARNING","INPUT_STATES","CheckCircleFilled","ExclamationCircleFilled","LoadingOutlined","WarningOutlined","initialServerConfigState","streamKeys","adminPassword","instanceDetails","customStyles","extraPageContent","logo","nsfw","socialHandles","streamTitle","summary","tags","welcomeMessage","offlineMessage","appearanceVariables","ffmpegPath","rtmpServerPort","webServerPort","socketHostOverride","s3","accessKey","acl","bucket","enabled","endpoint","region","secret","servingEndpoint","forcePathStyle","yp","instanceUrl","videoSettings","latencyLevel","cpuUsageLevel","videoQualityVariants","DEFAULT_VARIANT_STATE","federation","isPrivate","username","goLiveMessage","showEngagement","blockedDomains","notifications","browser","discord","webhook","twitter","apiKey","apiSecret","accessToken","accessTokenSecret","bearerToken","supportedCodecs","videoCodec","forbiddenUsernames","suggestedUsernames","chatDisabled","chatJoinMessagesEnabled","chatEstablishedUserMode","hideViewerCount","initialServerStatusState","broadcastActive","broadcaster","currentBroadcast","online","viewerCount","sessionMaxViewerCount","sessionPeakViewerCount","overallPeakViewerCount","versionNumber","health","healthy","healthPercentage","representation","React","ServerStatusProvider","children","param","setStatus","config","setConfig","getStatus","result","fetchData","STATUS","getConfig","SERVER_CONFIG","updatedConfig","getStatusIntervalId","setInterval","FETCH_INTERVAL","clearInterval","providerValue","Provider","propTypes","PropTypes"],"sourceRoot":""}