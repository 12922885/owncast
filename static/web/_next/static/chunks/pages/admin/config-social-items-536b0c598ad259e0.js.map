{"version":3,"file":"static/chunks/pages/admin/config-social-items-536b0c598ad259e0.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/DeleteOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/DeleteOutlined.js","webpack://_N_E/?8894","webpack://_N_E/./components/admin/SocialDropdown.tsx","webpack://_N_E/./components/admin/config/general/EditSocialLinks.tsx","webpack://_N_E/./pages/admin/config-social-items.tsx","webpack://_N_E/<anon>"],"sourcesContent":["// This icon file is generated automatically.\nvar DeleteOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M360 184h-8c4.4 0 8-3.6 8-8v8h304v-8c0 4.4 3.6 8 8 8h-8v72h72v-80c0-35.3-28.7-64-64-64H352c-35.3 0-64 28.7-64 64v80h72v-72zm504 72H160c-17.7 0-32 14.3-32 32v32c0 4.4 3.6 8 8 8h60.4l24.7 523c1.6 34.1 29.8 61 63.9 61h454c34.2 0 62.3-26.8 63.9-61l24.7-523H888c4.4 0 8-3.6 8-8v-32c0-17.7-14.3-32-32-32zM731.3 840H292.7l-24.2-512h487l-24.2 512z\" } }] }, \"name\": \"delete\", \"theme\": \"outlined\" };\nexport default DeleteOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport DeleteOutlinedSvg from \"@ant-design/icons-svg/es/asn/DeleteOutlined\";\nimport AntdIcon from '../components/AntdIcon';\nvar DeleteOutlined = function DeleteOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: DeleteOutlinedSvg\n  }));\n};\nDeleteOutlined.displayName = 'DeleteOutlined';\nexport default /*#__PURE__*/React.forwardRef(DeleteOutlined);","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/config-social-items\",\n      function () {\n        return require(\"private-next-pages/admin/config-social-items.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin/config-social-items\"])\n      });\n    }\n  ","import React, { FC } from 'react';\nimport { Select } from 'antd';\nimport { SocialHandleDropdownItem } from '../../types/config-section';\nimport { OTHER_SOCIAL_HANDLE_OPTION } from '../../utils/config-constants';\n\nexport type DropdownProps = {\n  iconList: SocialHandleDropdownItem[];\n  selectedOption: string;\n  onSelected: any;\n};\n\nexport const SocialDropdown: FC<DropdownProps> = ({ iconList, selectedOption, onSelected }) => {\n  const handleSelected = (value: string) => {\n    if (onSelected) {\n      onSelected(value);\n    }\n  };\n  const inititalSelected = selectedOption === '' ? null : selectedOption;\n  return (\n    <div className=\"social-dropdown-container\">\n      <p className=\"description\">\n        If you are looking for a platform name not on this list, please select Other and type in\n        your own name. A logo will not be provided.\n      </p>\n\n      <div className=\"formfield-container\">\n        <div className=\"label-side\">\n          <span className=\"formfield-label\">Social Platform</span>\n        </div>\n        <div className=\"input-side\">\n          <Select\n            style={{ width: 240 }}\n            className=\"social-dropdown\"\n            placeholder=\"Social platform...\"\n            defaultValue={inititalSelected}\n            value={inititalSelected}\n            onSelect={handleSelected}\n          >\n            {iconList.map(item => {\n              const { platform, icon, key } = item;\n\n              return (\n                <Select.Option className=\"social-option\" key={`platform-${key}`} value={key}>\n                  <span className=\"option-icon\">\n                    <img src={icon} alt=\"\" className=\"option-icon\" />\n                  </span>\n                  <span className=\"option-label\">{platform}</span>\n                </Select.Option>\n              );\n            })}\n            <Select.Option\n              className=\"social-option\"\n              key={`platform-${OTHER_SOCIAL_HANDLE_OPTION}`}\n              value={OTHER_SOCIAL_HANDLE_OPTION}\n            >\n              Other...\n            </Select.Option>\n          </Select>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useContext, useEffect } from 'react';\nimport { Typography, Table, Button, Modal, Input } from 'antd';\nimport { ColumnsType } from 'antd/lib/table';\nimport { CaretDownOutlined, CaretUpOutlined, DeleteOutlined } from '@ant-design/icons';\nimport { SocialDropdown } from '../../SocialDropdown';\nimport { fetchData, SOCIAL_PLATFORMS_LIST } from '../../../../utils/apis';\nimport { ServerStatusContext } from '../../../../utils/server-status-context';\nimport {\n  API_SOCIAL_HANDLES,\n  postConfigUpdateToAPI,\n  RESET_TIMEOUT,\n  DEFAULT_SOCIAL_HANDLE,\n  OTHER_SOCIAL_HANDLE_OPTION,\n} from '../../../../utils/config-constants';\nimport { SocialHandle, UpdateArgs } from '../../../../types/config-section';\nimport {\n  isValidMatrixAccount,\n  isValidAccount,\n  isValidUrl,\n  DEFAULT_TEXTFIELD_URL_PATTERN,\n} from '../../../../utils/urls';\nimport { TextField } from '../../TextField';\nimport { createInputStatus, STATUS_ERROR, STATUS_SUCCESS } from '../../../../utils/input-statuses';\nimport { FormStatusIndicator } from '../../FormStatusIndicator';\n\nconst { Title } = Typography;\n\n// eslint-disable-next-line react/function-component-definition\nexport default function EditSocialLinks() {\n  const [availableIconsList, setAvailableIconsList] = useState([]);\n  const [currentSocialHandles, setCurrentSocialHandles] = useState([]);\n\n  const [displayModal, setDisplayModal] = useState(false);\n  const [displayOther, setDisplayOther] = useState(false);\n  const [modalProcessing, setModalProcessing] = useState(false);\n  const [editId, setEditId] = useState(-1);\n\n  // current data inside modal\n  const [modalDataState, setModalDataState] = useState(DEFAULT_SOCIAL_HANDLE);\n\n  const [submitStatus, setSubmitStatus] = useState(null);\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig, setFieldInConfigState } = serverStatusData || {};\n\n  const { instanceDetails } = serverConfig;\n  const { socialHandles: initialSocialHandles } = instanceDetails;\n\n  let resetTimer = null;\n\n  const PLACEHOLDERS = {\n    mastodon: 'https://mastodon.social/@username',\n    twitter: 'https://twitter.com/username',\n  };\n\n  const getAvailableIcons = async () => {\n    try {\n      const result = await fetchData(SOCIAL_PLATFORMS_LIST, { auth: false });\n      const list = Object.keys(result).map(item => ({\n        key: item,\n        ...result[item],\n      }));\n      setAvailableIconsList(list);\n    } catch (error) {\n      console.log(error);\n      //  do nothing\n    }\n  };\n\n  const isPredefinedSocial = (platform: string) =>\n    availableIconsList.find(item => item.key === platform) || false;\n\n  const selectedOther =\n    modalDataState.platform !== '' &&\n    !availableIconsList.find(item => item.key === modalDataState.platform);\n\n  useEffect(() => {\n    getAvailableIcons();\n  }, []);\n\n  useEffect(() => {\n    if (instanceDetails.socialHandles) {\n      setCurrentSocialHandles(initialSocialHandles);\n    }\n  }, [instanceDetails]);\n\n  const resetStates = () => {\n    setSubmitStatus(null);\n    resetTimer = null;\n    clearTimeout(resetTimer);\n  };\n  const resetModal = () => {\n    setDisplayModal(false);\n    setEditId(-1);\n    setDisplayOther(false);\n    setModalProcessing(false);\n    setModalDataState({ ...DEFAULT_SOCIAL_HANDLE });\n  };\n\n  const handleModalCancel = () => {\n    resetModal();\n  };\n\n  const updateModalState = (fieldName: string, value: string) => {\n    setModalDataState({\n      ...modalDataState,\n      [fieldName]: value,\n    });\n  };\n  const handleDropdownSelect = (value: string) => {\n    if (value === OTHER_SOCIAL_HANDLE_OPTION) {\n      setDisplayOther(true);\n      updateModalState('platform', '');\n    } else {\n      setDisplayOther(false);\n      updateModalState('platform', value);\n    }\n  };\n  const handleOtherNameChange = event => {\n    const { value } = event.target;\n    updateModalState('platform', value);\n  };\n\n  const handleUrlChange = ({ value }: UpdateArgs) => {\n    updateModalState('url', value);\n  };\n\n  // posts all the variants at once as an array obj\n  const postUpdateToAPI = async (postValue: any) => {\n    await postConfigUpdateToAPI({\n      apiPath: API_SOCIAL_HANDLES,\n      data: { value: postValue },\n      onSuccess: () => {\n        setFieldInConfigState({\n          fieldName: 'socialHandles',\n          value: postValue,\n          path: 'instanceDetails',\n        });\n\n        // close modal\n        setModalProcessing(false);\n        handleModalCancel();\n\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS));\n\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, `There was an error: ${message}`));\n        setModalProcessing(false);\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n    });\n  };\n\n  // on Ok, send all of dataState to api\n  // show loading\n  // close modal when api is done\n  const handleModalOk = () => {\n    setModalProcessing(true);\n    const postData = currentSocialHandles.length ? [...currentSocialHandles] : [];\n    if (editId === -1) {\n      postData.push(modalDataState);\n    } else {\n      postData.splice(editId, 1, modalDataState);\n    }\n    postUpdateToAPI(postData);\n  };\n\n  const handleDeleteItem = (index: number) => {\n    const postData = [...currentSocialHandles];\n    postData.splice(index, 1);\n    postUpdateToAPI(postData);\n  };\n\n  const handleMoveItemUp = (index: number) => {\n    if (index <= 0 || index >= currentSocialHandles.length) {\n      return;\n    }\n    const postData = [...currentSocialHandles];\n    const tmp = postData[index - 1];\n    postData[index - 1] = postData[index];\n    postData[index] = tmp;\n    postUpdateToAPI(postData);\n  };\n\n  const handleMoveItemDown = (index: number) => {\n    if (index < 0 || index >= currentSocialHandles.length - 1) {\n      return;\n    }\n    const postData = [...currentSocialHandles];\n    const tmp = postData[index + 1];\n    postData[index + 1] = postData[index];\n    postData[index] = tmp;\n    postUpdateToAPI(postData);\n  };\n\n  const socialHandlesColumns: ColumnsType<SocialHandle> = [\n    {\n      title: 'Social Link',\n      dataIndex: '',\n      key: 'combo',\n      render: (data, record) => {\n        const { platform, url } = record;\n        const platformInfo = isPredefinedSocial(platform);\n\n        // custom platform case\n        if (!platformInfo) {\n          return (\n            <div className=\"social-handle-cell\">\n              <p className=\"option-label\">\n                <strong>{platform}</strong>\n                <span className=\"handle-url\" title={url}>\n                  {url}\n                </span>\n              </p>\n            </div>\n          );\n        }\n        const { icon, platform: platformName } = platformInfo;\n        return (\n          <div className=\"social-handle-cell\">\n            <span className=\"option-icon\">\n              <img src={icon} alt=\"\" className=\"option-icon\" />\n            </span>\n            <p className=\"option-label\">\n              <strong>{platformName}</strong>\n              <span className=\"handle-url\" title={url}>\n                {url}\n              </span>\n            </p>\n          </div>\n        );\n      },\n    },\n    {\n      title: '',\n      dataIndex: '',\n      key: 'edit',\n      render: (data, record, index) => (\n        <div className=\"actions\">\n          <Button\n            size=\"small\"\n            onClick={() => {\n              const platformInfo = currentSocialHandles[index];\n              setEditId(index);\n              setModalDataState({ ...platformInfo });\n              setDisplayModal(true);\n              if (!isPredefinedSocial(platformInfo.platform)) {\n                setDisplayOther(true);\n              }\n            }}\n          >\n            Edit\n          </Button>\n          <Button\n            icon={<CaretUpOutlined />}\n            size=\"small\"\n            hidden={index === 0}\n            onClick={() => handleMoveItemUp(index)}\n          />\n          <Button\n            icon={<CaretDownOutlined />}\n            size=\"small\"\n            hidden={index === currentSocialHandles.length - 1}\n            onClick={() => handleMoveItemDown(index)}\n          />\n          <Button\n            className=\"delete-button\"\n            icon={<DeleteOutlined />}\n            size=\"small\"\n            onClick={() => handleDeleteItem(index)}\n          />\n        </div>\n      ),\n    },\n  ];\n\n  const isValid = (url: string, platform: string) => {\n    if (platform === 'xmpp') {\n      return isValidAccount(url, 'xmpp');\n    }\n    if (platform === 'matrix') {\n      return isValidMatrixAccount(url);\n    }\n\n    return isValidUrl(url);\n  };\n\n  const okButtonProps = {\n    disabled: !isValid(modalDataState.url, modalDataState.platform),\n  };\n\n  const otherField = (\n    <div className=\"other-field-container formfield-container\">\n      <div className=\"label-side\" />\n      <div className=\"input-side\">\n        <Input\n          placeholder=\"Other platform name\"\n          defaultValue={modalDataState.platform}\n          onChange={handleOtherNameChange}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"social-links-edit-container\">\n      <Title level={3} className=\"section-title\">\n        Your Social Handles\n      </Title>\n      <p className=\"description\">\n        Add all your social media handles and links to your other profiles here.\n      </p>\n\n      <FormStatusIndicator status={submitStatus} />\n\n      <Table\n        className=\"social-handles-table\"\n        pagination={false}\n        size=\"small\"\n        rowKey={record => `${record.platform}-${record.url}`}\n        columns={socialHandlesColumns}\n        dataSource={currentSocialHandles}\n      />\n\n      <Modal\n        title=\"Edit Social Handle\"\n        open={displayModal}\n        onOk={handleModalOk}\n        onCancel={handleModalCancel}\n        confirmLoading={modalProcessing}\n        okButtonProps={okButtonProps}\n      >\n        <div className=\"social-handle-modal-content\">\n          <SocialDropdown\n            iconList={availableIconsList}\n            selectedOption={selectedOther ? OTHER_SOCIAL_HANDLE_OPTION : modalDataState.platform}\n            onSelected={handleDropdownSelect}\n          />\n          {displayOther && otherField}\n          <br />\n          <TextField\n            fieldName=\"social-url\"\n            label=\"URL\"\n            placeholder={PLACEHOLDERS[modalDataState.platform] || 'Url to page'}\n            value={modalDataState.url}\n            onChange={handleUrlChange}\n            useTrim\n            type=\"url\"\n            pattern={DEFAULT_TEXTFIELD_URL_PATTERN}\n          />\n          <FormStatusIndicator status={submitStatus} />\n        </div>\n      </Modal>\n      <br />\n      <Button\n        type=\"primary\"\n        onClick={() => {\n          resetModal();\n          setDisplayModal(true);\n        }}\n      >\n        Add a new social link\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Typography } from 'antd';\nimport EditSocialLinks from '../../components/admin/config/general/EditSocialLinks';\n\nconst { Title } = Typography;\n\nexport default function ConfigSocialThings() {\n  return (\n    <div className=\"config-social-items\">\n      <Title>Social Items</Title>\n\n      <EditSocialLinks />\n    </div>\n  );\n}\n"],"names":["asn_DeleteOutlined","DeleteOutlined_DeleteOutlined","props","ref","react","createElement","AntdIcon","Z","objectSpread2","icon","displayName","icons_DeleteOutlined","forwardRef","window","__NEXT_P","push","__webpack_require__","SocialDropdown","iconList","selectedOption","onSelected","param","handleSelected","value","inititalSelected","jsx_runtime","jsxs","div","className","jsx","p","span","Select","style","width","placeholder","defaultValue","onSelect","map","item","platform","key","img","src","alt","concat","OTHER_SOCIAL_HANDLE_OPTION","Title","Typography","EditSocialLinks","url","availableIconsList","setAvailableIconsList","useState","currentSocialHandles","setCurrentSocialHandles","displayModal","setDisplayModal","displayOther","setDisplayOther","modalProcessing","setModalProcessing","editId","setEditId","modalDataState","setModalDataState","DEFAULT_SOCIAL_HANDLE","submitStatus","setSubmitStatus","serverStatusData","useContext","ServerStatusContext","serverConfig","setFieldInConfigState","instanceDetails","socialHandles","initialSocialHandles","getAvailableIcons","result","fetchData","SOCIAL_PLATFORMS_LIST","auth","list","Object","keys","error","console","log","isPredefinedSocial","find","selectedOther","useEffect","resetStates","clearTimeout","resetModal","handleModalCancel","updateModalState","fieldName","handleDropdownSelect","handleOtherNameChange","event","target","handleUrlChange","postUpdateToAPI","postValue","postConfigUpdateToAPI","apiPath","API_SOCIAL_HANDLES","data","onSuccess","path","createInputStatus","STATUS_SUCCESS","setTimeout","RESET_TIMEOUT","onError","STATUS_ERROR","message","handleModalOk","postData","length","splice","handleDeleteItem","index","handleMoveItemUp","tmp","handleMoveItemDown","okButtonProps","disabled","isValidAccount","isValidMatrixAccount","isValidUrl","otherField","Input","onChange","level","FormStatusIndicator","status","Table","pagination","size","rowKey","record","columns","title","dataIndex","render","platformInfo","strong","platformName","Button","onClick","CaretUpOutlined","hidden","CaretDownOutlined","DeleteOutlined","dataSource","Modal","open","onOk","onCancel","confirmLoading","br","TextField","label","PLACEHOLDERS","mastodon","twitter","useTrim","type","pattern","DEFAULT_TEXTFIELD_URL_PATTERN","ConfigSocialThings","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__"],"sourceRoot":""}