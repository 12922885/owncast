{"version":3,"file":"static/chunks/pages/admin/chat/messages-7ec70123ba82bb7c.js","mappings":"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","sources":["webpack://_N_E/?6feb","webpack://_N_E/./components/admin/BanUserButton.tsx","webpack://_N_E/./components/admin/ModeratorUserButton.tsx","webpack://_N_E/./components/admin/UserPopover.tsx","webpack://_N_E/./components/admin/UserTable.tsx","webpack://_N_E/./components/admin/MessageVisiblityToggle.tsx","webpack://_N_E/./pages/admin/chat/messages.tsx","webpack://_N_E/./utils/apis.ts","webpack://_N_E/./utils/format.ts","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/chat/messages\",\n      function () {\n        return require(\"private-next-pages/admin/chat/messages.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin/chat/messages\"])\n      });\n    }\n  ","import { Modal, Button } from 'antd';\nimport { ExclamationCircleFilled, QuestionCircleFilled, StopTwoTone } from '@ant-design/icons';\nimport { FC } from 'react';\nimport { USER_ENABLED_TOGGLE, fetchData } from '../../utils/apis';\nimport { User } from '../../types/chat';\n\nexport type BanUserButtonProps = {\n  user: User;\n  isEnabled: Boolean; // = this user's current status\n  label?: string;\n  onClick?: () => void;\n};\n\nexport const BanUserButton: FC<BanUserButtonProps> = ({ user, isEnabled, label, onClick }) => {\n  async function buttonClicked({ id }): Promise<Boolean> {\n    const data = {\n      userId: id,\n      enabled: !isEnabled, // set user to this value\n    };\n    try {\n      const result = await fetchData(USER_ENABLED_TOGGLE, {\n        data,\n        method: 'POST',\n        auth: true,\n      });\n      return result.success;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error(e);\n    }\n    return false;\n  }\n\n  const actionString = isEnabled ? 'ban' : 'unban';\n  const icon = isEnabled ? (\n    <ExclamationCircleFilled style={{ color: 'var(--ant-error)' }} />\n  ) : (\n    <QuestionCircleFilled style={{ color: 'var(--ant-warning)' }} />\n  );\n\n  const content = (\n    <>\n      Are you sure you want to {actionString} <strong>{user.displayName}</strong>\n      {isEnabled ? ' and remove their messages?' : '?'}\n    </>\n  );\n\n  const confirmBlockAction = () => {\n    Modal.confirm({\n      title: `Confirm ${actionString}`,\n      content,\n      onCancel: () => {},\n      onOk: () =>\n        new Promise((resolve, reject) => {\n          const result = buttonClicked(user);\n          if (result) {\n            // wait a bit before closing so the user/client tables repopulate\n            // GW: TODO: put users/clients data in global app context instead, then call a function here to update that state. (current in another branch)\n            setTimeout(() => {\n              resolve(result);\n              onClick?.();\n            }, 3000);\n          } else {\n            reject();\n          }\n        }),\n      okType: 'danger',\n      okText: isEnabled ? 'Absolutely' : null,\n      icon,\n    });\n  };\n\n  return (\n    <Button\n      type=\"primary\"\n      onClick={confirmBlockAction}\n      size=\"small\"\n      icon={isEnabled ? <StopTwoTone twoToneColor=\"#ff4d4f\" /> : null}\n      className=\"block-user-button\"\n    >\n      {label || actionString}\n    </Button>\n  );\n};\nBanUserButton.defaultProps = {\n  label: '',\n  onClick: null,\n};\n","import { Modal, Button } from 'antd';\nimport {\n  ExclamationCircleFilled,\n  QuestionCircleFilled,\n  StopTwoTone,\n  SafetyCertificateTwoTone,\n} from '@ant-design/icons';\nimport { FC } from 'react';\nimport { USER_SET_MODERATOR, fetchData } from '../../utils/apis';\nimport { User } from '../../types/chat';\n\nexport type ModeratorUserButtonProps = {\n  user: User;\n  onClick?: () => void;\n};\n\nexport const ModeratorUserButton: FC<ModeratorUserButtonProps> = ({ user, onClick }) => {\n  async function buttonClicked({ id }, setAsModerator: Boolean): Promise<Boolean> {\n    const data = {\n      userId: id,\n      isModerator: setAsModerator,\n    };\n    try {\n      const result = await fetchData(USER_SET_MODERATOR, {\n        data,\n        method: 'POST',\n        auth: true,\n      });\n      return result.success;\n    } catch (e) {\n      // eslint-disable-next-line no-console\n      console.error(e);\n    }\n    return false;\n  }\n\n  const isModerator = user.scopes?.includes('MODERATOR');\n  const actionString = isModerator ? 'remove moderator' : 'add moderator';\n  const icon = isModerator ? (\n    <ExclamationCircleFilled style={{ color: 'var(--ant-error)' }} />\n  ) : (\n    <QuestionCircleFilled style={{ color: 'var(--ant-warning)' }} />\n  );\n\n  const content = (\n    <>\n      Are you sure you want to {actionString} <strong>{user.displayName}</strong>?\n    </>\n  );\n\n  const confirmBlockAction = () => {\n    Modal.confirm({\n      title: `Confirm ${actionString}`,\n      content,\n      onCancel: () => {},\n      onOk: () =>\n        new Promise((resolve, reject) => {\n          const result = buttonClicked(user, !isModerator);\n          if (result) {\n            // wait a bit before closing so the user/client tables repopulate\n            // GW: TODO: put users/clients data in global app context instead, then call a function here to update that state. (current in another branch)\n            setTimeout(() => {\n              resolve(result);\n              onClick?.();\n            }, 3000);\n          } else {\n            reject();\n          }\n        }),\n      okType: 'danger',\n      okText: isModerator ? 'Yup!' : null,\n      icon,\n    });\n  };\n\n  return (\n    <Button\n      type=\"primary\"\n      onClick={confirmBlockAction}\n      size=\"small\"\n      icon={\n        isModerator ? (\n          <StopTwoTone twoToneColor=\"#ff4d4f\" />\n        ) : (\n          <SafetyCertificateTwoTone twoToneColor=\"#22bb44\" />\n        )\n      }\n      className=\"block-user-button\"\n    >\n      {actionString}\n    </Button>\n  );\n};\n\nModeratorUserButton.defaultProps = {\n  onClick: null,\n};\n","// This displays a clickable user name (or whatever children element you provide), and displays a simple tooltip of created time. OnClick a modal with more information about the user is displayed.\n\nimport { useState, ReactNode, FC } from 'react';\nimport { Divider, Modal, Typography, Row, Col, Space } from 'antd';\nimport formatDistanceToNow from 'date-fns/formatDistanceToNow';\nimport format from 'date-fns/format';\nimport { uniq } from 'lodash';\n\nimport dynamic from 'next/dynamic';\nimport { BanUserButton } from './BanUserButton';\nimport { ModeratorUserButton } from './ModeratorUserButton';\n\nimport { User, UserConnectionInfo } from '../../types/chat';\nimport { formatDisplayDate } from './UserTable';\nimport { formatUAstring } from '../../utils/format';\n\n// Lazy loaded components\n\nconst Tooltip = dynamic(() => import('antd').then(mod => mod.Tooltip), {\n  ssr: false,\n});\n\nexport type UserPopoverProps = {\n  user: User;\n  connectionInfo?: UserConnectionInfo | null;\n  children: ReactNode;\n};\n\nexport const UserPopover: FC<UserPopoverProps> = ({ user, connectionInfo, children }) => {\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const handleShowModal = () => {\n    setIsModalOpen(true);\n  };\n  const handleCloseModal = () => {\n    setIsModalOpen(false);\n  };\n\n  const { displayName, createdAt, previousNames, nameChangedAt, disabledAt } = user;\n  const { connectedAt, messageCount, userAgent } = connectionInfo || {};\n\n  let lastNameChangeDate = null;\n  const nameList = previousNames && [...previousNames];\n\n  if (previousNames && previousNames.length > 1 && nameChangedAt) {\n    lastNameChangeDate = new Date(nameChangedAt);\n    // reverse prev names for display purposes\n    nameList.reverse();\n  }\n\n  const dateObject = new Date(createdAt);\n  const createdAtDate = format(dateObject, 'PP pp');\n\n  const lastNameChangeDuration = lastNameChangeDate\n    ? formatDistanceToNow(lastNameChangeDate)\n    : null;\n\n  return (\n    <>\n      <Tooltip\n        title={\n          <>\n            Created at: {createdAtDate}.\n            <br /> Click for more info.\n          </>\n        }\n        placement=\"bottomLeft\"\n      >\n        <button\n          type=\"button\"\n          aria-label=\"Display more details about this user\"\n          className=\"user-item-container\"\n          onClick={handleShowModal}\n        >\n          {children}\n        </button>\n      </Tooltip>\n\n      <Modal\n        destroyOnClose\n        width={600}\n        cancelText=\"Close\"\n        okButtonProps={{ style: { display: 'none' } }}\n        title={`User details: ${displayName}`}\n        open={isModalOpen}\n        onOk={handleCloseModal}\n        onCancel={handleCloseModal}\n      >\n        <div className=\"user-details\">\n          <Typography.Title level={4}>{displayName}</Typography.Title>\n          <p className=\"created-at\">User created at {createdAtDate}.</p>\n          <Row gutter={16}>\n            {connectionInfo && (\n              <Col md={lastNameChangeDate ? 12 : 24}>\n                <Typography.Title level={5}>\n                  This user is currently connected to Chat.\n                </Typography.Title>\n                <ul className=\"connection-info\">\n                  <li>\n                    <strong>Active for:</strong> {formatDistanceToNow(new Date(connectedAt))}\n                  </li>\n                  <li>\n                    <strong>Messages sent:</strong> {messageCount}\n                  </li>\n                  <li>\n                    <strong>User Agent:</strong>\n                    <br />\n                    {formatUAstring(userAgent)}\n                  </li>\n                </ul>\n              </Col>\n            )}\n            {lastNameChangeDate && (\n              <Col md={connectionInfo ? 12 : 24}>\n                <Typography.Title level={5}>This user is also seen as:</Typography.Title>\n                <ul className=\"previous-names-list\">\n                  {uniq(nameList).map((name, index) => (\n                    <li className={index === 0 ? 'latest' : ''}>\n                      <span className=\"user-name-item\">{name}</span>\n                      {index === 0 ? ` (Changed ${lastNameChangeDuration} ago)` : ''}\n                    </li>\n                  ))}\n                </ul>\n              </Col>\n            )}\n          </Row>\n          <Divider />\n          <Space direction=\"horizontal\">\n            {disabledAt ? (\n              <>\n                This user was banned on <code>{formatDisplayDate(disabledAt)}</code>.\n                <br />\n                <br />\n                <BanUserButton\n                  label=\"Unban this user\"\n                  user={user}\n                  isEnabled={false}\n                  onClick={handleCloseModal}\n                />\n              </>\n            ) : (\n              <BanUserButton\n                label=\"Ban this user\"\n                user={user}\n                isEnabled\n                onClick={handleCloseModal}\n              />\n            )}\n            <ModeratorUserButton user={user} onClick={handleCloseModal} />\n          </Space>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nUserPopover.defaultProps = {\n  connectionInfo: null,\n};\n","import { Table } from 'antd';\nimport format from 'date-fns/format';\nimport { SortOrder } from 'antd/lib/table/interface';\nimport { FC } from 'react';\nimport { User } from '../../types/chat';\nimport { UserPopover } from './UserPopover';\nimport { BanUserButton } from './BanUserButton';\n\nexport function formatDisplayDate(date: string | Date) {\n  return format(new Date(date), 'MMM d H:mma');\n}\n\nexport type UserTableProps = {\n  data: User[];\n};\n\nexport const UserTable: FC<UserTableProps> = ({ data }) => {\n  const columns = [\n    {\n      title: 'Last Known Display Name',\n      dataIndex: 'displayName',\n      key: 'displayName',\n      // eslint-disable-next-line react/destructuring-assignment\n      render: (displayName: string, user: User) => (\n        <UserPopover user={user}>\n          <span className=\"display-name\">{displayName}</span>\n        </UserPopover>\n      ),\n    },\n    {\n      title: 'Created',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n      render: (date: Date) => formatDisplayDate(date),\n      sorter: (a: any, b: any) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime(),\n      sortDirections: ['descend', 'ascend'] as SortOrder[],\n    },\n    {\n      title: 'Disabled at',\n      dataIndex: 'disabledAt',\n      key: 'disabledAt',\n      defaultSortOrder: 'descend' as SortOrder,\n      render: (date: Date) => (date ? formatDisplayDate(date) : null),\n      sorter: (a: any, b: any) =>\n        new Date(a.disabledAt).getTime() - new Date(b.disabledAt).getTime(),\n      sortDirections: ['descend', 'ascend'] as SortOrder[],\n    },\n    {\n      title: '',\n      key: 'block',\n      className: 'actions-col',\n      render: (_, user) => <BanUserButton user={user} isEnabled={!user.disabledAt} />,\n    },\n  ];\n\n  return (\n    <Table\n      pagination={{ hideOnSinglePage: true }}\n      className=\"table-container\"\n      columns={columns}\n      dataSource={data}\n      size=\"small\"\n      rowKey=\"id\"\n    />\n  );\n};\n","// Custom component for AntDesign Button that makes an api call, then displays a confirmation icon upon\nimport React, { useState, useEffect, FC } from 'react';\nimport { Button } from 'antd';\nimport {\n  EyeOutlined,\n  EyeInvisibleOutlined,\n  CheckCircleFilled,\n  ExclamationCircleFilled,\n} from '@ant-design/icons';\nimport dynamic from 'next/dynamic';\nimport { fetchData, UPDATE_CHAT_MESSGAE_VIZ } from '../../utils/apis';\nimport { MessageType } from '../../types/chat';\nimport { isEmptyObject } from '../../utils/format';\n\n// Lazy loaded components\n\nconst Tooltip = dynamic(() => import('antd').then(mod => mod.Tooltip), {\n  ssr: false,\n});\n\nexport type MessageToggleProps = {\n  isVisible: boolean;\n  message: MessageType;\n  setMessage: (message: MessageType) => void;\n};\n\nexport const MessageVisiblityToggle: FC<MessageToggleProps> = ({\n  isVisible,\n  message,\n  setMessage,\n}) => {\n  if (!message || isEmptyObject(message)) {\n    return null;\n  }\n\n  let outcomeTimeout = null;\n  const [outcome, setOutcome] = useState(0);\n\n  const { id: messageId } = message || {};\n\n  const resetOutcome = () => {\n    outcomeTimeout = setTimeout(() => {\n      setOutcome(0);\n    }, 3000);\n  };\n\n  useEffect(() => () => {\n    clearTimeout(outcomeTimeout);\n  });\n\n  const updateChatMessage = async () => {\n    clearTimeout(outcomeTimeout);\n    setOutcome(0);\n    const result = await fetchData(UPDATE_CHAT_MESSGAE_VIZ, {\n      auth: true,\n      method: 'POST',\n      data: {\n        visible: !isVisible,\n        idArray: [messageId],\n      },\n    });\n\n    if (result.success && result.message === 'changed') {\n      setMessage({ ...message, visible: !isVisible });\n      setOutcome(1);\n    } else {\n      setMessage({ ...message, visible: isVisible });\n      setOutcome(-1);\n    }\n    resetOutcome();\n  };\n\n  let outcomeIcon = <CheckCircleFilled style={{ color: 'transparent' }} />;\n  if (outcome) {\n    outcomeIcon =\n      outcome > 0 ? (\n        <CheckCircleFilled style={{ color: 'var(--ant-success)' }} />\n      ) : (\n        <ExclamationCircleFilled style={{ color: 'var(--ant-warning)' }} />\n      );\n  }\n\n  const toolTipMessage = `Click to ${isVisible ? 'hide' : 'show'} this message`;\n  return (\n    <div className={`toggle-switch ${isVisible ? '' : 'hidden'}`}>\n      <span className=\"outcome-icon\">{outcomeIcon}</span>\n      <Tooltip title={toolTipMessage} placement=\"topRight\">\n        <Button\n          shape=\"circle\"\n          size=\"small\"\n          type=\"text\"\n          icon={isVisible ? <EyeOutlined /> : <EyeInvisibleOutlined />}\n          onClick={updateChatMessage}\n        />\n      </Tooltip>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport { Table, Typography, Button } from 'antd';\nimport { CheckCircleFilled, ExclamationCircleFilled } from '@ant-design/icons';\nimport classNames from 'classnames';\nimport { ColumnsType } from 'antd/es/table';\nimport format from 'date-fns/format';\n\nimport { MessageType } from '../../../types/chat';\nimport {\n  CHAT_HISTORY,\n  fetchData,\n  FETCH_INTERVAL,\n  UPDATE_CHAT_MESSGAE_VIZ,\n} from '../../../utils/apis';\nimport { isEmptyObject } from '../../../utils/format';\nimport { MessageVisiblityToggle } from '../../../components/admin/MessageVisiblityToggle';\nimport { UserPopover } from '../../../components/admin/UserPopover';\n\nconst { Title } = Typography;\n\nfunction createUserNameFilters(messages: MessageType[]) {\n  const filtered = messages.reduce((acc, curItem) => {\n    const curAuthor = curItem.user.id;\n    if (!acc.some(item => item.text === curAuthor)) {\n      acc.push({ text: curAuthor, value: curAuthor });\n    }\n    return acc;\n  }, []);\n\n  // sort by name\n  return filtered.sort((a, b) => {\n    const nameA = a.text.toUpperCase(); // ignore upper and lowercase\n    const nameB = b.text.toUpperCase(); // ignore upper and lowercase\n    if (nameA < nameB) {\n      return -1;\n    }\n    if (nameA > nameB) {\n      return 1;\n    }\n    // names must be equal\n    return 0;\n  });\n}\nexport const OUTCOME_TIMEOUT = 3000;\n\nexport default function Chat() {\n  const [messages, setMessages] = useState([]);\n  const [selectedRowKeys, setSelectedRows] = useState([]);\n  const [bulkProcessing, setBulkProcessing] = useState(false);\n  const [bulkOutcome, setBulkOutcome] = useState(null);\n  const [bulkAction, setBulkAction] = useState('');\n  let outcomeTimeout = null;\n  let chatReloadInterval = null;\n\n  const getInfo = async () => {\n    try {\n      const result = await fetchData(CHAT_HISTORY, { auth: true });\n      if (isEmptyObject(result)) {\n        setMessages([]);\n      } else {\n        setMessages(result);\n      }\n    } catch (error) {\n      console.log('==== error', error);\n    }\n  };\n\n  useEffect(() => {\n    getInfo();\n\n    chatReloadInterval = setInterval(() => {\n      getInfo();\n    }, FETCH_INTERVAL);\n\n    return () => {\n      clearTimeout(outcomeTimeout);\n      clearTimeout(chatReloadInterval);\n    };\n  }, []);\n\n  const nameFilters = createUserNameFilters(messages);\n\n  const rowSelection = {\n    selectedRowKeys,\n    onChange: (selectedKeys: string[]) => {\n      setSelectedRows(selectedKeys);\n    },\n  };\n\n  const updateMessage = message => {\n    const messageIndex = messages.findIndex(m => m.id === message.id);\n    messages.splice(messageIndex, 1, message);\n    setMessages([...messages]);\n  };\n\n  const resetBulkOutcome = () => {\n    outcomeTimeout = setTimeout(() => {\n      setBulkOutcome(null);\n      setBulkAction('');\n    }, OUTCOME_TIMEOUT);\n  };\n  const handleSubmitBulk = async bulkVisibility => {\n    setBulkProcessing(true);\n    const result = await fetchData(UPDATE_CHAT_MESSGAE_VIZ, {\n      auth: true,\n      method: 'POST',\n      data: {\n        visible: bulkVisibility,\n        idArray: selectedRowKeys,\n      },\n    });\n\n    if (result.success && result.message === 'changed') {\n      setBulkOutcome(<CheckCircleFilled />);\n      resetBulkOutcome();\n\n      // update messages\n      const updatedList = [...messages];\n      selectedRowKeys.map(key => {\n        const messageIndex = updatedList.findIndex(m => m.id === key);\n        const newMessage = { ...messages[messageIndex], visible: bulkVisibility };\n        updatedList.splice(messageIndex, 1, newMessage);\n        return null;\n      });\n      setMessages(updatedList);\n      setSelectedRows([]);\n    } else {\n      setBulkOutcome(<ExclamationCircleFilled />);\n      resetBulkOutcome();\n    }\n    setBulkProcessing(false);\n  };\n  const handleSubmitBulkShow = () => {\n    setBulkAction('show');\n    handleSubmitBulk(true);\n  };\n  const handleSubmitBulkHide = () => {\n    setBulkAction('hide');\n    handleSubmitBulk(false);\n  };\n\n  const chatColumns: ColumnsType<MessageType> = [\n    {\n      title: 'Time',\n      dataIndex: 'timestamp',\n      key: 'timestamp',\n      className: 'timestamp-col',\n      defaultSortOrder: 'descend',\n      render: timestamp => {\n        const dateObject = new Date(timestamp);\n        return format(dateObject, 'PP pp');\n      },\n      sorter: (a, b) => new Date(a.timestamp).getTime() - new Date(b.timestamp).getTime(),\n      width: 90,\n    },\n    {\n      title: 'User',\n      dataIndex: 'user',\n      key: 'user',\n      className: 'name-col',\n      filters: nameFilters,\n      onFilter: (value, record) => record.user.id === value,\n      sorter: (a, b) => a.user.displayName.localeCompare(b.user.displayName),\n      sortDirections: ['ascend', 'descend'],\n      ellipsis: true,\n      render: user => {\n        const { displayName } = user;\n        return <UserPopover user={user}>{displayName}</UserPopover>;\n      },\n      width: 110,\n    },\n    {\n      title: 'Message',\n      dataIndex: 'body',\n      key: 'body',\n      className: 'message-col',\n      width: 320,\n      render: body => (\n        <div\n          className=\"message-contents\"\n          // eslint-disable-next-line react/no-danger\n          dangerouslySetInnerHTML={{ __html: body }}\n        />\n      ),\n    },\n    {\n      title: '',\n      dataIndex: 'hiddenAt',\n      key: 'hiddenAt',\n      className: 'toggle-col',\n      filters: [\n        { text: 'Visible messages', value: true },\n        { text: 'Hidden messages', value: false },\n      ],\n      onFilter: (value, record) => record.visible === value,\n      render: (hiddenAt, record) => (\n        <MessageVisiblityToggle isVisible={!hiddenAt} message={record} setMessage={updateMessage} />\n      ),\n      width: 30,\n    },\n  ];\n\n  const bulkDivClasses = classNames({\n    'bulk-editor': true,\n    active: selectedRowKeys.length,\n  });\n\n  return (\n    <div className=\"chat-messages\">\n      <Title>Chat Messages</Title>\n      <p>Manage the messages from viewers that show up on your stream.</p>\n      <div className={bulkDivClasses}>\n        <span className=\"label\">Check multiple messages to change their visibility to: </span>\n\n        <Button\n          type=\"primary\"\n          size=\"small\"\n          shape=\"round\"\n          className=\"button\"\n          loading={bulkAction === 'show' && bulkProcessing}\n          icon={bulkAction === 'show' && bulkOutcome}\n          disabled={!selectedRowKeys.length || (bulkAction && bulkAction !== 'show')}\n          onClick={handleSubmitBulkShow}\n        >\n          Show\n        </Button>\n        <Button\n          type=\"primary\"\n          size=\"small\"\n          shape=\"round\"\n          className=\"button\"\n          loading={bulkAction === 'hide' && bulkProcessing}\n          icon={bulkAction === 'hide' && bulkOutcome}\n          disabled={!selectedRowKeys.length || (bulkAction && bulkAction !== 'hide')}\n          onClick={handleSubmitBulkHide}\n        >\n          Hide\n        </Button>\n      </div>\n      <Table\n        size=\"small\"\n        className=\"table-container\"\n        pagination={{ defaultPageSize: 100, showSizeChanger: true }}\n        scroll={{ y: 540 }}\n        rowClassName={record => (record.hiddenAt ? 'hidden' : '')}\n        dataSource={messages}\n        columns={chatColumns}\n        rowKey={row => row.id}\n        rowSelection={rowSelection}\n      />\n    </div>\n  );\n}\n","/* eslint-disable prefer-destructuring */\nconst ADMIN_USERNAME = process.env.NEXT_PUBLIC_ADMIN_USERNAME;\nconst ADMIN_STREAMKEY = process.env.NEXT_PUBLIC_ADMIN_STREAMKEY;\nexport const NEXT_PUBLIC_API_HOST = process.env.NEXT_PUBLIC_API_HOST;\n\nconst API_LOCATION = `${NEXT_PUBLIC_API_HOST}api/admin/`;\n\nexport const FETCH_INTERVAL = 15000;\n\n// Current inbound broadcaster info\nexport const STATUS = `${API_LOCATION}status`;\n\n// Disconnect inbound stream\nexport const DISCONNECT = `${API_LOCATION}disconnect`;\n\n// Change the current streaming key in memory\nexport const STREAMKEY_CHANGE = `${API_LOCATION}changekey`;\n\n// Current server config\nexport const SERVER_CONFIG = `${API_LOCATION}serverconfig`;\n\n// Base url to update config settings\nexport const SERVER_CONFIG_UPDATE_URL = `${API_LOCATION}config`;\n\n// Get viewer count over time\nexport const VIEWERS_OVER_TIME = `${API_LOCATION}viewersOverTime`;\n\n// Get active viewer details\nexport const ACTIVE_VIEWER_DETAILS = `${API_LOCATION}viewers`;\n\n// Get currently connected chat clients\nexport const CONNECTED_CLIENTS = `${API_LOCATION}chat/clients`;\n\n// Get list of disabled/blocked chat users\nexport const DISABLED_USERS = `${API_LOCATION}chat/users/disabled`;\n\n// Disable/enable a single user\nexport const USER_ENABLED_TOGGLE = `${API_LOCATION}chat/users/setenabled`;\n\n// Get banned IP addresses\nexport const BANNED_IPS = `${API_LOCATION}chat/users/ipbans`;\n\n// Remove IP ban\nexport const BANNED_IP_REMOVE = `${API_LOCATION}chat/users/ipbans/remove`;\n\n// Disable/enable a single user\nexport const USER_SET_MODERATOR = `${API_LOCATION}chat/users/setmoderator`;\n\n// Get list of moderators\nexport const MODERATORS = `${API_LOCATION}chat/users/moderators`;\n\n// Get hardware stats\nexport const HARDWARE_STATS = `${API_LOCATION}hardwarestats`;\n\n// Get all logs\nexport const LOGS_ALL = `${API_LOCATION}logs`;\n\n// Get warnings + errors\nexport const LOGS_WARN = `${API_LOCATION}logs/warnings`;\n\n// Get chat history\nexport const CHAT_HISTORY = `${API_LOCATION}chat/messages`;\n\n// Get chat history\nexport const UPDATE_CHAT_MESSGAE_VIZ = `/api/admin/chat/messagevisibility`;\n\n// Upload a new custom emoji\nexport const UPLOAD_EMOJI = `${API_LOCATION}emoji/upload`;\n\n// Delete a custom emoji\nexport const DELETE_EMOJI = `${API_LOCATION}emoji/delete`;\n\n// Get all access tokens\nexport const ACCESS_TOKENS = `${API_LOCATION}accesstokens`;\n\n// Delete a single access token\nexport const DELETE_ACCESS_TOKEN = `${API_LOCATION}accesstokens/delete`;\n\n// Create a new access token\nexport const CREATE_ACCESS_TOKEN = `${API_LOCATION}accesstokens/create`;\n\n// Get webhooks\nexport const WEBHOOKS = `${API_LOCATION}webhooks`;\n\n// Delete a single webhook\nexport const DELETE_WEBHOOK = `${API_LOCATION}webhooks/delete`;\n\n// Create a single webhook\nexport const CREATE_WEBHOOK = `${API_LOCATION}webhooks/create`;\n\n// hard coded social icons list\nexport const SOCIAL_PLATFORMS_LIST = `${NEXT_PUBLIC_API_HOST}api/socialplatforms`;\n\n// set external action links\nexport const EXTERNAL_ACTIONS = `${API_LOCATION}api/externalactions`;\n\n// send a message to the fediverse\nexport const FEDERATION_MESSAGE_SEND = `${API_LOCATION}federation/send`;\n\n// Get followers\nexport const FOLLOWERS = `${API_LOCATION}followers`;\n\n// Get followers pending approval\nexport const FOLLOWERS_PENDING = `${API_LOCATION}followers/pending`;\n\n// Get followers who were blocked or rejected\nexport const FOLLOWERS_BLOCKED = `${API_LOCATION}followers/blocked`;\n\n// Approve, reject a follow request\nexport const SET_FOLLOWER_APPROVAL = `${API_LOCATION}followers/approve`;\n\n// List of inbound federated actions that took place.\nexport const FEDERATION_ACTIONS = `${API_LOCATION}federation/actions`;\n\nexport const API_STREAM_HEALTH_METRICS = `${API_LOCATION}metrics/video`;\n\n// Save an array of stream keys\nexport const UPDATE_STREAM_KEYS = `${API_LOCATION}config/streamkeys`;\n\nexport const API_YP_RESET = `${API_LOCATION}yp/reset`;\n\nexport const TEMP_UPDATER_API = LOGS_ALL;\n\nconst GITHUB_RELEASE_URL = 'https://api.github.com/repos/owncast/owncast/releases/latest';\n\ninterface FetchOptions {\n  data?: any;\n  method?: string;\n  auth?: boolean;\n}\n\nexport async function fetchData(url: string, options?: FetchOptions) {\n  const { data, method = 'GET', auth = true } = options || {};\n\n  // eslint-disable-next-line no-undef\n  const requestOptions: RequestInit = {\n    method,\n  };\n\n  if (data) {\n    requestOptions.body = JSON.stringify(data);\n  }\n\n  if (auth && ADMIN_USERNAME && ADMIN_STREAMKEY) {\n    const encoded = btoa(`${ADMIN_USERNAME}:${ADMIN_STREAMKEY}`);\n    requestOptions.headers = {\n      Authorization: `Basic ${encoded}`,\n    };\n    requestOptions.mode = 'cors';\n    requestOptions.credentials = 'include';\n  }\n\n  try {\n    const response = await fetch(url, requestOptions);\n    const json = await response.json();\n\n    if (!response.ok) {\n      const message = json.message || `An error has occurred: ${response.status}`;\n      throw new Error(message);\n    }\n    return json;\n  } catch (error) {\n    console.error(error);\n    return error;\n    // console.log(error)\n    // throw new Error(error)\n  }\n}\n\nexport async function getUnauthedData(url: string, options?: FetchOptions) {\n  const opts = {\n    method: 'GET',\n    auth: false,\n    ...options,\n  };\n  return fetchData(url, opts);\n}\n\nexport async function fetchExternalData(url: string) {\n  try {\n    const response = await fetch(url, {\n      referrerPolicy: 'no-referrer', // Send no referrer header for privacy reasons.\n      referrer: '',\n    });\n    if (!response.ok) {\n      const message = `An error has occured: ${response.status}`;\n      throw new Error(message);\n    }\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    console.log(error);\n  }\n  return {};\n}\n\nexport async function getGithubRelease() {\n  return fetchExternalData(GITHUB_RELEASE_URL);\n}\n\n// Stolen from https://gist.github.com/prenagha/98bbb03e27163bc2f5e4\nconst VPAT = /^\\d+(\\.\\d+){0,2}$/;\nfunction upToDate(local, remote) {\n  if (!local || !remote || local.length === 0 || remote.length === 0) return false;\n  if (local === remote) return true;\n  if (VPAT.test(local) && VPAT.test(remote)) {\n    const lparts = local.split('.');\n    while (lparts.length < 3) lparts.push('0');\n    const rparts = remote.split('.');\n    while (rparts.length < 3) rparts.push('0');\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < 3; i++) {\n      const l = parseInt(lparts[i], 10);\n      const r = parseInt(rparts[i], 10);\n      if (l === r)\n        // eslint-disable-next-line no-continue\n        continue;\n      return l > r;\n    }\n    return true;\n  }\n  return local >= remote;\n}\n\n// Make a request to the server status API and the Github releases API\n// and return a release if it's newer than the server version.\nexport async function upgradeVersionAvailable(currentVersion) {\n  const recentRelease = await getGithubRelease();\n  let recentReleaseVersion = recentRelease.tag_name;\n\n  if (recentReleaseVersion.substr(0, 1) === 'v') {\n    recentReleaseVersion = recentReleaseVersion.substr(1);\n  }\n\n  if (!upToDate(currentVersion, recentReleaseVersion)) {\n    return recentReleaseVersion;\n  }\n\n  return null;\n}\n","import UAParser from 'ua-parser-js';\n\nexport function formatIPAddress(ipAddress: string): string {\n  const ipAddressComponents = ipAddress.split(':');\n\n  // Wipe out the port component\n  ipAddressComponents[ipAddressComponents.length - 1] = '';\n\n  let ip = ipAddressComponents.join(':');\n  ip = ip.slice(0, ip.length - 1);\n  if (ip === '[::1]' || ip === '127.0.0.1') {\n    return 'Localhost';\n  }\n\n  return ip;\n}\n\n// check if obj is {}\nexport function isEmptyObject(obj) {\n  return !obj || (Object.keys(obj).length === 0 && obj.constructor === Object);\n}\n\nexport function padLeft(text, pad, size) {\n  return String(pad.repeat(size) + text).slice(-size);\n}\n\nexport function parseSecondsToDurationString(seconds = 0) {\n  const finiteSeconds = Number.isFinite(+seconds) ? Math.abs(seconds) : 0;\n\n  const days = Math.floor(finiteSeconds / 86400);\n  const daysString = days > 0 ? `${days} day${days > 1 ? 's' : ''} ` : '';\n\n  const hours = Math.floor((finiteSeconds / 3600) % 24);\n  const hoursString = hours || days ? padLeft(`${hours}:`, '0', 3) : '';\n\n  const mins = Math.floor((finiteSeconds / 60) % 60);\n  const minString = padLeft(`${mins}:`, '0', 3);\n\n  const secs = Math.floor(finiteSeconds % 60);\n  const secsString = padLeft(`${secs}`, '0', 2);\n\n  return daysString + hoursString + minString + secsString;\n}\n\nexport function makeAndStringFromArray(arr: string[]): string {\n  if (arr.length === 1) return arr[0];\n  const firsts = arr.slice(0, arr.length - 1);\n  const last = arr[arr.length - 1];\n  return `${firsts.join(', ')} and ${last}`;\n}\n\nexport function formatUAstring(uaString: string) {\n  const parser = UAParser(uaString);\n  const { device, os, browser } = parser;\n  const { major: browserVersion, name } = browser;\n  const { version: osVersion, name: osName } = os;\n  const { model, type } = device;\n\n  if (uaString === 'libmpv') {\n    return 'mpv media player';\n  }\n  // Fallback to just displaying the raw agent string.\n  if (!name || !browserVersion || !osName) {\n    return uaString;\n  }\n\n  const deviceString = model || type ? ` (${model || type})` : '';\n  return `${name} ${browserVersion} on ${osName} ${osVersion}\n  ${deviceString}`;\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","BanUserButton","user","isEnabled","label","onClick","param","buttonClicked","id","result","fetchData","USER_ENABLED_TOGGLE","data","userId","enabled","method","auth","success","e","console","error","actionString","icon","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","ExclamationCircleFilled","style","color","QuestionCircleFilled","content","jsxs","Fragment","strong","displayName","confirmBlockAction","Modal","title","concat","onCancel","onOk","Promise","resolve","reject","setTimeout","okType","okText","Button","type","size","StopTwoTone","twoToneColor","className","defaultProps","ModeratorUserButton","setAsModerator","USER_SET_MODERATOR","isModerator","scopes","includes","jsx_runtime","SafetyCertificateTwoTone","Tooltip","dynamic","all","then","bind","mod","ssr","UserPopover","connectionInfo","children","isModalOpen","setIsModalOpen","useState","handleShowModal","handleCloseModal","createdAt","previousNames","nameChangedAt","disabledAt","connectedAt","messageCount","userAgent","lastNameChangeDate","nameList","length","Date","reverse","dateObject","createdAtDate","format","lastNameChangeDuration","formatDistanceToNow","br","placement","button","aria-label","destroyOnClose","width","cancelText","okButtonProps","display","open","div","Typography","level","p","Row","gutter","Col","md","ul","li","formatUAstring","uniq","map","name","index","span","Divider","Space","direction","code","formatDisplayDate","date","UserTable","Table","pagination","hideOnSinglePage","columns","dataIndex","key","render","sorter","a","b","getTime","sortDirections","defaultSortOrder","_","dataSource","rowKey","MessageVisiblityToggle","isVisible","message","setMessage","isEmptyObject","outcomeTimeout","outcome","setOutcome","messageId","resetOutcome","useEffect","clearTimeout","updateChatMessage","UPDATE_CHAT_MESSGAE_VIZ","visible","idArray","outcomeIcon","CheckCircleFilled","shape","EyeOutlined","EyeInvisibleOutlined","Title","OUTCOME_TIMEOUT","Chat","messages","setMessages","selectedRowKeys","setSelectedRows","bulkProcessing","setBulkProcessing","bulkOutcome","setBulkOutcome","bulkAction","setBulkAction","chatReloadInterval","getInfo","CHAT_HISTORY","log","setInterval","FETCH_INTERVAL","nameFilters","createUserNameFilters","filtered","reduce","acc","curItem","curAuthor","some","item","text","value","sort","nameA","toUpperCase","nameB","updateMessage","messageIndex","findIndex","m","splice","resetBulkOutcome","handleSubmitBulk","bulkVisibility","updatedList","newMessage","handleSubmitBulkShow","handleSubmitBulkHide","bulkDivClasses","classNames","active","loading","disabled","defaultPageSize","showSizeChanger","scroll","y","rowClassName","record","hiddenAt","timestamp","filters","onFilter","localeCompare","ellipsis","body","dangerouslySetInnerHTML","__html","row","rowSelection","onChange","selectedKeys","ADMIN_USERNAME","process","env","NEXT_PUBLIC_ADMIN_USERNAME","ADMIN_STREAMKEY","NEXT_PUBLIC_ADMIN_STREAMKEY","NEXT_PUBLIC_API_HOST","API_LOCATION","STATUS","SERVER_CONFIG","SERVER_CONFIG_UPDATE_URL","VIEWERS_OVER_TIME","ACTIVE_VIEWER_DETAILS","CONNECTED_CLIENTS","DISABLED_USERS","BANNED_IPS","BANNED_IP_REMOVE","MODERATORS","HARDWARE_STATS","LOGS_ALL","LOGS_WARN","UPLOAD_EMOJI","DELETE_EMOJI","ACCESS_TOKENS","DELETE_ACCESS_TOKEN","CREATE_ACCESS_TOKEN","WEBHOOKS","DELETE_WEBHOOK","CREATE_WEBHOOK","SOCIAL_PLATFORMS_LIST","FEDERATION_MESSAGE_SEND","FOLLOWERS","FOLLOWERS_PENDING","FOLLOWERS_BLOCKED","SET_FOLLOWER_APPROVAL","FEDERATION_ACTIONS","API_STREAM_HEALTH_METRICS","UPDATE_STREAM_KEYS","API_YP_RESET","url","options","requestOptions","JSON","stringify","encoded","btoa","headers","Authorization","mode","credentials","response","fetch","json","ok","status","getUnauthedData","opts","fetchExternalData","referrerPolicy","referrer","getGithubRelease","VPAT","upgradeVersionAvailable","currentVersion","recentRelease","recentReleaseVersion","tag_name","substr","upToDate","local","remote","test","lparts","split","rparts","i","l","parseInt","r","formatIPAddress","ipAddress","ipAddressComponents","ip","join","slice","obj","Object","keys","constructor","padLeft","pad","String","repeat","parseSecondsToDurationString","seconds","finiteSeconds","Number","isFinite","Math","abs","days","floor","daysString","hours","hoursString","minString","secsString","uaString","parser","UAParser","device","os","browser","major","browserVersion","version","osVersion","osName","model","deviceString"],"sourceRoot":""}