{"version":3,"file":"static/chunks/pages/admin/chat/users-787b640c045a8a93.js","mappings":"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","sources":["webpack://_N_E/?66df","webpack://_N_E/./components/admin/ClientTable.tsx","webpack://_N_E/./components/admin/BannedIPsTable.tsx","webpack://_N_E/./pages/admin/chat/users.tsx","webpack://_N_E/<anon>"],"sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/admin/chat/users\",\n      function () {\n        return require(\"private-next-pages/admin/chat/users.tsx\");\n      }\n    ]);\n    if(module.hot) {\n      module.hot.dispose(function () {\n        window.__NEXT_P.push([\"/admin/chat/users\"])\n      });\n    }\n  ","import { Input, Table } from 'antd';\nimport { FilterDropdownProps, SortOrder } from 'antd/lib/table/interface';\nimport { ColumnsType } from 'antd/es/table';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { formatDistanceToNow } from 'date-fns';\nimport { FC } from 'react';\nimport { Client } from '../../types/chat';\nimport { UserPopover } from './UserPopover';\nimport { BanUserButton } from './BanUserButton';\nimport { formatUAstring } from '../../utils/format';\n\nexport type ClientTableProps = {\n  data: Client[];\n};\n\nexport const ClientTable: FC<ClientTableProps> = ({ data }) => {\n  const columns: ColumnsType<Client> = [\n    {\n      title: 'Display Name',\n      key: 'username',\n      // eslint-disable-next-line react/destructuring-assignment\n      render: (client: Client) => {\n        const { user, connectedAt, messageCount, userAgent } = client;\n        const connectionInfo = { connectedAt, messageCount, userAgent };\n        return (\n          <UserPopover user={user} connectionInfo={connectionInfo}>\n            <span className=\"display-name\">{user.displayName}</span>\n          </UserPopover>\n        );\n      },\n      sorter: (a: any, b: any) => b.user.displayName.localeCompare(a.user.displayName),\n      filterIcon: <SearchOutlined />,\n      // eslint-disable-next-line react/no-unstable-nested-components\n      filterDropdown: ({ setSelectedKeys, selectedKeys, confirm }: FilterDropdownProps) => (\n        <div style={{ padding: 8 }}>\n          <Input\n            placeholder=\"Search display names...\"\n            value={selectedKeys[0]}\n            onChange={e => {\n              setSelectedKeys(e.target.value ? [e.target.value] : []);\n              confirm({ closeDropdown: false });\n            }}\n          />\n        </div>\n      ),\n      onFilter: (value: string, record: Client) => record.user.displayName.includes(value),\n      sortDirections: ['descend', 'ascend'] as SortOrder[],\n    },\n    {\n      title: 'Messages sent',\n      dataIndex: 'messageCount',\n      key: 'messageCount',\n      className: 'number-col',\n      width: '12%',\n      sorter: (a: any, b: any) => a.messageCount - b.messageCount,\n      sortDirections: ['descend', 'ascend'] as SortOrder[],\n      render: (count: number) => <div style={{ textAlign: 'center' }}>{count}</div>,\n    },\n    {\n      title: 'Connected Time',\n      dataIndex: 'connectedAt',\n      key: 'connectedAt',\n      defaultSortOrder: 'ascend',\n      render: (time: Date) => formatDistanceToNow(new Date(time)),\n      sorter: (a: any, b: any) =>\n        new Date(b.connectedAt).getTime() - new Date(a.connectedAt).getTime(),\n      sortDirections: ['descend', 'ascend'] as SortOrder[],\n    },\n    {\n      title: 'User Agent',\n      dataIndex: 'userAgent',\n      key: 'userAgent',\n      render: (ua: string) => formatUAstring(ua),\n    },\n    {\n      title: 'Location',\n      dataIndex: 'geo',\n      key: 'geo',\n      render: geo => (geo ? `${geo.regionName}, ${geo.countryCode}` : '-'),\n    },\n    {\n      title: '',\n      key: 'block',\n      className: 'actions-col',\n      render: (_, row) => <BanUserButton user={row.user} isEnabled={!row.user.disabledAt} />,\n    },\n  ];\n\n  return (\n    <Table\n      className=\"table-container\"\n      pagination={{ hideOnSinglePage: true }}\n      columns={columns}\n      dataSource={data}\n      size=\"small\"\n      rowKey=\"id\"\n    />\n  );\n};\n","import { Table, Button } from 'antd';\nimport format from 'date-fns/format';\nimport { SortOrder } from 'antd/lib/table/interface';\nimport React, { FC } from 'react';\nimport { StopTwoTone } from '@ant-design/icons';\nimport { User } from '../../types/chat';\nimport { BANNED_IP_REMOVE, fetchData } from '../../utils/apis';\n\nfunction formatDisplayDate(date: string | Date) {\n  return format(new Date(date), 'MMM d H:mma');\n}\n\nasync function removeIPAddressBan(ipAddress: String) {\n  try {\n    await fetchData(BANNED_IP_REMOVE, {\n      data: { value: ipAddress },\n      method: 'POST',\n      auth: true,\n    });\n  } catch (e) {\n    // eslint-disable-next-line no-console\n    console.error(e);\n  }\n}\n\nexport type UserTableProps = {\n  data: User[];\n};\n\nexport const BannedIPsTable: FC<UserTableProps> = ({ data }) => {\n  const columns = [\n    {\n      title: 'IP Address',\n      dataIndex: 'ipAddress',\n      key: 'ipAddress',\n    },\n    {\n      title: 'Reason',\n      dataIndex: 'notes',\n      key: 'notes',\n    },\n    {\n      title: 'Created',\n      dataIndex: 'createdAt',\n      key: 'createdAt',\n      render: (date: Date) => formatDisplayDate(date),\n      sorter: (a: any, b: any) => new Date(a.createdAt).getTime() - new Date(b.createdAt).getTime(),\n      sortDirections: ['descend', 'ascend'] as SortOrder[],\n    },\n    {\n      title: '',\n      key: 'block',\n      className: 'actions-col',\n      render: (_, ip) => (\n        <Button\n          title=\"Remove IP Address Ban\"\n          onClick={() => removeIPAddressBan(ip.ipAddress)}\n          icon={<StopTwoTone twoToneColor=\"#ff4d4f\" />}\n          className=\"block-user-button\"\n        />\n      ),\n    },\n  ];\n\n  return (\n    <Table\n      pagination={{ hideOnSinglePage: true }}\n      className=\"table-container\"\n      columns={columns}\n      dataSource={data}\n      size=\"large\"\n      rowKey=\"ipAddress\"\n    />\n  );\n};\n","import React, { useState, useEffect, useContext } from 'react';\nimport { Tabs } from 'antd';\nimport { ServerStatusContext } from '../../../utils/server-status-context';\nimport {\n  CONNECTED_CLIENTS,\n  fetchData,\n  DISABLED_USERS,\n  MODERATORS,\n  BANNED_IPS,\n} from '../../../utils/apis';\nimport { UserTable } from '../../../components/admin/UserTable';\nimport { ClientTable } from '../../../components/admin/ClientTable';\nimport { BannedIPsTable } from '../../../components/admin/BannedIPsTable';\n\nexport const FETCH_INTERVAL = 10 * 1000; // 10 sec\n\nexport default function ChatUsers() {\n  const context = useContext(ServerStatusContext);\n  const { online } = context || {};\n\n  const [disabledUsers, setDisabledUsers] = useState([]);\n  const [ipBans, setIPBans] = useState([]);\n  const [clients, setClients] = useState([]);\n  const [moderators, setModerators] = useState([]);\n\n  const getInfo = async () => {\n    try {\n      const result = await fetchData(DISABLED_USERS);\n      setDisabledUsers(result);\n    } catch (error) {\n      console.log('==== error', error);\n    }\n\n    try {\n      const result = await fetchData(CONNECTED_CLIENTS);\n      setClients(result);\n    } catch (error) {\n      console.log('==== error', error);\n    }\n\n    try {\n      const result = await fetchData(MODERATORS);\n      setModerators(result);\n    } catch (error) {\n      console.error('error fetching moderators', error);\n    }\n\n    try {\n      const result = await fetchData(BANNED_IPS);\n      setIPBans(result);\n    } catch (error) {\n      console.error('error fetching banned ips', error);\n    }\n  };\n\n  useEffect(() => {\n    let getStatusIntervalId = null;\n\n    getInfo();\n\n    getStatusIntervalId = setInterval(getInfo, FETCH_INTERVAL);\n    // returned function will be called on component unmount\n    return () => {\n      clearInterval(getStatusIntervalId);\n    };\n  }, [online]);\n\n  const connectedUsers = online ? (\n    <>\n      <ClientTable data={clients} />\n      <p className=\"description\">\n        Visit the{' '}\n        <a\n          href=\"https://owncast.online/docs/viewers/?source=admin\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          documentation\n        </a>{' '}\n        to configure additional details about your viewers.\n      </p>\n    </>\n  ) : (\n    <p className=\"description\">\n      When a stream is active and chat is enabled, connected chat clients will be displayed here.\n    </p>\n  );\n\n  const connectedUserTabTitle = (\n    <span>Connected {online ? `(${clients.length})` : '(offline)'}</span>\n  );\n\n  const bannedUsersTabTitle = <span>Banned Users ({disabledUsers.length})</span>;\n  const bannedUsersTable = <UserTable data={disabledUsers} />;\n\n  const bannedIPTabTitle = <span>IP Bans ({ipBans.length})</span>;\n  const bannedIpTable = <BannedIPsTable data={ipBans} />;\n\n  const moderatorUsersTabTitle = <span>Moderators ({moderators.length})</span>;\n  const moderatorTable = <UserTable data={moderators} />;\n\n  const items = [\n    { label: connectedUserTabTitle, key: '1', children: connectedUsers },\n    { label: bannedUsersTabTitle, key: '2', children: bannedUsersTable },\n    { label: bannedIPTabTitle, key: '3', children: bannedIpTable },\n    { label: moderatorUsersTabTitle, key: '4', children: moderatorTable },\n  ];\n\n  return <Tabs defaultActiveKey=\"1\" items={items} />;\n}\n"],"names":["window","__NEXT_P","push","__webpack_require__","ClientTable","data","param","columns","title","key","render","user","connectedAt","messageCount","userAgent","client","jsx_runtime","jsx","UserPopover","connectionInfo","span","className","displayName","sorter","a","b","localeCompare","filterIcon","SearchOutlined","filterDropdown","setSelectedKeys","selectedKeys","confirm","div","style","padding","Input","placeholder","value","onChange","e","target","closeDropdown","onFilter","record","includes","sortDirections","dataIndex","width","textAlign","count","defaultSortOrder","formatDistanceToNow","Date","time","getTime","formatUAstring","ua","geo","regionName","concat","countryCode","_","row","BanUserButton","isEnabled","disabledAt","Table","pagination","hideOnSinglePage","dataSource","size","rowKey","removeIPAddressBan","ipAddress","fetchData","BANNED_IP_REMOVE","method","auth","console","error","BannedIPsTable","format","date","createdAt","ip","Button","onClick","icon","StopTwoTone","twoToneColor","FETCH_INTERVAL","ChatUsers","context","useContext","ServerStatusContext","online","disabledUsers","setDisabledUsers","useState","ipBans","setIPBans","clients","setClients","moderators","setModerators","getInfo","result","DISABLED_USERS","log","CONNECTED_CLIENTS","MODERATORS","BANNED_IPS","useEffect","getStatusIntervalId","setInterval","clearInterval","connectedUsers","jsxs","Fragment","p","href","rel","connectedUserTabTitle","length","bannedUsersTabTitle","bannedUsersTable","UserTable","bannedIPTabTitle","bannedIpTable","moderatorUsersTabTitle","moderatorTable","Tabs","defaultActiveKey","items","label","children"],"sourceRoot":""}