{"version":3,"file":"static/chunks/3522-113d0edb83dbe0eb.js","mappings":"mGAEA,IAAAA,EAA8BC,EAAA,eAC9BC,EAA6BD,EAAA,eAI7BE,EAAAC,CAAkB,QAClB,IAAAC,EAAAH,EAAuCD,EAAQ,QAC/CK,EAAAN,EAAoCC,EAAQ,QAC5CM,EAAAL,EAAmCD,EAAQ,QAC3CO,EAAAF,EAAAG,UAAA,UAAAC,CAAA,CAAAC,CAAA,EACA,OAAAL,EAAAM,aAAA,CAAAL,EAAA,WAAAF,EAAA,UACAM,IAAAA,CACA,EAAGD,EAAA,CACHG,UAAA,KACA,GACA,EAEAV,CAAAA,EAAAC,CAAkB,CADlBI,4RCIA,GAAM,CAAEM,MAAKA,CAAAA,CAAE,CAAGC,EAAAA,CAAUA,CAEfC,EAAuB,IAAM,CACxC,GAAM,CAACC,EAASC,EAAW,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,+BACjC,CAACC,EAAcC,EAAgB,CAAGF,CAAAA,EAAAA,EAAAA,QAAAA,EAAsB,IAAI,EAC5D,CAACG,EAAYC,EAAc,CAAGJ,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAEvCK,EAAmBC,CAAAA,EAAAA,EAAAA,UAAAA,EAAWC,EAAAA,EAAmBA,EACjD,CAAEC,aAAAA,CAAAA,CAAcC,sBAAAA,CAAAA,CAAuB,CAAGJ,GAAoB,CAAC,EAE/D,CAAEK,gBAAAA,CAAAA,CAAiB,CAAGF,EACtB,CAAEG,aAAcC,CAAAA,CAAgB,CAAGF,EAErCG,EAAa,IAAI,CAGfC,EAAc,IAAM,CACxBZ,EAAgB,IAAI,EACpBE,EAAc,IACdW,aAAaF,GACbA,EAAa,IAAI,EAInB,eAAeG,GAAa,CAC1Bd,EAAgBe,CAAAA,EAAAA,EAAAA,EAAAA,EAAkBC,EAAAA,EAAiBA,GACnD,MAAMC,CAAAA,EAAAA,EAAAA,EAAAA,EAAsB,CAC1BC,QAASC,EAAAA,EAAqBA,CAC9BC,KAAM,CAAEC,MAAOzB,CAAQ,EACvB0B,UAAW,GAAqB,CAC9Bf,EAAsB,CACpBgB,UAAW,eACXF,MAAOzB,EACP4B,KAAM,iBACR,GACAxB,EAAgBe,CAAAA,EAAAA,EAAAA,EAAAA,EAAkBU,EAAAA,EAAcA,CAAEC,GACpD,EACAC,QAAS,GAAqB,CAC5B3B,EAAgBe,CAAAA,EAAAA,EAAAA,EAAAA,EAAkBa,EAAAA,EAAYA,CAAEF,GAClD,CACF,GACAf,EAAakB,WAAWjB,EAAakB,EAAAA,EAAaA,CACpD,CAEAC,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,IAAM,CACdlC,EAAWa,EACb,EAAG,CAACF,EAAgB,EAEpB,IAAMwB,EAAmB/C,EAAAA,WAAiB,CAACoC,GAAS,CAClDxB,EAAWwB,GACPA,IAAUX,GAAmBT,EAEtBoB,IAAUX,GAAkBT,GACrCC,EAAc,IAFdA,EAAc,GAIlB,EAAG,EAAE,EAEL,MACE,GAAA+B,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,4BACb,GAAAH,EAAAI,GAAA,EAAC5C,EAAKA,CAAC6C,MAAO,EAAGF,UAAU,yBAAgB,yCAI3C,GAAAH,EAAAC,IAAA,EAACK,IAAAA,CAAEH,UAAU,wBAAc,oIAEY,IACrC,GAAAH,EAAAI,GAAA,EAACG,IAAAA,CAAEC,KAAK,uCAAuCC,IAAI,sBAAsBC,OAAO,kBAAS,2BAErF,OAGN,GAAAV,EAAAI,GAAA,EAACE,IAAAA,CAAEH,UAAU,uBAAc,+FAI3B,GAAAH,EAAAI,GAAA,EAACO,EAAAA,EAAUA,CAAAA,CACTvB,MAAOzB,EACPiD,YAAY,8BACZC,MAAOC,EAAAA,CAAMA,CACbC,OAAO,QACPC,WAAY,CAACC,CAAAA,EAAAA,EAAAA,GAAAA,IAAM,CACnBC,SAAUnB,IAGZ,GAAAC,EAAAI,GAAA,EAACe,KAAAA,CAAAA,GACD,GAAAnB,EAAAC,IAAA,EAACC,MAAAA,CAAIC,UAAU,iCACZnC,GACC,GAAAgC,EAAAI,GAAA,EAACgB,EAAAA,CAAMA,CAAAA,CAACC,KAAK,UAAUC,QAASzC,WAAY,SAI9C,GAAAmB,EAAAI,GAAA,EAACmB,EAAAA,CAAmBA,CAAAA,CAACC,OAAQ1D,SAIrC,0BCpGA,GAAM,CAAE2D,MAAAA,CAAAA,CAAO,CAAGC,EAAAA,CAAQA,CAEpBC,EAAW,cAOXC,EAAqB,CACzB,CAAEC,KAAM,sBAAuBC,YAAa,EAAG,EAC/C,CAAED,KAAM,sBAAuBC,YAAa,EAAG,EAC/C,CAAED,KAAM,sBAAuBC,YAAa,EAAG,EAC/C,CAAED,KAAM,sBAAuBC,YAAa,EAAG,EAC/C,CAAED,KAAM,sBAAuBC,YAAa,EAAG,EAC/C,CAAED,KAAM,sBAAuBC,YAAa,EAAG,EAC/C,CAAED,KAAM,sBAAuBC,YAAa,EAAG,EAC/C,CAAED,KAAM,sBAAuBC,YAAa,EAAG,EAChD,CAEKC,EAAmB,CACvB,CAAEF,KAAM,wBAAyBC,YAAa,EAAG,EACjD,CAAED,KAAM,wBAAyBC,YAAa,EAAG,EACjD,CAAED,KAAM,wBAAyBC,YAAa,EAAG,EACjD,CAAED,KAAM,wBAAyBC,YAAa,EAAG,EACjD,CAAED,KAAM,wBAAyBC,YAAa,EAAG,EACjD,CAAED,KAAM,wBAAyBC,YAAa,EAAG,EACjD,CAAED,KAAM,wBAAyBC,YAAa,EAAG,EACjD,CAAED,KAAM,wBAAyBC,YAAa,EAAG,EACjD,CAAED,KAAM,wBAAyBC,YAAa,EAAG,EACjD,CAAED,KAAM,wBAAyBC,YAAa,EAAG,EACjD,CAAED,KAAM,yBAA0BC,YAAa,EAAG,EAClD,CAAED,KAAM,yBAA0BC,YAAa,EAAG,EAClD,CAAED,KAAM,yBAA0BC,YAAa,EAAG,EACnD,CAEKE,EAA0B,CAC9B,CAAEH,KAAM,8BAA+BC,YAAa,YAAa,EACjE,CAAED,KAAM,qBAAsBC,YAAa,QAAS,EACpD,CAAED,KAAM,2BAA4BC,YAAa,cAAe,EAChE,CAAED,KAAM,yCAA0CC,YAAa,iBAAkB,EACjF,CAAED,KAAM,mCAAoCC,YAAa,YAAa,EACtE,CAAED,KAAM,sCAAuCC,YAAa,aAAc,EAC1E,CAAED,KAAM,uCAAwCC,YAAa,YAAa,EAC1E,CAAED,KAAM,gCAAiCC,YAAa,eAAgB,EACtE,CAAED,KAAM,4CAA6CC,YAAa,cAAe,EACjF,CAAED,KAAM,8CAA+CC,YAAa,sBAAuB,EAC3F,CAAED,KAAM,yCAA0CC,YAAa,iBAAkB,EAClF,CAEKG,EAAS,CAAC,CAAEJ,KAAM,wBAAyBC,YAAa,eAAgB,EAAE,CAG1EI,EAAqB,IACtBH,KACAC,KACAJ,KACAK,EACJ,CAACE,MAAM,CAAC,CAACC,EAAKC,KAEbD,CAAG,CAACC,EAAIR,IAAI,CAAC,CAAG,CAAEA,KAAMQ,EAAIR,IAAI,CAAEC,YAAaO,EAAIP,WAAW,EACvDM,GACN,CAAC,GAEJ,SAASE,EAAYC,CAUpB,CAAE,IAVkB,CACnBnD,MAAAA,CAAAA,CACAyC,KAAAA,CAAAA,CACAC,YAAAA,CAAAA,CACAZ,SAAAA,CAAAA,CAMD,CAVoBqB,EAWnB,MACE,GAAAvC,EAAAC,IAAA,EAACuC,EAAAA,CAAGA,CAAAA,CAACC,KAAM,YACT,GAAAzC,EAAAI,GAAA,EAACsC,QAAAA,CACCrB,KAAK,QACLsB,GAAId,EACJA,KAAMC,EACNc,MAAOd,EACP1C,MAAOA,EACPe,UAAW0C,IAAAA,WAAa,CACxB3B,SAAU4B,GAAK5B,EAASW,EAAMiB,EAAEpC,MAAM,CAACtB,KAAK,CAAE0C,KAEhD,GAAA9B,EAAAI,GAAA,EAACF,MAAAA,CAAI6C,MAAO,CAAEC,QAAS,KAAM,WAAIlB,MAVhBD,EAavB,CACe,SAASoB,GAAa,KA2KLC,EAAAA,EAQKA,EAlLnC,IAAMhF,EAAmBC,CAAAA,EAAAA,EAAAA,UAAAA,EAAWC,EAAAA,EAAmBA,EACjD,CAAEC,aAAAA,CAAAA,CAAc,CAAGH,EACnB,CAAEK,gBAAAA,CAAAA,CAAiB,CAAGF,EACtB,CAAE8E,oBAAAA,CAAAA,CAAqB,CAAG5E,EAE1B,CAAC2E,EAAQE,EAAU,CAAGvF,CAAAA,EAAAA,EAAAA,QAAAA,IACtB,CAACC,EAAcC,EAAgB,CAAGF,CAAAA,EAAAA,EAAAA,QAAAA,EAAsB,IAAI,EAG5Dc,EAAc,IAAM,CACxBZ,EAAgB,IAAI,EAEpBa,aADa,IAAI,CAEnB,EAEMyE,EAAmB,IAAM,CAC7B,IAAMC,EAAI,CAAC,EACX,IAAIvB,KAAqBC,KAA4BJ,KAAuBK,EAAO,CAACsB,OAAO,CACzFC,GAAS,CACP,IAAMC,EAAgBC,iBAAiBC,SAASC,eAAe,EAAEC,gBAAgB,CAC/E,KAAgBC,MAAA,CAAXN,EAAM3B,IAAI,EAEjByB,CAAAA,CAAC,CAACE,EAAM3B,IAAI,CAAC,CAAG,CAAEzC,MAAOqE,EAAcM,IAAI,GAAIjC,YAAa0B,EAAM1B,WAAW,CAC/E,GAEFsB,EAAUE,EACZ,EAEAxD,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,IAAM,CACduD,GACF,EAAG,EAAE,EAELvD,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,IAAM,CACd,GAAIkE,IAAAA,OAAOC,IAAI,CAACd,GAAqBe,MAAM,CAAQ,OAEnD,IAAMZ,EAAIJ,GAAU,CAAC,EACrBc,OAAOC,IAAI,CAACd,GAAqBI,OAAO,CAACY,GAAO,KAG/BjC,CAFfoB,CAAAA,CAAC,CAACa,EAAI,CAAG,CACP/E,MAAO+D,CAAmB,CAACgB,EAAI,CAC/BrC,YAAaI,CAAAA,IAAuB,GAAvBA,CAAAA,EAAAA,CAAkB,CAACiC,EAAI,GAAvBjC,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAyBJ,WAAW,GAAI,EACvD,CACF,GACAsB,EAAUE,EACZ,EAAG,CAACH,EAAoB,EAExB,IAAMiB,EAAc,CAACC,EAAkBb,EAAe1B,IAAwB,CAC5EsB,EAAU,CACR,GAAGF,CAAM,CACT,CAACmB,EAAS,CAAE,CAAEjF,MAAOoE,EAAO1B,YAAAA,CAAY,CAC1C,EACF,EAEMwC,EAAQ,SAAY,CACxB,MAAMtF,CAAAA,EAAAA,EAAAA,EAAAA,EAAsB,CAC1BC,QAAS0C,EACTxC,KAAM,CAAEC,MAAO,CAAC,CAAE,EAClBC,UAAW,IAAM,CACftB,EAAgBe,CAAAA,EAAAA,EAAAA,EAAAA,EAAkBU,EAAAA,EAAcA,CAAE,aACrCI,WAAWjB,EAAakB,EAAAA,EAAaA,EAClDwD,GACF,EACA3D,QAAS,GAAqB,CAC5B3B,EAAgBe,CAAAA,EAAAA,EAAAA,EAAAA,EAAkBa,EAAAA,EAAYA,CAAEF,IACnCG,WAAWjB,EAAakB,EAAAA,EAAaA,CACpD,CACF,EACF,EAEM0E,EAAO,SAAY,CACvB,IAAMjB,EAAI,CAAC,EACXU,OAAOC,IAAI,CAACf,GAAQK,OAAO,CAACC,GAAS,CACnCF,CAAC,CAACE,EAAM,CAAGN,CAAM,CAACM,EAAM,CAACpE,KAAK,GAGhC,MAAMJ,CAAAA,EAAAA,EAAAA,EAAAA,EAAsB,CAC1BC,QAAS0C,EACTxC,KAAM,CAAEC,MAAOkE,CAAE,EACjBjE,UAAW,IAAM,CACftB,EAAgBe,CAAAA,EAAAA,EAAAA,EAAAA,EAAkBU,EAAAA,EAAcA,CAAE,aACrCI,WAAWjB,EAAakB,EAAAA,EAAaA,CACpD,EACAH,QAAS,GAAqB,CAC5B3B,EAAgBe,CAAAA,EAAAA,EAAAA,EAAAA,EAAkBa,EAAAA,EAAYA,CAAEF,IACnCG,WAAWjB,EAAakB,EAAAA,EAAaA,CACpD,CACF,EACF,EAEM2E,EAAuB,GAAmB,CAG9CJ,EAFqB,wBAEK,GAAoBN,MAAA,CAAjB1E,EAAMqF,QAAQ,GAAG,MAAK,GACrD,SAEA,EAKE,GAAAzE,EAAAC,IAAA,EAACyE,EAAAA,CAAKA,CAAAA,CAACC,UAAU,qBACf,GAAA3E,EAAAI,GAAA,EAAC5C,EAAAA,CAAKA,CAAAA,UAAC,yBACP,GAAAwC,EAAAI,GAAA,EAAClD,EAAAA,CAASA,CAAAA,UAAC,6DACX,GAAA8C,EAAAI,GAAA,EAACF,MAAAA,UACC,GAAAF,EAAAC,IAAA,EAACyB,EAAAA,CAAQA,CAAAA,CAACkD,iBAAkB,CAAC,IAAI,WAC/B,GAAA5E,EAAAC,IAAA,EAACwB,EAAAA,CAAMoD,OAAQ,GAAA7E,EAAAI,GAAA,EAAC5C,EAAAA,CAAKA,CAAAA,CAAC6C,MAAO,WAAG,6BAC9B,GAAAL,EAAAI,GAAA,EAACE,IAAAA,UAAE,0FAGH,GAAAN,EAAAI,GAAA,EAAC0E,EAAAA,CAAGA,CAAAA,CAACC,OAAQ,CAAC,GAAI,GAAG,UAClB/C,EAAwBgD,GAAG,CAACC,GAAY,CACvC,GAAM,CAAEpD,KAAAA,CAAAA,CAAM,CAAGoD,EACX3B,EAAIJ,CAAM,CAACrB,EAAK,CAEtB,MACE,GAAA7B,EAAAI,GAAA,EAACkC,EAAAA,CAEClD,MAAOkE,EAAElE,KAAK,CACdyC,KAAMA,EACNC,YAAawB,EAAExB,WAAW,CAC1BZ,SAAUkD,GAJLvC,EAOX,OAlBwD,KAqB5D,GAAA7B,EAAAI,GAAA,EAACqB,EAAAA,CAAMoD,OAAQ,GAAA7E,EAAAI,GAAA,EAAC5C,EAAAA,CAAKA,CAAAA,CAAC6C,MAAO,WAAG,8BAC9B,GAAAL,EAAAI,GAAA,EAAC0E,EAAAA,CAAGA,CAAAA,CAACC,OAAQ,CAAC,GAAI,GAAG,UAClBnD,EAAmBoD,GAAG,CAACC,GAAY,CAClC,GAAM,CAAEpD,KAAAA,CAAAA,CAAM,CAAGoD,EACX3B,EAAIJ,CAAM,CAACrB,EAAK,CACtB,MACE,GAAA7B,EAAAI,GAAA,EAACkC,EAAAA,CAEClD,MAAOkE,EAAElE,KAAK,CACdyC,KAAMA,EACNC,YAAawB,EAAExB,WAAW,CAC1BZ,SAAUkD,GAJLvC,EAOX,MAd0D,KAiB9D,GAAA7B,EAAAI,GAAA,EAACqB,EAAAA,CAAMoD,OAAQ,GAAA7E,EAAAI,GAAA,EAAC5C,EAAAA,CAAKA,CAAAA,CAAC6C,MAAO,WAAG,0BAC9B,GAAAL,EAAAI,GAAA,EAAC0E,EAAAA,CAAGA,CAAAA,CAACC,OAAQ,CAAC,GAAI,GAAG,UAClBhD,EAAiBiD,GAAG,CAACC,GAAY,CAChC,GAAM,CAAEpD,KAAAA,CAAAA,CAAM,CAAGoD,EACX3B,EAAIJ,CAAM,CAACrB,EAAK,CACtB,MACE,GAAA7B,EAAAI,GAAA,EAACkC,EAAAA,CAEClD,MAAOkE,EAAElE,KAAK,CACdyC,KAAMA,EACNC,YAAawB,EAAExB,WAAW,CAC1BZ,SAAUkD,GAJLvC,EAOX,MAdsD,KAiB1D,GAAA7B,EAAAC,IAAA,EAACwB,EAAAA,CAAMoD,OAAQ,GAAA7E,EAAAI,GAAA,EAAC5C,EAAAA,CAAKA,CAAAA,CAAC6C,MAAO,WAAG,6BAAgC,iCAE9D,GAAAL,EAAAC,IAAA,EAAC6E,EAAAA,CAAGA,CAAAA,CAACC,OAAQ,CAAC,GAAI,GAAG,WACnB,GAAA/E,EAAAI,GAAA,EAACoC,EAAAA,CAAGA,CAAAA,CAACC,KAAM,YACT,GAAAzC,EAAAI,GAAA,EAAC8E,EAAAA,CAAMA,CAAAA,CACLC,IAAK,EACLC,IAAK,GACLC,QAAS,CAAEC,UAAW,IAAI,EAC1BpE,SAAUqE,GAAK,CACbf,EAAqBe,EACvB,EACAnG,MAAOoG,OAAOtC,CAAAA,IAA+B,GAA/BA,CAAAA,EAAAA,CAAM,CAAC,wBAAwB,GAA/BA,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,IAAiC9D,GAAjC8D,CAAAA,EAAAA,EAAiC9D,KAAAA,GAAAA,KAAAA,IAAAA,EAAjC8D,KAAAA,EAAAA,EAAwCuC,OAAAA,CAAQ,KAAM,MAAO,OAG/E,GAAAzF,EAAAI,GAAA,EAACoC,EAAAA,CAAGA,CAAAA,CAACC,KAAM,WACT,GAAAzC,EAAAI,GAAA,EAACF,MAAAA,CACC6C,MAAO,CACL2C,MAAO,QACP3E,OAAQ,OACR4E,aAAc,GAA0C7B,MAAA,CAAvCZ,IAA+B,GAA/BA,CAAAA,EAAAA,CAAM,CAAC,wBAAwB,GAA/BA,KAAAA,IAAAA,EAAAA,KAAAA,EAAAA,EAAiC9D,KAAK,EACvDwG,gBAAiB,8BACnB,WArBoD,UA6BhE,GAAA5F,EAAAC,IAAA,EAACyE,EAAAA,CAAKA,CAAAA,CAACC,UAAU,uBACf,GAAA3E,EAAAI,GAAA,EAACgB,EAAAA,CAAMA,CAAAA,CAACC,KAAK,UAAUC,QAASiD,WAAM,gBAGtC,GAAAvE,EAAAI,GAAA,EAACgB,EAAAA,CAAMA,CAAAA,CAACC,KAAK,QAAQC,QAASgD,WAAO,yBAIvC,GAAAtE,EAAAI,GAAA,EAACmB,EAAAA,CAAmBA,CAAAA,CAACC,OAAQ1D,IAC7B,GAAAkC,EAAAI,GAAA,EAACF,MAAAA,CAAIC,UAAU,2CACb,GAAAH,EAAAI,GAAA,EAAC1C,EAAgBA,CAAAA,QAvGd,GAAAsC,EAAAI,GAAA,EAACF,MAAAA,UAAI,cACb,qBC3MH2F,EAAAhJ,OAAA,EAAkB","sources":["webpack://_N_E/./node_modules/antd/lib/typography/Paragraph.js","webpack://_N_E/./components/config/EditCustomStyles.tsx","webpack://_N_E/./pages/admin/config/general/AppearanceConfig.tsx","webpack://_N_E/./pages/admin/config/general/appearance.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\")[\"default\"];\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\")[\"default\"];\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar React = _interopRequireWildcard(require(\"react\"));\nvar _Base = _interopRequireDefault(require(\"./Base\"));\nvar Paragraph = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(_Base[\"default\"], (0, _extends2[\"default\"])({\n    ref: ref\n  }, props, {\n    component: \"div\"\n  }));\n});\nvar _default = Paragraph;\nexports[\"default\"] = _default;","// EDIT CUSTOM CSS STYLES\nimport React, { useState, useEffect, useContext, FC } from 'react';\nimport { Typography, Button } from 'antd';\nimport CodeMirror from '@uiw/react-codemirror';\nimport { bbedit } from '@uiw/codemirror-theme-bbedit';\nimport { css } from '@codemirror/lang-css';\n\nimport { ServerStatusContext } from '../../utils/server-status-context';\nimport {\n  postConfigUpdateToAPI,\n  RESET_TIMEOUT,\n  API_CUSTOM_CSS_STYLES,\n} from '../../utils/config-constants';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_PROCESSING,\n  STATUS_SUCCESS,\n} from '../../utils/input-statuses';\nimport { FormStatusIndicator } from './FormStatusIndicator';\n\nconst { Title } = Typography;\n\nexport const EditCustomStyles: FC = () => {\n  const [content, setContent] = useState('/* Enter custom CSS here */');\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n  const [hasChanged, setHasChanged] = useState(false);\n\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig, setFieldInConfigState } = serverStatusData || {};\n\n  const { instanceDetails } = serverConfig;\n  const { customStyles: initialContent } = instanceDetails;\n\n  let resetTimer = null;\n\n  // Clear out any validation states and messaging\n  const resetStates = () => {\n    setSubmitStatus(null);\n    setHasChanged(false);\n    clearTimeout(resetTimer);\n    resetTimer = null;\n  };\n\n  // posts all the tags at once as an array obj\n  async function handleSave() {\n    setSubmitStatus(createInputStatus(STATUS_PROCESSING));\n    await postConfigUpdateToAPI({\n      apiPath: API_CUSTOM_CSS_STYLES,\n      data: { value: content },\n      onSuccess: (message: string) => {\n        setFieldInConfigState({\n          fieldName: 'customStyles',\n          value: content,\n          path: 'instanceDetails',\n        });\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS, message));\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, message));\n      },\n    });\n    resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n  }\n\n  useEffect(() => {\n    setContent(initialContent);\n  }, [instanceDetails]);\n\n  const onCSSValueChange = React.useCallback(value => {\n    setContent(value);\n    if (value !== initialContent && !hasChanged) {\n      setHasChanged(true);\n    } else if (value === initialContent && hasChanged) {\n      setHasChanged(false);\n    }\n  }, []);\n\n  return (\n    <div className=\"edit-custom-css\">\n      <Title level={3} className=\"section-title\">\n        Customize your page styling with CSS\n      </Title>\n\n      <p className=\"description\">\n        Customize the look and feel of your Owncast instance by overriding the CSS styles of various\n        components on the page. Refer to the{' '}\n        <a href=\"https://owncast.online/docs/website/\" rel=\"noopener noreferrer\" target=\"_blank\">\n          CSS &amp; Components guide\n        </a>\n        .\n      </p>\n      <p className=\"description\">\n        Please input plain CSS text, as this will be directly injected onto your page during load.\n      </p>\n\n      <CodeMirror\n        value={content}\n        placeholder=\"/* Enter custom CSS here */\"\n        theme={bbedit}\n        height=\"200px\"\n        extensions={[css()]}\n        onChange={onCSSValueChange}\n      />\n\n      <br />\n      <div className=\"page-content-actions\">\n        {hasChanged && (\n          <Button type=\"primary\" onClick={handleSave}>\n            Save\n          </Button>\n        )}\n        <FormStatusIndicator status={submitStatus} />\n      </div>\n    </div>\n  );\n};\n","import React, { useContext, useEffect, useState } from 'react';\n\nimport { Button, Col, Collapse, Row, Slider, Space } from 'antd';\nimport Paragraph from 'antd/lib/typography/Paragraph';\nimport Title from 'antd/lib/typography/Title';\nimport { EditCustomStyles } from '../../../../components/config/EditCustomStyles';\nimport s from './appearance.module.scss';\nimport { postConfigUpdateToAPI, RESET_TIMEOUT } from '../../../../utils/config-constants';\nimport {\n  createInputStatus,\n  StatusState,\n  STATUS_ERROR,\n  STATUS_SUCCESS,\n} from '../../../../utils/input-statuses';\nimport { ServerStatusContext } from '../../../../utils/server-status-context';\nimport { FormStatusIndicator } from '../../../../components/config/FormStatusIndicator';\n\nconst { Panel } = Collapse;\n\nconst ENDPOINT = '/appearance';\n\ninterface AppearanceVariable {\n  value: string;\n  description: string;\n}\n\nconst chatColorVariables = [\n  { name: 'theme-color-users-0', description: '' },\n  { name: 'theme-color-users-1', description: '' },\n  { name: 'theme-color-users-2', description: '' },\n  { name: 'theme-color-users-3', description: '' },\n  { name: 'theme-color-users-4', description: '' },\n  { name: 'theme-color-users-5', description: '' },\n  { name: 'theme-color-users-6', description: '' },\n  { name: 'theme-color-users-7', description: '' },\n];\n\nconst paletteVariables = [\n  { name: 'theme-color-palette-0', description: '' },\n  { name: 'theme-color-palette-1', description: '' },\n  { name: 'theme-color-palette-2', description: '' },\n  { name: 'theme-color-palette-3', description: '' },\n  { name: 'theme-color-palette-4', description: '' },\n  { name: 'theme-color-palette-5', description: '' },\n  { name: 'theme-color-palette-6', description: '' },\n  { name: 'theme-color-palette-7', description: '' },\n  { name: 'theme-color-palette-8', description: '' },\n  { name: 'theme-color-palette-9', description: '' },\n  { name: 'theme-color-palette-10', description: '' },\n  { name: 'theme-color-palette-11', description: '' },\n  { name: 'theme-color-palette-12', description: '' },\n];\n\nconst componentColorVariables = [\n  { name: 'theme-color-background-main', description: 'Background' },\n  { name: 'theme-color-action', description: 'Action' },\n  { name: 'theme-color-action-hover', description: 'Action Hover' },\n  { name: 'theme-color-components-chat-background', description: 'Chat Background' },\n  { name: 'theme-color-components-chat-text', description: 'Text: Chat' },\n  { name: 'theme-color-components-text-on-dark', description: 'Text: Light' },\n  { name: 'theme-color-components-text-on-light', description: 'Text: Dark' },\n  { name: 'theme-color-background-header', description: 'Header/Footer' },\n  { name: 'theme-color-components-content-background', description: 'Page Content' },\n  { name: 'theme-color-components-scrollbar-background', description: 'Scrollbar Background' },\n  { name: 'theme-color-components-scrollbar-thumb', description: 'Scrollbar Thumb' },\n];\n\nconst others = [{ name: 'theme-rounded-corners', description: 'Corner radius' }];\n\n// Create an object so these vars can be indexed by name.\nconst allAvailableValues = [\n  ...paletteVariables,\n  ...componentColorVariables,\n  ...chatColorVariables,\n  ...others,\n].reduce((obj, val) => {\n  // eslint-disable-next-line no-param-reassign\n  obj[val.name] = { name: val.name, description: val.description };\n  return obj;\n}, {});\n\nfunction ColorPicker({\n  value,\n  name,\n  description,\n  onChange,\n}: {\n  value: string;\n  name: string;\n  description: string;\n  onChange: (name: string, value: string, description: string) => void;\n}) {\n  return (\n    <Col span={3} key={name}>\n      <input\n        type=\"color\"\n        id={name}\n        name={description}\n        title={description}\n        value={value}\n        className={s.colorPicker}\n        onChange={e => onChange(name, e.target.value, description)}\n      />\n      <div style={{ padding: '2px' }}>{description}</div>\n    </Col>\n  );\n}\nexport default function Appearance() {\n  const serverStatusData = useContext(ServerStatusContext);\n  const { serverConfig } = serverStatusData;\n  const { instanceDetails } = serverConfig;\n  const { appearanceVariables } = instanceDetails;\n\n  const [colors, setColors] = useState<Record<string, AppearanceVariable>>();\n  const [submitStatus, setSubmitStatus] = useState<StatusState>(null);\n\n  let resetTimer = null;\n  const resetStates = () => {\n    setSubmitStatus(null);\n    resetTimer = null;\n    clearTimeout(resetTimer);\n  };\n\n  const setColorDefaults = () => {\n    const c = {};\n    [...paletteVariables, ...componentColorVariables, ...chatColorVariables, ...others].forEach(\n      color => {\n        const resolvedColor = getComputedStyle(document.documentElement).getPropertyValue(\n          `--${color.name}`,\n        );\n        c[color.name] = { value: resolvedColor.trim(), description: color.description };\n      },\n    );\n    setColors(c);\n  };\n\n  useEffect(() => {\n    setColorDefaults();\n  }, []);\n\n  useEffect(() => {\n    if (Object.keys(appearanceVariables).length === 0) return;\n\n    const c = colors || {};\n    Object.keys(appearanceVariables).forEach(key => {\n      c[key] = {\n        value: appearanceVariables[key],\n        description: allAvailableValues[key]?.description || '',\n      };\n    });\n    setColors(c);\n  }, [appearanceVariables]);\n\n  const updateColor = (variable: string, color: string, description: string) => {\n    setColors({\n      ...colors,\n      [variable]: { value: color, description },\n    });\n  };\n\n  const reset = async () => {\n    await postConfigUpdateToAPI({\n      apiPath: ENDPOINT,\n      data: { value: {} },\n      onSuccess: () => {\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS, 'Updated.'));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n        setColorDefaults();\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, message));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n    });\n  };\n\n  const save = async () => {\n    const c = {};\n    Object.keys(colors).forEach(color => {\n      c[color] = colors[color].value;\n    });\n\n    await postConfigUpdateToAPI({\n      apiPath: ENDPOINT,\n      data: { value: c },\n      onSuccess: () => {\n        setSubmitStatus(createInputStatus(STATUS_SUCCESS, 'Updated.'));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n      onError: (message: string) => {\n        setSubmitStatus(createInputStatus(STATUS_ERROR, message));\n        resetTimer = setTimeout(resetStates, RESET_TIMEOUT);\n      },\n    });\n  };\n\n  const onBorderRadiusChange = (value: string) => {\n    const variableName = 'theme-rounded-corners';\n\n    updateColor(variableName, `${value.toString()}px`, '');\n  };\n\n  if (!colors) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <Space direction=\"vertical\">\n      <Title>Customize Appearance</Title>\n      <Paragraph>The following colors are used across the user interface.</Paragraph>\n      <div>\n        <Collapse defaultActiveKey={['1']}>\n          <Panel header={<Title level={3}>Section Colors</Title>} key=\"1\">\n            <p>\n              Certain sections of the interface can be customized by selecting new colors for them.\n            </p>\n            <Row gutter={[16, 16]}>\n              {componentColorVariables.map(colorVar => {\n                const { name } = colorVar;\n                const c = colors[name];\n\n                return (\n                  <ColorPicker\n                    key={name}\n                    value={c.value}\n                    name={name}\n                    description={c.description}\n                    onChange={updateColor}\n                  />\n                );\n              })}\n            </Row>\n          </Panel>\n          <Panel header={<Title level={3}>Chat User Colors</Title>} key=\"2\">\n            <Row gutter={[16, 16]}>\n              {chatColorVariables.map(colorVar => {\n                const { name } = colorVar;\n                const c = colors[name];\n                return (\n                  <ColorPicker\n                    key={name}\n                    value={c.value}\n                    name={name}\n                    description={c.description}\n                    onChange={updateColor}\n                  />\n                );\n              })}\n            </Row>\n          </Panel>\n          <Panel header={<Title level={3}>Theme Colors</Title>} key=\"3\">\n            <Row gutter={[16, 16]}>\n              {paletteVariables.map(colorVar => {\n                const { name } = colorVar;\n                const c = colors[name];\n                return (\n                  <ColorPicker\n                    key={name}\n                    value={c.value}\n                    name={name}\n                    description={c.description}\n                    onChange={updateColor}\n                  />\n                );\n              })}\n            </Row>\n          </Panel>\n          <Panel header={<Title level={3}>Other Settings</Title>} key=\"4\">\n            How rounded should corners be?\n            <Row gutter={[16, 16]}>\n              <Col span={12}>\n                <Slider\n                  min={0}\n                  max={20}\n                  tooltip={{ formatter: null }}\n                  onChange={v => {\n                    onBorderRadiusChange(v);\n                  }}\n                  value={Number(colors['theme-rounded-corners']?.value?.replace('px', '') || 0)}\n                />\n              </Col>\n              <Col span={4}>\n                <div\n                  style={{\n                    width: '100px',\n                    height: '30px',\n                    borderRadius: `${colors['theme-rounded-corners']?.value}`,\n                    backgroundColor: 'var(--theme-color-palette-7)',\n                  }}\n                />\n              </Col>\n            </Row>\n          </Panel>\n        </Collapse>\n      </div>\n\n      <Space direction=\"horizontal\">\n        <Button type=\"primary\" onClick={save}>\n          Save Colors\n        </Button>\n        <Button type=\"ghost\" onClick={reset}>\n          Reset to Defaults\n        </Button>\n      </Space>\n      <FormStatusIndicator status={submitStatus} />\n      <div className=\"form-module page-content-module\">\n        <EditCustomStyles />\n      </div>\n    </Space>\n  );\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorPicker\":\"appearance_colorPicker__9g3hl\"};"],"names":["_interopRequireWildcard","__webpack_require__","_interopRequireDefault","exports","Z","_extends2","React","_Base","Paragraph","forwardRef","props","ref","createElement","component","Title","Typography","EditCustomStyles","content","setContent","useState","submitStatus","setSubmitStatus","hasChanged","setHasChanged","serverStatusData","useContext","ServerStatusContext","serverConfig","setFieldInConfigState","instanceDetails","customStyles","initialContent","resetTimer","resetStates","clearTimeout","handleSave","createInputStatus","STATUS_PROCESSING","postConfigUpdateToAPI","apiPath","API_CUSTOM_CSS_STYLES","data","value","onSuccess","fieldName","path","STATUS_SUCCESS","message","onError","STATUS_ERROR","setTimeout","RESET_TIMEOUT","useEffect","onCSSValueChange","jsx_runtime","jsxs","div","className","jsx","level","p","a","href","rel","target","CodeMirror","placeholder","theme","bbedit","height","extensions","css","onChange","br","Button","type","onClick","FormStatusIndicator","status","Panel","Collapse","ENDPOINT","chatColorVariables","name","description","paletteVariables","componentColorVariables","others","allAvailableValues","reduce","obj","val","ColorPicker","param","Col","span","input","id","title","s","e","style","padding","Appearance","colors","appearanceVariables","setColors","setColorDefaults","c","forEach","color","resolvedColor","getComputedStyle","document","documentElement","getPropertyValue","concat","trim","Object","keys","length","key","updateColor","variable","reset","save","onBorderRadiusChange","toString","Space","direction","defaultActiveKey","header","Row","gutter","map","colorVar","Slider","min","max","tooltip","formatter","v","Number","replace","width","borderRadius","backgroundColor","module"],"sourceRoot":""}