{"version":3,"file":"static/chunks/745-d489da01f694f2fd.js","mappings":"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","sources":["webpack://_N_E/./components/admin/FormStatusIndicator.tsx","webpack://_N_E/./components/admin/TextField.tsx","webpack://_N_E/./utils/apis.ts","webpack://_N_E/./utils/config-constants.tsx","webpack://_N_E/./utils/urls.ts"],"sourcesContent":["import React, { FC } from 'react';\nimport classNames from 'classnames';\n\nimport { StatusState } from '../../utils/input-statuses';\n\nexport type FormStatusIndicatorProps = {\n  status: StatusState;\n};\n\nexport const FormStatusIndicator: FC<FormStatusIndicatorProps> = ({ status }) => {\n  const { type, icon, message } = status || {};\n  const classes = classNames({\n    'status-container': true,\n    [`status-${type}`]: type,\n    empty: !message,\n  });\n  return (\n    <span className={classes}>\n      {icon ? <span className=\"status-icon\">{icon}</span> : null}\n      {message ? <span className=\"status-message\">{message}</span> : null}\n    </span>\n  );\n};\nexport default FormStatusIndicator;\n","import React, { FC } from 'react';\nimport classNames from 'classnames';\nimport { Input, InputNumber } from 'antd';\nimport { FieldUpdaterFunc } from '../../types/config-section';\n// import InfoTip from '../info-tip';\nimport { StatusState } from '../../utils/input-statuses';\nimport { FormStatusIndicator } from './FormStatusIndicator';\n\nexport const TEXTFIELD_TYPE_TEXT = 'default';\nexport const TEXTFIELD_TYPE_PASSWORD = 'password'; // Input.Password\nexport const TEXTFIELD_TYPE_NUMBER = 'numeric'; // InputNumber\nexport const TEXTFIELD_TYPE_TEXTAREA = 'textarea'; // Input.TextArea\nexport const TEXTFIELD_TYPE_URL = 'url';\n\nexport type TextFieldProps = {\n  fieldName: string;\n\n  onSubmit?: () => void;\n  onPressEnter?: () => void;\n\n  className?: string;\n  disabled?: boolean;\n  label?: string;\n  maxLength?: number;\n  pattern?: string;\n  placeholder?: string;\n  required?: boolean;\n  status?: StatusState;\n  tip?: string;\n  type?: string;\n  useTrim?: boolean;\n  useTrimLead?: boolean;\n  value?: string | number;\n  onBlur?: FieldUpdaterFunc;\n  onChange?: FieldUpdaterFunc;\n};\n\nexport const TextField: FC<TextFieldProps> = ({\n  className,\n  disabled,\n  fieldName,\n  label,\n  maxLength,\n  onBlur,\n  onChange,\n  onPressEnter,\n  pattern,\n  placeholder,\n  required,\n  status,\n  tip,\n  type,\n  useTrim,\n  value,\n}) => {\n  const handleChange = (e: any) => {\n    // if an extra onChange handler was sent in as a prop, let's run that too.\n    if (onChange) {\n      const val = type === TEXTFIELD_TYPE_NUMBER ? e : e.target.value;\n      onChange({ fieldName, value: useTrim ? val.trim() : val });\n    }\n  };\n\n  // if you blur a required field with an empty value, restore its original value in state (parent's state), if an onChange from parent is available.\n  const handleBlur = (e: any) => {\n    const val = e.target.value;\n    if (onBlur) {\n      onBlur({ value: val });\n    }\n  };\n\n  const handlePressEnter = () => {\n    if (onPressEnter) {\n      onPressEnter();\n    }\n  };\n\n  // display the appropriate Ant text field\n  let Field = Input as\n    | typeof Input\n    | typeof InputNumber\n    | typeof Input.TextArea\n    | typeof Input.Password;\n  let fieldProps = {};\n  if (type === TEXTFIELD_TYPE_TEXTAREA) {\n    Field = Input.TextArea;\n    fieldProps = {\n      autoSize: true,\n    };\n  } else if (type === TEXTFIELD_TYPE_PASSWORD) {\n    Field = Input.Password;\n    fieldProps = {\n      visibilityToggle: true,\n    };\n  } else if (type === TEXTFIELD_TYPE_NUMBER) {\n    Field = InputNumber;\n    fieldProps = {\n      type: 'number',\n      min: 1,\n      max: 10 ** maxLength - 1,\n    };\n  } else if (type === TEXTFIELD_TYPE_URL) {\n    fieldProps = {\n      type: 'url',\n      pattern,\n    };\n  }\n\n  const fieldId = `field-${fieldName}`;\n\n  const { type: statusType } = status || {};\n\n  const containerClass = classNames({\n    'formfield-container': true,\n    'textfield-container': true,\n    [`type-${type}`]: true,\n    required,\n    [`status-${statusType}`]: status,\n  });\n\n  return (\n    <div className={containerClass}>\n      {label ? (\n        <div className=\"label-side\">\n          <label htmlFor={fieldId} className=\"formfield-label\">\n            {label}\n          </label>\n        </div>\n      ) : null}\n\n      <div className=\"input-side\">\n        <div className=\"input-group\">\n          <Field\n            id={fieldId}\n            className={`field ${className} ${fieldId}`}\n            {...fieldProps}\n            {...(type !== TEXTFIELD_TYPE_NUMBER && { allowClear: true })}\n            placeholder={placeholder}\n            maxLength={maxLength}\n            onChange={handleChange}\n            onBlur={handleBlur}\n            onPressEnter={handlePressEnter}\n            disabled={disabled}\n            value={value as number | (readonly string[] & number)}\n          />\n        </div>\n        <FormStatusIndicator status={status} />\n        <p className=\"field-tip\">{tip}</p>\n      </div>\n    </div>\n  );\n};\nexport default TextField;\n\nTextField.defaultProps = {\n  className: '',\n  disabled: false,\n  label: '',\n  maxLength: 255,\n\n  placeholder: '',\n  required: false,\n  status: null,\n  tip: '',\n  type: TEXTFIELD_TYPE_TEXT,\n  value: '',\n\n  pattern: '',\n  useTrim: false,\n  useTrimLead: false,\n\n  onSubmit: () => {},\n  onBlur: () => {},\n  onChange: () => {},\n  onPressEnter: () => {},\n};\n","/* eslint-disable prefer-destructuring */\nconst ADMIN_USERNAME = process.env.NEXT_PUBLIC_ADMIN_USERNAME;\nconst ADMIN_STREAMKEY = process.env.NEXT_PUBLIC_ADMIN_STREAMKEY;\nexport const NEXT_PUBLIC_API_HOST = process.env.NEXT_PUBLIC_API_HOST;\n\nconst API_LOCATION = `${NEXT_PUBLIC_API_HOST}api/admin/`;\n\nexport const FETCH_INTERVAL = 15000;\n\n// Current inbound broadcaster info\nexport const STATUS = `${API_LOCATION}status`;\n\n// Disconnect inbound stream\nexport const DISCONNECT = `${API_LOCATION}disconnect`;\n\n// Change the current streaming key in memory\nexport const STREAMKEY_CHANGE = `${API_LOCATION}changekey`;\n\n// Current server config\nexport const SERVER_CONFIG = `${API_LOCATION}serverconfig`;\n\n// Base url to update config settings\nexport const SERVER_CONFIG_UPDATE_URL = `${API_LOCATION}config`;\n\n// Get viewer count over time\nexport const VIEWERS_OVER_TIME = `${API_LOCATION}viewersOverTime`;\n\n// Get active viewer details\nexport const ACTIVE_VIEWER_DETAILS = `${API_LOCATION}viewers`;\n\n// Get currently connected chat clients\nexport const CONNECTED_CLIENTS = `${API_LOCATION}chat/clients`;\n\n// Get list of disabled/blocked chat users\nexport const DISABLED_USERS = `${API_LOCATION}chat/users/disabled`;\n\n// Disable/enable a single user\nexport const USER_ENABLED_TOGGLE = `${API_LOCATION}chat/users/setenabled`;\n\n// Get banned IP addresses\nexport const BANNED_IPS = `${API_LOCATION}chat/users/ipbans`;\n\n// Remove IP ban\nexport const BANNED_IP_REMOVE = `${API_LOCATION}chat/users/ipbans/remove`;\n\n// Disable/enable a single user\nexport const USER_SET_MODERATOR = `${API_LOCATION}chat/users/setmoderator`;\n\n// Get list of moderators\nexport const MODERATORS = `${API_LOCATION}chat/users/moderators`;\n\n// Get hardware stats\nexport const HARDWARE_STATS = `${API_LOCATION}hardwarestats`;\n\n// Get all logs\nexport const LOGS_ALL = `${API_LOCATION}logs`;\n\n// Get warnings + errors\nexport const LOGS_WARN = `${API_LOCATION}logs/warnings`;\n\n// Get chat history\nexport const CHAT_HISTORY = `${API_LOCATION}chat/messages`;\n\n// Get chat history\nexport const UPDATE_CHAT_MESSGAE_VIZ = `/api/admin/chat/messagevisibility`;\n\n// Upload a new custom emoji\nexport const UPLOAD_EMOJI = `${API_LOCATION}emoji/upload`;\n\n// Delete a custom emoji\nexport const DELETE_EMOJI = `${API_LOCATION}emoji/delete`;\n\n// Get all access tokens\nexport const ACCESS_TOKENS = `${API_LOCATION}accesstokens`;\n\n// Delete a single access token\nexport const DELETE_ACCESS_TOKEN = `${API_LOCATION}accesstokens/delete`;\n\n// Create a new access token\nexport const CREATE_ACCESS_TOKEN = `${API_LOCATION}accesstokens/create`;\n\n// Get webhooks\nexport const WEBHOOKS = `${API_LOCATION}webhooks`;\n\n// Delete a single webhook\nexport const DELETE_WEBHOOK = `${API_LOCATION}webhooks/delete`;\n\n// Create a single webhook\nexport const CREATE_WEBHOOK = `${API_LOCATION}webhooks/create`;\n\n// hard coded social icons list\nexport const SOCIAL_PLATFORMS_LIST = `${NEXT_PUBLIC_API_HOST}api/socialplatforms`;\n\n// set external action links\nexport const EXTERNAL_ACTIONS = `${API_LOCATION}api/externalactions`;\n\n// send a message to the fediverse\nexport const FEDERATION_MESSAGE_SEND = `${API_LOCATION}federation/send`;\n\n// Get followers\nexport const FOLLOWERS = `${API_LOCATION}followers`;\n\n// Get followers pending approval\nexport const FOLLOWERS_PENDING = `${API_LOCATION}followers/pending`;\n\n// Get followers who were blocked or rejected\nexport const FOLLOWERS_BLOCKED = `${API_LOCATION}followers/blocked`;\n\n// Approve, reject a follow request\nexport const SET_FOLLOWER_APPROVAL = `${API_LOCATION}followers/approve`;\n\n// List of inbound federated actions that took place.\nexport const FEDERATION_ACTIONS = `${API_LOCATION}federation/actions`;\n\nexport const API_STREAM_HEALTH_METRICS = `${API_LOCATION}metrics/video`;\n\n// Save an array of stream keys\nexport const UPDATE_STREAM_KEYS = `${API_LOCATION}config/streamkeys`;\n\nexport const API_YP_RESET = `${API_LOCATION}yp/reset`;\n\nexport const TEMP_UPDATER_API = LOGS_ALL;\n\nconst GITHUB_RELEASE_URL = 'https://api.github.com/repos/owncast/owncast/releases/latest';\n\ninterface FetchOptions {\n  data?: any;\n  method?: string;\n  auth?: boolean;\n}\n\nexport async function fetchData(url: string, options?: FetchOptions) {\n  const { data, method = 'GET', auth = true } = options || {};\n\n  // eslint-disable-next-line no-undef\n  const requestOptions: RequestInit = {\n    method,\n  };\n\n  if (data) {\n    requestOptions.body = JSON.stringify(data);\n  }\n\n  if (auth && ADMIN_USERNAME && ADMIN_STREAMKEY) {\n    const encoded = btoa(`${ADMIN_USERNAME}:${ADMIN_STREAMKEY}`);\n    requestOptions.headers = {\n      Authorization: `Basic ${encoded}`,\n    };\n    requestOptions.mode = 'cors';\n    requestOptions.credentials = 'include';\n  }\n\n  try {\n    const response = await fetch(url, requestOptions);\n    const json = await response.json();\n\n    if (!response.ok) {\n      const message = json.message || `An error has occurred: ${response.status}`;\n      throw new Error(message);\n    }\n    return json;\n  } catch (error) {\n    console.error(error);\n    return error;\n    // console.log(error)\n    // throw new Error(error)\n  }\n}\n\nexport async function getUnauthedData(url: string, options?: FetchOptions) {\n  const opts = {\n    method: 'GET',\n    auth: false,\n    ...options,\n  };\n  return fetchData(url, opts);\n}\n\nexport async function fetchExternalData(url: string) {\n  try {\n    const response = await fetch(url, {\n      referrerPolicy: 'no-referrer', // Send no referrer header for privacy reasons.\n      referrer: '',\n    });\n    if (!response.ok) {\n      const message = `An error has occured: ${response.status}`;\n      throw new Error(message);\n    }\n    const json = await response.json();\n    return json;\n  } catch (error) {\n    console.log(error);\n  }\n  return {};\n}\n\nexport async function getGithubRelease() {\n  return fetchExternalData(GITHUB_RELEASE_URL);\n}\n\n// Stolen from https://gist.github.com/prenagha/98bbb03e27163bc2f5e4\nconst VPAT = /^\\d+(\\.\\d+){0,2}$/;\nfunction upToDate(local, remote) {\n  if (!local || !remote || local.length === 0 || remote.length === 0) return false;\n  if (local === remote) return true;\n  if (VPAT.test(local) && VPAT.test(remote)) {\n    const lparts = local.split('.');\n    while (lparts.length < 3) lparts.push('0');\n    const rparts = remote.split('.');\n    while (rparts.length < 3) rparts.push('0');\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < 3; i++) {\n      const l = parseInt(lparts[i], 10);\n      const r = parseInt(rparts[i], 10);\n      if (l === r)\n        // eslint-disable-next-line no-continue\n        continue;\n      return l > r;\n    }\n    return true;\n  }\n  return local >= remote;\n}\n\n// Make a request to the server status API and the Github releases API\n// and return a release if it's newer than the server version.\nexport async function upgradeVersionAvailable(currentVersion) {\n  const recentRelease = await getGithubRelease();\n  let recentReleaseVersion = recentRelease.tag_name;\n\n  if (recentReleaseVersion.substr(0, 1) === 'v') {\n    recentReleaseVersion = recentReleaseVersion.substr(1);\n  }\n\n  if (!upToDate(currentVersion, recentReleaseVersion)) {\n    return recentReleaseVersion;\n  }\n\n  return null;\n}\n","// DEFAULT VALUES\nimport { fetchData, SERVER_CONFIG_UPDATE_URL } from './apis';\nimport { ApiPostArgs, VideoVariant, SocialHandle } from '../types/config-section';\nimport { TEXTFIELD_TYPE_URL } from '../components/admin/TextField';\nimport { DEFAULT_TEXTFIELD_URL_PATTERN } from './urls';\n\nexport const TEXT_MAXLENGTH = 255;\n\nexport const RESET_TIMEOUT = 3000;\n\n// CONFIG API ENDPOINTS\nexport const API_CUSTOM_CONTENT = '/pagecontent';\nexport const API_CUSTOM_CSS_STYLES = '/customstyles';\nexport const API_FFMPEG = '/ffmpegpath';\nexport const API_INSTANCE_URL = '/serverurl';\nexport const API_LOGO = '/logo';\nexport const API_NSFW_SWITCH = '/nsfw';\nexport const API_RTMP_PORT = '/rtmpserverport';\nexport const API_S3_INFO = '/s3';\nexport const API_SERVER_SUMMARY = '/serversummary';\nexport const API_SERVER_WELCOME_MESSAGE = '/welcomemessage';\nexport const API_SERVER_OFFLINE_MESSAGE = '/offlinemessage';\nexport const API_SERVER_NAME = '/name';\nexport const API_SOCIAL_HANDLES = '/socialhandles';\nexport const API_STREAM_KEY = '/key';\nexport const API_STREAM_TITLE = '/streamtitle';\nexport const API_TAGS = '/tags';\nexport const API_USERNAME = '/name';\nexport const API_VIDEO_SEGMENTS = '/video/streamlatencylevel';\nexport const API_VIDEO_VARIANTS = '/video/streamoutputvariants';\nexport const API_WEB_PORT = '/webserverport';\nexport const API_YP_SWITCH = '/directoryenabled';\nexport const API_HIDE_VIEWER_COUNT = '/hideviewercount';\nexport const API_CHAT_DISABLE = '/chat/disable';\nexport const API_CHAT_JOIN_MESSAGES_ENABLED = '/chat/joinmessagesenabled';\nexport const API_CHAT_ESTABLISHED_MODE = '/chat/establishedusermode';\nexport const API_CHAT_FORBIDDEN_USERNAMES = '/chat/forbiddenusernames';\nexport const API_CHAT_SUGGESTED_USERNAMES = '/chat/suggestedusernames';\nexport const API_EXTERNAL_ACTIONS = '/externalactions';\nexport const API_VIDEO_CODEC = '/video/codec';\nexport const API_SOCKET_HOST_OVERRIDE = '/sockethostoverride';\n\n// Federation\nexport const API_FEDERATION_ENABLED = '/federation/enable';\nexport const API_FEDERATION_PRIVATE = '/federation/private';\nexport const API_FEDERATION_USERNAME = '/federation/username';\nexport const API_FEDERATION_GOLIVE_MESSAGE = '/federation/livemessage';\nexport const API_FEDERATION_SHOW_ENGAGEMENT = '/federation/showengagement';\nexport const API_FEDERATION_BLOCKED_DOMAINS = '/federation/blockdomains';\n\nexport async function postConfigUpdateToAPI(args: ApiPostArgs) {\n  const { apiPath, data, onSuccess, onError } = args;\n  const result = await fetchData(`${SERVER_CONFIG_UPDATE_URL}${apiPath}`, {\n    data,\n    method: 'POST',\n    auth: true,\n  });\n  if (result.success && onSuccess) {\n    onSuccess(result.message);\n  } else if (onError) {\n    onError(result.message);\n  }\n}\n\n// Some default props to help build out a TextField\nexport const TEXTFIELD_PROPS_SERVER_NAME = {\n  apiPath: API_SERVER_NAME,\n  configPath: 'instanceDetails',\n  maxLength: TEXT_MAXLENGTH,\n  placeholder: 'Owncast site name', // like \"gothland\"\n  label: 'Name',\n  tip: 'The name of your Owncast server',\n  required: true,\n  useTrimLead: true,\n};\nexport const TEXTFIELD_PROPS_STREAM_TITLE = {\n  apiPath: API_STREAM_TITLE,\n  configPath: 'instanceDetails',\n  maxLength: 100,\n  placeholder: 'Doing cool things...',\n  label: 'Stream Title',\n  tip: 'What is your stream about today?',\n};\nexport const TEXTFIELD_PROPS_SERVER_SUMMARY = {\n  apiPath: API_SERVER_SUMMARY,\n  configPath: 'instanceDetails',\n  maxLength: 500,\n  placeholder: '',\n  label: 'About',\n  tip: 'A brief blurb about you, your server, or what your stream is about.',\n};\nexport const TEXTFIELD_PROPS_SERVER_OFFLINE_MESSAGE = {\n  apiPath: API_SERVER_OFFLINE_MESSAGE,\n  configPath: 'instanceDetails',\n  maxLength: 2500,\n  placeholder: 'An optional message you can leave people when your stream is not live.',\n  label: 'Offline Message',\n  tip: 'An optional message you can leave people when your stream is not live.',\n};\nexport const TEXTFIELD_PROPS_SERVER_WELCOME_MESSAGE = {\n  apiPath: API_SERVER_WELCOME_MESSAGE,\n  configPath: 'instanceDetails',\n  maxLength: 2500,\n  placeholder: '',\n  label: 'Welcome Message',\n  tip: 'A system chat message sent to viewers when they first connect to chat. Leave blank to disable.',\n};\nexport const TEXTFIELD_PROPS_LOGO = {\n  apiPath: API_LOGO,\n  configPath: 'instanceDetails',\n  maxLength: 255,\n  placeholder: '/img/mylogo.png',\n  label: 'Logo',\n  tip: 'Upload your logo if you have one (max size 2 MB). We recommend that you use a square image that is at least 256x256. SVGs are discouraged as they cannot be displayed on all social media platforms.',\n};\nexport const TEXTFIELD_PROPS_ADMIN_PASSWORD = {\n  apiPath: API_STREAM_KEY,\n  configPath: '',\n  maxLength: TEXT_MAXLENGTH,\n  placeholder: 'abc123',\n  label: 'Admin Password',\n  tip: 'Save this password somewhere safe, you will need it to login to the admin dashboard!',\n  required: true,\n};\nexport const TEXTFIELD_PROPS_FFMPEG = {\n  apiPath: API_FFMPEG,\n  configPath: '',\n  maxLength: TEXT_MAXLENGTH,\n  placeholder: '/usr/local/bin/ffmpeg',\n  label: 'FFmpeg Path',\n  tip: 'Absolute file path of the FFMPEG application on your server',\n  required: true,\n};\nexport const TEXTFIELD_PROPS_WEB_PORT = {\n  apiPath: API_WEB_PORT,\n  configPath: '',\n  maxLength: 6,\n  placeholder: '8080',\n  label: 'Owncast port',\n  tip: 'What port is your Owncast web server listening? Default is 8080',\n  required: true,\n};\nexport const TEXTFIELD_PROPS_RTMP_PORT = {\n  apiPath: API_RTMP_PORT,\n  configPath: '',\n  maxLength: 6,\n  placeholder: '1935',\n  label: 'RTMP port',\n  tip: 'What port should accept inbound broadcasts? Default is 1935',\n  required: true,\n};\nexport const TEXTFIELD_PROPS_INSTANCE_URL = {\n  apiPath: API_INSTANCE_URL,\n  configPath: 'yp',\n  maxLength: 255,\n  placeholder: 'https://owncast.mysite.com',\n  label: 'Server URL',\n  tip: 'The full url to your Owncast server.',\n  type: TEXTFIELD_TYPE_URL,\n  pattern: DEFAULT_TEXTFIELD_URL_PATTERN,\n  useTrim: true,\n};\n\nexport const TEXTFIELD_PROPS_SOCKET_HOST_OVERRIDE = {\n  apiPath: API_SOCKET_HOST_OVERRIDE,\n  configPath: '',\n  maxLength: 255,\n  placeholder: 'https://owncast.mysite.com',\n  label: 'Websocket host override',\n  tip: 'The direct URL of your Owncast server.',\n  type: TEXTFIELD_TYPE_URL,\n  pattern: DEFAULT_TEXTFIELD_URL_PATTERN,\n  useTrim: true,\n};\n\n// MISC FIELDS\nexport const FIELD_PROPS_TAGS = {\n  apiPath: API_TAGS,\n  configPath: 'instanceDetails',\n  maxLength: 24,\n  placeholder: 'Add a new tag',\n  required: true,\n  label: '',\n  tip: '',\n};\n\nexport const FIELD_PROPS_NSFW = {\n  apiPath: API_NSFW_SWITCH,\n  configPath: 'instanceDetails',\n  label: 'NSFW?',\n  tip: \"Turn this ON if you plan to steam explicit or adult content. Please respectfully set this flag so unexpected eyes won't accidentally see it in the Directory.\",\n};\n\nexport const FIELD_PROPS_YP = {\n  apiPath: API_YP_SWITCH,\n  configPath: 'yp',\n  label: 'Enable directory',\n  tip: 'Turn this ON to request to show up in the directory.',\n};\n\nexport const FIELD_PROPS_HIDE_VIEWER_COUNT = {\n  apiPath: API_HIDE_VIEWER_COUNT,\n  configPath: '',\n  label: 'Hide viewer count',\n  tip: 'Turn this ON to hide the viewer count the web page.',\n};\n\nexport const DEFAULT_VARIANT_STATE: VideoVariant = {\n  framerate: 24,\n  videoPassthrough: false,\n  videoBitrate: 800,\n  audioPassthrough: true, // if false, then CAN set audiobitrate\n  audioBitrate: 0,\n  cpuUsageLevel: 3,\n  scaledHeight: null,\n  scaledWidth: null,\n  name: '',\n};\n\nexport const FIELD_PROPS_DISABLE_CHAT = {\n  apiPath: API_CHAT_DISABLE,\n  configPath: '',\n  label: 'Chat',\n  tip: 'Turn the chat functionality on/off on your Owncast server.',\n  useSubmit: true,\n};\n\nexport const FIELD_PROPS_CHAT_JOIN_MESSAGES_ENABLED = {\n  apiPath: API_CHAT_JOIN_MESSAGES_ENABLED,\n  configPath: '',\n  label: 'Join Messages',\n  tip: 'Show when a viewer joins the chat.',\n  useSubmit: true,\n};\n\nexport const CHAT_ESTABLISHED_USER_MODE = {\n  apiPath: API_CHAT_ESTABLISHED_MODE,\n  configPath: '',\n  label: 'Established users only',\n  tip: 'Only users who have previously been established for some time may chat.',\n  useSubmit: true,\n};\n\nexport const TEXTFIELD_PROPS_CHAT_FORBIDDEN_USERNAMES = {\n  apiPath: API_CHAT_FORBIDDEN_USERNAMES,\n  placeholder: 'username',\n  label: 'Forbidden usernames',\n  tip: 'A list of words in chat usernames you disallow.',\n};\n\nexport const TEXTFIELD_PROPS_CHAT_SUGGESTED_USERNAMES = {\n  apiPath: API_CHAT_SUGGESTED_USERNAMES,\n  placeholder: 'username',\n  label: 'Default usernames',\n  tip: 'An optional list of chat usernames that new users get assigned. If the list holds less then 10 items, random names will be generated.  Users can change their usernames afterwards and the same username may be given out multple times.',\n  min_not_reached: 'At least 10 items are required for this feature.',\n  no_entries: 'The default name generator is used.',\n};\n\nexport const FIELD_PROPS_ENABLE_FEDERATION = {\n  apiPath: API_FEDERATION_ENABLED,\n  configPath: 'federation',\n  label: 'Enable Social Features',\n  tip: 'Send and receive activities on the Fediverse.',\n  useSubmit: true,\n};\n\nexport const FIELD_PROPS_FEDERATION_IS_PRIVATE = {\n  apiPath: API_FEDERATION_PRIVATE,\n  configPath: 'federation',\n  label: 'Private',\n  tip: 'Follow requests will require approval and only followers will see your activity.',\n  useSubmit: true,\n};\n\nexport const FIELD_PROPS_SHOW_FEDERATION_ENGAGEMENT = {\n  apiPath: API_FEDERATION_SHOW_ENGAGEMENT,\n  configPath: 'showEngagement',\n  label: 'Show engagement',\n  tip: 'Following, liking and sharing will appear in the chat feed.',\n  useSubmit: true,\n};\n\nexport const TEXTFIELD_PROPS_FEDERATION_LIVE_MESSAGE = {\n  apiPath: API_FEDERATION_GOLIVE_MESSAGE,\n  configPath: 'federation',\n  maxLength: 500,\n  placeholder: 'My stream has started, tune in!',\n  label: 'Now Live message',\n  tip: 'The message sent announcing that your live stream has begun. Tags will be automatically added. Leave blank to disable.',\n};\n\nexport const TEXTFIELD_PROPS_FEDERATION_DEFAULT_USER = {\n  apiPath: API_FEDERATION_USERNAME,\n  configPath: 'federation',\n  maxLength: 10,\n  placeholder: 'owncast',\n  default: 'owncast',\n  label: 'Username',\n  tip: 'The username used for sending and receiving activities from the Fediverse. For example, if you use \"bob\" as a username you would send messages to the fediverse from @bob@yourserver. Once people start following your instance you should not change this.',\n};\n\nexport const TEXTFIELD_PROPS_FEDERATION_INSTANCE_URL = {\n  apiPath: API_INSTANCE_URL,\n  configPath: 'yp',\n  maxLength: 255,\n  placeholder: 'https://owncast.mysite.com',\n  label: 'Server URL',\n  tip: 'The full url to your Owncast server is required to enable social features. Must use SSL (https). Once people start following your instance you should not change this.',\n  type: TEXTFIELD_TYPE_URL,\n  pattern: DEFAULT_TEXTFIELD_URL_PATTERN,\n  useTrim: true,\n};\n\nexport const FIELD_PROPS_FEDERATION_NSFW = {\n  apiPath: API_NSFW_SWITCH,\n  configPath: 'instanceDetails',\n  label: 'Potentially NSFW',\n  tip: 'Turn this ON if you plan to steam explicit or adult content so previews of your stream can be marked as potentially sensitive.',\n};\n\nexport const FIELD_PROPS_FEDERATION_BLOCKED_DOMAINS = {\n  apiPath: API_FEDERATION_BLOCKED_DOMAINS,\n  configPath: 'federation',\n  label: 'Blocked domains',\n  placeholder: 'bad.domain.biz',\n  tip: 'You can block specific domains from interacting with you.',\n};\n\nexport const VIDEO_VARIANT_SETTING_DEFAULTS = {\n  // this one is currently unused\n  audioBitrate: {\n    min: 600,\n    max: 1200,\n    defaultValue: 800,\n    unit: 'kbps',\n    incrementBy: 100,\n    tip: 'nothing to see here',\n  },\n  videoPassthrough: {\n    tip: 'If enabled, all other settings will be disabled. Otherwise configure as desired.',\n  },\n  audioPassthrough: {\n    tip: 'If No is selected, then you should set your desired Audio Bitrate.',\n  },\n  scaledWidth: {\n    fieldName: 'scaledWidth',\n    label: 'Resized Width',\n    maxLength: 4,\n    placeholder: '1080',\n    tip: \"Optionally resize this content's width.\",\n  },\n  scaledHeight: {\n    fieldName: 'scaledHeight',\n    label: 'Resized Height',\n    maxLength: 4,\n    placeholder: '720',\n    tip: \"Optionally resize this content's height.\",\n  },\n};\n\n// VIDEO VARIANT FORM - framerate\nexport const FRAMERATE_DEFAULTS = {\n  min: 24,\n  max: 120,\n  defaultValue: 24,\n  unit: 'fps',\n  incrementBy: null,\n  tip: 'Reducing your framerate will decrease the amount of video that needs to be encoded and sent to your viewers, saving CPU and bandwidth at the expense of smoothness.  A lower value is generally is fine for most content.',\n};\nexport const FRAMERATE_SLIDER_MARKS = {\n  [FRAMERATE_DEFAULTS.min]: `${FRAMERATE_DEFAULTS.min} ${FRAMERATE_DEFAULTS.unit}`,\n  25: ' ',\n  30: ' ',\n  50: ' ',\n  60: ' ',\n  90: ' ',\n  [FRAMERATE_DEFAULTS.max]: `${FRAMERATE_DEFAULTS.max} ${FRAMERATE_DEFAULTS.unit}`,\n};\nexport const FRAMERATE_TOOLTIPS = {\n  [FRAMERATE_DEFAULTS.min]: `${FRAMERATE_DEFAULTS.min}fps - Good for film, presentations, music, low power/bandwidth servers.`,\n  25: '25fps - Good for film, presentations, music, low power/bandwidth servers.',\n  30: '30fps - Good for slow/casual games, chat, general purpose.',\n  50: '50fps - Good for fast/action games, sports, HD video.',\n  60: '60fps - Good for fast/action games, sports, HD video.',\n  90: '90fps - Good for newer fast games and hardware.',\n  [FRAMERATE_DEFAULTS.max]: `${FRAMERATE_DEFAULTS.max}fps - Experimental, use at your own risk!`,\n};\n// VIDEO VARIANT FORM - bitrate\nexport const VIDEO_BITRATE_DEFAULTS = {\n  min: 400,\n  max: 6000,\n  defaultValue: 1200,\n  unit: 'kbps',\n  incrementBy: 100,\n  tip: 'The overall quality of your stream is generally impacted most by bitrate.',\n};\n\nexport const VIDEO_NAME_DEFAULTS = {\n  fieldName: 'name',\n  label: 'Name',\n  maxLength: 15,\n  placeholder: 'HD or Low',\n  tip: 'Human-readable name for for displaying in the player.',\n};\n\nexport const VIDEO_BITRATE_SLIDER_MARKS = {\n  [VIDEO_BITRATE_DEFAULTS.min]: {\n    style: {\n      marginLeft: '24px',\n    },\n    label: `${VIDEO_BITRATE_DEFAULTS.min} ${VIDEO_BITRATE_DEFAULTS.unit}`,\n  },\n  3000: 3000,\n  4500: 4500,\n  [VIDEO_BITRATE_DEFAULTS.max]: {\n    style: {\n      marginLeft: '-10px',\n    },\n    label: `${VIDEO_BITRATE_DEFAULTS.max} ${VIDEO_BITRATE_DEFAULTS.unit}`,\n  },\n};\n// VIDEO VARIANT FORM - encoder preset\n// CPU\nexport const ENCODER_PRESET_SLIDER_MARKS = {\n  1: {\n    style: {\n      marginLeft: '15px',\n    },\n    label: <p>lowest</p>,\n  },\n  2: '',\n  3: '',\n  4: '',\n  5: {\n    style: {\n      marginLeft: '-15px',\n    },\n    label: <p>highest</p>,\n  },\n};\nexport const ENCODER_PRESET_TOOLTIPS = {\n  1: 'Lowest hardware usage - lowest quality video',\n  2: 'Low hardware usage - low quality video',\n  3: 'Medium hardware usage - average quality video',\n  4: 'High hardware usage - high quality video',\n  5: 'Highest hardware usage - higher quality video',\n};\n\nexport const ENCODER_RECOMMENDATION_THRESHOLD = {\n  VIDEO_HEIGHT: 1080,\n  VIDEO_BITRATE: 3000,\n  HELP_TEXT:\n    'You have only set one video quality variant. If your server has the computing resources, consider adding another, lower-quality variant, so more people can view your content!',\n};\n\nexport const DEFAULT_SOCIAL_HANDLE: SocialHandle = {\n  url: '',\n  platform: '',\n};\n\nexport const OTHER_SOCIAL_HANDLE_OPTION = 'OTHER_SOCIAL_HANDLE_OPTION';\n\nexport const TEXTFIELD_PROPS_S3_COMMON = {\n  maxLength: 255,\n};\n\nexport const S3_TEXT_FIELDS_INFO = {\n  accessKey: {\n    fieldName: 'accessKey',\n    label: 'Access Key',\n    maxLength: 255,\n    placeholder: 'access key 123',\n    tip: '',\n  },\n  acl: {\n    fieldName: 'acl',\n    label: 'ACL',\n    maxLength: 255,\n    placeholder: '',\n    tip: 'Optional specific access control value to add to your content.  Generally not required.',\n  },\n  bucket: {\n    fieldName: 'bucket',\n    label: 'Bucket',\n    maxLength: 255,\n    placeholder: 'bucket 123',\n    tip: 'Create a new bucket for each Owncast instance you may be running.',\n  },\n  endpoint: {\n    fieldName: 'endpoint',\n    label: 'Endpoint',\n    maxLength: 255,\n    placeholder: 'https://your.s3.provider.endpoint.com',\n    tip: 'The full URL (with \"https://\") endpoint from your storage provider.',\n    useTrim: true,\n    type: TEXTFIELD_TYPE_URL,\n    pattern: DEFAULT_TEXTFIELD_URL_PATTERN,\n  },\n  region: {\n    fieldName: 'region',\n    label: 'Region',\n    maxLength: 255,\n    placeholder: 'region 123',\n    tip: '',\n  },\n  secret: {\n    fieldName: 'secret',\n    label: 'Secret key',\n    maxLength: 255,\n    placeholder: 'your secret key',\n    tip: '',\n  },\n  servingEndpoint: {\n    fieldName: 'servingEndpoint',\n    label: 'Serving Endpoint',\n    maxLength: 255,\n    placeholder: 'http://cdn.ss3.provider.endpoint.com',\n    tip: 'Optional URL that content should be accessed from instead of the default.  Used with CDNs and specific storage providers. Generally not required.',\n    type: TEXTFIELD_TYPE_URL,\n    pattern: DEFAULT_TEXTFIELD_URL_PATTERN,\n    useTrim: true,\n  },\n  forcePathStyle: {\n    fieldName: 'forcePathStyle',\n    label: 'Force path-style',\n    tip: \"If your S3 provider doesn't support virtual-hosted-style URLs set this to ON (i.e. Oracle Cloud Object Storage)\",\n  },\n};\n\nexport const DISCORD_CONFIG_FIELDS = {\n  webhookUrl: {\n    fieldName: 'webhook',\n    label: 'Webhook URL',\n    maxLength: 255,\n    placeholder: 'https://discord.com/api/webhooks/837/jf38-6iNEv',\n    tip: 'The webhook assigned to your channel.',\n    type: TEXTFIELD_TYPE_URL,\n    pattern: DEFAULT_TEXTFIELD_URL_PATTERN,\n    useTrim: true,\n  },\n  goLiveMessage: {\n    fieldName: 'goLiveMessage',\n    label: 'Go Live Text',\n    maxLength: 300,\n    tip: 'The text to send when you go live.',\n    placeholder: `I've gone live! Come watch!`,\n  },\n};\n\nexport const BROWSER_PUSH_CONFIG_FIELDS = {\n  goLiveMessage: {\n    fieldName: 'goLiveMessage',\n    label: 'Go Live Text',\n    maxLength: 200,\n    tip: 'The text to send when you go live.',\n    placeholder: `I've gone live! Come watch!`,\n  },\n};\n\nexport const TWITTER_CONFIG_FIELDS = {\n  apiKey: {\n    fieldName: 'apiKey',\n    label: 'API Key',\n    maxLength: 200,\n    tip: '',\n    placeholder: `gaUQhRC2lqfrEFfElBXJgOctU`,\n  },\n  apiSecret: {\n    fieldName: 'apiSecret',\n    label: 'API Secret',\n    maxLength: 200,\n    tip: '',\n    placeholder: `IIz4jFZMWbUKdFOEGUprFjRwIslG56d1SPQlolJYjXwJ2y2qKS`,\n  },\n  accessToken: {\n    fieldName: 'accessToken',\n    label: 'Access Token',\n    maxLength: 200,\n    tip: '',\n    placeholder: `952540400-EEiwe9fkuSvWjnNC82YFa9kgpqbyAP3J7FjE2dkka`,\n  },\n  accessTokenSecret: {\n    fieldName: 'accessTokenSecret',\n    label: 'Access Token Secret',\n    maxLength: 200,\n    tip: '',\n    placeholder: `xO0AZWNGfZxpNsYPg3zNEKhAsPPGvNZFlzQArA2khI9Kg`,\n  },\n  bearerToken: {\n    fieldName: 'bearerToken',\n    label: 'Bearer Token',\n    maxLength: 200,\n    tip: '',\n    placeholder: `AAAAAAAAAAAAAAFqpXwEAAnnepHkjA8XD5ftx5jUadYIRtPtaq7AAAAwpXPpDWKDcdhiWr0tVDjsgW%2B4awGOM9VQ%3XPoMFuWcHsE42TK`,\n  },\n  goLiveMessage: {\n    fieldName: 'goLiveMessage',\n    label: 'Go Live Text',\n    maxLength: 200,\n    tip: 'The text to send when you go live.',\n    placeholder: `I've gone live! Come watch!`,\n  },\n};\n","// to use with <input type=\"url\"> fields, as the default pattern only checks for `:`,\nexport const DEFAULT_TEXTFIELD_URL_PATTERN = 'https?://.*';\n\n/**\n * Determines if a URL is valid\n * @param {string} url - A URL to validate.\n * @param {string[]} validProtocols - An array of valid protocols. Defaults to web.\n * @returns {boolean} - True if the URI is valid, false otherwise.\n */\nexport function isValidUrl(url: string, validProtocols: string[] = ['http:', 'https:']): boolean {\n  try {\n    const validationObject = new URL(url);\n\n    if (\n      validationObject.protocol === '' ||\n      validationObject.hostname === '' ||\n      !validProtocols.includes(validationObject.protocol)\n    ) {\n      return false;\n    }\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Determines if an account is valid by simply checking for a protocol, username\n * and server, delimited by a colon. For example: @username:example.com\n * @param {string} account - An account to validate.\n * @param {string} protocol - The protocol we expect the account to be using.\n * @returns {boolean} - True if the account is valid, false otherwise.\n */\nexport function isValidAccount(account: string, protocol: string): boolean {\n  if (account.startsWith('@')) {\n    // eslint-disable-next-line no-param-reassign\n    account = account.slice(1);\n  }\n\n  const components = account.split(/:|@/);\n  const [service, user, host] = components;\n\n  console.log({ account, protocol, service, user, host });\n  if (service !== protocol) {\n    return false;\n  }\n\n  if (components.length !== 3 || !service || !user || !host) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Determines if an account is valid by simply checking for a protocol, username\n * and server, delimited by a colon. For example: @username:example.com\n * @param {string} account - An account to validate.\n * @returns {boolean} - True if the account is valid, false otherwise.\n */\nexport function isValidMatrixAccount(account: string): boolean {\n  if (account.startsWith('matrix:')) {\n    // eslint-disable-next-line no-param-reassign\n    account = account.slice(7);\n  } else {\n    return false;\n  }\n\n  if (account.startsWith('@')) {\n    // eslint-disable-next-line no-param-reassign\n    account = account.slice(1);\n  }\n\n  const components = account.split(':');\n  const [user, host] = components;\n\n  if (components.length !== 2 || !user || !host) {\n    return false;\n  }\n\n  return true;\n}\n"],"names":["FormStatusIndicator","status","type","icon","message","classes","classNames","empty","span","className","TEXTFIELD_TYPE_TEXT","TEXTFIELD_TYPE_PASSWORD","TEXTFIELD_TYPE_NUMBER","TEXTFIELD_TYPE_TEXTAREA","TEXTFIELD_TYPE_URL","TextField","disabled","fieldName","label","maxLength","onBlur","onChange","onPressEnter","pattern","placeholder","required","tip","useTrim","value","Field","Input","fieldProps","autoSize","visibilityToggle","InputNumber","min","max","fieldId","statusType","containerClass","div","htmlFor","id","allowClear","e","val","target","trim","p","defaultProps","useTrimLead","onSubmit","ADMIN_USERNAME","process","env","NEXT_PUBLIC_ADMIN_USERNAME","ADMIN_STREAMKEY","NEXT_PUBLIC_ADMIN_STREAMKEY","NEXT_PUBLIC_API_HOST","API_LOCATION","FETCH_INTERVAL","STATUS","SERVER_CONFIG","SERVER_CONFIG_UPDATE_URL","VIEWERS_OVER_TIME","ACTIVE_VIEWER_DETAILS","CONNECTED_CLIENTS","DISABLED_USERS","USER_ENABLED_TOGGLE","BANNED_IPS","BANNED_IP_REMOVE","USER_SET_MODERATOR","MODERATORS","HARDWARE_STATS","LOGS_ALL","LOGS_WARN","CHAT_HISTORY","UPDATE_CHAT_MESSGAE_VIZ","UPLOAD_EMOJI","DELETE_EMOJI","ACCESS_TOKENS","DELETE_ACCESS_TOKEN","CREATE_ACCESS_TOKEN","WEBHOOKS","DELETE_WEBHOOK","CREATE_WEBHOOK","SOCIAL_PLATFORMS_LIST","FEDERATION_MESSAGE_SEND","FOLLOWERS","FOLLOWERS_PENDING","FOLLOWERS_BLOCKED","SET_FOLLOWER_APPROVAL","FEDERATION_ACTIONS","API_STREAM_HEALTH_METRICS","UPDATE_STREAM_KEYS","API_YP_RESET","async","fetchData","url","options","data","method","auth","requestOptions","body","JSON","stringify","encoded","btoa","headers","Authorization","mode","credentials","response","fetch","json","ok","Error","error","console","getUnauthedData","fetchExternalData","referrerPolicy","referrer","log","getGithubRelease","VPAT","upgradeVersionAvailable","currentVersion","recentReleaseVersion","tag_name","substr","local","remote","length","test","lparts","split","push","rparts","i","l","parseInt","r","upToDate","RESET_TIMEOUT","API_CUSTOM_CONTENT","API_CUSTOM_CSS_STYLES","API_INSTANCE_URL","API_NSFW_SWITCH","API_S3_INFO","API_SOCIAL_HANDLES","API_VIDEO_SEGMENTS","API_VIDEO_VARIANTS","API_YP_SWITCH","API_CHAT_FORBIDDEN_USERNAMES","API_CHAT_SUGGESTED_USERNAMES","API_EXTERNAL_ACTIONS","API_VIDEO_CODEC","API_FEDERATION_BLOCKED_DOMAINS","postConfigUpdateToAPI","args","apiPath","onSuccess","onError","result","success","TEXTFIELD_PROPS_SERVER_NAME","configPath","TEXTFIELD_PROPS_STREAM_TITLE","TEXTFIELD_PROPS_SERVER_SUMMARY","TEXTFIELD_PROPS_SERVER_OFFLINE_MESSAGE","TEXTFIELD_PROPS_SERVER_WELCOME_MESSAGE","TEXTFIELD_PROPS_LOGO","TEXTFIELD_PROPS_ADMIN_PASSWORD","TEXTFIELD_PROPS_FFMPEG","TEXTFIELD_PROPS_WEB_PORT","TEXTFIELD_PROPS_RTMP_PORT","TEXTFIELD_PROPS_INSTANCE_URL","DEFAULT_TEXTFIELD_URL_PATTERN","TEXTFIELD_PROPS_SOCKET_HOST_OVERRIDE","FIELD_PROPS_TAGS","FIELD_PROPS_NSFW","FIELD_PROPS_YP","FIELD_PROPS_HIDE_VIEWER_COUNT","DEFAULT_VARIANT_STATE","framerate","videoPassthrough","videoBitrate","audioPassthrough","audioBitrate","cpuUsageLevel","scaledHeight","scaledWidth","name","FIELD_PROPS_DISABLE_CHAT","useSubmit","FIELD_PROPS_CHAT_JOIN_MESSAGES_ENABLED","CHAT_ESTABLISHED_USER_MODE","TEXTFIELD_PROPS_CHAT_FORBIDDEN_USERNAMES","TEXTFIELD_PROPS_CHAT_SUGGESTED_USERNAMES","min_not_reached","no_entries","FIELD_PROPS_ENABLE_FEDERATION","FIELD_PROPS_FEDERATION_IS_PRIVATE","FIELD_PROPS_SHOW_FEDERATION_ENGAGEMENT","TEXTFIELD_PROPS_FEDERATION_LIVE_MESSAGE","TEXTFIELD_PROPS_FEDERATION_DEFAULT_USER","default","TEXTFIELD_PROPS_FEDERATION_INSTANCE_URL","FIELD_PROPS_FEDERATION_NSFW","FIELD_PROPS_FEDERATION_BLOCKED_DOMAINS","VIDEO_VARIANT_SETTING_DEFAULTS","defaultValue","unit","incrementBy","FRAMERATE_DEFAULTS","FRAMERATE_SLIDER_MARKS","FRAMERATE_TOOLTIPS","VIDEO_BITRATE_DEFAULTS","VIDEO_NAME_DEFAULTS","VIDEO_BITRATE_SLIDER_MARKS","style","marginLeft","ENCODER_PRESET_SLIDER_MARKS","ENCODER_PRESET_TOOLTIPS","ENCODER_RECOMMENDATION_THRESHOLD","VIDEO_HEIGHT","VIDEO_BITRATE","HELP_TEXT","DEFAULT_SOCIAL_HANDLE","platform","OTHER_SOCIAL_HANDLE_OPTION","S3_TEXT_FIELDS_INFO","accessKey","acl","bucket","endpoint","region","secret","servingEndpoint","forcePathStyle","DISCORD_CONFIG_FIELDS","webhookUrl","goLiveMessage","BROWSER_PUSH_CONFIG_FIELDS","TWITTER_CONFIG_FIELDS","apiKey","apiSecret","accessToken","accessTokenSecret","bearerToken","isValidUrl","validProtocols","validationObject","URL","protocol","hostname","includes","isValidAccount","account","startsWith","slice","components","service","user","host","isValidMatrixAccount"],"sourceRoot":""}