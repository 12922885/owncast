{"version":3,"file":"static/chunks/7815.1c4a22ddeda57dd0.js","mappings":"gOAYO,IAAMA,EAAoD,GAK3D,IAL4D,CAChEC,SAAAA,CAAAA,CACAC,KAAAA,CAAAA,CACAC,oBAAAA,CAAAA,CACAC,mBAAAA,CAAAA,CACD,CAAAC,EACO,CAACC,EAAWC,EAAa,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAASN,GACrC,CAACO,EAASC,EAAW,CAAGF,CAAAA,EAAAA,EAAAA,QAAAA,EAAS,IAEvCG,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,IAAM,CACdJ,EAAaL,EACf,EAAG,CAACA,EAAK,EAETS,CAAAA,EAAAA,EAAAA,SAAAA,EAAU,IAAM,CACdD,EAAW,GACb,EAAG,EAAE,EAEL,IAAME,EAAQ,GAAAC,EAAAC,GAAA,EAACC,MAAAA,CAAIC,UAAWC,IAAAA,KAAAA,UAAc,kBAStCC,EAAeC,GAAK,CACxBA,EAAEC,eAAe,GACjBjB,GACF,EAEMkB,EAAcF,GAAK,CACvBA,EAAEC,eAAe,GACjBb,EAAa,IACbH,GACF,EAEMkB,EACJ,GAAAT,EAAAU,IAAA,EAACR,MAAAA,CAAIS,QAASN,EAAcO,UAAWP,EAAcQ,KAAK,WAAWC,SAAU,YAC7E,GAAAd,EAAAC,GAAA,EAACc,SAAAA,CAAOC,KAAK,SAASb,UAAWC,IAAAA,WAAAA,CAAoBO,QAASH,WAC5D,GAAAR,EAAAC,GAAA,EAACgB,EAAAA,CAAaA,CAAAA,CAAAA,KAEhB,GAAAjB,EAAAU,IAAA,EAACR,MAAAA,CAAIC,UAAWC,IAAAA,aAAAA,WAAsB,uBAEpC,GAAAJ,EAAAC,GAAA,EAACiB,KAAAA,CAAAA,GAAK,wBAMZ,OACEtB,GACE,GAAAI,EAAAC,GAAA,EAACkB,EAAAA,CAAOA,CAAAA,CACNC,UAAU,WACVC,YAAa5B,EACbJ,KAAMI,EACN6B,qBAAoB,GACpBvB,MAAOA,EACPU,QAASA,EACTc,kBAzCa,CACjBC,aAAc,MACdC,OAAQ,UACRC,WAAY,OACZC,aAAc,OACdC,SAAU,MACZ,EAoCMC,MAAOzB,IAAAA,oBAAAA,CACP0B,kBAAmBC,GAAQA,WAE1B3C,GAIT,qBC9EA4C,EAAAC,OAAA,EAAkB","sources":["webpack://_N_E/./components/ui/NotifyReminderPopup/NotifyReminderPopup.tsx","webpack://_N_E/./components/ui/NotifyReminderPopup/NotifyReminderPopup.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["import { Popover } from 'antd';\nimport { CloseOutlined } from '@ant-design/icons';\nimport React, { useState, useEffect, FC } from 'react';\nimport styles from './NotifyReminderPopup.module.scss';\n\nexport type NotifyReminderPopupProps = {\n  open: boolean;\n  children: React.ReactNode;\n  notificationClicked: () => void;\n  notificationClosed: () => void;\n};\n\nexport const NotifyReminderPopup: FC<NotifyReminderPopupProps> = ({\n  children,\n  open,\n  notificationClicked,\n  notificationClosed,\n}) => {\n  const [openPopup, setOpenPopup] = useState(open);\n  const [mounted, setMounted] = useState(false);\n\n  useEffect(() => {\n    setOpenPopup(open);\n  }, [open]);\n\n  useEffect(() => {\n    setMounted(true);\n  }, []);\n\n  const title = <div className={styles.title}>Stay updated!</div>;\n  const popupStyle = {\n    borderRadius: '5px',\n    cursor: 'pointer',\n    paddingTop: '10px',\n    paddingRight: '10px',\n    fontSize: '14px',\n  };\n\n  const popupClicked = e => {\n    e.stopPropagation();\n    notificationClicked();\n  };\n\n  const popupClosed = e => {\n    e.stopPropagation();\n    setOpenPopup(false);\n    notificationClosed();\n  };\n\n  const content = (\n    <div onClick={popupClicked} onKeyDown={popupClicked} role=\"menuitem\" tabIndex={0}>\n      <button type=\"button\" className={styles.closebutton} onClick={popupClosed}>\n        <CloseOutlined />\n      </button>\n      <div className={styles.contentbutton}>\n        Click and never miss\n        <br />\n        future streams!\n      </div>\n    </div>\n  );\n\n  return (\n    mounted && (\n      <Popover\n        placement=\"topRight\"\n        defaultOpen={openPopup}\n        open={openPopup}\n        destroyTooltipOnHide\n        title={title}\n        content={content}\n        overlayInnerStyle={popupStyle}\n        color={styles.popupBackgroundColor}\n        getPopupContainer={node => node}\n      >\n        {children}\n      </Popover>\n    )\n  );\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popupBackgroundColor\":\"var(--theme-color-components-primary-button-background)\",\"contentbutton\":\"NotifyReminderPopup_contentbutton__a_tsp\",\"closebutton\":\"NotifyReminderPopup_closebutton__GVcP3\",\"title\":\"NotifyReminderPopup_title__Dm9Iy\"};"],"names":["NotifyReminderPopup","children","open","notificationClicked","notificationClosed","param","openPopup","setOpenPopup","useState","mounted","setMounted","useEffect","title","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","className","styles","popupClicked","e","stopPropagation","popupClosed","content","jsxs","onClick","onKeyDown","role","tabIndex","button","type","CloseOutlined","br","Popover","placement","defaultOpen","destroyTooltipOnHide","overlayInnerStyle","borderRadius","cursor","paddingTop","paddingRight","fontSize","color","getPopupContainer","node","module","exports"],"sourceRoot":""}