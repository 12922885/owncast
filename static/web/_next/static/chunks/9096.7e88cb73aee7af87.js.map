{"version":3,"file":"static/chunks/9096.7e88cb73aee7af87.js","mappings":"8PAOA,GAAM,CAAEA,OAAAA,CAAAA,CAAQ,CAAGC,EAAAA,CAAMA,CAMnBC,EAAgC,GAAe,IAAd,CAAEC,MAAAA,CAAAA,CAAO,CAAAC,EAO9C,MAAO,GAAAC,EAAAC,GAAA,EAACC,MAAAA,CAAIC,MANiB,CAC3BC,UAAW,SACXC,gBAAiB,2BAAiCC,MAAA,CAANR,EAAM,KAClDS,MAAO,OACPC,OAAQ,MACV,GAEF,EAEaC,EAAsB,IAAM,CACvC,IAAMC,EAAcC,CAAAA,EAAAA,EAAAA,EAAAA,EAAeC,EAAAA,EAAeA,EAC5CC,EAAmBF,CAAAA,EAAAA,EAAAA,EAAAA,EAAiCG,EAAAA,EAAoBA,EACxE,CAACC,EAASC,EAAW,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,EAAiBP,MAAAA,EAAAA,KAAAA,EAAAA,EAAaQ,WAAW,EAEvE,GAAI,CAACR,EACH,OAAO,IAAI,CAGb,GAAM,CAAEQ,YAAAA,CAAAA,CAAaC,aAAAA,CAAAA,CAAc,CAAGT,EAEhCU,EAAc,IAClBL,IAAYG,GAAeH,KAAAA,GAAkBF,CAAAA,MAAAA,EAAAA,KAAAA,EAAAA,EAAkBQ,WAAW,IAEtEC,EAAmB,IAAM,CAC7B,GAAI,CAACF,IAAe,OAEpB,IAAMG,EAAa,CACjBC,KAAMC,EAAAA,CAAAA,CAAAA,WAAuB,CAC7BV,QAAAA,CACF,EACAF,EAAiBa,IAAI,CAACH,EACxB,EAEMI,EAAoB,GAAmB,CAC3C,IAAMC,EAAc,CAClBJ,KAAMC,EAAAA,CAAAA,CAAAA,YAAwB,CAC9BI,SAAUC,OAAOhC,EACnB,EACAe,EAAiBa,IAAI,CAACE,EACxB,EAGMG,EAAe,IAAIC,MADR,GACwB,CAACC,GAAG,CAAC,CAACC,EAAGC,IAAMA,GAElDC,EACJ,GAAApC,EAAAC,GAAA,EAACoC,EAAAA,CAAMA,CAAAA,CACLb,KAAK,UACLc,GAAG,qBACHC,QAASjB,EACTkB,SAAU,CAACpB,aACZ,gBAKH,MACE,GAAApB,EAAAyC,IAAA,EAACvC,MAAAA,WAAI,yEAEH,GAAAF,EAAAC,GAAA,EAACyC,EAAAA,CAAIA,CAAAA,CAACC,gBAAiBrB,EAAkBnB,MAAO,CAAEyC,WAAY,KAAM,WAClE,GAAA5C,EAAAC,GAAA,EAAC4C,EAAAA,CAAAA,CAAAA,MAAY,EACXC,YAAaV,EACbE,GAAG,oBACHS,MAAOhC,EACPiC,SAAUd,GAAKlB,EAAWkB,EAAEe,MAAM,CAACF,KAAK,EACxCG,YAAY,yBACZC,UAAW,GACXC,UAAS,GACTC,aAAcnC,MAGlB,GAAAlB,EAAAC,GAAA,EAACyC,EAAAA,CAAAA,CAAAA,IAAS,EAACY,MAAM,aAAanD,MAAO,CAAEyC,WAAY,MAAOW,OAAQ,IAAMC,aAAc,CAAE,WACtF,GAAAxD,EAAAC,GAAA,EAACL,EAAAA,CAAMA,CAAAA,CACLO,MAAO,CAAEI,MAAO,GAAI,EACpByC,SAAUrB,EACV0B,aAAclC,EAAasC,QAAQ,YAElC1B,EAAaE,GAAG,CAACC,GAChB,GAAAlC,EAAAC,GAAA,EAACN,EAAAA,CAA0B+D,MAAOxB,WAChC,GAAAlC,EAAAC,GAAA,EAACJ,EAAAA,CAAUC,MAAOoC,KADPA,EAAEuB,QAAQ,SAKjB,6FAKlB","sources":["webpack://_N_E/./components/modals/NameChangeModal/NameChangeModal.tsx","webpack://_N_E/<anon>"],"sourcesContent":["import React, { CSSProperties, FC, useState } from 'react';\nimport { useRecoilValue } from 'recoil';\nimport { Input, Button, Select, Form } from 'antd';\nimport { MessageType } from '../../../interfaces/socket-events';\nimport WebsocketService from '../../../services/websocket-service';\nimport { websocketServiceAtom, currentUserAtom } from '../../stores/ClientConfigStore';\n\nconst { Option } = Select;\n\nexport type UserColorProps = {\n  color: number;\n};\n\nconst UserColor: FC<UserColorProps> = ({ color }) => {\n  const style: CSSProperties = {\n    textAlign: 'center',\n    backgroundColor: `var(--theme-color-users-${color})`,\n    width: '100%',\n    height: '100%',\n  };\n  return <div style={style} />;\n};\n\nexport const NameChangeModal: FC = () => {\n  const currentUser = useRecoilValue(currentUserAtom);\n  const websocketService = useRecoilValue<WebsocketService>(websocketServiceAtom);\n  const [newName, setNewName] = useState<string>(currentUser?.displayName);\n\n  if (!currentUser) {\n    return null;\n  }\n\n  const { displayName, displayColor } = currentUser;\n\n  const saveEnabled = () =>\n    newName !== displayName && newName !== '' && websocketService?.isConnected();\n\n  const handleNameChange = () => {\n    if (!saveEnabled()) return;\n\n    const nameChange = {\n      type: MessageType.NAME_CHANGE,\n      newName,\n    };\n    websocketService.send(nameChange);\n  };\n\n  const handleColorChange = (color: string) => {\n    const colorChange = {\n      type: MessageType.COLOR_CHANGE,\n      newColor: Number(color),\n    };\n    websocketService.send(colorChange);\n  };\n\n  const maxColor = 8; // 0...n\n  const colorOptions = [...Array(maxColor)].map((e, i) => i);\n\n  const saveButton = (\n    <Button\n      type=\"primary\"\n      id=\"name-change-submit\"\n      onClick={handleNameChange}\n      disabled={!saveEnabled()}\n    >\n      Change name\n    </Button>\n  );\n\n  return (\n    <div>\n      Your chat display name is what people see when you send chat messages.\n      <Form onSubmitCapture={handleNameChange} style={{ paddingTop: '8px' }}>\n        <Input.Search\n          enterButton={saveButton}\n          id=\"name-change-field\"\n          value={newName}\n          onChange={e => setNewName(e.target.value)}\n          placeholder=\"Your chat display name\"\n          maxLength={30}\n          showCount\n          defaultValue={displayName}\n        />\n      </Form>\n      <Form.Item label=\"Your Color\" style={{ paddingTop: '8px', zIndex: 1000, marginBottom: 0 }}>\n        <Select\n          style={{ width: 120 }}\n          onChange={handleColorChange}\n          defaultValue={displayColor.toString()}\n        >\n          {colorOptions.map(e => (\n            <Option key={e.toString()} title={e}>\n              <UserColor color={e} />\n            </Option>\n          ))}\n        </Select>\n      </Form.Item>\n      You can also authenticate an IndieAuth or Fediverse account via the &quot;Authenticate&quot;\n      menu.\n    </div>\n  );\n};\n"],"names":["Option","Select","UserColor","color","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","div","style","textAlign","backgroundColor","concat","width","height","NameChangeModal","currentUser","useRecoilValue","currentUserAtom","websocketService","websocketServiceAtom","newName","setNewName","useState","displayName","displayColor","saveEnabled","isConnected","handleNameChange","nameChange","type","MessageType","send","handleColorChange","colorChange","newColor","Number","colorOptions","Array","map","e","i","saveButton","Button","id","onClick","disabled","jsxs","Form","onSubmitCapture","paddingTop","Input","enterButton","value","onChange","target","placeholder","maxLength","showCount","defaultValue","label","zIndex","marginBottom","toString","title"],"sourceRoot":""}