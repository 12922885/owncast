{"version":3,"file":"static/chunks/4860.b8e605ebfc26e593.js","mappings":"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","sources":["webpack://_N_E/./services/moderation-service.ts","webpack://_N_E/./components/chat/ChatModerationDetailsModal/ChatModerationDetailsModal.tsx","webpack://_N_E/./components/chat/ChatModerationActionMenu/ChatModerationActionMenu.tsx","webpack://_N_E/./components/ui/Modal/Modal.tsx","webpack://_N_E/./components/chat/ChatModerationActionMenu/ChatModerationActionMenu.module.scss","webpack://_N_E/./components/chat/ChatModerationDetailsModal/ChatModerationDetailsModal.module.scss","webpack://_N_E/./components/ui/Modal/Modal.module.scss","webpack://_N_E/<anon>"],"sourcesContent":["const HIDE_MESSAGE_ENDPOINT = `/api/chat/messagevisibility`;\nconst BAN_USER_ENDPOINT = `/api/chat/users/setenabled`;\n\nclass ChatModerationService {\n  public static async removeMessage(id: string, accessToken: string): Promise<any> {\n    const url = new URL(HIDE_MESSAGE_ENDPOINT, window.location.toString());\n    url.searchParams.append('accessToken', accessToken);\n    const hideMessageUrl = url.toString();\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ idArray: [id] }),\n    };\n\n    await fetch(hideMessageUrl, options);\n  }\n\n  public static async banUser(id: string, accessToken: string): Promise<any> {\n    const url = new URL(BAN_USER_ENDPOINT, window.location.toString());\n    url.searchParams.append('accessToken', accessToken);\n    const hideMessageUrl = url.toString();\n\n    const options = {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ id }),\n    };\n\n    await fetch(hideMessageUrl, options);\n  }\n}\n\nexport default ChatModerationService;\n","import { Button, Col, Collapse, Row, Spin, Table, Tag } from 'antd';\nimport { FC, useEffect, useState } from 'react';\nimport format from 'date-fns/format';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { ColumnsType } from 'antd/lib/table';\nimport ChatModeration from '../../../services/moderation-service';\nimport styles from './ChatModerationDetailsModal.module.scss';\nimport { formatUAstring } from '../../../utils/format';\n\nconst { Panel } = Collapse;\n\nexport type ChatModerationDetailsModalProps = {\n  userId: string;\n  accessToken: string;\n};\n\nexport interface UserDetails {\n  user: User;\n  connectedClients: Client[];\n  messages: Message[];\n}\n\nexport interface Client {\n  messageCount: number;\n  userAgent: string;\n  connectedAt: Date;\n  geo: string;\n  id: number;\n}\n\nexport interface Message {\n  id: string;\n  timestamp: Date;\n  user: null;\n  body: string;\n}\n\nexport interface User {\n  id: string;\n  displayName: string;\n  displayColor: number;\n  createdAt: Date;\n  previousNames: string[];\n  scopes: string[];\n  isBot: boolean;\n  authenticated: boolean;\n}\n\nconst removeMessage = async (messageId: string, accessToken: string) => {\n  try {\n    ChatModeration.removeMessage(messageId, accessToken);\n  } catch (e) {\n    console.error(e);\n  }\n};\n\nconst ValueRow = ({ label, value }: { label: string; value: string }) => (\n  <Row justify=\"space-around\" align=\"middle\">\n    <Col span={12}>{label}</Col>\n    <Col span={12}>{value}</Col>\n  </Row>\n);\n\nconst ConnectedClient = ({ client }: { client: Client }) => {\n  const { messageCount, connectedAt, geo } = client;\n  const connectedAtDate = format(new Date(connectedAt), 'PP pp');\n\n  return (\n    <div>\n      <ValueRow label=\"Messages Sent\" value={`${messageCount}`} />\n      {geo !== 'N/A' && <ValueRow label=\"Geo\" value={geo} />}\n      <ValueRow label=\"Connected At\" value={connectedAtDate} />\n    </div>\n  );\n};\n\nconst UserColorBlock = ({ color }) => {\n  const bg = `var(--theme-color-users-${color})`;\n  return (\n    <div className={styles.colorBlock} style={{ backgroundColor: bg }}>\n      Color {color}\n    </div>\n  );\n};\n\nexport const ChatModerationDetailsModal: FC<ChatModerationDetailsModalProps> = ({\n  userId,\n  accessToken,\n}) => {\n  const [userDetails, setUserDetails] = useState<UserDetails | null>(null);\n  const [loading, setLoading] = useState(true);\n\n  const getDetails = async () => {\n    try {\n      const response = await (\n        await fetch(`/api/moderation/chat/user/${userId}?accessToken=${accessToken}`)\n      ).json();\n      setUserDetails(response);\n      setLoading(false);\n    } catch (e) {\n      console.error(e);\n    }\n  };\n\n  useEffect(() => {\n    getDetails();\n  }, []);\n\n  if (!userDetails) {\n    return null;\n  }\n\n  const { user, connectedClients, messages } = userDetails;\n  const { displayColor, createdAt, previousNames, scopes, isBot, authenticated } = user;\n\n  const totalMessagesSent = connectedClients.reduce((acc, client) => acc + client.messageCount, 0);\n  const createdAtDate = format(new Date(createdAt), 'PP pp');\n\n  const chatMessageColumns: ColumnsType<Message> = [\n    {\n      title: 'Message',\n      dataIndex: 'body',\n      key: 'body',\n    },\n    {\n      title: 'Sent At',\n      dataIndex: 'timestamp',\n      key: 'timestamp',\n      render: timestamp => format(new Date(timestamp), 'PP pp'),\n    },\n    {\n      title: 'Delete',\n      key: 'delete',\n      render: (text, record) => (\n        <Button\n          type=\"primary\"\n          ghost\n          icon={<DeleteOutlined />}\n          onClick={() => removeMessage(record.id, accessToken)}\n        />\n      ),\n    },\n  ];\n\n  return (\n    <Spin spinning={loading}>\n      <UserColorBlock color={displayColor} />\n      {scopes.map(scope => (\n        <Tag key={scope}>{scope}</Tag>\n      ))}\n      {authenticated && <Tag>Authenticated</Tag>}\n      {isBot && <Tag>Bot</Tag>}\n      <ValueRow label=\"Messages Sent Across Clients\" value={totalMessagesSent.toString()} />\n      <ValueRow label=\"User Created\" value={createdAtDate} />\n      <ValueRow label=\"Known As\" value={previousNames.join(',')} />\n      <Collapse accordion>\n        <Panel header=\"Currently Connected Clients\" key=\"connected-clients\">\n          <Collapse accordion>\n            {connectedClients.map(client => (\n              <Panel header={formatUAstring(client.userAgent)} key={client.id}>\n                <ConnectedClient client={client} />\n              </Panel>\n            ))}\n          </Collapse>\n        </Panel>\n        <Collapse accordion>\n          <Panel header=\"Recent Chat Messages\" key=\"chat-messages\">\n            <Table\n              size=\"small\"\n              pagination={null}\n              columns={chatMessageColumns}\n              dataSource={messages}\n              rowKey=\"id\"\n            />\n          </Panel>\n        </Collapse>\n      </Collapse>\n    </Spin>\n  );\n};\n","import {\n  CloseCircleOutlined,\n  ExclamationCircleOutlined,\n  EyeInvisibleOutlined,\n  SmallDashOutlined,\n} from '@ant-design/icons';\nimport { Dropdown, Menu, MenuProps, Space, message, Modal as AntModal } from 'antd';\nimport { FC, useState } from 'react';\nimport { Modal } from '../../ui/Modal/Modal';\nimport { ChatModerationDetailsModal } from '../ChatModerationDetailsModal/ChatModerationDetailsModal';\nimport styles from './ChatModerationActionMenu.module.scss';\nimport ChatModeration from '../../../services/moderation-service';\n\nconst { confirm } = AntModal;\n\nexport type ChatModerationActionMenuProps = {\n  accessToken: string;\n  messageID: string;\n  userID: string;\n  userDisplayName: string;\n};\n\nexport const ChatModerationActionMenu: FC<ChatModerationActionMenuProps> = ({\n  messageID,\n  userID,\n  userDisplayName,\n  accessToken,\n}) => {\n  const [showUserDetailsModal, setShowUserDetailsModal] = useState(false);\n\n  const handleBanUser = async () => {\n    try {\n      await ChatModeration.banUser(userID, accessToken);\n    } catch (e) {\n      console.error(e);\n      message.error(e);\n    }\n  };\n\n  const handleHideMessage = async () => {\n    try {\n      await ChatModeration.removeMessage(messageID, accessToken);\n    } catch (e) {\n      console.error(e);\n      message.error(e);\n    }\n  };\n\n  const confirmHideMessage = async () => {\n    confirm({\n      icon: <ExclamationCircleOutlined />,\n      content: `Are you sure you want to remove this message from ${userDisplayName}?`,\n      onOk() {\n        handleHideMessage();\n      },\n    });\n  };\n\n  const confirmBanUser = async () => {\n    confirm({\n      icon: <ExclamationCircleOutlined />,\n      content: `Are you sure you want to ban ${userDisplayName} from chat?`,\n      onOk() {\n        handleBanUser();\n      },\n    });\n  };\n\n  const onMenuClick: MenuProps['onClick'] = ({ key }) => {\n    if (key === 'hide-message') {\n      confirmHideMessage();\n    } else if (key === 'ban-user') {\n      confirmBanUser();\n    } else if (key === 'more-info') {\n      setShowUserDetailsModal(true);\n    }\n  };\n\n  const menu = (\n    <Menu\n      onClick={onMenuClick}\n      items={[\n        {\n          label: (\n            <div>\n              <span className={styles.icon}>\n                <EyeInvisibleOutlined />\n              </span>\n              Hide Message\n            </div>\n          ),\n          key: 'hide-message',\n        },\n        {\n          label: (\n            <div>\n              <span className={styles.icon}>\n                <CloseCircleOutlined />\n              </span>\n              Ban User\n            </div>\n          ),\n          key: 'ban-user',\n        },\n        {\n          label: <div>More Info...</div>,\n          key: 'more-info',\n        },\n      ]}\n    />\n  );\n\n  return (\n    <>\n      <Dropdown overlay={menu} trigger={['click']}>\n        <button type=\"button\" onClick={e => e.preventDefault()}>\n          <Space>\n            <SmallDashOutlined />\n          </Space>\n        </button>\n      </Dropdown>\n      <Modal\n        title={userDisplayName}\n        open={showUserDetailsModal}\n        handleCancel={() => {\n          setShowUserDetailsModal(false);\n        }}\n      >\n        <ChatModerationDetailsModal userId={userID} accessToken={accessToken} />\n      </Modal>\n    </>\n  );\n};\n","import { Spin, Skeleton, Modal as AntModal } from 'antd';\nimport React, { FC, ReactNode, useState } from 'react';\nimport styles from './Modal.module.scss';\n\nexport type ModalProps = {\n  title: string;\n  url?: string;\n  open: boolean;\n  handleOk?: () => void;\n  handleCancel?: () => void;\n  afterClose?: () => void;\n  children?: ReactNode;\n  height?: string;\n  width?: string;\n};\n\nexport const Modal: FC<ModalProps> = ({\n  title,\n  url,\n  open,\n  handleOk,\n  handleCancel,\n  afterClose,\n  height,\n  width,\n  children,\n}) => {\n  const [loading, setLoading] = useState(!!url);\n\n  let defaultHeight = '100%';\n  let defaultWidth = '520px';\n  if (url) {\n    defaultHeight = '70vh';\n    defaultWidth = '900px';\n  }\n\n  const modalContentBodyStyle = {\n    padding: '0px',\n    minHeight: height,\n    height: height ?? defaultHeight,\n  };\n\n  const iframe = url && (\n    <iframe\n      title={title}\n      src={url}\n      width=\"100%\"\n      height=\"100%\"\n      sandbox=\"allow-same-origin allow-scripts allow-popups allow-forms\"\n      frameBorder=\"0\"\n      allowFullScreen\n      style={{ display: 'block' }}\n      // eslint-disable-next-line react/no-unknown-property\n      onLoad={() => setLoading(false)}\n    />\n  );\n\n  const iframeDisplayStyle = loading ? 'none' : 'inline';\n\n  return (\n    <AntModal\n      title={title}\n      open={open}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      afterClose={afterClose}\n      bodyStyle={modalContentBodyStyle}\n      width={width ?? defaultWidth}\n      zIndex={999}\n      footer={null}\n      centered\n      destroyOnClose\n    >\n      <div id=\"modal-container\" style={{ height: '100%' }}>\n        {loading && (\n          <Skeleton active={loading} style={{ padding: '10px' }} paragraph={{ rows: 10 }} />\n        )}\n\n        {iframe && <div style={{ display: iframeDisplayStyle }}>{iframe}</div>}\n        {children && <div className={styles.content}>{children}</div>}\n        {loading && <Spin className={styles.spinner} spinning={loading} size=\"large\" />}\n      </div>\n    </AntModal>\n  );\n};\nexport default Modal;\n\nModal.defaultProps = {\n  url: undefined,\n  children: undefined,\n  handleOk: undefined,\n  handleCancel: undefined,\n  afterClose: undefined,\n};\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"ChatModerationActionMenu_icon__9j6DF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"ChatModerationDetailsModal_modalContainer__czndV\",\"chatHistory\":\"ChatModerationDetailsModal_chatHistory__PunRk\",\"colorBlock\":\"ChatModerationDetailsModal_colorBlock___rAlw\",\"displayName\":\"ChatModerationDetailsModal_displayName__p7pLI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Modal_spinner__GiSS0\",\"content\":\"Modal_content__h9my9\"};"],"names":["moderation_service","removeMessage","id","accessToken","url","URL","window","location","toString","searchParams","append","hideMessageUrl","options","method","headers","body","JSON","stringify","idArray","fetch","banUser","Panel","Collapse","messageId","ChatModeration","e","console","error","ValueRow","label","value","param","jsx_runtime","jsxs","Row","justify","align","jsx","Col","span","ConnectedClient","client","messageCount","connectedAt","geo","connectedAtDate","format","Date","div","concat","UserColorBlock","color","className","styles","style","backgroundColor","ChatModerationDetailsModal","userId","userDetails","setUserDetails","useState","loading","setLoading","getDetails","response","json","useEffect","user","connectedClients","messages","displayColor","createdAt","previousNames","scopes","isBot","authenticated","totalMessagesSent","reduce","acc","createdAtDate","Spin","spinning","map","scope","Tag","join","accordion","header","formatUAstring","userAgent","Table","size","pagination","columns","title","dataIndex","key","render","timestamp","text","record","Button","type","ghost","icon","DeleteOutlined","onClick","dataSource","rowKey","confirm","AntModal","ChatModerationActionMenu","messageID","userID","userDisplayName","showUserDetailsModal","setShowUserDetailsModal","handleBanUser","message","handleHideMessage","confirmHideMessage","ExclamationCircleOutlined","content","onOk","confirmBanUser","onMenuClick","menu","Menu","items","EyeInvisibleOutlined","CloseCircleOutlined","Fragment","Dropdown","overlay","trigger","button","preventDefault","Space","SmallDashOutlined","Modal","open","handleCancel","handleOk","afterClose","height","width","children","defaultHeight","defaultWidth","modalContentBodyStyle","padding","minHeight","iframe","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","src","sandbox","frameBorder","allowFullScreen","display","onLoad","onCancel","bodyStyle","zIndex","footer","centered","destroyOnClose","Skeleton","active","paragraph","rows","__webpack_exports__","defaultProps","undefined","module","exports"],"sourceRoot":""}